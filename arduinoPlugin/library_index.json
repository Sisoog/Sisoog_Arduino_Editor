{
  "libraries": [
    {
      "name": "AudioZero",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows playing audio files from an SD card. For Arduino Zero only.",
      "paragraph": "With this library you can use the Arduino Zero DAC outputs to play audio files.\u003cbr /\u003eThe audio files must be in the raw .wav format.",
      "website": "http://arduino.cc/en/Reference/Audio",
      "category": "Signal Input/Output",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/AudioZero-1.0.1.zip",
      "archiveFileName": "AudioZero-1.0.1.zip",
      "size": 4925,
      "checksum": "SHA-256:c938f00aceec2f91465d1486b4cd2d3e1299cdc271eb743d2dedcd8c2dd355a8"
    },
    {
      "name": "AudioZero",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows playing audio files from an SD card. For Arduino Zero only.",
      "paragraph": "With this library you can use the Arduino Zero DAC outputs to play audio files.\u003cbr /\u003eThe audio files must be in the raw .wav format.",
      "website": "http://arduino.cc/en/Reference/Audio",
      "category": "Signal Input/Output",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/AudioZero-1.0.0.zip",
      "archiveFileName": "AudioZero-1.0.0.zip",
      "size": 4962,
      "checksum": "SHA-256:0bc3847eab13222c53ff5ab094dcd92f8b293ba897ffccd457e5b68b5d1e8117"
    },
    {
      "name": "AudioZero",
      "version": "1.1.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows playing audio files from an SD card. For Arduino Zero and MKR1000 only.",
      "paragraph": "With this library you can use the Arduino Zero ort MKR1000 DAC output (A0) to play audio files.\u003cbr /\u003eThe audio files must be in the raw .wav format.",
      "website": "http://arduino.cc/en/Reference/Audio",
      "category": "Signal Input/Output",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/AudioZero-1.1.1.zip",
      "archiveFileName": "AudioZero-1.1.1.zip",
      "size": 4953,
      "checksum": "SHA-256:4604a3b92b9f4a7dd92534eb09247443fa5078e6bd0e7a2c5f3060eaba2ad974"
    },
    {
      "name": "Esplora",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Grants easy access to the various sensors and actuators of the Esplora. For Arduino Esplora only.",
      "paragraph": "The sensors available on the board are:2-Axis analog joystick with center push-button,4 push-buttons,microphone, light sensor, temperature sensor, 3-axis accelerometer, 2 TinkerKit input connectors.\u003c/br\u003eThe actuators available on the board are: bright RGB LED, piezo buzzer, 2 TinkerKit output connectors.",
      "website": "http://arduino.cc/en/Reference/EsploraLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Esplora-1.0.0.zip",
      "archiveFileName": "Esplora-1.0.0.zip",
      "size": 19695,
      "checksum": "SHA-256:25a0d6a3fcafc0e09cc8a24dcf3620e4a6530cff04094424b6827acf572f0b87"
    },
    {
      "name": "Esplora",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Grants easy access to the various sensors and actuators of the Esplora. For Arduino Esplora only.",
      "paragraph": "The sensors available on the board are:2-Axis analog joystick with center push-button,4 push-buttons,microphone, light sensor, temperature sensor, 3-axis accelerometer, 2 TinkerKit input connectors.\u003c/br\u003eThe actuators available on the board are: bright RGB LED, piezo buzzer, 2 TinkerKit output connectors.",
      "website": "http://arduino.cc/en/Reference/EsploraLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Esplora-1.0.1.zip",
      "archiveFileName": "Esplora-1.0.1.zip",
      "size": 19695,
      "checksum": "SHA-256:a496ac27dc793078f0c5c18df0a3cb84e7867c1939a914dbb9654b1189fce4af"
    },
    {
      "name": "Esplora",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Grants easy access to the various sensors and actuators of the Esplora. For Arduino Esplora only.",
      "paragraph": "The sensors available on the board are:2-Axis analog joystick with center push-button,4 push-buttons,microphone, light sensor, temperature sensor, 3-axis accelerometer, 2 TinkerKit input connectors.\u003c/br\u003eThe actuators available on the board are: bright RGB LED, piezo buzzer, 2 TinkerKit output connectors.",
      "website": "http://arduino.cc/en/Reference/EsploraLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Esplora-1.0.2.zip",
      "archiveFileName": "Esplora-1.0.2.zip",
      "size": 19691,
      "checksum": "SHA-256:b32a2aefb4e3cbf35e253ab675ae59b3f0211cf4b68823df0d55c69b1d1916d0"
    },
    {
      "name": "Esplora",
      "version": "1.0.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Grants easy access to the various sensors and actuators of the Esplora. For Arduino Esplora only.",
      "paragraph": "The sensors available on the board are:2-Axis analog joystick with center push-button,4 push-buttons,microphone, light sensor, temperature sensor, 3-axis accelerometer, 2 TinkerKit input connectors.\u003c/br\u003eThe actuators available on the board are: bright RGB LED, piezo buzzer, 2 TinkerKit output connectors.",
      "website": "http://arduino.cc/en/Reference/EsploraLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Esplora-1.0.3.zip",
      "archiveFileName": "Esplora-1.0.3.zip",
      "size": 19699,
      "checksum": "SHA-256:eef28d4a195154e133817e00c9a0a666f8f97a200073d0029d98717b47d31834"
    },
    {
      "name": "Esplora",
      "version": "1.0.4",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Grants easy access to the various sensors and actuators of the Esplora. For Arduino Esplora only.",
      "paragraph": "The sensors available on the board are:2-Axis analog joystick with center push-button,4 push-buttons,microphone, light sensor, temperature sensor, 3-axis accelerometer, 2 TinkerKit input connectors.\u003c/br\u003eThe actuators available on the board are: bright RGB LED, piezo buzzer, 2 TinkerKit output connectors.",
      "website": "http://www.arduino.cc/en/Reference/EsploraLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Esplora-1.0.4.zip",
      "archiveFileName": "Esplora-1.0.4.zip",
      "size": 19710,
      "checksum": "SHA-256:e2d3ad8c5be98c40850d3e5f8c729cd27d8e47e0515d54abf79213f09cd30329"
    },
    {
      "name": "Audio",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows playing audio files from an SD card. For Arduino DUE only.",
      "paragraph": "With this library you can use the Arduino Due DAC outputs to play audio files.\u003cbr /\u003eThe audio files must be in the raw .wav format.",
      "website": "http://arduino.cc/en/Reference/Audio",
      "category": "Signal Input/Output",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Audio-1.0.0.zip",
      "archiveFileName": "Audio-1.0.0.zip",
      "size": 6753,
      "checksum": "SHA-256:a8e30ae581fbf15ad357c83a60c2ad3ebf93ef12e4a82a6cbd475a4eac6dc9d7"
    },
    {
      "name": "Audio",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows playing audio files from an SD card. For Arduino DUE only.",
      "paragraph": "With this library you can use the Arduino Due DAC outputs to play audio files.\u003cbr /\u003eThe audio files must be in the raw .wav format.",
      "website": "http://arduino.cc/en/Reference/Audio",
      "category": "Signal Input/Output",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Audio-1.0.1.zip",
      "archiveFileName": "Audio-1.0.1.zip",
      "size": 6718,
      "checksum": "SHA-256:6083b7b62f18b069b77aa1d5c3df03394cb03170777b43e8a729635bc245dcb6"
    },
    {
      "name": "Audio",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows playing audio files from an SD card. For Arduino DUE only.",
      "paragraph": "With this library you can use the Arduino Due DAC outputs to play audio files.\u003cbr /\u003eThe audio files must be in the raw .wav format.",
      "website": "http://arduino.cc/en/Reference/Audio",
      "category": "Signal Input/Output",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Audio-1.0.2.zip",
      "archiveFileName": "Audio-1.0.2.zip",
      "size": 6723,
      "checksum": "SHA-256:1f832beb75c48d6e304cab5e0f85817843ff81d609cf8ce51df7b0da53fb4d95"
    },
    {
      "name": "Audio",
      "version": "1.0.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows playing audio files from an SD card. For Arduino DUE only.",
      "paragraph": "With this library you can use the Arduino Due DAC outputs to play audio files.\u003cbr /\u003eThe audio files must be in the raw .wav format.",
      "website": "http://www.arduino.cc/en/Reference/Audio",
      "category": "Signal Input/Output",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Audio-1.0.3.zip",
      "archiveFileName": "Audio-1.0.3.zip",
      "size": 6731,
      "checksum": "SHA-256:b21c28e609e22869e5cfce53b6b087f710b2f826a0af9d0e09cab161e0b6d590"
    },
    {
      "name": "Audio",
      "version": "1.0.4",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows playing audio files from an SD card. For Arduino DUE only.",
      "paragraph": "With this library you can use the Arduino Due DAC outputs to play audio files.\u003cbr /\u003eThe audio files must be in the raw .wav format.",
      "website": "http://www.arduino.cc/en/Reference/Audio",
      "category": "Signal Input/Output",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Audio-1.0.4.zip",
      "archiveFileName": "Audio-1.0.4.zip",
      "size": 6731,
      "checksum": "SHA-256:962def8814846db777146a43ebcbad98a39fd4bc372b808424f4e12277ed4141"
    },
    {
      "name": "Audio",
      "version": "1.0.5",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows playing audio files from an SD card. For Arduino DUE only.",
      "paragraph": "With this library you can use the Arduino Due DAC outputs to play audio files.\u003cbr /\u003eThe audio files must be in the raw .wav format.",
      "website": "http://www.arduino.cc/en/Reference/Audio",
      "category": "Signal Input/Output",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Audio-1.0.5.zip",
      "archiveFileName": "Audio-1.0.5.zip",
      "size": 6733,
      "checksum": "SHA-256:06ad6f32e507971596752032fa537cb958622b9dbda3239478b7fd8b3387eda8"
    },
    {
      "name": "Bridge",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Bridge-1.0.0.zip",
      "archiveFileName": "Bridge-1.0.0.zip",
      "size": 79554,
      "checksum": "SHA-256:9b80eb3c4064a2905a2be385fc2ee0ab2d19f5add43a743776fa9bff30c662d7"
    },
    {
      "name": "Bridge",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Bridge-1.0.1.zip",
      "archiveFileName": "Bridge-1.0.1.zip",
      "size": 79571,
      "checksum": "SHA-256:72f177e2711d558f655937f9c85edff8fb83a738156ab3b2b4b765267f395af0"
    },
    {
      "name": "Bridge",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Bridge-1.0.2.zip",
      "archiveFileName": "Bridge-1.0.2.zip",
      "size": 79574,
      "checksum": "SHA-256:8b228c5d2025682ef4bdefbee7682ef31025c1c061156757d20b247ac4cc8344"
    },
    {
      "name": "Bridge",
      "version": "1.0.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Bridge-1.0.3.zip",
      "archiveFileName": "Bridge-1.0.3.zip",
      "size": 79616,
      "checksum": "SHA-256:ead0482c236be1b9467cbb68481f9a0e6dcd30066bb069569ed0804b19a6a832"
    },
    {
      "name": "Bridge",
      "version": "1.0.4",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Bridge-1.0.4.zip",
      "archiveFileName": "Bridge-1.0.4.zip",
      "size": 79635,
      "checksum": "SHA-256:cb093c35c572f2a63f1dbe52a2bf3f4234aa3f0327b6bc32ebce023c9819d313"
    },
    {
      "name": "Bridge",
      "version": "1.0.5",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://www.arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Bridge-1.0.5.zip",
      "archiveFileName": "Bridge-1.0.5.zip",
      "size": 79691,
      "checksum": "SHA-256:4541c53e88fb4d829d93a7ff5293b8d4bcc731cbfd89243e1f4d3361712b5257"
    },
    {
      "name": "Bridge",
      "version": "1.0.6",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://www.arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Bridge-1.0.6.zip",
      "archiveFileName": "Bridge-1.0.6.zip",
      "size": 79699,
      "checksum": "SHA-256:4722f3d6cea9bcea355078ca531a295c53a867f58a9de9b907984fcb38d7826d"
    },
    {
      "name": "Bridge",
      "version": "1.0.7",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://www.arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Bridge-1.0.7.zip",
      "archiveFileName": "Bridge-1.0.7.zip",
      "size": 80447,
      "checksum": "SHA-256:48e0e63cb5f49e9ecf318441b6bf22aebee3fec87e88877902cddd93ad30721d"
    },
    {
      "name": "Bridge",
      "version": "1.1.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://www.arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Bridge-1.1.0.zip",
      "archiveFileName": "Bridge-1.1.0.zip",
      "size": 58761,
      "checksum": "SHA-256:6d12dc0e0e0a7f28a2d70f4ed662c6084b2bbd3ae0a3830e6a6f0b3bc5e25308"
    },
    {
      "name": "Bridge",
      "version": "1.6.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://www.arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Bridge-1.6.0.zip",
      "archiveFileName": "Bridge-1.6.0.zip",
      "size": 59403,
      "checksum": "SHA-256:a8cf61d099550cd9a6f37f1f1a40369a6448cc52c2a87183e27240915b858fd7"
    },
    {
      "name": "Bridge",
      "version": "1.6.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the microcontroller. For Arduino/Genuino Yún, Yún Shield and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://www.arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Bridge-1.6.1.zip",
      "archiveFileName": "Bridge-1.6.1.zip",
      "size": 61137,
      "checksum": "SHA-256:f0b33f6191a9b8bb3d693bd3f811ef175b92470a420d6112bbabdfd41c9efc62"
    },
    {
      "name": "Bridge",
      "version": "1.6.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the microcontroller. For Arduino/Genuino Yún, Yún Shield and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://www.arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Bridge-1.6.2.zip",
      "archiveFileName": "Bridge-1.6.2.zip",
      "size": 66457,
      "checksum": "SHA-256:d6ac5785fd1dad7d34c31e02c76e4cbc08b8a20906fc4e40a48cd2569a2fcdd8"
    },
    {
      "name": "Bridge",
      "version": "1.6.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the microcontroller. For Arduino/Genuino Yún, Yún Shield and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://www.arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Bridge-1.6.3.zip",
      "archiveFileName": "Bridge-1.6.3.zip",
      "size": 61306,
      "checksum": "SHA-256:a2f81451f2379a633ffff96a89321c519bea9cd33d986ece9f1d3c95a0d49b32"
    },
    {
      "name": "Ethernet",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet board or shield. For all Arduino boards.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "http://arduino.cc/en/Reference/Ethernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Ethernet-1.0.0.zip",
      "archiveFileName": "Ethernet-1.0.0.zip",
      "size": 47557,
      "checksum": "SHA-256:212c17a3cbc5fe6867aaa8f1cd9584302b044358f051b8378c14c5efaf303c38"
    },
    {
      "name": "Ethernet",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet board or shield. For all Arduino boards.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "http://arduino.cc/en/Reference/Ethernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Ethernet-1.0.1.zip",
      "archiveFileName": "Ethernet-1.0.1.zip",
      "size": 47537,
      "checksum": "SHA-256:acc1aacbc03a813f985d5c614c3dcdbc27a19d300bc59ad6cb6ca4900cf9a574"
    },
    {
      "name": "Ethernet",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet board or shield. For all Arduino boards.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "http://arduino.cc/en/Reference/Ethernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Ethernet-1.0.2.zip",
      "archiveFileName": "Ethernet-1.0.2.zip",
      "size": 47409,
      "checksum": "SHA-256:6e7abdb52b333b5b7c48e31e00a8e6a7f7b8a7ecad6c064303ca840e00f892d2"
    },
    {
      "name": "Ethernet",
      "version": "1.0.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet board or shield. For all Arduino boards.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "http://www.arduino.cc/en/Reference/Ethernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Ethernet-1.0.3.zip",
      "archiveFileName": "Ethernet-1.0.3.zip",
      "size": 47418,
      "checksum": "SHA-256:8870728ad652e96d4f97272ee2c65216d327016aa0f498b024edd69a2cf6b96c"
    },
    {
      "name": "Ethernet",
      "version": "1.0.4",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet board or shield. For all Arduino boards.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "http://www.arduino.cc/en/Reference/Ethernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Ethernet-1.0.4.zip",
      "archiveFileName": "Ethernet-1.0.4.zip",
      "size": 47460,
      "checksum": "SHA-256:fa66e8172283441f02b8a449fbebf9bdbd106b9c3283e01e18339444420de84c"
    },
    {
      "name": "Ethernet",
      "version": "1.0.5",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet board or shield. For all Arduino boards.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "http://www.arduino.cc/en/Reference/Ethernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Ethernet-1.0.5.zip",
      "archiveFileName": "Ethernet-1.0.5.zip",
      "size": 47612,
      "checksum": "SHA-256:1586ce89d3ef81ec2fbe8336088663a49ad79f589762e7fc544366098964d13c"
    },
    {
      "name": "Ethernet",
      "version": "1.1.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet board or shield. For all Arduino boards.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "http://www.arduino.cc/en/Reference/Ethernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Ethernet-1.1.0.zip",
      "archiveFileName": "Ethernet-1.1.0.zip",
      "size": 47891,
      "checksum": "SHA-256:aad7d59bb6a8264fe0874fb0ba406e3167d384f56e702c2b500e571697eea97a"
    },
    {
      "name": "Ethernet",
      "version": "1.1.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet board or shield. For all Arduino boards.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "http://www.arduino.cc/en/Reference/Ethernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Ethernet-1.1.1.zip",
      "archiveFileName": "Ethernet-1.1.1.zip",
      "size": 47926,
      "checksum": "SHA-256:9efa75359375756ba5d99d0d413ad0627ce06289c49140af3c27425ae58ccc6b"
    },
    {
      "name": "Ethernet",
      "version": "1.1.2",
      "author": "Various (see AUTHORS file for details)",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet Board or Shield.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "http://www.arduino.cc/en/Reference/Ethernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Ethernet-1.1.2.zip",
      "archiveFileName": "Ethernet-1.1.2.zip",
      "size": 48758,
      "checksum": "SHA-256:f9568482ca74de9a456aae9e3d1cce34cbfe8df2518f566339ff5b679067aa32"
    },
    {
      "name": "Firmata",
      "version": "2.3.6",
      "author": "Firmata Developers",
      "maintainer": "Firmata Developers \u003cfirmata-devel@lists.sourceforge.net\u003e",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "http://firmata.org",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Firmata-2.3.6.zip",
      "archiveFileName": "Firmata-2.3.6.zip",
      "size": 56416,
      "checksum": "SHA-256:8ee8b0c8b4ffe1217df7f39cfaab39df7b6fbe873d9bc9690fc940646f24c07c"
    },
    {
      "name": "Firmata",
      "version": "2.3.7",
      "author": "Firmata Developers",
      "maintainer": "Firmata Developers \u003cfirmata-devel@lists.sourceforge.net\u003e",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "http://firmata.org",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Firmata-2.3.7.zip",
      "archiveFileName": "Firmata-2.3.7.zip",
      "size": 56440,
      "checksum": "SHA-256:c9246705c1b2a8ee5e893e6299cfce5c776e059618ac22e1964b1210245ac2e5"
    },
    {
      "name": "Firmata",
      "version": "2.3.8",
      "author": "Firmata Developers",
      "maintainer": "Firmata Developers \u003cfirmata-devel@lists.sourceforge.net\u003e",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "http://firmata.org",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Firmata-2.3.8.zip",
      "archiveFileName": "Firmata-2.3.8.zip",
      "size": 56442,
      "checksum": "SHA-256:c5509fa7cbd5c303651686f1f2085845535ecfccb083eca0ea09438442a779fa"
    },
    {
      "name": "Firmata",
      "version": "2.5.0",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/arduino",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "https://github.com/firmata/arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/firmata/Firmata-2.5.0.zip",
      "archiveFileName": "Firmata-2.5.0.zip",
      "size": 142284,
      "checksum": "SHA-256:73a7e76adae40a6b7c257a5347336646a20629fb1bf20ac367e7fc1d7fe77de6"
    },
    {
      "name": "Firmata",
      "version": "2.5.1",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/arduino",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "https://github.com/firmata/arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/firmata/Firmata-2.5.1.zip",
      "archiveFileName": "Firmata-2.5.1.zip",
      "size": 143839,
      "checksum": "SHA-256:cf34e6b0721cd8568aaa00842d843b31ee4efab93ebc0ae09e7005a6c455d561"
    },
    {
      "name": "Firmata",
      "version": "2.5.2",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/arduino",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "https://github.com/firmata/arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/firmata/Firmata-2.5.2.zip",
      "archiveFileName": "Firmata-2.5.2.zip",
      "size": 173474,
      "checksum": "SHA-256:13838d6ff6839f959b9bed698a9ca6ad834f5bf6160c3daa0aa0ac49e5ccb963"
    },
    {
      "name": "Firmata",
      "version": "2.5.3",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/arduino",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino/Genuino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "https://github.com/firmata/arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/firmata/Firmata-2.5.3.zip",
      "archiveFileName": "Firmata-2.5.3.zip",
      "size": 177119,
      "checksum": "SHA-256:ed1ff1c8e6a9ad396fb4b79076c821e839ffb4d44b4a78bc95cdff30cc24bf45"
    },
    {
      "name": "Firmata",
      "version": "2.5.4",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/arduino",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino/Genuino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "https://github.com/firmata/arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/firmata/Firmata-2.5.4.zip",
      "archiveFileName": "Firmata-2.5.4.zip",
      "size": 178479,
      "checksum": "SHA-256:78870cf9af3ce86bdd006e0887a7068cddfe1c4cefb784917f82008c750c5196"
    },
    {
      "name": "Firmata",
      "version": "2.5.5",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/arduino",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino/Genuino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "https://github.com/firmata/arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/firmata/Firmata-2.5.5.zip",
      "archiveFileName": "Firmata-2.5.5.zip",
      "size": 191182,
      "checksum": "SHA-256:98480ca616eef63c9773013b52ac9e9aba0663063c2fe0d3255fd3d74c895e4e"
    },
    {
      "name": "Firmata",
      "version": "2.5.6",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/arduino",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino/Genuino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "https://github.com/firmata/arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/firmata/Firmata-2.5.6.zip",
      "archiveFileName": "Firmata-2.5.6.zip",
      "size": 191891,
      "checksum": "SHA-256:b46f2050dc787d790e259f676d5a03558bbf979ff37a9a6f6c7167e65876411b"
    },
    {
      "name": "Firmata",
      "version": "2.4.2",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/arduino",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "https://github.com/firmata/arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/firmata/Firmata-2.4.2.zip",
      "archiveFileName": "Firmata-2.4.2.zip",
      "size": 70281,
      "checksum": "SHA-256:250b1d15c76233df0f5f290ceee8988ef4448312c55723bb3928eb21dfd643bc"
    },
    {
      "name": "Firmata",
      "version": "2.4.0",
      "author": "Firmata Developers",
      "maintainer": "Firmata Developers \u003cfirmata-devel@lists.sourceforge.net\u003e",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "http://firmata.org",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/firmata/Firmata-2.4.0.zip",
      "archiveFileName": "Firmata-2.4.0.zip",
      "size": 69136,
      "checksum": "SHA-256:e6e6a0d05b12b63a32e99c9eb680fcba04f3c23331176e4d1e0ab52cc2c9cc9e"
    },
    {
      "name": "Firmata",
      "version": "2.4.1",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/arduino",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "https://github.com/firmata/arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/firmata/Firmata-2.4.1.zip",
      "archiveFileName": "Firmata-2.4.1.zip",
      "size": 70226,
      "checksum": "SHA-256:a0b0ed8651073b9a96d8e0ed7890091796a6e57b6384691400865f5a915f5724"
    },
    {
      "name": "Firmata",
      "version": "2.4.3",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/arduino",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "https://github.com/firmata/arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/firmata/Firmata-2.4.3.zip",
      "archiveFileName": "Firmata-2.4.3.zip",
      "size": 81502,
      "checksum": "SHA-256:cf2dcc7c1b1ffe2dd101686ccc23df4bd8749695fca249a82ea688b4865ae67a"
    },
    {
      "name": "Firmata",
      "version": "2.4.4",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/arduino",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "https://github.com/firmata/arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/firmata/Firmata-2.4.4.zip",
      "archiveFileName": "Firmata-2.4.4.zip",
      "size": 98604,
      "checksum": "SHA-256:f7256d59c9eb6c4aac798d117d49c4d45797343ce92d6659df121360867b85cb"
    },
    {
      "name": "GSM",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables GSM/GRPS network connection using the Arduino GSM Shield. For all Arduino boards BUT Arduino DUE.",
      "paragraph": "Use this library to make/receive voice calls, to send and receive SMS with the Quectel M10 GSM module.\u003c/br\u003eThis library also allows you to connect to internet through the GPRS networks. You can either use web Clients and Servers.\u003c/br\u003e",
      "website": "http://arduino.cc/en/Reference/GSM",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/GSM-1.0.0.zip",
      "archiveFileName": "GSM-1.0.0.zip",
      "size": 126506,
      "checksum": "SHA-256:ceaac5a0bbb17b983965a60e80ad74050ec9ab7f15a1448b2a04d20c62db0474"
    },
    {
      "name": "GSM",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables GSM/GRPS network connection using the Arduino GSM Shield. For all Arduino boards BUT Arduino DUE.",
      "paragraph": "Use this library to make/receive voice calls, to send and receive SMS with the Quectel M10 GSM module.\u003c/br\u003eThis library also allows you to connect to internet through the GPRS networks. You can either use web Clients and Servers.\u003c/br\u003e",
      "website": "http://arduino.cc/en/Reference/GSM",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/GSM-1.0.1.zip",
      "archiveFileName": "GSM-1.0.1.zip",
      "size": 126506,
      "checksum": "SHA-256:a451fd5740ebeab4a566ddef1ae670f7e993f065a87e45521e28daac27ab992e"
    },
    {
      "name": "GSM",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables GSM/GRPS network connection using the Arduino GSM Shield. For all Arduino boards BUT Arduino DUE.",
      "paragraph": "Use this library to make/receive voice calls, to send and receive SMS with the Quectel M10 GSM module.\u003c/br\u003eThis library also allows you to connect to internet through the GPRS networks. You can either use web Clients and Servers.\u003c/br\u003e",
      "website": "http://arduino.cc/en/Reference/GSM",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/GSM-1.0.2.zip",
      "archiveFileName": "GSM-1.0.2.zip",
      "size": 145786,
      "checksum": "SHA-256:a324ce92094a0a2488e7da603d2fe985a36a67a7221efe33166204fbbb983614"
    },
    {
      "name": "GSM",
      "version": "1.0.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables GSM/GRPS network connection using the Arduino GSM Shield. For all Arduino boards BUT Arduino DUE.",
      "paragraph": "Use this library to make/receive voice calls, to send and receive SMS with the Quectel M10 GSM module.\u003c/br\u003eThis library also allows you to connect to internet through the GPRS networks. You can either use web Clients and Servers.\u003c/br\u003e",
      "website": "http://arduino.cc/en/Reference/GSM",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/GSM-1.0.3.zip",
      "archiveFileName": "GSM-1.0.3.zip",
      "size": 145828,
      "checksum": "SHA-256:18e3fb88002b9703b831a41cdbbfcbf4393850f71153d5ccf278e6020ad68495"
    },
    {
      "name": "GSM",
      "version": "1.0.4",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables GSM/GRPS network connection using the Arduino GSM Shield. For all Arduino boards BUT Arduino DUE.",
      "paragraph": "Use this library to make/receive voice calls, to send and receive SMS with the Quectel M10 GSM module.\u003c/br\u003eThis library also allows you to connect to internet through the GPRS networks. You can either use web Clients and Servers.\u003c/br\u003e",
      "website": "http://www.arduino.cc/en/Reference/GSM",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/GSM-1.0.4.zip",
      "archiveFileName": "GSM-1.0.4.zip",
      "size": 145868,
      "checksum": "SHA-256:2731d45eb94e2ccc4f45128dbec696213fa96571b9adacb82ef22e7d107533a0"
    },
    {
      "name": "GSM",
      "version": "1.0.5",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables GSM/GRPS network connection using the Arduino GSM Shield. For all Arduino boards BUT Arduino DUE.",
      "paragraph": "Use this library to make/receive voice calls, to send and receive SMS with the Quectel M10 GSM module.\u003c/br\u003eThis library also allows you to connect to internet through the GPRS networks. You can either use web Clients and Servers.\u003c/br\u003e",
      "website": "http://www.arduino.cc/en/Reference/GSM",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/GSM-1.0.5.zip",
      "archiveFileName": "GSM-1.0.5.zip",
      "size": 145783,
      "checksum": "SHA-256:fd5930aa6002084620cd1389983cc9516eaeaa05d35f079b0555e360451893ba"
    },
    {
      "name": "LiquidCrystal",
      "version": "1.0.0",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows communication with alphanumerical liquid crystal displays (LCDs). For all Arduino boards.",
      "paragraph": "This library allows an Arduino board to control LiquidCrystal displays (LCDs) based on the Hitachi HD44780 (or a compatible) chipset, which is found on most text-based LCDs. The library works with in either 4 or 8 bit mode (i.e. using 4 or 8 data lines in addition to the rs, enable, and, optionally, the rw control lines).",
      "website": "http://arduino.cc/en/Reference/LiquidCrystal",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/LiquidCrystal-1.0.0.zip",
      "archiveFileName": "LiquidCrystal-1.0.0.zip",
      "size": 15884,
      "checksum": "SHA-256:cb2e194534c610bcd5dfe7b1134eba7aedcd7f9bf8fb8db08a2b99de4ec5d5cd"
    },
    {
      "name": "LiquidCrystal",
      "version": "1.0.1",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows communication with alphanumerical liquid crystal displays (LCDs). For all Arduino boards.",
      "paragraph": "This library allows an Arduino board to control LiquidCrystal displays (LCDs) based on the Hitachi HD44780 (or a compatible) chipset, which is found on most text-based LCDs. The library works with in either 4 or 8 bit mode (i.e. using 4 or 8 data lines in addition to the rs, enable, and, optionally, the rw control lines).",
      "website": "http://arduino.cc/en/Reference/LiquidCrystal",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/LiquidCrystal-1.0.1.zip",
      "archiveFileName": "LiquidCrystal-1.0.1.zip",
      "size": 15879,
      "checksum": "SHA-256:e5905e094edf1bc519f64671a41c9840ac7294337a6c8470e585dab465f50d68"
    },
    {
      "name": "LiquidCrystal",
      "version": "1.0.2",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows communication with alphanumerical liquid crystal displays (LCDs). For all Arduino boards.",
      "paragraph": "This library allows an Arduino board to control LiquidCrystal displays (LCDs) based on the Hitachi HD44780 (or a compatible) chipset, which is found on most text-based LCDs. The library works with in either 4 or 8 bit mode (i.e. using 4 or 8 data lines in addition to the rs, enable, and, optionally, the rw control lines).",
      "website": "http://www.arduino.cc/en/Reference/LiquidCrystal",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/LiquidCrystal-1.0.2.zip",
      "archiveFileName": "LiquidCrystal-1.0.2.zip",
      "size": 15957,
      "checksum": "SHA-256:9215cd40405df7551dcdff18580c57f9f00e217f0dd4f254e100912b4a586d89"
    },
    {
      "name": "LiquidCrystal",
      "version": "1.0.3",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows communication with alphanumerical liquid crystal displays (LCDs). For all Arduino boards.",
      "paragraph": "This library allows an Arduino board to control LiquidCrystal displays (LCDs) based on the Hitachi HD44780 (or a compatible) chipset, which is found on most text-based LCDs. The library works with in either 4 or 8 bit mode (i.e. using 4 or 8 data lines in addition to the rs, enable, and, optionally, the rw control lines).",
      "website": "http://www.arduino.cc/en/Reference/LiquidCrystal",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/LiquidCrystal-1.0.3.zip",
      "archiveFileName": "LiquidCrystal-1.0.3.zip",
      "size": 15945,
      "checksum": "SHA-256:acfe27469a5d48e9101e7781a309ae99f208c442ca277d021a34fd384a11106e"
    },
    {
      "name": "LiquidCrystal",
      "version": "1.0.4",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows communication with alphanumerical liquid crystal displays (LCDs). For all Arduino boards.",
      "paragraph": "This library allows an Arduino board to control LiquidCrystal displays (LCDs) based on the Hitachi HD44780 (or a compatible) chipset, which is found on most text-based LCDs. The library works with in either 4 or 8 bit mode (i.e. using 4 or 8 data lines in addition to the rs, enable, and, optionally, the rw control lines).",
      "website": "http://www.arduino.cc/en/Reference/LiquidCrystal",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/LiquidCrystal-1.0.4.zip",
      "archiveFileName": "LiquidCrystal-1.0.4.zip",
      "size": 15979,
      "checksum": "SHA-256:86c16f967dd72ad378e94fc464d37de7501ed2cf659bb2d87e80c86cdf13bc8e"
    },
    {
      "name": "Robot IR Remote",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows controlling the Arduino Robot via an IR remote control. For Arduino Robot only.",
      "website": "https://github.com/shirriff/Arduino-IRremote",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Robot_IR_Remote-1.0.0.zip",
      "archiveFileName": "Robot_IR_Remote-1.0.0.zip",
      "size": 22083,
      "checksum": "SHA-256:83e39ce31c9f5fb33c6323b948acb0bc4354efc7ba619dff80f991f1bf7e4a2b"
    },
    {
      "name": "Robot IR Remote",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows controlling the Arduino Robot via an IR remote control. For Arduino Robot only.",
      "website": "https://github.com/shirriff/Arduino-IRremote",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Robot_IR_Remote-1.0.1.zip",
      "archiveFileName": "Robot_IR_Remote-1.0.1.zip",
      "size": 22156,
      "checksum": "SHA-256:fdbf7b6b27d2ba3a5377bc7661da93013d09e63db204ee750289d7aaaee318d7"
    },
    {
      "name": "Robot IR Remote",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows controlling the Arduino Robot via an IR remote control. For Arduino Robot only.",
      "website": "https://github.com/shirriff/Arduino-IRremote",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Robot_IR_Remote-1.0.2.zip",
      "archiveFileName": "Robot_IR_Remote-1.0.2.zip",
      "size": 22160,
      "checksum": "SHA-256:4df9b0982997c3e626ef1a581f86d32234d39ee3bdeaf3b83a3ced52cd7b28b1"
    },
    {
      "name": "Robot Control",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables easy access to the controls of the Arduino Robot Control board. For Arduino Robot only.",
      "paragraph": "The Arduino robot is made by two independent boards. The Control Board is the top board of the Arduino Robot, with this library you can easily write sketches to control the robot.",
      "website": "http://arduino.cc/en/Reference/RobotLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Robot_Control-1.0.0.zip",
      "archiveFileName": "Robot_Control-1.0.0.zip",
      "size": 108104,
      "checksum": "SHA-256:4e1dcd7ab7b7c5af9705c36d52461b7c212d02fda21d0ed97c098185c30850cc"
    },
    {
      "name": "Robot Control",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables easy access to the controls of the Arduino Robot Control board. For Arduino Robot only.",
      "paragraph": "The Arduino robot is made by two independent boards. The Control Board is the top board of the Arduino Robot, with this library you can easily write sketches to control the robot.",
      "website": "http://arduino.cc/en/Reference/RobotLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Robot_Control-1.0.1.zip",
      "archiveFileName": "Robot_Control-1.0.1.zip",
      "size": 108156,
      "checksum": "SHA-256:cc112dd4ff9f91a3adcb54687ca79ccf3f4d926f6c9ff1db185d6de40a714035"
    },
    {
      "name": "Robot Control",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables easy access to the controls of the Arduino Robot Control board. For Arduino Robot only.",
      "paragraph": "The Arduino robot is made by two independent boards. The Control Board is the top board of the Arduino Robot, with this library you can easily write sketches to control the robot.",
      "website": "http://www.arduino.cc/en/Reference/RobotLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Robot_Control-1.0.2.zip",
      "archiveFileName": "Robot_Control-1.0.2.zip",
      "size": 108165,
      "checksum": "SHA-256:c8b337b9954dd1f35b9e63ab39dfaea1a979ea481383ff454c207b4d6229ba55"
    },
    {
      "name": "Robot Control",
      "version": "1.0.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables easy access to the controls of the Arduino Robot Control board. For Arduino Robot only.",
      "paragraph": "The Arduino robot is made by two independent boards. The Control Board is the top board of the Arduino Robot, with this library you can easily write sketches to control the robot.",
      "website": "http://www.arduino.cc/en/Reference/RobotLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Robot_Control-1.0.3.zip",
      "archiveFileName": "Robot_Control-1.0.3.zip",
      "size": 114421,
      "checksum": "SHA-256:878685a64265bbc19401ebd1fa98a8dc7a1535cf405d4cc42a6a108619af0560"
    },
    {
      "name": "Robot Motor",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables easy access to the motors of the Arduino Robot Motor board. For Arduino Robot only.",
      "website": "http://arduino.cc/en/Reference/RobotLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Robot_Motor-1.0.0.zip",
      "archiveFileName": "Robot_Motor-1.0.0.zip",
      "size": 11222,
      "checksum": "SHA-256:21357cec99a703c9806068a3f95dbf00b69d3036271f0934c0b7101fcf73c61a"
    },
    {
      "name": "Robot Motor",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables easy access to the motors of the Arduino Robot Motor board. For Arduino Robot only.",
      "website": "http://arduino.cc/en/Reference/RobotLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Robot_Motor-1.0.1.zip",
      "archiveFileName": "Robot_Motor-1.0.1.zip",
      "size": 11805,
      "checksum": "SHA-256:b89d029b7636df99a67e6695d33442d703719dfb1a245cb1eb17d677a05c6dda"
    },
    {
      "name": "Robot Motor",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables easy access to the motors of the Arduino Robot Motor board. For Arduino Robot only.",
      "website": "http://www.arduino.cc/en/Reference/RobotLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Robot_Motor-1.0.2.zip",
      "archiveFileName": "Robot_Motor-1.0.2.zip",
      "size": 11812,
      "checksum": "SHA-256:42ca5b273a0dc1f636f2e1bf886bd0f6d190d5adea26e9d8961b827179867853"
    },
    {
      "name": "RTCZero",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows to use the RTC functionalities. For Arduino Zero only.",
      "paragraph": "With this library you can use the RTC peripheral of an Arduino Zero in order to program actions related to date and time.",
      "website": "http://www.arduino.cc/en/Reference/RTCZero",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/RTCZero-1.0.0.zip",
      "archiveFileName": "RTCZero-1.0.0.zip",
      "size": 4844,
      "checksum": "SHA-256:063d2d72c215fa72d07411bff43187a37c736dda37cbc2b4a3f5ab6c0db1b769"
    },
    {
      "name": "RTCZero",
      "version": "1.1.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows to use the RTC functionalities. For Arduino Zero only.",
      "paragraph": "With this library you can use the RTC peripheral of an Arduino Zero in order to program actions related to date and time.",
      "website": "http://www.arduino.cc/en/Reference/RTCZero",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/RTCZero-1.1.0.zip",
      "archiveFileName": "RTCZero-1.1.0.zip",
      "size": 5628,
      "checksum": "SHA-256:2847d2ad1e68a09e97f2af59c82381366d5fcd8da446449ebd4bde612e1b4fa3"
    },
    {
      "name": "RTCZero",
      "version": "1.1.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows to use the RTC functionalities. For Arduino Zero only.",
      "paragraph": "With this library you can use the RTC peripheral of an Arduino Zero in order to program actions related to date and time.",
      "website": "http://www.arduino.cc/en/Reference/RTCZero",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/RTCZero-1.1.1.zip",
      "archiveFileName": "RTCZero-1.1.1.zip",
      "size": 6472,
      "checksum": "SHA-256:53dd52b03f0f8ac5b5d3e4a08a1bcd2c62d09e102ed0bba83ceb7bbc04798241"
    },
    {
      "name": "RTCZero",
      "version": "1.2.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows to use the RTC functionalities. For Arduino Zero only.",
      "paragraph": "With this library you can use the RTC peripheral of an Arduino Zero in order to program actions related to date and time.",
      "website": "http://www.arduino.cc/en/Reference/RTCZero",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/RTCZero-1.2.0.zip",
      "archiveFileName": "RTCZero-1.2.0.zip",
      "size": 6326,
      "checksum": "SHA-256:c2f1b6f0a3baa665b641e9fc8359e521c4fbff153add912f69c29508ac17242d"
    },
    {
      "name": "RTCZero",
      "version": "1.3.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows to use the RTC functionalities. For Arduino Zero only.",
      "paragraph": "With this library you can use the RTC peripheral of an Arduino Zero in order to program actions related to date and time.",
      "website": "http://www.arduino.cc/en/Reference/RTCZero",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/RTCZero-1.3.0.zip",
      "archiveFileName": "RTCZero-1.3.0.zip",
      "size": 7142,
      "checksum": "SHA-256:6b4e963694db2b459940a894db2e8af6789ef5f67ec5b74978924985455b85a6"
    },
    {
      "name": "RTCZero",
      "version": "1.3.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows to use the RTC functionalities. For Arduino Zero only.",
      "paragraph": "With this library you can use the RTC peripheral of an Arduino Zero in order to program actions related to date and time.",
      "website": "http://www.arduino.cc/en/Reference/RTCZero",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/RTCZero-1.3.1.zip",
      "archiveFileName": "RTCZero-1.3.1.zip",
      "size": 7132,
      "checksum": "SHA-256:8167af2185aa8a42673516b1595271fe1eb32673f20fe1b56074985db4cd0ff3"
    },
    {
      "name": "RTCZero",
      "version": "1.4.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows to use the RTC functionalities. For Arduino Zero only.",
      "paragraph": "With this library you can use the RTC peripheral of an Arduino Zero in order to program actions related to date and time.",
      "website": "http://www.arduino.cc/en/Reference/RTCZero",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/RTCZero-1.4.0.zip",
      "archiveFileName": "RTCZero-1.4.0.zip",
      "size": 7860,
      "checksum": "SHA-256:bf72f2d2236f94f9b9fec39922adcbcfabfe666e5abed4c3d87471ef26e5397a"
    },
    {
      "name": "RTCZero",
      "version": "1.4.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows to use the RTC functionalities. For Arduino Zero only.",
      "paragraph": "With this library you can use the RTC peripheral of an Arduino Zero in order to program actions related to date and time.",
      "website": "http://www.arduino.cc/en/Reference/RTCZero",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/RTCZero-1.4.1.zip",
      "archiveFileName": "RTCZero-1.4.1.zip",
      "size": 8315,
      "checksum": "SHA-256:33710ee9fa1eda2aac6996013c50229ca617fdc3c4f2a58dfd4584ab3ff03e61"
    },
    {
      "name": "RTCZero",
      "version": "1.4.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows to use the RTC functionalities. For Arduino Zero and MKR1000 only.",
      "paragraph": "With this library you can use the RTC peripheral of an Arduino Zero or MKR1000 in order to program actions related to date and time.",
      "website": "http://www.arduino.cc/en/Reference/RTCZero",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/RTCZero-1.4.2.zip",
      "archiveFileName": "RTCZero-1.4.2.zip",
      "size": 8339,
      "checksum": "SHA-256:e59f5be73961343633b61bdc32b2632fe16772575cbcf8c930e2e17299945200"
    },
    {
      "name": "RTCZero",
      "version": "1.4.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows to use the RTC functionalities. For Arduino Zero and MKR1000 only.",
      "paragraph": "With this library you can use the RTC peripheral of an Arduino Zero or MKR1000 in order to program actions related to date and time.",
      "website": "http://www.arduino.cc/en/Reference/RTCZero",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/RTCZero-1.4.3.zip",
      "archiveFileName": "RTCZero-1.4.3.zip",
      "size": 8529,
      "checksum": "SHA-256:a9627d52e282d417fed6c5b68314dc82dc5cf2d6e7df94bde2e508d0499e8d5d"
    },
    {
      "name": "RTCZero",
      "version": "1.5.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows to use the RTC functionalities. For Arduino Zero and MKR1000 only.",
      "paragraph": "With this library you can use the RTC peripheral of an Arduino Zero or MKR1000 in order to program actions related to date and time.",
      "website": "http://www.arduino.cc/en/Reference/RTCZero",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/RTCZero-1.5.0.zip",
      "archiveFileName": "RTCZero-1.5.0.zip",
      "size": 8903,
      "checksum": "SHA-256:bbe1e62581fecbdd26d2d1714151c261d6d306c45bdf986e543362a8d1a1e347"
    },
    {
      "name": "RTCZero",
      "version": "1.5.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows to use the RTC functionalities. For Arduino Zero and MKR1000 only.",
      "paragraph": "With this library you can use the RTC peripheral of an Arduino Zero or MKR1000 in order to program actions related to date and time.",
      "website": "http://www.arduino.cc/en/Reference/RTCZero",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/RTCZero-1.5.1.zip",
      "archiveFileName": "RTCZero-1.5.1.zip",
      "size": 9136,
      "checksum": "SHA-256:959c005f4459df424dd5e3043b229e292395640869e0d76d00f79951e3e03749"
    },
    {
      "name": "RTCZero",
      "version": "1.5.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows to use the RTC functionalities. For Arduino Zero, MKRZero and MKR1000 only.",
      "paragraph": "With this library you can use the RTC peripheral of an Arduino Zero or MKR1000 in order to program actions related to date and time.",
      "website": "http://www.arduino.cc/en/Reference/RTCZero",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/RTCZero-1.5.2.zip",
      "archiveFileName": "RTCZero-1.5.2.zip",
      "size": 9145,
      "checksum": "SHA-256:41d7407f1adde8803fd676b90d97a14f37c59f08705e879fc26b1d81d09f48f3"
    },
    {
      "name": "Scheduler",
      "version": "0.4.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows multiple tasks to run at the same time, without interrupting each other. For Arduino DUE only.",
      "paragraph": "The Scheduler library enables the Arduino Due to run multiple functions at the same time. This allows tasks to happen without interrupting each other.\u003c/br\u003eThis is a cooperative scheduler in that the CPU switches from one task to another. The library includes methods for passing control between tasks.",
      "website": "http://arduino.cc/en/Reference/Scheduler",
      "category": "Other",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Scheduler-0.4.0.zip",
      "archiveFileName": "Scheduler-0.4.0.zip",
      "size": 4742,
      "checksum": "SHA-256:bc897b353c6ef25dbca213c8d7415a644890822416e9b68ec1a82dcb0f3d5408"
    },
    {
      "name": "Scheduler",
      "version": "0.4.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows multiple tasks to run at the same time, without interrupting each other. For Arduino DUE only.",
      "paragraph": "The Scheduler library enables the Arduino Due to run multiple functions at the same time. This allows tasks to happen without interrupting each other.\u003c/br\u003eThis is a cooperative scheduler in that the CPU switches from one task to another. The library includes methods for passing control between tasks.",
      "website": "http://arduino.cc/en/Reference/Scheduler",
      "category": "Other",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Scheduler-0.4.1.zip",
      "archiveFileName": "Scheduler-0.4.1.zip",
      "size": 4676,
      "checksum": "SHA-256:2b7983efd6a1a2b89176900c3a9dd38a6606fbc1952a6b5839be2acce009c25c"
    },
    {
      "name": "Scheduler",
      "version": "0.4.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows multiple tasks to run at the same time, without interrupting each other. For Arduino DUE only.",
      "paragraph": "The Scheduler library enables the Arduino Due to run multiple functions at the same time. This allows tasks to happen without interrupting each other.\u003c/br\u003eThis is a cooperative scheduler in that the CPU switches from one task to another. The library includes methods for passing control between tasks.",
      "website": "http://www.arduino.cc/en/Reference/Scheduler",
      "category": "Other",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Scheduler-0.4.3.zip",
      "archiveFileName": "Scheduler-0.4.3.zip",
      "size": 4684,
      "checksum": "SHA-256:5bd8c0f87249e9bba4fc82884312b6f59e71ed7fe1349f364db2c1fa487ff50b"
    },
    {
      "name": "Scheduler",
      "version": "0.4.4",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows multiple tasks to run at the same time, without interrupting each other. For Arduino sam and samd architectures only (Due, Zero...).",
      "paragraph": "The Scheduler library enables the Arduino to run multiple functions at the same time. This allows tasks to happen without interrupting each other.\u003c/br\u003eThis is a cooperative scheduler in that the CPU switches from one task to another. The library includes methods for passing control between tasks.",
      "website": "http://www.arduino.cc/en/Reference/Scheduler",
      "category": "Other",
      "architectures": [
        "sam",
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Scheduler-0.4.4.zip",
      "archiveFileName": "Scheduler-0.4.4.zip",
      "size": 5098,
      "checksum": "SHA-256:bc33d8d7192dc79210c2a87d70719ed4c1dd1ca6c4deec6ebdf3aed8674aa59a"
    },
    {
      "name": "SD",
      "version": "1.0.0",
      "author": "Arduino, SparkFun",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables reading and writing on SD cards. For all Arduino boards.",
      "paragraph": "Once an SD memory card is connected to the SPI interfare of the Arduino board you are enabled to create files and read/write on them. You can also move through directories on the SD card.",
      "website": "http://arduino.cc/en/Reference/SD",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/SD-1.0.0.zip",
      "archiveFileName": "SD-1.0.0.zip",
      "size": 59249,
      "checksum": "SHA-256:dbc2b8815f3c6072a8ffceb661032b4d66a72e049fa5075f7c23b0c4964d97d8"
    },
    {
      "name": "SD",
      "version": "1.0.1",
      "author": "Arduino, SparkFun",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables reading and writing on SD cards. For all Arduino boards.",
      "paragraph": "Once an SD memory card is connected to the SPI interfare of the Arduino board you are enabled to create files and read/write on them. You can also move through directories on the SD card.",
      "website": "http://arduino.cc/en/Reference/SD",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/SD-1.0.1.zip",
      "archiveFileName": "SD-1.0.1.zip",
      "size": 59248,
      "checksum": "SHA-256:f135960657d21358ee2030aea8bbb6af9a4ace1a4430489204e4d34fe8d580a3"
    },
    {
      "name": "SD",
      "version": "1.0.3",
      "author": "Arduino, SparkFun",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables reading and writing on SD cards. For all Arduino boards.",
      "paragraph": "Once an SD memory card is connected to the SPI interfare of the Arduino board you are enabled to create files and read/write on them. You can also move through directories on the SD card.",
      "website": "http://arduino.cc/en/Reference/SD",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/SD-1.0.3.zip",
      "archiveFileName": "SD-1.0.3.zip",
      "size": 58227,
      "checksum": "SHA-256:9a07b8441ec319664af9824f556fa2ec28e3619a5e2591553831e1c4b2205cae"
    },
    {
      "name": "SD",
      "version": "1.0.4",
      "author": "Arduino, SparkFun",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables reading and writing on SD cards. For all Arduino boards.",
      "paragraph": "Once an SD memory card is connected to the SPI interfare of the Arduino board you are enabled to create files and read/write on them. You can also move through directories on the SD card.",
      "website": "http://arduino.cc/en/Reference/SD",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/SD-1.0.4.zip",
      "archiveFileName": "SD-1.0.4.zip",
      "size": 58231,
      "checksum": "SHA-256:152dcd8d59aa9daf1dea7ddb3df9f23b49899d5fc31ba77e1917c9c437a87fbd"
    },
    {
      "name": "SD",
      "version": "1.0.5",
      "author": "Arduino, SparkFun",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables reading and writing on SD cards. For all Arduino boards.",
      "paragraph": "Once an SD memory card is connected to the SPI interfare of the Arduino board you are enabled to create files and read/write on them. You can also move through directories on the SD card.",
      "website": "http://www.arduino.cc/en/Reference/SD",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/SD-1.0.5.zip",
      "archiveFileName": "SD-1.0.5.zip",
      "size": 58309,
      "checksum": "SHA-256:3433bd474611c7ad349f686367fad43e2952093a1cd12315ec5fc2ffd34b298e"
    },
    {
      "name": "SD",
      "version": "1.0.6",
      "author": "Arduino, SparkFun",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables reading and writing on SD cards. For all Arduino boards.",
      "paragraph": "Once an SD memory card is connected to the SPI interfare of the Arduino board you are enabled to create files and read/write on them. You can also move through directories on the SD card.",
      "website": "http://www.arduino.cc/en/Reference/SD",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/SD-1.0.6.zip",
      "archiveFileName": "SD-1.0.6.zip",
      "size": 58542,
      "checksum": "SHA-256:3bb108747b6393917eb29fec95ff3c5c3ccc79dd2357b62a0345d0203c2b496d"
    },
    {
      "name": "SD",
      "version": "1.0.7",
      "author": "Arduino, SparkFun",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables reading and writing on SD cards. For all Arduino boards.",
      "paragraph": "Once an SD memory card is connected to the SPI interfare of the Arduino board you are enabled to create files and read/write on them. You can also move through directories on the SD card.",
      "website": "http://www.arduino.cc/en/Reference/SD",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/SD-1.0.7.zip",
      "archiveFileName": "SD-1.0.7.zip",
      "size": 59207,
      "checksum": "SHA-256:cffa91e70187bd2c41fade1c9ac2aa23b6cc94a35a78dbf45e44e886a967074a"
    },
    {
      "name": "SD",
      "version": "1.0.8",
      "author": "Arduino, SparkFun",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables reading and writing on SD cards.",
      "paragraph": "Once an SD memory card is connected to the SPI interface of the Arduino or Genuino board you can create files and read/write on them. You can also move through directories on the SD card.",
      "website": "http://www.arduino.cc/en/Reference/SD",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/SD-1.0.8.zip",
      "archiveFileName": "SD-1.0.8.zip",
      "size": 59337,
      "checksum": "SHA-256:50e137c8bb58c0dfdfef60536106dd53c6ff80467a11df45760f5bfefe2c06c3"
    },
    {
      "name": "SD",
      "version": "1.0.9",
      "author": "Arduino, SparkFun",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables reading and writing on SD cards.",
      "paragraph": "Once an SD memory card is connected to the SPI interface of the Arduino or Genuino board you can create files and read/write on them. You can also move through directories on the SD card.",
      "website": "http://www.arduino.cc/en/Reference/SD",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/SD-1.0.9.zip",
      "archiveFileName": "SD-1.0.9.zip",
      "size": 59419,
      "checksum": "SHA-256:28adb18bac92b2b72fe4b0abf4ea751793371c0e60717ad3a12ced7256835226"
    },
    {
      "name": "SD",
      "version": "1.1.0",
      "author": "Arduino, SparkFun",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables reading and writing on SD cards.",
      "paragraph": "Once an SD memory card is connected to the SPI interface of the Arduino or Genuino board you can create files and read/write on them. You can also move through directories on the SD card.",
      "website": "http://www.arduino.cc/en/Reference/SD",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/SD-1.1.0.zip",
      "archiveFileName": "SD-1.1.0.zip",
      "size": 59738,
      "checksum": "SHA-256:07ade5fd4d0b867329660e05703a11c93c9bfce524725aaccfa991ba10ed109a"
    },
    {
      "name": "SD",
      "version": "1.1.1",
      "author": "Arduino, SparkFun",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables reading and writing on SD cards.",
      "paragraph": "Once an SD memory card is connected to the SPI interface of the Arduino or Genuino board you can create files and read/write on them. You can also move through directories on the SD card.",
      "website": "http://www.arduino.cc/en/Reference/SD",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/SD-1.1.1.zip",
      "archiveFileName": "SD-1.1.1.zip",
      "size": 59689,
      "checksum": "SHA-256:231414a512e385ffd2c47d5bec547f8e3b7a3ace340769c7ff745e99d43f68fa"
    },
    {
      "name": "Servo",
      "version": "1.0.0",
      "author": "Michael Margolis, Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of servo motors. For all Arduino boards.",
      "paragraph": "This library can control a great number of servos.\u003cbr /\u003eIt makes careful use of timers: the library can control 12 servos using only 1 timer.\u003cbr /\u003eOn the Arduino Due you can control up to 60 servos.\u003cbr /\u003e",
      "website": "http://arduino.cc/en/Reference/Servo",
      "category": "Device Control",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Servo-1.0.0.zip",
      "archiveFileName": "Servo-1.0.0.zip",
      "size": 13850,
      "checksum": "SHA-256:6164a32112be40cfb9cd62883f02293a126c897984c13203abad800c11d82b73"
    },
    {
      "name": "Servo",
      "version": "1.0.1",
      "author": "Michael Margolis, Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of servo motors. For all Arduino boards.",
      "paragraph": "This library can control a great number of servos.\u003cbr /\u003eIt makes careful use of timers: the library can control 12 servos using only 1 timer.\u003cbr /\u003eOn the Arduino Due you can control up to 60 servos.\u003cbr /\u003e",
      "website": "http://arduino.cc/en/Reference/Servo",
      "category": "Device Control",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Servo-1.0.1.zip",
      "archiveFileName": "Servo-1.0.1.zip",
      "size": 13873,
      "checksum": "SHA-256:8b6052f70c9d2b1e1ced4526a3896c3e5789cc929fdd1a3f380c5206c0edae59"
    },
    {
      "name": "Servo",
      "version": "1.0.2",
      "author": "Michael Margolis, Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of servo motors. For all Arduino boards.",
      "paragraph": "This library can control a great number of servos.\u003cbr /\u003eIt makes careful use of timers: the library can control 12 servos using only 1 timer.\u003cbr /\u003eOn the Arduino Due you can control up to 60 servos.\u003cbr /\u003e",
      "website": "http://arduino.cc/en/Reference/Servo",
      "category": "Device Control",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Servo-1.0.2.zip",
      "archiveFileName": "Servo-1.0.2.zip",
      "size": 13877,
      "checksum": "SHA-256:41e424a1ee5bfab2d549a1671546441068c2412eb2032b7cdb960af1705b8b5e"
    },
    {
      "name": "Servo",
      "version": "1.0.3",
      "author": "Michael Margolis, Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of servo motors. For all Arduino boards.",
      "paragraph": "This library can control a great number of servos.\u003cbr /\u003eIt makes careful use of timers: the library can control 12 servos using only 1 timer.\u003cbr /\u003eOn the Arduino Due you can control up to 60 servos.\u003cbr /\u003e",
      "website": "http://www.arduino.cc/en/Reference/Servo",
      "category": "Device Control",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Servo-1.0.3.zip",
      "archiveFileName": "Servo-1.0.3.zip",
      "size": 13889,
      "checksum": "SHA-256:24483fe4f940371ea8f30ece98e9f234a90b4504ed172e520cb323034d2c5d26"
    },
    {
      "name": "Servo",
      "version": "1.1.0",
      "author": "Michael Margolis, Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of servo motors. For all Arduino boards.",
      "paragraph": "This library can control a great number of servos.\u003cbr /\u003eIt makes careful use of timers: the library can control 12 servos using only 1 timer.\u003cbr /\u003eOn the Arduino Due you can control up to 60 servos.\u003cbr /\u003e",
      "website": "http://www.arduino.cc/en/Reference/Servo",
      "category": "Device Control",
      "architectures": [
        "avr",
        "sam",
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Servo-1.1.0.zip",
      "archiveFileName": "Servo-1.1.0.zip",
      "size": 18596,
      "checksum": "SHA-256:0b7ac3d10d8e1ddb38fd2b8fd0ddbaa675af78ca99fa428b4208ffba21f6e81f"
    },
    {
      "name": "Servo",
      "version": "1.1.1",
      "author": "Michael Margolis, Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of servo motors. For all Arduino boards.",
      "paragraph": "This library can control a great number of servos.\u003cbr /\u003eIt makes careful use of timers: the library can control 12 servos using only 1 timer.\u003cbr /\u003eOn the Arduino Due you can control up to 60 servos.\u003cbr /\u003e",
      "website": "http://www.arduino.cc/en/Reference/Servo",
      "category": "Device Control",
      "architectures": [
        "avr",
        "sam",
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Servo-1.1.1.zip",
      "archiveFileName": "Servo-1.1.1.zip",
      "size": 18576,
      "checksum": "SHA-256:c8aae04a8a4887feff0869ce3520790ca6735743d83e38fe75a65e71c25c8ae3"
    },
    {
      "name": "Servo",
      "version": "1.1.2",
      "author": "Michael Margolis, Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino/Genuino boards to control a variety of servo motors.",
      "paragraph": "This library can control a great number of servos.\u003cbr /\u003eIt makes careful use of timers: the library can control 12 servos using only 1 timer.\u003cbr /\u003eOn the Arduino Due you can control up to 60 servos.\u003cbr /\u003e",
      "website": "http://www.arduino.cc/en/Reference/Servo",
      "category": "Device Control",
      "architectures": [
        "avr",
        "sam",
        "samd",
        "nrf52",
        "stm32f4"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Servo-1.1.2.zip",
      "archiveFileName": "Servo-1.1.2.zip",
      "size": 26319,
      "checksum": "SHA-256:d062378e8fafab6b948ce8687e5108d51da9b46ad474f89b20c8f2f97e0900e0"
    },
    {
      "name": "SpacebrewYun",
      "version": "1.0.0",
      "author": "Julio Terra",
      "maintainer": "Julio Terra \u003cjulioterra@gmail.com\u003e",
      "sentence": "Enables the communication between interactive objects using WebSockets. For Arduino Yún only.",
      "paragraph": "This library was developed to enable you to easily connect the Arduino Yún to Spacebrew. To learn more about Spacebrew visit Spacebrew.cc",
      "website": "https://github.com/julioterra/yunSpacebrew",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/SpacebrewYun-1.0.0.zip",
      "archiveFileName": "SpacebrewYun-1.0.0.zip",
      "size": 5792,
      "checksum": "SHA-256:469b8e59455e8258c4757cf818b94c2d994ff8c68e9e027009bf66a9b649a2ed"
    },
    {
      "name": "SpacebrewYun",
      "version": "1.0.1",
      "author": "Julio Terra",
      "maintainer": "Julio Terra \u003cjulioterra@gmail.com\u003e",
      "sentence": "Enables the communication between interactive objects using WebSockets. For Arduino Yún only.",
      "paragraph": "This library was developed to enable you to easily connect the Arduino Yún to Spacebrew. To learn more about Spacebrew visit Spacebrew.cc",
      "website": "https://github.com/julioterra/yunSpacebrew",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/SpacebrewYun-1.0.1.zip",
      "archiveFileName": "SpacebrewYun-1.0.1.zip",
      "size": 10954,
      "checksum": "SHA-256:91005a9a0d0792c12dcf1916dfc70140bbbdda339ce0bb39dcb22603f9518cbb"
    },
    {
      "name": "Stepper",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of stepper motors. For all Arduino boards.",
      "paragraph": "This library allows you to control unipolar or bipolar stepper motors. To use it you will need a stepper motor, and the appropriate hardware to control it.",
      "website": "http://arduino.cc/en/Reference/Stepper",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Stepper-1.0.0.zip",
      "archiveFileName": "Stepper-1.0.0.zip",
      "size": 7664,
      "checksum": "SHA-256:8ff248176c3519678a23256fd0aa9804757fd548f7c5511a0845492f44494ff6"
    },
    {
      "name": "Stepper",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of stepper motors. For all Arduino boards.",
      "paragraph": "This library allows you to control unipolar or bipolar stepper motors. To use it you will need a stepper motor, and the appropriate hardware to control it.",
      "website": "http://arduino.cc/en/Reference/Stepper",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Stepper-1.0.1.zip",
      "archiveFileName": "Stepper-1.0.1.zip",
      "size": 8408,
      "checksum": "SHA-256:d2eecc46f898018edb7f3f413f0e72b42c45b7d0b19d840aef9392d64a3f3079"
    },
    {
      "name": "Stepper",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of stepper motors. For all Arduino boards.",
      "paragraph": "This library allows you to control unipolar or bipolar stepper motors. To use it you will need a stepper motor, and the appropriate hardware to control it.",
      "website": "http://arduino.cc/en/Reference/Stepper",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Stepper-1.0.2.zip",
      "archiveFileName": "Stepper-1.0.2.zip",
      "size": 8410,
      "checksum": "SHA-256:3582b7492544c74b50b4308c9bc327540b811bc35361ea3724d3d1c82ce243d1"
    },
    {
      "name": "Stepper",
      "version": "1.1.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of stepper motors. For all Arduino boards.",
      "paragraph": "This library allows you to control unipolar or bipolar stepper motors. To use it you will need a stepper motor, and the appropriate hardware to control it.",
      "website": "http://www.arduino.cc/en/Reference/Stepper",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Stepper-1.1.1.zip",
      "archiveFileName": "Stepper-1.1.1.zip",
      "size": 9011,
      "checksum": "SHA-256:4df182c15e3496146d1c1f9f681b2e5fc296b80429fdb93c76449e6496bf1aa8"
    },
    {
      "name": "Stepper",
      "version": "1.1.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of stepper motors. For all Arduino boards.",
      "paragraph": "This library allows you to control unipolar or bipolar stepper motors. To use it you will need a stepper motor, and the appropriate hardware to control it.",
      "website": "http://www.arduino.cc/en/Reference/Stepper",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Stepper-1.1.2.zip",
      "archiveFileName": "Stepper-1.1.2.zip",
      "size": 8968,
      "checksum": "SHA-256:df1e1a8d18e5a23f1a62d75ffdc80df1fa7f76630bb7bf835dc50aa263a67b86"
    },
    {
      "name": "TFT",
      "version": "1.0.0",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows drawing text, images, and shapes on the Arduino TFT graphical display. For all Arduino boards.",
      "paragraph": "This library is compatible with most of the TFT display based on the ST7735 chipset",
      "website": "http://arduino.cc/en/Reference/TFTLibrary",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/TFT-1.0.0.zip",
      "archiveFileName": "TFT-1.0.0.zip",
      "size": 44462,
      "checksum": "SHA-256:bab6e00f4dbe8d821146c46db851951ca0c6c1ec6e6b0375db1d528bf9c92070"
    },
    {
      "name": "TFT",
      "version": "1.0.1",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows drawing text, images, and shapes on the Arduino TFT graphical display. For all Arduino boards.",
      "paragraph": "This library is compatible with most of the TFT display based on the ST7735 chipset",
      "website": "http://arduino.cc/en/Reference/TFTLibrary",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/TFT-1.0.1.zip",
      "archiveFileName": "TFT-1.0.1.zip",
      "size": 46023,
      "checksum": "SHA-256:d6593c8c61c1999f1ce786b240630fc30d81221410fefdefa832da03e9bebad0"
    },
    {
      "name": "TFT",
      "version": "1.0.2",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows drawing text, images, and shapes on the Arduino TFT graphical display. For all Arduino boards.",
      "paragraph": "This library is compatible with most of the TFT display based on the ST7735 chipset",
      "website": "http://arduino.cc/en/Reference/TFTLibrary",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/TFT-1.0.2.zip",
      "archiveFileName": "TFT-1.0.2.zip",
      "size": 46030,
      "checksum": "SHA-256:b61aa8895ac0cd13d155325f01932d93e934a1ddc4a603bdce6fb2d9b909d000"
    },
    {
      "name": "TFT",
      "version": "1.0.3",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows drawing text, images, and shapes on the Arduino TFT graphical display. For all Arduino boards.",
      "paragraph": "This library is compatible with most of the TFT display based on the ST7735 chipset",
      "website": "http://www.arduino.cc/en/Reference/TFTLibrary",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/TFT-1.0.3.zip",
      "archiveFileName": "TFT-1.0.3.zip",
      "size": 46084,
      "checksum": "SHA-256:7d4d858f6421755353cbfb36657e9a568799b43165111dc6808335e4fe13ffaf"
    },
    {
      "name": "TFT",
      "version": "1.0.4",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows drawing text, images, and shapes on the Arduino TFT graphical display. For all Arduino boards.",
      "paragraph": "This library is compatible with most of the TFT display based on the ST7735 chipset",
      "website": "http://www.arduino.cc/en/Reference/TFTLibrary",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/TFT-1.0.4.zip",
      "archiveFileName": "TFT-1.0.4.zip",
      "size": 46224,
      "checksum": "SHA-256:4162c3488380d889643de0fb8f3df40e2e1718db54f3606025ec1a533e7b29e2"
    },
    {
      "name": "TFT",
      "version": "1.0.5",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows drawing text, images, and shapes on the Arduino TFT graphical display. For all Arduino boards.",
      "paragraph": "This library is compatible with most of the TFT display based on the ST7735 chipset",
      "website": "http://www.arduino.cc/en/Reference/TFTLibrary",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/TFT-1.0.5.zip",
      "archiveFileName": "TFT-1.0.5.zip",
      "size": 46254,
      "checksum": "SHA-256:ef093158af7e69161b036cdd5af01aa278f7b6a7e6016e67c5a38fa692b6ff1c"
    },
    {
      "name": "USBHost",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows the communication with USB peripherals like mice, keyboards, and thumbdrives. For Arduino DUE only.",
      "paragraph": "The USBHost library allows an Arduino Due board to appear as a USB host, enabling it to communicate with peripherals like USB mice and keyboards. USBHost does not support devices that are connected through USB hubs. This includes some keyboards that have an internal hub.",
      "website": "http://arduino.cc/en/Reference/USBHost",
      "category": "Device Control",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/USBHost-1.0.0.zip",
      "archiveFileName": "USBHost-1.0.0.zip",
      "size": 54956,
      "checksum": "SHA-256:b5f87123b07ae3089400550774071deee61c35dc640577e3098dbc0f9a9c1250"
    },
    {
      "name": "USBHost",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows the communication with USB peripherals like mice, keyboards, and thumbdrives. For Arduino DUE only.",
      "paragraph": "The USBHost library allows an Arduino Due board to appear as a USB host, enabling it to communicate with peripherals like USB mice and keyboards. USBHost does not support devices that are connected through USB hubs. This includes some keyboards that have an internal hub.",
      "website": "http://arduino.cc/en/Reference/USBHost",
      "category": "Device Control",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/USBHost-1.0.1.zip",
      "archiveFileName": "USBHost-1.0.1.zip",
      "size": 54987,
      "checksum": "SHA-256:24e5a73b5951986393647369efdeafe46f6c868014df1c97c7c20e166581426e"
    },
    {
      "name": "USBHost",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows the communication with USB peripherals like mice, keyboards, and thumbdrives. For Arduino DUE only.",
      "paragraph": "The USBHost library allows an Arduino Due board to appear as a USB host, enabling it to communicate with peripherals like USB mice and keyboards. USBHost does not support devices that are connected through USB hubs. This includes some keyboards that have an internal hub.",
      "website": "http://arduino.cc/en/Reference/USBHost",
      "category": "Device Control",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/USBHost-1.0.2.zip",
      "archiveFileName": "USBHost-1.0.2.zip",
      "size": 55008,
      "checksum": "SHA-256:ecba1e033e0fc3eafdd229755dc9582e11f419b96369ff83c61fa3fbc6a6aa2f"
    },
    {
      "name": "USBHost",
      "version": "1.0.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows the communication with USB peripherals like mice, keyboards, and thumbdrives. For Arduino DUE only.",
      "paragraph": "The USBHost library allows an Arduino Due board to appear as a USB host, enabling it to communicate with peripherals like USB mice and keyboards. USBHost does not support devices that are connected through USB hubs. This includes some keyboards that have an internal hub.",
      "website": "http://www.arduino.cc/en/Reference/USBHost",
      "category": "Device Control",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/USBHost-1.0.3.zip",
      "archiveFileName": "USBHost-1.0.3.zip",
      "size": 55025,
      "checksum": "SHA-256:a5caca9733974535530fefec7f41d0ecbd1d2bb3bebe2abdfbfa8c967f96f61b"
    },
    {
      "name": "USBHost",
      "version": "1.0.4",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows the communication with USB peripherals like mice, keyboards, and thumbdrives. For Arduino DUE only.",
      "paragraph": "The USBHost library allows an Arduino Due board to appear as a USB host, enabling it to communicate with peripherals like USB mice and keyboards. USBHost does not support devices that are connected through USB hubs. This includes some keyboards that have an internal hub.",
      "website": "http://www.arduino.cc/en/Reference/USBHost",
      "category": "Device Control",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/USBHost-1.0.4.zip",
      "archiveFileName": "USBHost-1.0.4.zip",
      "size": 55019,
      "checksum": "SHA-256:c9464bab84e072ab050fd4435bd7124777d2805fdcbea03c3eb61213166b013f"
    },
    {
      "name": "USBHost",
      "version": "1.0.5",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows the communication with USB peripherals like mice, keyboards, and thumbdrives.",
      "paragraph": "The USBHost library allows an Arduino Due board to appear as a USB host, enabling it to communicate with peripherals like USB mice and keyboards. USBHost does not support devices that are connected through USB hubs. This includes some keyboards that have an internal hub.",
      "website": "http://www.arduino.cc/en/Reference/USBHost",
      "category": "Device Control",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/USBHost-1.0.5.zip",
      "archiveFileName": "USBHost-1.0.5.zip",
      "size": 55007,
      "checksum": "SHA-256:7848c364b9096968bd56eedec5765a1d4317864f6e68962a664afa98825de742"
    },
    {
      "name": "WiFi101OTA",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Update sketches to your board over WiFi",
      "paragraph": "Requires an SD card and SAMD board",
      "website": "http://www.arduino.cc/en/Reference/WiFi101OTA",
      "category": "Other",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi101OTA-1.0.0.zip",
      "archiveFileName": "WiFi101OTA-1.0.0.zip",
      "size": 12339,
      "checksum": "SHA-256:f4f9e1731e19a13168b4c1bc7ffcbd91c97984854c8f35dfef63e08f6eba7ad0"
    },
    {
      "name": "WiFi101",
      "version": "0.10.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Network driver for ATMEL WINC1500 module (used on Arduino/Genuino Wifi Shield 101 and MKR1000 boards)",
      "paragraph": "This library implements a network driver for devices based on the ATMEL WINC1500 wifi module",
      "website": "http://www.arduino.cc/en/Reference/WiFi101",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi101-0.10.0.zip",
      "archiveFileName": "WiFi101-0.10.0.zip",
      "size": 209803,
      "checksum": "SHA-256:649f69cb2833d591c8962e99b4b5b85c89d1fc58e6e09e4b2966f9010191e120"
    },
    {
      "name": "WiFi101",
      "version": "0.11.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Network driver for ATMEL WINC1500 module (used on Arduino/Genuino Wifi Shield 101 and MKR1000 boards)",
      "paragraph": "This library implements a network driver for devices based on the ATMEL WINC1500 wifi module",
      "website": "http://www.arduino.cc/en/Reference/WiFi101",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi101-0.11.0.zip",
      "archiveFileName": "WiFi101-0.11.0.zip",
      "size": 210982,
      "checksum": "SHA-256:33345611aafa93a39d8bf477c6cf444063adb5ffd224cb6df881f8b9779d41ce"
    },
    {
      "name": "WiFi101",
      "version": "0.11.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Network driver for ATMEL WINC1500 module (used on Arduino/Genuino Wifi Shield 101 and MKR1000 boards)",
      "paragraph": "This library implements a network driver for devices based on the ATMEL WINC1500 wifi module",
      "website": "http://www.arduino.cc/en/Reference/WiFi101",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi101-0.11.1.zip",
      "archiveFileName": "WiFi101-0.11.1.zip",
      "size": 211039,
      "checksum": "SHA-256:85064c935e5da3012a5287182ba66bd20b7789fe86f131713b2543f9e8339136"
    },
    {
      "name": "WiFi101",
      "version": "0.11.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Network driver for ATMEL WINC1500 module (used on Arduino/Genuino Wifi Shield 101 and MKR1000 boards)",
      "paragraph": "This library implements a network driver for devices based on the ATMEL WINC1500 wifi module",
      "website": "http://www.arduino.cc/en/Reference/WiFi101",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi101-0.11.2.zip",
      "archiveFileName": "WiFi101-0.11.2.zip",
      "size": 211096,
      "checksum": "SHA-256:818630ff26f2c0b5d2b58c0836bb406425af5334a12de6491268d6c6745e02da"
    },
    {
      "name": "WiFi101",
      "version": "0.12.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Network driver for ATMEL WINC1500 module (used on Arduino/Genuino Wifi Shield 101 and MKR1000 boards)",
      "paragraph": "This library implements a network driver for devices based on the ATMEL WINC1500 wifi module",
      "website": "http://www.arduino.cc/en/Reference/WiFi101",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi101-0.12.0.zip",
      "archiveFileName": "WiFi101-0.12.0.zip",
      "size": 213359,
      "checksum": "SHA-256:0bb295922bdc7db192cbfd038369bd3869d8cf6fd15cd4a782775f051feb8ebe"
    },
    {
      "name": "WiFi101",
      "version": "0.12.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Network driver for ATMEL WINC1500 module (used on Arduino/Genuino Wifi Shield 101 and MKR1000 boards)",
      "paragraph": "This library implements a network driver for devices based on the ATMEL WINC1500 wifi module",
      "website": "http://www.arduino.cc/en/Reference/WiFi101",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi101-0.12.1.zip",
      "archiveFileName": "WiFi101-0.12.1.zip",
      "size": 213312,
      "checksum": "SHA-256:628155aaa287f94c1fdf2b7aa51d9fb937af33f9438e581fc88d26aa43bd2ad8"
    },
    {
      "name": "WiFi101",
      "version": "0.13.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Network driver for ATMEL WINC1500 module (used on Arduino/Genuino Wifi Shield 101 and MKR1000 boards)",
      "paragraph": "This library implements a network driver for devices based on the ATMEL WINC1500 wifi module",
      "website": "http://www.arduino.cc/en/Reference/WiFi101",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi101-0.13.0.zip",
      "archiveFileName": "WiFi101-0.13.0.zip",
      "size": 214796,
      "checksum": "SHA-256:c72b78733c0b0c35ecf1ff7a5de47dbf6eb0d568351337cf7eddb2a9215591dd"
    },
    {
      "name": "WiFi101",
      "version": "0.14.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Network driver for ATMEL WINC1500 module (used on Arduino/Genuino Wifi Shield 101 and MKR1000 boards)",
      "paragraph": "This library implements a network driver for devices based on the ATMEL WINC1500 wifi module",
      "website": "http://www.arduino.cc/en/Reference/WiFi101",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi101-0.14.0.zip",
      "archiveFileName": "WiFi101-0.14.0.zip",
      "size": 255139,
      "checksum": "SHA-256:8297c245a9b6900ff41e4c8e7cc1245cc88031176769d5d85e0b5f4cc7f1f94f"
    },
    {
      "name": "WiFi101",
      "version": "0.14.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Network driver for ATMEL WINC1500 module (used on Arduino/Genuino Wifi Shield 101 and MKR1000 boards)",
      "paragraph": "This library implements a network driver for devices based on the ATMEL WINC1500 wifi module",
      "website": "http://www.arduino.cc/en/Reference/WiFi101",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi101-0.14.1.zip",
      "archiveFileName": "WiFi101-0.14.1.zip",
      "size": 255273,
      "checksum": "SHA-256:7e007ff22ca75584f3da94cb5a2c4dc8697ea1ff1001ef7631f9c29437b1bf9e"
    },
    {
      "name": "WiFi101",
      "version": "0.14.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Network driver for ATMEL WINC1500 module (used on Arduino/Genuino Wifi Shield 101 and MKR1000 boards)",
      "paragraph": "This library implements a network driver for devices based on the ATMEL WINC1500 wifi module",
      "website": "http://www.arduino.cc/en/Reference/WiFi101",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi101-0.14.2.zip",
      "archiveFileName": "WiFi101-0.14.2.zip",
      "size": 255287,
      "checksum": "SHA-256:21948e7312320063463ecfe8cec1f589868c2f3e2a8de9bbbab9bfd786852119"
    },
    {
      "name": "WiFi101",
      "version": "0.5.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Network driver for the Arduino Wifi Shield 101",
      "paragraph": "This library implements a network driver for devices based on the ATMEL WINC1500 wifi module",
      "website": "http://www.arduino.cc/en/Reference/WiFi101",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi101-0.5.0.zip",
      "archiveFileName": "WiFi101-0.5.0.zip",
      "size": 174719,
      "checksum": "SHA-256:a95fbaefc3e9610ba867393f3e56e9aecc9ec2fb74d33273e1920ac5d9de442c"
    },
    {
      "name": "WiFi101",
      "version": "0.5.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Network driver for the Arduino Wifi Shield 101",
      "paragraph": "This library implements a network driver for devices based on the ATMEL WINC1500 wifi module",
      "website": "http://www.arduino.cc/en/Reference/WiFi101",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi101-0.5.1.zip",
      "archiveFileName": "WiFi101-0.5.1.zip",
      "size": 174204,
      "checksum": "SHA-256:9ab2137a341b8249e3dc87781320f9673e978aa2a86bea8eda3976615b9e5635"
    },
    {
      "name": "WiFi101",
      "version": "0.6.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Network driver for the Arduino Wifi Shield 101",
      "paragraph": "This library implements a network driver for devices based on the ATMEL WINC1500 wifi module",
      "website": "http://www.arduino.cc/en/Reference/WiFi101",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi101-0.6.0.zip",
      "archiveFileName": "WiFi101-0.6.0.zip",
      "size": 176411,
      "checksum": "SHA-256:b701c427c89c48431d853980015b5c4281fefe199b21e84be99df0b74e31331c"
    },
    {
      "name": "WiFi101",
      "version": "0.7.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Network driver for the Arduino/Genuino Wifi Shield 101 and MKR1000 boards",
      "paragraph": "This library implements a network driver for devices based on the ATMEL WINC1500 wifi module",
      "website": "http://www.arduino.cc/en/Reference/WiFi101",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi101-0.7.0.zip",
      "archiveFileName": "WiFi101-0.7.0.zip",
      "size": 196550,
      "checksum": "SHA-256:b3fd12d292ece6d0a63313ace134af658064f75a6f43edd74457ccf0ade6c2e7"
    },
    {
      "name": "WiFi101",
      "version": "0.8.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Network driver for ATMEL WINC1500 module (used on Arduino/Genuino Wifi Shield 101 and MKR1000 boards)",
      "paragraph": "This library implements a network driver for devices based on the ATMEL WINC1500 wifi module",
      "website": "http://www.arduino.cc/en/Reference/WiFi101",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi101-0.8.0.zip",
      "archiveFileName": "WiFi101-0.8.0.zip",
      "size": 198766,
      "checksum": "SHA-256:7c76e0d986496f627c26167d170b080d9a70e4ecbef7b6a107560f3983403bbf"
    },
    {
      "name": "WiFi101",
      "version": "0.9.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Network driver for ATMEL WINC1500 module (used on Arduino/Genuino Wifi Shield 101 and MKR1000 boards)",
      "paragraph": "This library implements a network driver for devices based on the ATMEL WINC1500 wifi module",
      "website": "http://www.arduino.cc/en/Reference/WiFi101",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi101-0.9.0.zip",
      "archiveFileName": "WiFi101-0.9.0.zip",
      "size": 205435,
      "checksum": "SHA-256:ca1b6cdca338d55385447afc090d7e0aa608cac55f9bd38afe7b8731ad424b06"
    },
    {
      "name": "WiFi101",
      "version": "0.9.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Network driver for ATMEL WINC1500 module (used on Arduino/Genuino Wifi Shield 101 and MKR1000 boards)",
      "paragraph": "This library implements a network driver for devices based on the ATMEL WINC1500 wifi module",
      "website": "http://www.arduino.cc/en/Reference/WiFi101",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi101-0.9.1.zip",
      "archiveFileName": "WiFi101-0.9.1.zip",
      "size": 205688,
      "checksum": "SHA-256:d1e88dffd438c67af489beb3cfd261e6dfce1da0f0d846a85f30a3fcf8012e8b"
    },
    {
      "name": "Arduino SigFox for MKRFox1200",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino LLC",
      "sentence": "Helper library for MKRFox1200 board and ATAB8520E Sigfox module",
      "paragraph": "This library allows some high level operations on Sigfox module, to ease integration with existing projects",
      "website": "http://arduino.cc/libraries/Sigfox",
      "category": "Device Control",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Arduino_SigFox_for_MKRFox1200-1.0.0.zip",
      "archiveFileName": "Arduino_SigFox_for_MKRFox1200-1.0.0.zip",
      "size": 14226,
      "checksum": "SHA-256:ae823a7cd695f42e2b7219def44f2a0bfbdd701e2b89c4780748408400f17c67"
    },
    {
      "name": "Arduino Low Power",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino LLC",
      "sentence": "Power save primitives features for SAMD 32bit boards",
      "paragraph": "With this library you can manage the low power states of newer Arduino boards",
      "website": "http://arduino.cc/libraries/ArduinoLowPower",
      "category": "Device Control",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Arduino_Low_Power-1.0.0.zip",
      "archiveFileName": "Arduino_Low_Power-1.0.0.zip",
      "size": 15480,
      "checksum": "SHA-256:f29b7bb53f4c7a8acdebc54a9d4f649461b06846a0484fb147ec4af868b64b6e"
    },
    {
      "name": "Arduino Low Power",
      "version": "1.1.0",
      "author": "Arduino",
      "maintainer": "Arduino LLC",
      "sentence": "Power save primitives features for SAMD and nRF52 32bit boards",
      "paragraph": "With this library you can manage the low power states of newer Arduino boards",
      "website": "http://arduino.cc/libraries/ArduinoLowPower",
      "category": "Device Control",
      "architectures": [
        "samd",
        "nrf52"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Arduino_Low_Power-1.1.0.zip",
      "archiveFileName": "Arduino_Low_Power-1.1.0.zip",
      "size": 19459,
      "checksum": "SHA-256:b9312770e645030590ea12739b118a8f6df6e5771735ecdbdc3a7eb2555d4604"
    },
    {
      "name": "Mouse",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows an Arduino board with USB capabilites to act as a Mouse. For Leonardo/Micro only",
      "paragraph": "This library plugs on the HID library. Can be used with or without other HID-based libraries (Keyboard, Gamepad etc)",
      "website": "http://www.arduino.cc/en/Reference/Mouse",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Mouse-1.0.0.zip",
      "archiveFileName": "Mouse-1.0.0.zip",
      "size": 3834,
      "checksum": "SHA-256:c5729952049344a390373e287bd1a84c331f22c8d34dd20f2331916b0b8dacda"
    },
    {
      "name": "Mouse",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows an Arduino/Genuino board with USB capabilites to act as a Mouse.",
      "paragraph": "This library plugs on the HID library. Can be used with or without other HID-based libraries (Keyboard, Gamepad etc)",
      "website": "http://www.arduino.cc/en/Reference/Mouse",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Mouse-1.0.1.zip",
      "archiveFileName": "Mouse-1.0.1.zip",
      "size": 3824,
      "checksum": "SHA-256:3e0b267fe53b359afa4d932b4ec2a00ae3c6c16069323cbbab4ee4c3bbd478cc"
    },
    {
      "name": "Keyboard",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows an Arduino board with USB capabilites to act as a Keyboard. For Leonardo/Micro only",
      "paragraph": "This library plugs on the HID library. It can be used with or without other HID-based libraries (Mouse, Gamepad etc)",
      "website": "http://www.arduino.cc/en/Reference/Keyboard",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Keyboard-1.0.0.zip",
      "archiveFileName": "Keyboard-1.0.0.zip",
      "size": 5532,
      "checksum": "SHA-256:d0fef5e0452c3f5b2e0a45d2f8d606457b135ca0cb962b66f56622e6be23e516"
    },
    {
      "name": "Keyboard",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows an Arduino/Genuino board with USB capabilites to act as a Keyboard.",
      "paragraph": "This library plugs on the HID library. It can be used with or without other HID-based libraries (Mouse, Gamepad etc)",
      "website": "http://www.arduino.cc/en/Reference/Keyboard",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Keyboard-1.0.1.zip",
      "archiveFileName": "Keyboard-1.0.1.zip",
      "size": 5523,
      "checksum": "SHA-256:89b1cd0873fcb95a028b193e37889dce7432e1532558240073b0387cbf2f9382"
    },
    {
      "name": "WiFi",
      "version": "1.2.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino WiFi shield. For all Arduino boards.",
      "paragraph": "With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks (WEP, WPA). The IP address can be assigned statically or through a DHCP. The library can also manage DNS.",
      "website": "http://arduino.cc/en/Reference/WiFi",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi-1.2.0.zip",
      "archiveFileName": "WiFi-1.2.0.zip",
      "size": 5305086,
      "checksum": "SHA-256:c8d195f9fa7e311891e4e08f23ce2d7f9f84dbb72ea569195df83c26e7cc8945"
    },
    {
      "name": "WiFi",
      "version": "1.2.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino WiFi shield. For all Arduino boards.",
      "paragraph": "With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks (WEP, WPA). The IP address can be assigned statically or through a DHCP. The library can also manage DNS.",
      "website": "http://arduino.cc/en/Reference/WiFi",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi-1.2.1.zip",
      "archiveFileName": "WiFi-1.2.1.zip",
      "size": 5305077,
      "checksum": "SHA-256:146e996e8dc3b651cf40fe9fab1766cf49f7dddbf0531ff1660da66eccdbcdd8"
    },
    {
      "name": "WiFi",
      "version": "1.2.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino WiFi shield. For all Arduino boards.",
      "paragraph": "With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks (WEP, WPA). The IP address can be assigned statically or through a DHCP. The library can also manage DNS.",
      "website": "http://arduino.cc/en/Reference/WiFi",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi-1.2.2.zip",
      "archiveFileName": "WiFi-1.2.2.zip",
      "size": 5305188,
      "checksum": "SHA-256:7c8688a8244f6ad76984a1c2c0284686256cfa2bd6ecd26c5f34c34922da3ef9"
    },
    {
      "name": "WiFi",
      "version": "1.2.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino WiFi shield. For all Arduino boards.",
      "paragraph": "With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks (WEP, WPA). The IP address can be assigned statically or through a DHCP. The library can also manage DNS.",
      "website": "http://arduino.cc/en/Reference/WiFi",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi-1.2.3.zip",
      "archiveFileName": "WiFi-1.2.3.zip",
      "size": 5305216,
      "checksum": "SHA-256:e40e44f79bbe316101b3c77038d4136a36ef2681e687dab53218bd2b1f6354e8"
    },
    {
      "name": "WiFi",
      "version": "1.2.4",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino WiFi shield. For all Arduino boards.",
      "paragraph": "With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks (WEP, WPA). The IP address can be assigned statically or through a DHCP. The library can also manage DNS.",
      "website": "http://www.arduino.cc/en/Reference/WiFi",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi-1.2.4.zip",
      "archiveFileName": "WiFi-1.2.4.zip",
      "size": 5305222,
      "checksum": "SHA-256:015e2f48dd07bd84d9db1cdb05b110afd65f696de8647f37dad71448e92a684e"
    },
    {
      "name": "WiFi",
      "version": "1.2.5",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino WiFi shield. For all Arduino boards.",
      "paragraph": "With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks (WEP, WPA). The IP address can be assigned statically or through a DHCP. The library can also manage DNS.",
      "website": "http://www.arduino.cc/en/Reference/WiFi",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi-1.2.5.zip",
      "archiveFileName": "WiFi-1.2.5.zip",
      "size": 5305275,
      "checksum": "SHA-256:64b41025301d8465a82ac93e98aa9a328b9cb5c90d91a39f6554df9e4e4e95c4"
    },
    {
      "name": "WiFi",
      "version": "1.2.6",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino WiFi shield. For all Arduino boards.",
      "paragraph": "With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks (WEP, WPA). The IP address can be assigned statically or through a DHCP. The library can also manage DNS.",
      "website": "http://www.arduino.cc/en/Reference/WiFi",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/WiFi-1.2.6.zip",
      "archiveFileName": "WiFi-1.2.6.zip",
      "size": 5305305,
      "checksum": "SHA-256:40d5d5e1451b67e387eb2d19250a3ffaa9f4c74a5a246122c9f62519d76f8775"
    },
    {
      "name": "AudioFrequencyMeter",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Get the fundamental pitch of an audio signal",
      "paragraph": "Allows the Arduino Zero and MKR1000 to sample a generic input audio signal and get the fundamental pitch",
      "website": "http://www.arduino.cc/en/Reference/AudioFrequencyMeter",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/AudioFrequencyMeter-1.0.1.zip",
      "archiveFileName": "AudioFrequencyMeter-1.0.1.zip",
      "size": 7296,
      "checksum": "SHA-256:82560ab1e2ecb561b5812dfa1deeefac1bbc96f8b5860981c5cfb8eaf52bd4c3"
    },
    {
      "name": "AudioFrequencyMeter",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Get the fundamental pitch of an audio signal",
      "paragraph": "Allows the Arduino Zero and MKR1000 to sample a generic input audio signal and get the fundamental pitch",
      "website": "http://www.arduino.cc/en/Reference/AudioFrequencyMeter",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/AudioFrequencyMeter-1.0.2.zip",
      "archiveFileName": "AudioFrequencyMeter-1.0.2.zip",
      "size": 7216,
      "checksum": "SHA-256:0af3f39d6fb7fa11c0537cc810a79b4fa55cfac64b3248cf5a9fea99506126f6"
    },
    {
      "name": "AudioFrequencyMeter",
      "version": "1.0.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Get the fundamental pitch of an audio signal",
      "paragraph": "Allows the Arduino Zero, MKRZero and MKR1000 to sample a generic input audio signal and get the fundamental pitch",
      "website": "http://www.arduino.cc/en/Reference/AudioFrequencyMeter",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/AudioFrequencyMeter-1.0.3.zip",
      "archiveFileName": "AudioFrequencyMeter-1.0.3.zip",
      "size": 7221,
      "checksum": "SHA-256:c92e49881c6c8849d872cc199b72b4293285d174d336f55abd0c7dfb0faf836a"
    },
    {
      "name": "Madgwick",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Helpers for MadgwickAHRS algorithm",
      "paragraph": "This library wraps the official implementation of MadgwickAHRS algorithm to get orientation of an object based on accelerometer and gyroscope readings",
      "website": "http://arduino.cc/en/Reference/XXXXXX",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Madgwick-1.0.0.zip",
      "archiveFileName": "Madgwick-1.0.0.zip",
      "size": 4494,
      "checksum": "SHA-256:80843f9258fd64adc2d5d0d7fb1f6c9fc5e4898bad52de64e8c97f403a0e3f5b"
    },
    {
      "name": "Madgwick",
      "version": "1.1.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Helpers for MadgwickAHRS algorithm",
      "paragraph": "This library wraps the official implementation of MadgwickAHRS algorithm to get orientation of an object based on accelerometer and gyroscope readings",
      "website": "https://github.com/arduino-libraries/MadgwickAHRS",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Madgwick-1.1.0.zip",
      "archiveFileName": "Madgwick-1.1.0.zip",
      "size": 4704,
      "checksum": "SHA-256:5a493ed6a520b72b3b081514fbf082c95f6604cf18de3ca6df4281aaf6a1871e"
    },
    {
      "name": "Madgwick",
      "version": "1.2.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Helpers for MadgwickAHRS algorithm",
      "paragraph": "This library wraps the official implementation of MadgwickAHRS algorithm to get orientation of an object based on accelerometer and gyroscope readings",
      "website": "https://github.com/arduino-libraries/MadgwickAHRS",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Madgwick-1.2.0.zip",
      "archiveFileName": "Madgwick-1.2.0.zip",
      "size": 7236,
      "checksum": "SHA-256:c5422540f3be5123f153743f7a03911fde2c921976aff293a1de569414c367a0"
    },
    {
      "name": "MIDIUSB",
      "version": "1.0.0",
      "author": "Gary Grewal, Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows an Arduino board with USB capabilites to act as a MIDI instrument over USB. For Leonardo/Micro only",
      "website": "http://www.arduino.cc/en/Reference/MIDIUSB",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/MIDIUSB-1.0.0.zip",
      "archiveFileName": "MIDIUSB-1.0.0.zip",
      "size": 10623,
      "checksum": "SHA-256:984c81d552bca6375789784bcc955d431a20543a33b3b3ae72acbf71ad52d87e"
    },
    {
      "name": "MIDIUSB",
      "version": "1.0.1",
      "author": "Gary Grewal, Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows an Arduino board with USB capabilites to act as a MIDI instrument over USB.",
      "website": "http://www.arduino.cc/en/Reference/MIDIUSB",
      "category": "Device Control",
      "architectures": [
        "avr",
        "sam",
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/MIDIUSB-1.0.1.zip",
      "archiveFileName": "MIDIUSB-1.0.1.zip",
      "size": 10648,
      "checksum": "SHA-256:360a3911570bdae8e3cacd9c0e948c3e96918e2d0c8aa4d222d610da4bdba0d9"
    },
    {
      "name": "MIDIUSB",
      "version": "1.0.2",
      "author": "Gary Grewal, Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows an Arduino board with USB capabilites to act as a MIDI instrument over USB.",
      "website": "http://www.arduino.cc/en/Reference/MIDIUSB",
      "category": "Device Control",
      "architectures": [
        "avr",
        "sam",
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/MIDIUSB-1.0.2.zip",
      "archiveFileName": "MIDIUSB-1.0.2.zip",
      "size": 10655,
      "checksum": "SHA-256:aae2dad3845b927652b885fb7f56743d0c8a20dd7b0641eef34090addc0d028f"
    },
    {
      "name": "NTPClient",
      "version": "1.0.0",
      "author": "Fabrice Weinberg",
      "maintainer": "Fabrice Weinberg \u003cfabrice@weinberg.me\u003e",
      "sentence": "An NTPClient to connect to a time server",
      "paragraph": "Get time from a NTP server and keep it in sync.",
      "website": "https://github.com/FWeinb/NTPClient",
      "category": "Timing",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/NTPClient-1.0.0.zip",
      "archiveFileName": "NTPClient-1.0.0.zip",
      "size": 5348,
      "checksum": "SHA-256:8787d515f4df871b9b098c7469a38db2f7548b6dfce4092167b49be2787445b3"
    },
    {
      "name": "NTPClient",
      "version": "2.0.0",
      "author": "Fabrice Weinberg",
      "maintainer": "Fabrice Weinberg \u003cfabrice@weinberg.me\u003e",
      "sentence": "An NTPClient to connect to a time server",
      "paragraph": "Get time from a NTP server and keep it in sync.",
      "website": "https://github.com/FWeinb/NTPClient",
      "category": "Timing",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/NTPClient-2.0.0.zip",
      "archiveFileName": "NTPClient-2.0.0.zip",
      "size": 5132,
      "checksum": "SHA-256:d49334b082f22f6d02bc07e6a0796da3a36766b72d83124890785de6eba1da30"
    },
    {
      "name": "NTPClient",
      "version": "3.0.0",
      "author": "Fabrice Weinberg",
      "maintainer": "Fabrice Weinberg \u003cfabrice@weinberg.me\u003e",
      "sentence": "An NTPClient to connect to a time server",
      "paragraph": "Get time from a NTP server and keep it in sync.",
      "website": "https://github.com/arduino-libraries/NTPClient",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/NTPClient-3.0.0.zip",
      "archiveFileName": "NTPClient-3.0.0.zip",
      "size": 6470,
      "checksum": "SHA-256:64053ae9cfbb011c5f2d5635ddfe3cf3d4c5ad6c45b0c3b2c8410f4bca79a345"
    },
    {
      "name": "NTPClient",
      "version": "3.1.0",
      "author": "Fabrice Weinberg",
      "maintainer": "Fabrice Weinberg \u003cfabrice@weinberg.me\u003e",
      "sentence": "An NTPClient to connect to a time server",
      "paragraph": "Get time from a NTP server and keep it in sync.",
      "website": "https://github.com/arduino-libraries/NTPClient",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/NTPClient-3.1.0.zip",
      "archiveFileName": "NTPClient-3.1.0.zip",
      "size": 6812,
      "checksum": "SHA-256:a7628591cc7eabc62f6692d8d446aa0460c10a059b3db58c0b0c8d072f56ab8a"
    },
    {
      "name": "ArduinoCloud",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Easly connect your Arduino/Genuino board to the Arduino Cloud",
      "paragraph": "Easly connect your Arduino/Genuino board to the Arduino Cloud",
      "website": "https://github.com/arduino-libraries/ArduinoCloud",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/ArduinoCloud-1.0.0.zip",
      "archiveFileName": "ArduinoCloud-1.0.0.zip",
      "size": 45097,
      "checksum": "SHA-256:679a73db1aa4825652882ff71d7a3fb4992f4f79b41cb4a0a6c5c912adbfa848"
    },
    {
      "name": "ArduinoHttpClient",
      "version": "0.1.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "[EXPERIMENTAL] Easily interact with web servers from Arduino, using HTTP and WebSocket's.",
      "paragraph": "This library can be used for HTTP (GET, POST, PUT, DELETE) requests to a web server. It also supports exchanging messages with WebSocket servers. Based on Adrian McEwen's HttpClient library.",
      "website": "https://github.com/arduino-libraries/ArduinoHttpClient",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/ArduinoHttpClient-0.1.0.zip",
      "archiveFileName": "ArduinoHttpClient-0.1.0.zip",
      "size": 30337,
      "checksum": "SHA-256:dd2aaeee52c35935215c30c75879b945590f0d6879088c232512e7b1790afa8b"
    },
    {
      "name": "ArduinoHttpClient",
      "version": "0.1.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "[EXPERIMENTAL] Easily interact with web servers from Arduino, using HTTP and WebSocket's.",
      "paragraph": "This library can be used for HTTP (GET, POST, PUT, DELETE) requests to a web server. It also supports exchanging messages with WebSocket servers. Based on Adrian McEwen's HttpClient library.",
      "website": "https://github.com/arduino-libraries/ArduinoHttpClient",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/ArduinoHttpClient-0.1.1.zip",
      "archiveFileName": "ArduinoHttpClient-0.1.1.zip",
      "size": 30986,
      "checksum": "SHA-256:ac6aaa713e51ce2f3bc366f8922363c08878e7b236d73ca310230a4a54aa42f8"
    },
    {
      "name": "ArduinoHttpClient",
      "version": "0.2.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "[EXPERIMENTAL] Easily interact with web servers from Arduino, using HTTP and WebSocket's.",
      "paragraph": "This library can be used for HTTP (GET, POST, PUT, DELETE) requests to a web server. It also supports exchanging messages with WebSocket servers. Based on Adrian McEwen's HttpClient library.",
      "website": "https://github.com/arduino-libraries/ArduinoHttpClient",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/ArduinoHttpClient-0.2.0.zip",
      "archiveFileName": "ArduinoHttpClient-0.2.0.zip",
      "size": 34032,
      "checksum": "SHA-256:aff0b84147f92f8d7188d6cfe2754572c0072852318b4c22a8b0ead20effd6c8"
    },
    {
      "name": "ArduinoHttpClient",
      "version": "0.3.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "[EXPERIMENTAL] Easily interact with web servers from Arduino, using HTTP and WebSocket's.",
      "paragraph": "This library can be used for HTTP (GET, POST, PUT, DELETE) requests to a web server. It also supports exchanging messages with WebSocket servers. Based on Adrian McEwen's HttpClient library.",
      "website": "https://github.com/arduino-libraries/ArduinoHttpClient",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/ArduinoHttpClient-0.3.0.zip",
      "archiveFileName": "ArduinoHttpClient-0.3.0.zip",
      "size": 36682,
      "checksum": "SHA-256:eb1cbc1296e11dd06e577d3cd3aaca85d458ed49dbf064eef95e14ab3b73fb4d"
    },
    {
      "name": "ArduinoSound",
      "version": "0.1.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "[EXPERIMENTAL] A simple way to play and analyze audio data using Arduino.",
      "paragraph": "Currently only supports SAMD21 boards and I2S audio devices.",
      "website": "http://arduino.cc/en/Reference/ArduinoSound",
      "category": "Other",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/ArduinoSound-0.1.0.zip",
      "archiveFileName": "ArduinoSound-0.1.0.zip",
      "size": 25176,
      "checksum": "SHA-256:fd1cca6f1183769d1c4bd21fc949d3a682d9415ae84a795c1984960d288c7a07"
    },
    {
      "name": "Braccio",
      "version": "2.0.1",
      "author": "Andrea Martino",
      "maintainer": "Andrea \u003ca.martino@arduino.org\u003e",
      "sentence": "For Arduino braccio only.",
      "paragraph": "Arduino Braccio",
      "website": "www.arduino.org",
      "category": "Device Control",
      "architectures": [
        "avr",
        "samd",
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Braccio-2.0.1.zip",
      "archiveFileName": "Braccio-2.0.1.zip",
      "size": 12644,
      "checksum": "SHA-256:db257becb5bc0a372e56b8660aaa778ce20f1ecc3417920257b44ff3e660b127"
    },
    {
      "name": "Braccio",
      "version": "2.0.2",
      "author": "Andrea Martino",
      "maintainer": "Andrea \u003ca.martino@arduino.org\u003e",
      "sentence": "For Arduino braccio only.",
      "paragraph": "Arduino Braccio",
      "website": "http://www.arduino.org",
      "category": "Device Control",
      "architectures": [
        "avr",
        "samd",
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Braccio-2.0.2.zip",
      "archiveFileName": "Braccio-2.0.2.zip",
      "size": 12651,
      "checksum": "SHA-256:6a7a87c957242f69cdcfc3d182417bf9fb3592331f5383aeafca65f279d80e2f"
    },
    {
      "name": "Braccio",
      "version": "2.0.3",
      "author": "Andrea Martino, Arduino",
      "maintainer": "Arduino \u003cswdev@arduino.org\u003e",
      "sentence": "Allows to move each Braccio parts using simple calls.",
      "paragraph": "Works only for TinkerKit Braccio.",
      "website": "http://www.arduino.org/learning/reference/Braccio",
      "category": "Device Control",
      "architectures": [
        "avr",
        "samd",
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Braccio-2.0.3.zip",
      "archiveFileName": "Braccio-2.0.3.zip",
      "size": 12706,
      "checksum": "SHA-256:2e2f48a5985402aec2fdc2238a449d33a806b0496508534aeb0fa0a6b6e168a7"
    },
    {
      "name": "Ciao",
      "version": "0.1.0",
      "author": "Arduino \u003cswdev@arduino.org\u003e",
      "maintainer": "Arduino \u003cswdev@arduino.org\u003e",
      "sentence": "Arduino Ciao Library",
      "paragraph": "Enables the communication between the Linux processor and the AVR. For Arduino Yún, Yún Mini, Linino One, Arduino Tian and Arduino Industrial.",
      "website": "http://www.arduino.org/learning/reference/ciao-library",
      "category": "Communication",
      "architectures": [
        "avr",
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Ciao-0.1.0.zip",
      "archiveFileName": "Ciao-0.1.0.zip",
      "size": 16133,
      "checksum": "SHA-256:8b8fe772b528e2f9b9f9eed6286fa515ffa4f2d0b03348ed96cde6fda78c3d2a"
    },
    {
      "name": "Ciao",
      "version": "0.1.1",
      "author": "Arduino \u003cswdev@arduino.org\u003e",
      "maintainer": "Arduino \u003cswdev@arduino.org\u003e",
      "sentence": "Enables communication between microcontroller and MIPS cpu. Natively support network communications, terminal (linux) and file access.",
      "paragraph": "Create your own Ciao Connector for your needs and easily use it. Works only on Linino based boards like Yún, Yún Mini, Tian and Industrial 101.",
      "website": "http://www.arduino.org/learning/reference/ciao-library",
      "category": "Communication",
      "architectures": [
        "avr",
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Ciao-0.1.1.zip",
      "archiveFileName": "Ciao-0.1.1.zip",
      "size": 16213,
      "checksum": "SHA-256:18ab93e7df571590db0803096f48b1c1ba170e13611bce84b5a0c2326d18fbd7"
    },
    {
      "name": "Arduino Uno WiFi Dev Ed Library",
      "version": "0.0.2",
      "author": "Arduino",
      "maintainer": "Arduino\u003cswdev@arduino.org\u003e",
      "sentence": "This library allows users to use network features like rest and mqtt. Includes some tools for the ESP8266.",
      "paragraph": "Use this library only with Arduino Uno WiFi Developer Edition.",
      "website": "http://www.arduino.org",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Arduino_Uno_WiFi_Dev_Ed_Library-0.0.2.zip",
      "archiveFileName": "Arduino_Uno_WiFi_Dev_Ed_Library-0.0.2.zip",
      "size": 33405,
      "checksum": "SHA-256:7f3d5db477228d43c55a680692882b94b4cc0f01a1cdbc0cc95f06feb4f84592"
    },
    {
      "name": "Arduino Uno WiFi Dev Ed Library",
      "version": "0.0.3",
      "author": "Arduino",
      "maintainer": "Arduino\u003cswdev@arduino.org\u003e",
      "sentence": "This library allows users to use network features like rest and mqtt. Includes some tools for the ESP8266.",
      "paragraph": "Use this library only with Arduino Uno WiFi Developer Edition.",
      "website": "http://www.arduino.org",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Arduino_Uno_WiFi_Dev_Ed_Library-0.0.3.zip",
      "archiveFileName": "Arduino_Uno_WiFi_Dev_Ed_Library-0.0.3.zip",
      "size": 33467,
      "checksum": "SHA-256:28345f03037689b4b05367927996d771a3f6f03270009d6dac92cee19c85e73e"
    },
    {
      "name": "FlashStorage",
      "version": "0.5.0",
      "author": "Cristian Maglie",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "The FlashStorage library aims to provide a convenient way to store and retrieve user's data using the non-volatile flash memory of microcontrollers.",
      "paragraph": "Useful if the EEPROM is not available or too small. Currently, only ATSAMD21 cpu is supported (and conequently every board based on this cpu like the Arduino Zero or Aduino MKR1000).",
      "website": "https://github.com/cmaglie/FlashStorage",
      "category": "Data Storage",
      "architectures": [
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/cmaglie/FlashStorage-0.5.0.zip",
      "archiveFileName": "FlashStorage-0.5.0.zip",
      "size": 6665,
      "checksum": "SHA-256:a30ac8386a20fa7a580f9a6229b007fe9819d986297d7097a0bfee807243446a"
    },
    {
      "name": "FlashStorage",
      "version": "0.6.0",
      "author": "Various",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "The FlashStorage library aims to provide a convenient way to store and retrieve user's data using the non-volatile flash memory of microcontrollers.",
      "paragraph": "Useful if the EEPROM is not available or too small. Currently, only ATSAMD21 cpu is supported (and consequently every board based on this cpu like the Arduino Zero or Aduino MKR1000).",
      "website": "https://github.com/cmaglie/FlashStorage",
      "category": "Data Storage",
      "architectures": [
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/cmaglie/FlashStorage-0.6.0.zip",
      "archiveFileName": "FlashStorage-0.6.0.zip",
      "size": 10020,
      "checksum": "SHA-256:39777d73fb8256b5ec8ac798fc8e09ce609828e01f1e34a92242ff986f61bbb4"
    },
    {
      "name": "LoRa Node",
      "version": "1.0.0",
      "author": "Chiara Ruggeri \u003cchiara@arduino.org\u003e",
      "maintainer": "Arduino \u003cswdev@arduino.org\u003e",
      "sentence": "LoRa Node library for Arduino LoRa Node Shield",
      "paragraph": "This library allows you to send and receive LoRaWan packets",
      "website": "http://www.arduino.org/learning/reference/LoRaNode",
      "category": "Communication",
      "architectures": [
        "nrf52"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-org/LoRa_Node-1.0.0.zip",
      "archiveFileName": "LoRa_Node-1.0.0.zip",
      "size": 138166,
      "checksum": "SHA-256:fac96018d1c1ba88ebae75b729217c0aef9c8913f9eae0cadd416178f95f959b"
    },
    {
      "name": "WiFi Link",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cswdev@arduino.org\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino WiFi Boards.",
      "paragraph": "With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks (WEP, WPA). The IP address can be assigned statically or through a DHCP. The library can also manage DNS.",
      "website": "http://www.arduino.org/learning/reference/wifilink",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-org/WiFi_Link-1.0.0.zip",
      "archiveFileName": "WiFi_Link-1.0.0.zip",
      "size": 66238,
      "checksum": "SHA-256:a467449d9574bcb2549126a10841224c97589694af69579926cf99d402ee1d2f"
    },
    {
      "name": "WiFi Link",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cswdev@arduino.org\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino WiFi Boards.",
      "paragraph": "With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks (WEP, WPA). The IP address can be assigned statically or through a DHCP. The library can also manage DNS.",
      "website": "http://www.arduino.org/learning/reference/wifilink",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-org/WiFi_Link-1.0.1.zip",
      "archiveFileName": "WiFi_Link-1.0.1.zip",
      "size": 67797,
      "checksum": "SHA-256:da9adaff4d07a46eb23f1831bd04619a20befdcaf26f7383a76b1dc015d28cd8"
    },
    {
      "name": "EducationShield",
      "version": "0.9.2",
      "author": "David Cuartielles",
      "maintainer": "David Cuartielles",
      "sentence": "Library used for the completion of all the projects related to CTC",
      "paragraph": "Is intended to be used with the Education Shield provided in the CTC kit. It presents the neccesary functions to interact with 3 and 4 pin connectors used in many sensors and actuators. Furthermore, it includes the functionality of SD-Card Reader and audio jack.",
      "website": "http://kreatech.verkstad.cc/en/course-literature/education-shield/",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduinoverkstad/EducationShield-0.9.2.zip",
      "archiveFileName": "EducationShield-0.9.2.zip",
      "size": 104017,
      "checksum": "SHA-256:7e2a67666d0db1ab39f3b5fc26b282a1be23700ad9bdcbfb343c592531b0da30"
    },
    {
      "name": "EducationShield",
      "version": "1.0.0",
      "author": "David Cuartielles",
      "maintainer": "David Cuartielles",
      "sentence": "Library used for the completion of all the projects related to CTC",
      "paragraph": "Is intended to be used with the Education Shield provided in the CTC kit. It presents the neccesary functions to interact with 3 and 4 pin connectors used in many sensors and actuators. Furthermore, it includes the functionality of SD-Card Reader and audio jack.",
      "website": "http://kreatech.verkstad.cc/en/course-literature/education-shield/",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduinoverkstad/EducationShield-1.0.0.zip",
      "archiveFileName": "EducationShield-1.0.0.zip",
      "size": 103573,
      "checksum": "SHA-256:bc27a3772a928264264228d27de54b69103d8546e863cc7e6b9b091100329915"
    },
    {
      "name": "EducationShield",
      "version": "1.0.1",
      "author": "David Cuartielles",
      "maintainer": "David Cuartielles",
      "sentence": "Library used for the completion of all the projects related to CTC",
      "paragraph": "Is intended to be used with the Education Shield provided in the CTC kit. It presents the neccesary functions to interact with 3 and 4 pin connectors used in many sensors and actuators. Furthermore, it includes the functionality of SD-Card Reader and audio jack.",
      "website": "http://kreatech.verkstad.cc/en/course-literature/education-shield/",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduinoverkstad/EducationShield-1.0.1.zip",
      "archiveFileName": "EducationShield-1.0.1.zip",
      "size": 104017,
      "checksum": "SHA-256:c8b176290dbbb158c41b086b3d4e4979bf912d71e30da879f67446e079f26c17"
    },
    {
      "name": "EducationShield",
      "version": "1.1.1",
      "author": "Arduino Verkstad",
      "maintainer": "Xun Yang",
      "sentence": "Library used for the completion of all the projects related to CTC",
      "paragraph": "Is intended to be used with the Education Shield provided in the CTC kit. It presents the neccesary functions to interact with 3 and 4 pin connectors used in many sensors and actuators.",
      "website": "http://kreatech.verkstad.cc/en/course-literature/education-shield/",
      "category": "Other",
      "architectures": [
        "avr",
        "arc32"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduinoverkstad/EducationShield-1.1.1.zip",
      "archiveFileName": "EducationShield-1.1.1.zip",
      "size": 111174,
      "checksum": "SHA-256:5cb2ff01acea02c0e8a4784e3eceaa40a66f7cbaf5cc23d4bea57d0bbc45eba9"
    },
    {
      "name": "EducationShield",
      "version": "1.2.0",
      "author": "Arduino Verkstad",
      "maintainer": "Xun Yang",
      "sentence": "Library used for the completion of all the projects related to CTC",
      "paragraph": "Is intended to be used with the Education Shield provided in the CTC kit. It presents the neccesary functions to interact with 3 and 4 pin connectors used in many sensors and actuators.",
      "website": "https://create.arduino.cc/ctc/101/",
      "category": "Other",
      "architectures": [
        "avr",
        "arc32"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduinoverkstad/EducationShield-1.2.0.zip",
      "archiveFileName": "EducationShield-1.2.0.zip",
      "size": 266304,
      "checksum": "SHA-256:26b47f89f366e27cb8e580f0a7950f0b49cf24e0c07b8f0b74021b3f057f52e8"
    },
    {
      "name": "EducationShield",
      "version": "1.3.1",
      "author": "Arduino LLC",
      "maintainer": "Xun Yang",
      "sentence": "Library used for the completion of all the projects related to CTC",
      "paragraph": "Is intended to be used with the Education Shield provided in the CTC kit. It presents the neccesary functions to interact with 3 and 4 pin connectors used in many sensors and actuators.",
      "website": "https://create.arduino.cc/ctc/101/",
      "category": "Other",
      "architectures": [
        "avr",
        "arc32"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduinoverkstad/EducationShield-1.3.1.zip",
      "archiveFileName": "EducationShield-1.3.1.zip",
      "size": 3621151,
      "checksum": "SHA-256:6900c9517945044243101e512123a8c32c77a651f399d7f47e878f6bfc250559"
    },
    {
      "name": "EducationShield",
      "version": "1.4.2",
      "author": "Arduino LLC",
      "maintainer": "Marcus Johansson",
      "sentence": "Library used for the completion of all the projects related to CTC",
      "paragraph": "Is intended to be used with the Education Shield provided in the CTC kit. It presents the neccesary functions to interact with 3 and 4 pin connectors used in many sensors and actuators.",
      "website": "https://create.arduino.cc/ctc/101/",
      "category": "Other",
      "architectures": [
        "avr",
        "arc32"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduinoverkstad/EducationShield-1.4.2.zip",
      "archiveFileName": "EducationShield-1.4.2.zip",
      "size": 3618828,
      "checksum": "SHA-256:f7c7f22b9bc958b22223447d1aef3ccbb7fbaf5728171bef12268850bc91372f"
    },
    {
      "name": "EducationShield",
      "version": "1.4.3",
      "author": "Arduino LLC",
      "maintainer": "Marcus Johansson",
      "sentence": "Library used for the completion of all the projects related to CTC",
      "paragraph": "Is intended to be used with the Education Shield provided in the CTC kit. It presents the neccesary functions to interact with 3 and 4 pin connectors used in many sensors and actuators.",
      "website": "https://create.arduino.cc/ctc/101/",
      "category": "Other",
      "architectures": [
        "avr",
        "arc32"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduinoverkstad/EducationShield-1.4.3.zip",
      "archiveFileName": "EducationShield-1.4.3.zip",
      "size": 3618846,
      "checksum": "SHA-256:bc29ecbdef3e8a8e0c3ace92e66b7757672cc43f453ee9f1ae0a89590ca0e273"
    },
    {
      "name": "AzureIoTHub",
      "version": "0.2.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Azure IoT library for Arduino. For the Arduino MKR1000 or Zero and WiFi Shield 101, Adafruit Huzzah and Feather M0, or SparkFun Thing.",
      "paragraph": "Arduino port of the Azure IoT C device SDK. It allows you to use your Arduino with the Azure IoT Hub.  See readme for more details.",
      "website": "https://github.com/arduino-libraries/AzureIoTHub",
      "category": "Communication",
      "architectures": [
        "samd",
        "esp8266"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Azure/AzureIoTHub-0.2.0.zip",
      "archiveFileName": "AzureIoTHub-0.2.0.zip",
      "size": 300681,
      "checksum": "SHA-256:c0c4a92a065a5524b1a96ac5fa898949c0e25f07791c79367e4c5504c16e2dff"
    },
    {
      "name": "AzureIoTHub",
      "version": "1.0.17",
      "author": "Arduino",
      "maintainer": "Microsoft \u003ciotcert@microsoft.com\u003e",
      "sentence": "Azure IoT library for Arduino. For the Arduino MKR1000 or Zero and WiFi Shield 101, Adafruit Huzzah and Feather M0, or SparkFun Thing.",
      "paragraph": "Arduino port of the Azure IoT C device SDK. It allows you to use your Arduino with the Azure IoT Hub.  See readme.md for more details.  Copyright (c) Microsoft. All rights reserved.  Licensed under the MIT license. See LICENSE file in the project root for full license information.",
      "website": "https://github.com/Azure/azure-iot-arduino",
      "category": "Communication",
      "architectures": [
        "samd",
        "esp8266"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Azure/AzureIoTHub-1.0.17.zip",
      "archiveFileName": "AzureIoTHub-1.0.17.zip",
      "size": 250608,
      "checksum": "SHA-256:ee846dfcbe66e2895f6689a6e40e6789317a88004181dad9df586ce529637074"
    },
    {
      "name": "AzureIoTHub",
      "version": "1.0.21",
      "author": "Arduino",
      "maintainer": "Microsoft \u003ciotcert@microsoft.com\u003e",
      "sentence": "Azure IoT library for Arduino. For the Arduino MKR1000 or Zero and WiFi Shield 101, Adafruit Huzzah and Feather M0, or SparkFun Thing.",
      "paragraph": "Arduino port of the Azure IoT C device SDK. It allows you to use your Arduino with the Azure IoT Hub.  See readme.md for more details.  Copyright (c) Microsoft. All rights reserved.  Licensed under the MIT license. See LICENSE file in the project root for full license information.",
      "website": "https://github.com/Azure/azure-iot-arduino",
      "category": "Communication",
      "architectures": [
        "samd",
        "esp8266"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Azure/AzureIoTHub-1.0.21.zip",
      "archiveFileName": "AzureIoTHub-1.0.21.zip",
      "size": 255809,
      "checksum": "SHA-256:6765501b3ba9fb00867c901f8f6a9ef6a77647500c25f51e4ff1388f6504bc24"
    },
    {
      "name": "AzureIoTHub",
      "version": "1.0.30",
      "author": "Arduino",
      "maintainer": "Microsoft \u003ciotcert@microsoft.com\u003e",
      "sentence": "Azure IoT library for Arduino. For the Arduino MKR1000 or Zero and WiFi Shield 101, Adafruit Huzzah and Feather M0, or SparkFun Thing.",
      "paragraph": "Arduino port of the Azure IoT C device SDK. It allows you to use your Arduino with the Azure IoT Hub.  See readme.md for more details.  Copyright (c) Microsoft. All rights reserved.  Licensed under the MIT license. See LICENSE file in the project root for full license information.",
      "website": "https://github.com/Azure/azure-iot-arduino",
      "category": "Communication",
      "architectures": [
        "samd",
        "esp8266"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Azure/AzureIoTHub-1.0.30.zip",
      "archiveFileName": "AzureIoTHub-1.0.30.zip",
      "size": 271290,
      "checksum": "SHA-256:d3dd3312e605155b09a77d109f0e56fe6065565d2e2982f6ddab4a04f04e8551"
    },
    {
      "name": "AzureIoTUtility",
      "version": "1.0.17",
      "author": "Microsoft",
      "maintainer": "Microsoft \u003ciotcert@microsoft.com\u003e",
      "sentence": "Azure C shared utility library for Arduino. For the Arduino MKR1000 or Zero and WiFi Shield 101, Adafruit Huzzah and Feather M0, or SparkFun Thing.",
      "paragraph": "Microsoft port of the Azure C Shared Utility. Together with AzureIoTHub, it allows you to use your Arduino with the Azure IoT Hub.  See readme.md for more details.  Copyright (c) Microsoft. All rights reserved.  Licensed under the MIT license. See LICENSE file in the project root for full license information.",
      "website": "https://github.com/Azure/azure-iot-arduino-utility",
      "category": "Communication",
      "architectures": [
        "samd",
        "esp8266"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Azure/AzureIoTUtility-1.0.17.zip",
      "archiveFileName": "AzureIoTUtility-1.0.17.zip",
      "size": 179814,
      "checksum": "SHA-256:ee34cbf80e94366959912f4152275b6f0e5e636f9c8db0a26d9c0b4b626676a9"
    },
    {
      "name": "AzureIoTUtility",
      "version": "1.0.21",
      "author": "Microsoft",
      "maintainer": "Microsoft \u003ciotcert@microsoft.com\u003e",
      "sentence": "Azure C shared utility library for Arduino. For the Arduino MKR1000 or Zero and WiFi Shield 101, Adafruit Huzzah and Feather M0, or SparkFun Thing.",
      "paragraph": "Microsoft port of the Azure C Shared Utility. Together with AzureIoTHub, it allows you to use your Arduino with the Azure IoT Hub.  See readme.md for more details.  Copyright (c) Microsoft. All rights reserved.  Licensed under the MIT license. See LICENSE file in the project root for full license information.",
      "website": "https://github.com/Azure/azure-iot-arduino-utility",
      "category": "Communication",
      "architectures": [
        "samd",
        "esp8266"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Azure/AzureIoTUtility-1.0.21.zip",
      "archiveFileName": "AzureIoTUtility-1.0.21.zip",
      "size": 183865,
      "checksum": "SHA-256:4b4c4c442109503d1d10333bffd70332fae1c88c00515abe81a8b55fd3c77afc"
    },
    {
      "name": "AzureIoTUtility",
      "version": "1.0.30",
      "author": "Microsoft",
      "maintainer": "Microsoft \u003ciotcert@microsoft.com\u003e",
      "sentence": "Azure C shared utility library for Arduino. For the Arduino MKR1000 or Zero and WiFi Shield 101, Adafruit Huzzah and Feather M0, or SparkFun Thing.",
      "paragraph": "Microsoft port of the Azure C Shared Utility. Together with AzureIoTHub, it allows you to use your Arduino with the Azure IoT Hub.  See readme.md for more details.  Copyright (c) Microsoft. All rights reserved.  Licensed under the MIT license. See LICENSE file in the project root for full license information.",
      "website": "https://github.com/Azure/azure-iot-arduino-utility",
      "category": "Communication",
      "architectures": [
        "samd",
        "esp8266"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Azure/AzureIoTUtility-1.0.30.zip",
      "archiveFileName": "AzureIoTUtility-1.0.30.zip",
      "size": 227817,
      "checksum": "SHA-256:be44fcd9be7b67343990203127c54aac9437a55d667068ea33a44372326eeeaa"
    },
    {
      "name": "AzureIoTProtocol_HTTP",
      "version": "1.0.17",
      "author": "Microsoft",
      "maintainer": "Microsoft \u003ciotcert@microsoft.com\u003e",
      "sentence": "Azure HTTP protocol library for Arduino. For the Arduino MKR1000 or Zero and WiFi Shield 101, Adafruit Huzzah and Feather M0, or SparkFun Thing.",
      "paragraph": "Microsoft compact implementation of the HTTP protocol for small devices like Arduino. It allows you to use your Arduino with the Azure IoT Hub using HTTP as the transport protocol.  See readme.md for more details.  Copyright (c) Microsoft. All rights reserved.  Licensed under the MIT license. See LICENSE file in the project root for full license information.",
      "website": "https://github.com/Azure/azure-iot-arduino-protocol-http",
      "category": "Communication",
      "architectures": [
        "samd",
        "esp8266"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Azure/AzureIoTProtocol_HTTP-1.0.17.zip",
      "archiveFileName": "AzureIoTProtocol_HTTP-1.0.17.zip",
      "size": 17744,
      "checksum": "SHA-256:4c68cb39480794226c6a32cbe9cea8010b3a91dbe151ed09b3032dcd37476e8e"
    },
    {
      "name": "AzureIoTProtocol_HTTP",
      "version": "1.0.21",
      "author": "Microsoft",
      "maintainer": "Microsoft \u003ciotcert@microsoft.com\u003e",
      "sentence": "Azure HTTP protocol library for Arduino. For the Arduino MKR1000 or Zero and WiFi Shield 101, Adafruit Huzzah and Feather M0, or SparkFun Thing.",
      "paragraph": "Microsoft compact implementation of the HTTP protocol for small devices like Arduino. It allows you to use your Arduino with the Azure IoT Hub using HTTP as the transport protocol.  See readme.md for more details.  Copyright (c) Microsoft. All rights reserved.  Licensed under the MIT license. See LICENSE file in the project root for full license information.",
      "website": "https://github.com/Azure/azure-iot-arduino-protocol-http",
      "category": "Communication",
      "architectures": [
        "samd",
        "esp8266"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Azure/AzureIoTProtocol_HTTP-1.0.21.zip",
      "archiveFileName": "AzureIoTProtocol_HTTP-1.0.21.zip",
      "size": 17743,
      "checksum": "SHA-256:235725e51b6e54309603e0280e0c943c734f358019b6fbc465d05592fe6fc430"
    },
    {
      "name": "AzureIoTProtocol_HTTP",
      "version": "1.0.30",
      "author": "Microsoft",
      "maintainer": "Microsoft \u003ciotcert@microsoft.com\u003e",
      "sentence": "Azure HTTP protocol library for Arduino. For the Arduino MKR1000 or Zero and WiFi Shield 101, Adafruit Huzzah and Feather M0, or SparkFun Thing.",
      "paragraph": "Microsoft compact implementation of the HTTP protocol for small devices like Arduino. It allows you to use your Arduino with the Azure IoT Hub using HTTP as the transport protocol.  See readme.md for more details.  Copyright (c) Microsoft. All rights reserved.  Licensed under the MIT license. See LICENSE file in the project root for full license information.",
      "website": "https://github.com/Azure/azure-iot-arduino-protocol-http",
      "category": "Communication",
      "architectures": [
        "samd",
        "esp8266"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Azure/AzureIoTProtocol_HTTP-1.0.30.zip",
      "archiveFileName": "AzureIoTProtocol_HTTP-1.0.30.zip",
      "size": 17739,
      "checksum": "SHA-256:ae4bc04d0f31bdcb793957af1cb8d9687d68af4211156b755c6c5001b35bdcc2"
    },
    {
      "name": "Windows Virtual Shields for Arduino",
      "version": "1.1.0",
      "author": "Windows Developer Program for IoT \u003cwdpIoT@microsoft.com\u003e",
      "maintainer": "Windows Developer Program for IoT \u003cwdpIoT@microsoft.com\u003e",
      "sentence": "Windows Virtual Shields for Arduino allows an Arduino to communicate and control Windows devices running open-source Windows Universal Application.",
      "paragraph": "Windows Virtual Shields for Arduino allows an Arduino to communicate with an open-source Windows Universal Application running on all Windows 10 devices, primarily focusing on Windows Phones. The library exposes the Windows Phones's sensors and capabilities to the an Arduino Sketch.",
      "website": "https://windowsondevices.com",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ms-iot/Windows_Virtual_Shields_for_Arduino-1.1.0.zip",
      "archiveFileName": "Windows_Virtual_Shields_for_Arduino-1.1.0.zip",
      "size": 1217047,
      "checksum": "SHA-256:84ba58c3cef986b2737473a83bfc17a5e1ace2a624cf274ea90b818cadd983c1"
    },
    {
      "name": "Windows Virtual Shields for Arduino",
      "version": "1.2.0",
      "author": "Windows Developer Program for IoT \u003cwdpIoT@microsoft.com\u003e",
      "maintainer": "Windows Developer Program for IoT \u003cwdpIoT@microsoft.com\u003e",
      "sentence": "Windows Virtual Shields for Arduino allows an Arduino to communicate and control Windows devices running open-source Windows Universal Application.",
      "paragraph": "Windows Virtual Shields for Arduino allows an Arduino to communicate with an open-source Windows Universal Application running on all Windows 10 devices, primarily focusing on Windows Phones. The library exposes the Windows Phones's sensors and capabilities to the an Arduino Sketch.",
      "website": "https://windowsondevices.com",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ms-iot/Windows_Virtual_Shields_for_Arduino-1.2.0.zip",
      "archiveFileName": "Windows_Virtual_Shields_for_Arduino-1.2.0.zip",
      "size": 1219080,
      "checksum": "SHA-256:27f3618e093e22d53e4054eec0365e438b47497824f024d4f31f149068e304db"
    },
    {
      "name": "AzureIoTProtocol_MQTT",
      "version": "1.0.17",
      "author": "Microsoft",
      "maintainer": "Microsoft \u003ciotcert@microsoft.com\u003e",
      "sentence": "Azure MQTT protocol library for Arduino. For the Arduino MKR1000 or Zero and WiFi Shield 101, Adafruit Huzzah and Feather M0, or SparkFun Thing.",
      "paragraph": "Microsoft compact implementation of the MQTT protocol for small devices like Arduino. It allows you to use your Arduino with the Azure IoT Hub using MQTT as the transport protocol.  See readme.md for more details.",
      "website": "https://github.com/Azure/azure-iot-arduino-protocol-mqtt",
      "category": "Communication",
      "architectures": [
        "samd",
        "esp8266"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Azure/AzureIoTProtocol_MQTT-1.0.17.zip",
      "archiveFileName": "AzureIoTProtocol_MQTT-1.0.17.zip",
      "size": 23972,
      "checksum": "SHA-256:41ec8e000fea7b5415454476faeaacbd9c7c1fe75029d09494b733f8fa3a4ebd"
    },
    {
      "name": "AzureIoTProtocol_MQTT",
      "version": "1.0.21",
      "author": "Microsoft",
      "maintainer": "Microsoft \u003ciotcert@microsoft.com\u003e",
      "sentence": "Azure MQTT protocol library for Arduino. For the Arduino MKR1000 or Zero and WiFi Shield 101, Adafruit Huzzah and Feather M0, or SparkFun Thing.",
      "paragraph": "Microsoft compact implementation of the MQTT protocol for small devices like Arduino. It allows you to use your Arduino with the Azure IoT Hub using MQTT as the transport protocol.  See readme.md for more details.",
      "website": "https://github.com/Azure/azure-iot-arduino-protocol-mqtt",
      "category": "Communication",
      "architectures": [
        "samd",
        "esp8266"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Azure/AzureIoTProtocol_MQTT-1.0.21.zip",
      "archiveFileName": "AzureIoTProtocol_MQTT-1.0.21.zip",
      "size": 23971,
      "checksum": "SHA-256:aa32cb4abe11f89ca8c77d6454e433857f982e051763c346f60c5aea6ad2e459"
    },
    {
      "name": "AzureIoTProtocol_MQTT",
      "version": "1.0.30",
      "author": "Microsoft",
      "maintainer": "Microsoft \u003ciotcert@microsoft.com\u003e",
      "sentence": "Azure MQTT protocol library for Arduino. For the Arduino MKR1000 or Zero and WiFi Shield 101, Adafruit Huzzah and Feather M0, or SparkFun Thing.",
      "paragraph": "Microsoft compact implementation of the MQTT protocol for small devices like Arduino. It allows you to use your Arduino with the Azure IoT Hub using MQTT as the transport protocol.  See readme.md for more details.",
      "website": "https://github.com/Azure/azure-iot-arduino-protocol-mqtt",
      "category": "Communication",
      "architectures": [
        "samd",
        "esp8266"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Azure/AzureIoTProtocol_MQTT-1.0.30.zip",
      "archiveFileName": "AzureIoTProtocol_MQTT-1.0.30.zip",
      "size": 24088,
      "checksum": "SHA-256:f357a231727db2cf627d868478c879c1b7128d838b4e8a7225a2e670fce39325"
    },
    {
      "name": "Temboo",
      "version": "1.1.0",
      "author": "Temboo",
      "maintainer": "Temboo \u003csupport@temboo.com\u003e",
      "sentence": "This library enables calls to Temboo, a platform that connects Arduino boards to 100+ APIs, databases, code utilities and more.",
      "paragraph": "Use this library to connect your Arduino board to Temboo, making it simple to interact with a vast array of web-based resources and services.",
      "website": "http://www.temboo.com/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Temboo-1.1.0.zip",
      "archiveFileName": "Temboo-1.1.0.zip",
      "size": 36120,
      "checksum": "SHA-256:cddcf29a7635ec2d6e712f989c918bf69fbc5d1ac513fa373250a2db1a8222bb"
    },
    {
      "name": "Temboo",
      "version": "1.1.1",
      "author": "Temboo",
      "maintainer": "Temboo \u003csupport@temboo.com\u003e",
      "sentence": "This library enables calls to Temboo, a platform that connects Arduino boards to 100+ APIs, databases, code utilities and more.",
      "paragraph": "Use this library to connect your Arduino board to Temboo, making it simple to interact with a vast array of web-based resources and services.",
      "website": "http://www.temboo.com/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Temboo-1.1.1.zip",
      "archiveFileName": "Temboo-1.1.1.zip",
      "size": 36120,
      "checksum": "SHA-256:7d91592c528f0e639f63cd88afa4dfecbc659ee7a00b177df9a3258353bde7cc"
    },
    {
      "name": "Temboo",
      "version": "1.1.2",
      "author": "Temboo",
      "maintainer": "Temboo \u003csupport@temboo.com\u003e",
      "sentence": "This library enables calls to Temboo, a platform that connects Arduino boards to 100+ APIs, databases, code utilities and more.",
      "paragraph": "Use this library to connect your Arduino board to Temboo, making it simple to interact with a vast array of web-based resources and services.",
      "website": "http://www.temboo.com/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Temboo-1.1.2.zip",
      "archiveFileName": "Temboo-1.1.2.zip",
      "size": 36302,
      "checksum": "SHA-256:23c3447f1230026dec09de5a016196d39b9d66eb7eddd60b46f1c4495f9c6ada"
    },
    {
      "name": "Temboo",
      "version": "1.1.3",
      "author": "Temboo",
      "maintainer": "Temboo \u003csupport@temboo.com\u003e",
      "sentence": "This library enables calls to Temboo, a platform that connects Arduino boards to 100+ APIs, databases, code utilities and more.",
      "paragraph": "Use this library to connect your Arduino board to Temboo, making it simple to interact with a vast array of web-based resources and services.",
      "website": "http://www.temboo.com/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Temboo-1.1.3.zip",
      "archiveFileName": "Temboo-1.1.3.zip",
      "size": 113940,
      "checksum": "SHA-256:ee410eba77bf05887c005c5f2f8c944ead68e644f3326d81e2ac36a33a68546c"
    },
    {
      "name": "Temboo",
      "version": "1.1.4",
      "author": "Temboo",
      "maintainer": "Temboo \u003csupport@temboo.com\u003e",
      "sentence": "This library enables calls to Temboo, a platform that connects Arduino boards to 100+ APIs, databases, code utilities and more.",
      "paragraph": "Use this library to connect your Arduino board to Temboo, making it simple to interact with a vast array of web-based resources and services.",
      "website": "http://www.temboo.com/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Temboo-1.1.4.zip",
      "archiveFileName": "Temboo-1.1.4.zip",
      "size": 140097,
      "checksum": "SHA-256:c84511f0e0b800ec7063380930dfa0badfa41c1d7d70a9101df061a8ac6de0f4"
    },
    {
      "name": "Temboo",
      "version": "1.1.6",
      "author": "Temboo",
      "maintainer": "Temboo \u003csupport@temboo.com\u003e",
      "sentence": "This library enables calls to Temboo, a platform that connects Arduino/Genuino boards to 100+ APIs, databases, code utilities and more.",
      "paragraph": "Use this library to connect your Arduino or Genuino board to Temboo, making it simple to interact with a vast array of web-based resources and services.",
      "website": "http://www.temboo.com/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Temboo-1.1.6.zip",
      "archiveFileName": "Temboo-1.1.6.zip",
      "size": 141118,
      "checksum": "SHA-256:424db863982d4d609ed60c1a9466a78da1748911d3333bfed13c0cc640d65687"
    },
    {
      "name": "Temboo",
      "version": "1.1.7",
      "author": "Temboo",
      "maintainer": "Temboo \u003csupport@temboo.com\u003e",
      "sentence": "This library enables calls to Temboo, a platform that connects Arduino/Genuino boards to 100+ APIs, databases, code utilities and more.",
      "paragraph": "Use this library to connect your Arduino or Genuino board to Temboo, making it simple to interact with a vast array of web-based resources and services.",
      "website": "http://www.temboo.com/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Temboo-1.1.7.zip",
      "archiveFileName": "Temboo-1.1.7.zip",
      "size": 149178,
      "checksum": "SHA-256:e8159fd753bbf533c75ae879a786cbaa05bbb7a23abdea82b1e3bc82c943edc3"
    },
    {
      "name": "Temboo",
      "version": "1.1.8",
      "author": "Temboo",
      "maintainer": "Temboo \u003csupport@temboo.com\u003e",
      "sentence": "This library enables calls to Temboo, a platform that connects Arduino/Genuino boards to 100+ APIs, databases, code utilities and more.",
      "paragraph": "Use this library to connect your Arduino or Genuino board to Temboo, making it simple to interact with a vast array of web-based resources and services.",
      "website": "http://www.temboo.com/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Temboo-1.1.8.zip",
      "archiveFileName": "Temboo-1.1.8.zip",
      "size": 165240,
      "checksum": "SHA-256:810ef08c63a0a1275dc4078d87c4098dd59994559e7e5343890e6bdc493161d3"
    },
    {
      "name": "Temboo",
      "version": "1.2.0",
      "author": "Temboo",
      "maintainer": "Temboo \u003csupport@temboo.com\u003e",
      "sentence": "This library enables calls to Temboo, a platform that connects Arduino/Genuino boards to 100+ APIs, databases, code utilities and more.",
      "paragraph": "Use this library to connect your Arduino or Genuino board to Temboo, making it simple to interact with a vast array of web-based resources and services.",
      "website": "http://www.temboo.com/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Temboo-1.2.0.zip",
      "archiveFileName": "Temboo-1.2.0.zip",
      "size": 184184,
      "checksum": "SHA-256:0dc87c7c9c3b582a33dbc835a6c1ef993aac80434cb30430c80c556b0a7dde9c"
    },
    {
      "name": "Temboo",
      "version": "1.2.1",
      "author": "Temboo",
      "maintainer": "Temboo \u003csupport@temboo.com\u003e",
      "sentence": "This library enables calls to Temboo, a platform that connects Arduino/Genuino boards to 100+ APIs, databases, code utilities and more.",
      "paragraph": "Use this library to connect your Arduino or Genuino board to Temboo, making it simple to interact with a vast array of web-based resources and services.",
      "website": "http://www.temboo.com/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduino-libraries/Temboo-1.2.1.zip",
      "archiveFileName": "Temboo-1.2.1.zip",
      "size": 185315,
      "checksum": "SHA-256:c34fb752632f8eb4c430b3eae690e0a7283b008f0db50eff0eaca9a2bba6b6b5"
    },
    {
      "name": "Adafruit ADS1X15",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for TI's ADS1015: 12-bit Differential or Single-Ended ADC with PGA and Comparator",
      "paragraph": "Driver for TI's ADS1015: 12-bit Differential or Single-Ended ADC with PGA and Comparator",
      "website": "https://github.com/adafruit/Adafruit_ADS1X15",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_ADS1X15-1.0.0.zip",
      "archiveFileName": "Adafruit_ADS1X15-1.0.0.zip",
      "size": 8862,
      "checksum": "SHA-256:6aef6ad9bcd384d4e5f7d9e3b2774f1f3730aca02739b1ebf7c33dba92830548"
    },
    {
      "name": "Adafruit ADXL345",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified driver for the ADXL345 Accelerometer",
      "paragraph": "Unified driver for the ADXL345 Accelerometer",
      "website": "https://github.com/adafruit/Adafruit_ADXL345",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_ADXL345-1.0.0.zip",
      "archiveFileName": "Adafruit_ADXL345-1.0.0.zip",
      "size": 8244,
      "checksum": "SHA-256:12bbd2f21faa45a617331b7720c6c63b92fc6f7e08ec157f04c02dc126167c2f"
    },
    {
      "name": "Adafruit AM2315",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library code for AM2315 sensors",
      "paragraph": "Library code for AM2315 sensors",
      "website": "https://github.com/adafruit/Adafruit_AM2315",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_AM2315-1.0.0.zip",
      "archiveFileName": "Adafruit_AM2315-1.0.0.zip",
      "size": 4043,
      "checksum": "SHA-256:e43f02bf1f13f590fa56664e050fb94be4b969f8d406ec098e3fa15d22cd7a3e"
    },
    {
      "name": "Adafruit AM2315",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library code for AM2315 sensors",
      "paragraph": "Library code for AM2315 sensors",
      "website": "https://github.com/adafruit/Adafruit_AM2315",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_AM2315-1.0.1.zip",
      "archiveFileName": "Adafruit_AM2315-1.0.1.zip",
      "size": 4069,
      "checksum": "SHA-256:9d45d4cbbc718648c9d222ea9feff62400c13b6553d9268b40676f359094c1cd"
    },
    {
      "name": "Adafruit BLEFirmata",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Modified Firmata code to work with Adafruit's nRF8001 Breakout",
      "paragraph": "Modified Firmata code to work with Adafruit's nRF8001 Breakout",
      "website": "https://github.com/adafruit/Adafruit_BLEFirmata",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BLEFirmata-1.0.0.zip",
      "archiveFileName": "Adafruit_BLEFirmata-1.0.0.zip",
      "size": 42679,
      "checksum": "SHA-256:535967dda09369742d0a604011635100a60fb4c27dc3d246d5c6f43ea756a902"
    },
    {
      "name": "Adafruit BLEFirmata",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Modified Firmata code to work with Adafruit's nRF8001 Breakout",
      "paragraph": "Modified Firmata code to work with Adafruit's nRF8001 Breakout",
      "website": "https://github.com/adafruit/Adafruit_BLEFirmata",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BLEFirmata-1.1.0.zip",
      "archiveFileName": "Adafruit_BLEFirmata-1.1.0.zip",
      "size": 70445,
      "checksum": "SHA-256:b8274f2964f3decb04f03c4a6d6d2c9aa7b3088ae5887e5d436c9b5c9631ba0c"
    },
    {
      "name": "Adafruit AHRS",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "AHRS (Altitude and Heading Reference System) for Adafruit's 9DOF and 10DOF breakouts",
      "paragraph": "AHRS (Altitude and Heading Reference System) for Adafruit's 9DOF and 10DOF breakouts",
      "website": "https://github.com/adafruit/Adafruit_AHRS",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_AHRS-1.0.0.zip",
      "archiveFileName": "Adafruit_AHRS-1.0.0.zip",
      "size": 784451,
      "checksum": "SHA-256:c654317c13d22da67cdfb8f944b2d4ddc26591afe3663f5c4a98bc4782215353"
    },
    {
      "name": "Adafruit AHRS",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "AHRS (Altitude and Heading Reference System) for Adafruit's 9DOF and 10DOF breakouts",
      "paragraph": "AHRS (Altitude and Heading Reference System) for Adafruit's 9DOF and 10DOF breakouts",
      "website": "https://github.com/adafruit/Adafruit_AHRS",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_AHRS-1.0.2.zip",
      "archiveFileName": "Adafruit_AHRS-1.0.2.zip",
      "size": 999401,
      "checksum": "SHA-256:da54441c6ce63c44afaf6039bfe8c1e9c40fa60e8eec1bccfd1f8db77cb4bf16"
    },
    {
      "name": "Adafruit AHRS",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "AHRS (Altitude and Heading Reference System) for Adafruit's 9DOF and 10DOF breakouts",
      "paragraph": "AHRS (Altitude and Heading Reference System) for Adafruit's 9DOF and 10DOF breakouts",
      "website": "https://github.com/adafruit/Adafruit_AHRS",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_AHRS-1.1.0.zip",
      "archiveFileName": "Adafruit_AHRS-1.1.0.zip",
      "size": 1015641,
      "checksum": "SHA-256:0a1fd9fdd5135152450184f2b7d764780822161a438bc14974bca5f31afa0619"
    },
    {
      "name": "Adafruit AHRS",
      "version": "1.1.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "AHRS (Altitude and Heading Reference System) for Adafruit's 9DOF and 10DOF breakouts",
      "paragraph": "AHRS (Altitude and Heading Reference System) for Adafruit's 9DOF and 10DOF breakouts",
      "website": "https://github.com/adafruit/Adafruit_AHRS",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_AHRS-1.1.2.zip",
      "archiveFileName": "Adafruit_AHRS-1.1.2.zip",
      "size": 1795280,
      "checksum": "SHA-256:a17621b44552a041a441ef0ad6f619be83345cc63be9e11a602eac8e539bcc42"
    },
    {
      "name": "Adafruit AHRS",
      "version": "1.1.3",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "AHRS (Altitude and Heading Reference System) for Adafruit's 9DOF and 10DOF breakouts",
      "paragraph": "AHRS (Altitude and Heading Reference System) for Adafruit's 9DOF and 10DOF breakouts",
      "website": "https://github.com/adafruit/Adafruit_AHRS",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_AHRS-1.1.3.zip",
      "archiveFileName": "Adafruit_AHRS-1.1.3.zip",
      "size": 2009002,
      "checksum": "SHA-256:f36a657ce58cf6ffc776003b3fc77adc97f59cd8c8e20c1d592b0acc9af3e5c5"
    },
    {
      "name": "Adafruit BMP085 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A powerful but easy to use BMP085/BMP180 Library",
      "paragraph": "A powerful but easy to use BMP085/BMP180 Library",
      "website": "https://github.com/adafruit/Adafruit-BMP085-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BMP085_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_BMP085_Library-1.0.0.zip",
      "size": 5836,
      "checksum": "SHA-256:541df2650875c419411b72f6e4485dae243bec85450780c69eb5878fdc628d99"
    },
    {
      "name": "Adafruit BMP085 Unified",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified sensor driver for Adafruit's BMP085 \u0026 BMP180 breakouts",
      "paragraph": "Unified sensor driver for Adafruit's BMP085 \u0026 BMP180 breakouts",
      "website": "https://github.com/adafruit/Adafruit_BMP085_Unified",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BMP085_Unified-1.0.0.zip",
      "archiveFileName": "Adafruit_BMP085_Unified-1.0.0.zip",
      "size": 8653,
      "checksum": "SHA-256:1929d0fd34683e5afb935090fb7fd3a81dbddfde8bf50a5d3f1d393784e78e0a"
    },
    {
      "name": "Adafruit BMP183 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Non-Unified BMP library",
      "paragraph": "Non-Unified BMP library",
      "website": "https://github.com/adafruit/Adafruit_BMP183_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BMP183_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_BMP183_Library-1.0.0.zip",
      "size": 6608,
      "checksum": "SHA-256:322163b1a44882f89104c05c6a9facb68342400b15c121f75d5b9e8d862711b2"
    },
    {
      "name": "Adafruit BMP183 Unified Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the BMP183 sensors in the Adafruit shop",
      "paragraph": "Arduino library for the BMP183 sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit_BMP183_Unified_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BMP183_Unified_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_BMP183_Unified_Library-1.0.0.zip",
      "size": 8593,
      "checksum": "SHA-256:9c0647107d4000fb9a6ce55bd0a2fdbe2cb01c0de4ac6882f5db92bd543cb73a"
    },
    {
      "name": "Adafruit CAP1188 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the Adafruit CAP1188 8-Channel Capacitive Touch Sensor Breakout",
      "paragraph": "Arduino library for the Adafruit CAP1188 8-Channel Capacitive Touch Sensor Breakout",
      "website": "https://github.com/adafruit/Adafruit_CAP1188_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_CAP1188_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_CAP1188_Library-1.0.0.zip",
      "size": 5254,
      "checksum": "SHA-256:0b54fa3877f4c945dc37ddb8e398425e04555815a0aec3bb012553674b59c45e"
    },
    {
      "name": "Adafruit CC3000 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library code for Adafruit's CC3000 WiFi breakouts.",
      "paragraph": "The CC3000 allows an Arduino to connect to a WiFi network and access the internet.  See more at: https://learn.adafruit.com/adafruit-cc3000-wifi/",
      "website": "https://github.com/adafruit/Adafruit_CC3000_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_CC3000_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_CC3000_Library-1.0.0.zip",
      "size": 243977,
      "checksum": "SHA-256:af84379d3ca21c0c9782fe9ae334c0d2d1c974c6b3dd3dc3d936e5eacadc971d"
    },
    {
      "name": "Adafruit CC3000 Library",
      "version": "1.0.3",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library code for Adafruit's CC3000 WiFi breakouts.",
      "paragraph": "The CC3000 allows an Arduino to connect to a WiFi network and access the internet.  See more at: https://learn.adafruit.com/adafruit-cc3000-wifi/",
      "website": "https://github.com/adafruit/Adafruit_CC3000_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_CC3000_Library-1.0.3.zip",
      "archiveFileName": "Adafruit_CC3000_Library-1.0.3.zip",
      "size": 244862,
      "checksum": "SHA-256:4329112f568ef3026c0c7a9d5a57f886c180a5d63aec756bc123214afe8a4bac"
    },
    {
      "name": "Adafruit DotStar",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit DotStar LED Library",
      "paragraph": "Adafruit DotStar LED Library",
      "website": "https://github.com/adafruit/Adafruit_DotStar",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_DotStar-1.0.0.zip",
      "archiveFileName": "Adafruit_DotStar-1.0.0.zip",
      "size": 20974,
      "checksum": "SHA-256:c9b149763ba97ddf5bb2420e1ad078049996489cc93820e83910c0dba7cc2c20"
    },
    {
      "name": "Adafruit DotStar",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit DotStar LED Library",
      "paragraph": "Adafruit DotStar LED Library",
      "website": "https://github.com/adafruit/Adafruit_DotStar",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_DotStar-1.0.1.zip",
      "archiveFileName": "Adafruit_DotStar-1.0.1.zip",
      "size": 21261,
      "checksum": "SHA-256:251f157fe9cb9f91c11b7bdcf8c5c0cf3c5fd90f65a817feea6ee3f43365b816"
    },
    {
      "name": "Adafruit DotStar",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit DotStar LED Library",
      "paragraph": "Adafruit DotStar LED Library",
      "website": "https://github.com/adafruit/Adafruit_DotStar",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_DotStar-1.0.2.zip",
      "archiveFileName": "Adafruit_DotStar-1.0.2.zip",
      "size": 21518,
      "checksum": "SHA-256:d29adfc175e2ad8aa5ef441ce4e43088036e55bcfdacf0dd9fc275f34ca1c69f"
    },
    {
      "name": "Adafruit DRV2605 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for Adafruit DRV2605L Hapic Controller Breakout",
      "paragraph": "Arduino library for Adafruit DRV2605L Hapic Controller Breakout",
      "website": "https://github.com/adafruit/Adafruit_DRV2605_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_DRV2605_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_DRV2605_Library-1.0.0.zip",
      "size": 4331,
      "checksum": "SHA-256:b902462c63a8bf7a380252c9c9daf273e7c65f30cb3ce8f5f5177134c49a099f"
    },
    {
      "name": "Adafruit DRV2605 Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for Adafruit DRV2605L Haptic Controller Breakout",
      "paragraph": "Arduino library for Adafruit DRV2605L Haptic Controller Breakout",
      "website": "https://github.com/adafruit/Adafruit_DRV2605_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_DRV2605_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_DRV2605_Library-1.0.1.zip",
      "size": 5066,
      "checksum": "SHA-256:6aaee27a2d1eb99d0a8f88c685749b02d618b21926888ac39570532071adaa51"
    },
    {
      "name": "Adafruit ESP8266",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Example code for ESP8266 chipset",
      "paragraph": "Example code for ESP8266 chipset",
      "website": "https://github.com/adafruit/Adafruit_ESP8266",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_ESP8266-1.0.0.zip",
      "archiveFileName": "Adafruit_ESP8266-1.0.0.zip",
      "size": 10326,
      "checksum": "SHA-256:b5f8f6822f44074243aa5486fb9e083c8e67be23478670cb2106c0e5e4f60d84"
    },
    {
      "name": "Adafruit Flora Pixel Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino Library for Adafruit Flora Pixels",
      "paragraph": "Arduino Library for Adafruit Flora Pixels",
      "website": "https://github.com/adafruit/Adafruit-Flora-Pixel-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Flora_Pixel_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_Flora_Pixel_Library-1.0.0.zip",
      "size": 4365,
      "checksum": "SHA-256:ff9ed2b326f48cd9fdc33e71222099bb8f6d6246fbe8df0ea8dd1f7d535b948d"
    },
    {
      "name": "Adafruit FONA Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the Adafruit FONA",
      "paragraph": "Arduino library for the Adafruit FONA",
      "website": "https://github.com/adafruit/Adafruit_FONA_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_FONA_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_FONA_Library-1.0.0.zip",
      "size": 16203,
      "checksum": "SHA-256:9457bb79111268acfd729fdda9af096c63dd1ce8dc0838208b77931a866b17fb"
    },
    {
      "name": "Adafruit FONA Library",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the Adafruit FONA",
      "paragraph": "Arduino library for the Adafruit FONA",
      "website": "https://github.com/adafruit/Adafruit_FONA_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_FONA_Library-1.1.0.zip",
      "archiveFileName": "Adafruit_FONA_Library-1.1.0.zip",
      "size": 20492,
      "checksum": "SHA-256:55c64c8111cc8d595a26853ac4a1819a6eacca34fcfc14714f0614bc4868b0b8"
    },
    {
      "name": "Adafruit FONA Library",
      "version": "1.1.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the Adafruit FONA",
      "paragraph": "Arduino library for the Adafruit FONA",
      "website": "https://github.com/adafruit/Adafruit_FONA_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_FONA_Library-1.1.1.zip",
      "archiveFileName": "Adafruit_FONA_Library-1.1.1.zip",
      "size": 26346,
      "checksum": "SHA-256:2645ee211b691bc492ec24a62969dff59d270505451a4b736f68d3b189a86ada"
    },
    {
      "name": "Adafruit FONA Library",
      "version": "1.2.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the Adafruit FONA",
      "paragraph": "Arduino library for the Adafruit FONA",
      "website": "https://github.com/adafruit/Adafruit_FONA_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_FONA_Library-1.2.0.zip",
      "archiveFileName": "Adafruit_FONA_Library-1.2.0.zip",
      "size": 26719,
      "checksum": "SHA-256:b5d3fa6f46a2525dc00d1946927efedffa3f988a64172335a91a66200382fa5c"
    },
    {
      "name": "Adafruit FONA Library",
      "version": "1.3.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the Adafruit FONA",
      "paragraph": "Arduino library for the Adafruit FONA",
      "website": "https://github.com/adafruit/Adafruit_FONA_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_FONA_Library-1.3.0.zip",
      "archiveFileName": "Adafruit_FONA_Library-1.3.0.zip",
      "size": 27177,
      "checksum": "SHA-256:5f51566753362ca0b33447042355d6a32f4d03fa7cf926563c066530986b010d"
    },
    {
      "name": "Adafruit FONA Library",
      "version": "1.3.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the Adafruit FONA",
      "paragraph": "Arduino library for the Adafruit FONA",
      "website": "https://github.com/adafruit/Adafruit_FONA_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_FONA_Library-1.3.2.zip",
      "archiveFileName": "Adafruit_FONA_Library-1.3.2.zip",
      "size": 31788,
      "checksum": "SHA-256:95c9cdf04750aaaef928ba9261ae760a326864a50a515beb2e882877d8ef7257"
    },
    {
      "name": "Adafruit FRAM I2C",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for Adafruit's I2C-Based FRAM Breakouts",
      "paragraph": "Driver for Adafruit's I2C-Based FRAM Breakouts",
      "website": "https://github.com/adafruit/Adafruit_FRAM_I2C",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_FRAM_I2C-1.0.0.zip",
      "archiveFileName": "Adafruit_FRAM_I2C-1.0.0.zip",
      "size": 5670,
      "checksum": "SHA-256:5574e96a57c03abad231d4c70fe9ce5f3fc039087b6432414f385c7e8acfe270"
    },
    {
      "name": "Adafruit FRAM SPI",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for Adafruit's SPI-Based FRAM Breakouts",
      "paragraph": "Driver for Adafruit's SPI-Based FRAM Breakouts",
      "website": "https://github.com/adafruit/Adafruit_FRAM_SPI",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_FRAM_SPI-1.0.0.zip",
      "archiveFileName": "Adafruit_FRAM_SPI-1.0.0.zip",
      "size": 6433,
      "checksum": "SHA-256:a2f3220f8de5a2a7ac87465f0660466099f25cc4f7714bbeccaad2b060d696e4"
    },
    {
      "name": "Adafruit Fingerprint Sensor Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for interfacing to the fingerprint sensor in the Adafruit shop",
      "paragraph": "Arduino library for interfacing to the fingerprint sensor in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit-Fingerprint-Sensor-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Fingerprint_Sensor_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_Fingerprint_Sensor_Library-1.0.0.zip",
      "size": 2402257,
      "checksum": "SHA-256:fd6f53a5c1446bdbd5f60e041a6ead6ab95d3bc734718975cf8f3222d6d0dc31"
    },
    {
      "name": "Adafruit FT6206 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for FT6206-based Capacitive touch screen",
      "paragraph": "Arduino library for FT6206-based Capacitive touch screen",
      "website": "https://github.com/adafruit/Adafruit_FT6206_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_FT6206_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_FT6206_Library-1.0.0.zip",
      "size": 5740,
      "checksum": "SHA-256:3a015b70d2032fb1d63a4d50dcf5af19abee126e1915c8323817b5f18b79bf3e"
    },
    {
      "name": "Adafruit GPS Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "An interrupt-based GPS library for no-parsing-required use",
      "paragraph": "An interrupt-based GPS library for no-parsing-required use",
      "website": "https://github.com/adafruit/Adafruit-GPS-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_GPS_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_GPS_Library-1.0.0.zip",
      "size": 43563,
      "checksum": "SHA-256:35f8e287404b305233c995639d472e2841edbc76fb61b27ccbf3562b6cbe282a"
    },
    {
      "name": "Adafruit GPS Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "An interrupt-based GPS library for no-parsing-required use",
      "paragraph": "An interrupt-based GPS library for no-parsing-required use",
      "website": "https://github.com/adafruit/Adafruit_GPS",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_GPS_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_GPS_Library-1.0.1.zip",
      "size": 44090,
      "checksum": "SHA-256:e722e2a9144f141c804db8b1a0a63f04c74378ef514181c3028fd12b25e1d00e"
    },
    {
      "name": "Adafruit Graphic VFD Display Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit's 128x64 Graphic VFD Display Library",
      "paragraph": "Adafruit's 128x64 Graphic VFD Display Library",
      "website": "https://github.com/adafruit/Adafruit-Graphic-VFD-Display-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Graphic_VFD_Display_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_Graphic_VFD_Display_Library-1.0.0.zip",
      "size": 8031,
      "checksum": "SHA-256:6f71611f42bbd3c34e1a27ff62949e5c3d72e9114970791e6e90def7b815d120"
    },
    {
      "name": "Adafruit HDC1000 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for HDC1000 and HDC1008 sensors.",
      "paragraph": "Designed specifically to work with the HDC1008 breakout in the Adafruit shop.",
      "website": "https://github.com/adafruit/Adafruit_HDC1000_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_HDC1000_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_HDC1000_Library-1.0.0.zip",
      "size": 3913,
      "checksum": "SHA-256:4cd8fb56856cef1415f4c5fa75456ce5613dfcd952e785d42fddf50cbb924d76"
    },
    {
      "name": "Adafruit HDC1000 Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for HDC1000 and HDC1008 sensors.",
      "paragraph": "Designed specifically to work with the HDC1008 breakout in the Adafruit shop.",
      "website": "https://github.com/adafruit/Adafruit_HDC1000_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_HDC1000_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_HDC1000_Library-1.0.1.zip",
      "size": 3997,
      "checksum": "SHA-256:108c9b22e7036ec627d9be7c114d7d6c09c05718fc0887a23480cc3b770fade6"
    },
    {
      "name": "Adafruit HMC5883 Unified",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit HMC5883L 3-Axis Magnetometer Breakout library using Adafruit's Unified Sensor Library.",
      "paragraph": "Adafruit HMC5883L 3-Axis Magnetometer Breakout library using Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_HMC5883_Unified",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_HMC5883_Unified-1.0.0.zip",
      "archiveFileName": "Adafruit_HMC5883_Unified-1.0.0.zip",
      "size": 6985,
      "checksum": "SHA-256:2135f5fd68332e2a635a36bb21c373dd4f9a9ab97cdb0e5482ad9da7d8f75263"
    },
    {
      "name": "Adafruit HTU21DF Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the HTU21D-F sensors in the Adafruit shop",
      "paragraph": "Arduino library for the HTU21D-F sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit_HTU21DF_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_HTU21DF_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_HTU21DF_Library-1.0.0.zip",
      "size": 3652,
      "checksum": "SHA-256:24fafeb30a4adf3b70143a7088157f2aa651e763e136e4b4ebf0dfcb6b41af9b"
    },
    {
      "name": "Adafruit HTU21DF Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the HTU21D-F sensors in the Adafruit shop",
      "paragraph": "Arduino library for the HTU21D-F sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit_HTU21DF_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_HTU21DF_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_HTU21DF_Library-1.0.1.zip",
      "size": 3672,
      "checksum": "SHA-256:325e4fea4c6f2e9b43d8a20ee64781a80953fee5da2e2198f818a3c64ad68b1a"
    },
    {
      "name": "Adafruit HX8340B",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit 2.2\" TFT with SPI interface and microSD card holder",
      "paragraph": "Adafruit 2.2\" TFT with SPI interface and microSD card holder",
      "website": "https://github.com/adafruit/Adafruit-HX8340B",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_HX8340B-1.0.0.zip",
      "archiveFileName": "Adafruit_HX8340B-1.0.0.zip",
      "size": 215275,
      "checksum": "SHA-256:e505288746f45e9e009da9abcfd3ac28520c96522a4b7e064fad8b6410981c7e"
    },
    {
      "name": "Adafruit ILI9340",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is a library for the Adafruit 2.2\" SPI display.",
      "paragraph": "This is a library for the Adafruit 2.2\" SPI display.",
      "website": "https://github.com/adafruit/Adafruit_ILI9340",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_ILI9340-1.0.0.zip",
      "archiveFileName": "Adafruit_ILI9340-1.0.0.zip",
      "size": 71871,
      "checksum": "SHA-256:cd9c6e8b0db2bb84de027cb4682d80e93f384531614617730540dae2bbfeed48"
    },
    {
      "name": "Adafruit HX8357 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit HX8357 3.5\" display library.",
      "paragraph": "Adafruit HX8357 3.5\" display library.",
      "website": "https://github.com/adafruit/Adafruit_HX8357_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_HX8357_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_HX8357_Library-1.0.0.zip",
      "size": 324912,
      "checksum": "SHA-256:79e0dc63b352e580612e6398ae0253144ac32eed05f429590e709b736520cd03"
    },
    {
      "name": "Adafruit HX8357 Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit HX8357 3.5\" display library.",
      "paragraph": "Adafruit HX8357 3.5\" display library.",
      "website": "https://github.com/adafruit/Adafruit_HX8357_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_HX8357_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_HX8357_Library-1.0.1.zip",
      "size": 324973,
      "checksum": "SHA-256:78060278fc8b7f7b9d3064c8b9d55ea9febd2a02179c31fa0c3018374cfb08b5"
    },
    {
      "name": "Adafruit HX8357 Library",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit HX8357 3.5\" display library.",
      "paragraph": "Adafruit HX8357 3.5\" display library.",
      "website": "https://github.com/adafruit/Adafruit_HX8357_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_HX8357_Library-1.0.2.zip",
      "archiveFileName": "Adafruit_HX8357_Library-1.0.2.zip",
      "size": 325044,
      "checksum": "SHA-256:9adb4a924bf54054f86b9085ac9833e7cafcb5655c7658f1caf797a6e24d7144"
    },
    {
      "name": "Adafruit INA219",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "INA219 Current Sensor",
      "paragraph": "INA219 Current Sensor",
      "website": "https://github.com/adafruit/Adafruit_INA219",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_INA219-1.0.0.zip",
      "archiveFileName": "Adafruit_INA219-1.0.0.zip",
      "size": 7080,
      "checksum": "SHA-256:c31d3296b59cc4dfa1f544e78a34805f5c5fe7c20041462a35a93c5f64accda9"
    },
    {
      "name": "Adafruit ILI9341",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for Adafruit ILI9341 displays",
      "paragraph": "Library for Adafruit ILI9341 displays",
      "website": "https://github.com/adafruit/Adafruit_ILI9341",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_ILI9341-1.0.0.zip",
      "archiveFileName": "Adafruit_ILI9341-1.0.0.zip",
      "size": 19137,
      "checksum": "SHA-256:b510d4df2021b4ec0f2c157bcf729fe38d0e217704d26752cd382db9db110bde"
    },
    {
      "name": "Adafruit ILI9341",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for Adafruit ILI9341 displays",
      "paragraph": "Library for Adafruit ILI9341 displays",
      "website": "https://github.com/adafruit/Adafruit_ILI9341",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_ILI9341-1.0.1.zip",
      "archiveFileName": "Adafruit_ILI9341-1.0.1.zip",
      "size": 19207,
      "checksum": "SHA-256:cbf84769ef1ee7c303c23461d37fecb54a6de3644270993261248d8c8a19db9c"
    },
    {
      "name": "Adafruit ILI9341",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for Adafruit ILI9341 displays",
      "paragraph": "Library for Adafruit ILI9341 displays",
      "website": "https://github.com/adafruit/Adafruit_ILI9341",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_ILI9341-1.0.2.zip",
      "archiveFileName": "Adafruit_ILI9341-1.0.2.zip",
      "size": 19445,
      "checksum": "SHA-256:4e7f75546c582795c964eb505c0e8ace0f8a54ce1a8e188fb714894568083304"
    },
    {
      "name": "Adafruit ILI9341",
      "version": "1.0.3",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for Adafruit ILI9341 displays",
      "paragraph": "Library for Adafruit ILI9341 displays",
      "website": "https://github.com/adafruit/Adafruit_ILI9341",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_ILI9341-1.0.3.zip",
      "archiveFileName": "Adafruit_ILI9341-1.0.3.zip",
      "size": 26585,
      "checksum": "SHA-256:746ffdbd928155e2de8cef2a1d6eff46f1eca155c3bf7d80490b8798c4eb8fee"
    },
    {
      "name": "Adafruit ILI9341",
      "version": "1.0.4",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for Adafruit ILI9341 displays",
      "paragraph": "Library for Adafruit ILI9341 displays",
      "website": "https://github.com/adafruit/Adafruit_ILI9341",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_ILI9341-1.0.4.zip",
      "archiveFileName": "Adafruit_ILI9341-1.0.4.zip",
      "size": 34661,
      "checksum": "SHA-256:d89e47c2e3c0b22cc3f6ccc551c65b296f03c93e7218e467804a0089d7fdb273"
    },
    {
      "name": "Adafruit ILI9341",
      "version": "1.0.5",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for Adafruit ILI9341 displays",
      "paragraph": "Library for Adafruit ILI9341 displays",
      "website": "https://github.com/adafruit/Adafruit_ILI9341",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_ILI9341-1.0.5.zip",
      "archiveFileName": "Adafruit_ILI9341-1.0.5.zip",
      "size": 35087,
      "checksum": "SHA-256:423ce329637c141a531ebbf0535f6906d78625fdfa0b1173c4c701a81009f8ab"
    },
    {
      "name": "Adafruit ILI9341",
      "version": "1.0.6",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for Adafruit ILI9341 displays",
      "paragraph": "Library for Adafruit ILI9341 displays",
      "website": "https://github.com/adafruit/Adafruit_ILI9341",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_ILI9341-1.0.6.zip",
      "archiveFileName": "Adafruit_ILI9341-1.0.6.zip",
      "size": 35597,
      "checksum": "SHA-256:bf7515e0bf704e86aed8f0439665aa74bc554629ee7968559e6522b3024c4f75"
    },
    {
      "name": "Adafruit ILI9341",
      "version": "1.0.7",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for Adafruit ILI9341 displays",
      "paragraph": "Library for Adafruit ILI9341 displays",
      "website": "https://github.com/adafruit/Adafruit_ILI9341",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_ILI9341-1.0.7.zip",
      "archiveFileName": "Adafruit_ILI9341-1.0.7.zip",
      "size": 34600,
      "checksum": "SHA-256:89035eb5a4ca0610e584095aeae589fd4225a80344a616983c5dadfdc112324c"
    },
    {
      "name": "Adafruit ILI9341",
      "version": "1.0.8",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for Adafruit ILI9341 displays",
      "paragraph": "Library for Adafruit ILI9341 displays",
      "website": "https://github.com/adafruit/Adafruit_ILI9341",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_ILI9341-1.0.8.zip",
      "archiveFileName": "Adafruit_ILI9341-1.0.8.zip",
      "size": 34647,
      "checksum": "SHA-256:6680f9d559b1d464384041c56c87c84db840a2f270867f9f1c1db12101b88b80"
    },
    {
      "name": "Adafruit L3GD20 U",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified sensor driver for the L3GD20 Gyroscope",
      "paragraph": "Unified sensor driver for the L3GD20 Gyroscope",
      "website": "https://github.com/adafruit/Adafruit_L3GD20_U",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_L3GD20_U-1.0.0.zip",
      "archiveFileName": "Adafruit_L3GD20_U-1.0.0.zip",
      "size": 7441,
      "checksum": "SHA-256:c77502b3dbd8a0d6001a3723b75a8f728c94cd16609c3bc2fb38fdf32c10f8c8"
    },
    {
      "name": "Adafruit L3GD20 U",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified sensor driver for the L3GD20 Gyroscope",
      "paragraph": "Unified sensor driver for the L3GD20 Gyroscope",
      "website": "https://github.com/adafruit/Adafruit_L3GD20_U",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_L3GD20_U-1.0.1.zip",
      "archiveFileName": "Adafruit_L3GD20_U-1.0.1.zip",
      "size": 7566,
      "checksum": "SHA-256:6ce0a396632d10513c6e04de17bc04de5aa1ebefd34c165caa3e38fbd2f225d2"
    },
    {
      "name": "Adafruit LED Backpack Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "paragraph": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "website": "https://github.com/adafruit/Adafruit-LED-Backpack-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_LED_Backpack_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_LED_Backpack_Library-1.0.0.zip",
      "size": 63268,
      "checksum": "SHA-256:d7221b73590d879da911a990334d0ba7e09763c11811d2e64d79791600f6849c"
    },
    {
      "name": "Adafruit LED Backpack Library",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "paragraph": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "website": "https://github.com/adafruit/Adafruit-LED-Backpack-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_LED_Backpack_Library-1.1.0.zip",
      "archiveFileName": "Adafruit_LED_Backpack_Library-1.1.0.zip",
      "size": 68093,
      "checksum": "SHA-256:bb518f018b88cc1e68bbab0ce15e6126a8b426ac30bc0b0a9737b95647cf56b7"
    },
    {
      "name": "Adafruit LED Backpack Library",
      "version": "1.1.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "paragraph": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "website": "https://github.com/adafruit/Adafruit-LED-Backpack-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_LED_Backpack_Library-1.1.1.zip",
      "archiveFileName": "Adafruit_LED_Backpack_Library-1.1.1.zip",
      "size": 69143,
      "checksum": "SHA-256:2d499c35ad94156d99406921eafc4a11b4b151d913ba044a1bd14d5d4ecf2d04"
    },
    {
      "name": "Adafruit LED Backpack Library",
      "version": "1.1.3",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "paragraph": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "website": "https://github.com/adafruit/Adafruit-LED-Backpack-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_LED_Backpack_Library-1.1.3.zip",
      "archiveFileName": "Adafruit_LED_Backpack_Library-1.1.3.zip",
      "size": 69329,
      "checksum": "SHA-256:92cf8f1b20d7053497c62ba872d90bba3386ddffaecb4520ca9796c9e3405b5d"
    },
    {
      "name": "Adafruit LED Backpack Library",
      "version": "1.1.4",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "paragraph": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "website": "https://github.com/adafruit/Adafruit-LED-Backpack-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_LED_Backpack_Library-1.1.4.zip",
      "archiveFileName": "Adafruit_LED_Backpack_Library-1.1.4.zip",
      "size": 70574,
      "checksum": "SHA-256:ec882b4b99f70e6ee2670cbd450dc615f73283948506a2037e646dbd78e830f8"
    },
    {
      "name": "Adafruit LED Backpack Library",
      "version": "1.1.6",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "paragraph": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "website": "https://github.com/adafruit/Adafruit-LED-Backpack-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_LED_Backpack_Library-1.1.6.zip",
      "archiveFileName": "Adafruit_LED_Backpack_Library-1.1.6.zip",
      "size": 70283,
      "checksum": "SHA-256:63c6899e5f618d1b6215864667cd986f1b6fdb701cb80936492e704578a9a1db"
    },
    {
      "name": "Adafruit LED Backpack Library",
      "version": "1.1.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "paragraph": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "website": "https://github.com/adafruit/Adafruit-LED-Backpack-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_LED_Backpack_Library-1.1.2.zip",
      "archiveFileName": "Adafruit_LED_Backpack_Library-1.1.2.zip",
      "size": 69178,
      "checksum": "SHA-256:f89ecb1b5a03fc931a65b3d42be6d46a0539dabc924666cd74306fb98967ca66"
    },
    {
      "name": "Adafruit LED Backpack Library",
      "version": "1.1.5",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "paragraph": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "website": "https://github.com/adafruit/Adafruit-LED-Backpack-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_LED_Backpack_Library-1.1.5.zip",
      "archiveFileName": "Adafruit_LED_Backpack_Library-1.1.5.zip",
      "size": 70417,
      "checksum": "SHA-256:21ca376358def4c4176706c35d99d9ae4ad1c62b74fce639a26797dafede6fdf"
    },
    {
      "name": "Adafruit LSM303DLHC",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified sensor driver for Adafruit's LSM303 Breakout (Accelerometer + Magnetometer)",
      "paragraph": "Unified sensor driver for Adafruit's LSM303 Breakout (Accelerometer + Magnetometer)",
      "website": "https://github.com/adafruit/Adafruit_LSM303DLHC",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_LSM303DLHC-1.0.0.zip",
      "archiveFileName": "Adafruit_LSM303DLHC-1.0.0.zip",
      "size": 8495,
      "checksum": "SHA-256:3ae8702c7093274db0349caa2ee6f07b33d759273d51268f635540a377bbb027"
    },
    {
      "name": "Adafruit LSM303DLHC",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified sensor driver for Adafruit's LSM303 Breakout (Accelerometer + Magnetometer)",
      "paragraph": "Unified sensor driver for Adafruit's LSM303 Breakout (Accelerometer + Magnetometer)",
      "website": "https://github.com/adafruit/Adafruit_LSM303DLHC",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_LSM303DLHC-1.0.1.zip",
      "archiveFileName": "Adafruit_LSM303DLHC-1.0.1.zip",
      "size": 9183,
      "checksum": "SHA-256:2eb07eefb4568e4937b03854aaa8f7428b1ec1fce39837489a4673a01f118d48"
    },
    {
      "name": "Adafruit LSM303DLHC",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified sensor driver for Adafruit's LSM303 Breakout (Accelerometer + Magnetometer)",
      "paragraph": "Unified sensor driver for Adafruit's LSM303 Breakout (Accelerometer + Magnetometer)",
      "website": "https://github.com/adafruit/Adafruit_LSM303DLHC",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_LSM303DLHC-1.0.2.zip",
      "archiveFileName": "Adafruit_LSM303DLHC-1.0.2.zip",
      "size": 9157,
      "checksum": "SHA-256:4663c996dc9bf8921e38297172412112a0123b205af82e9edf5b27f5f3e8481b"
    },
    {
      "name": "Adafruit LSM303DLHC",
      "version": "1.0.3",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified sensor driver for Adafruit's LSM303 Breakout (Accelerometer + Magnetometer)",
      "paragraph": "Unified sensor driver for Adafruit's LSM303 Breakout (Accelerometer + Magnetometer)",
      "website": "https://github.com/adafruit/Adafruit_LSM303DLHC",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_LSM303DLHC-1.0.3.zip",
      "archiveFileName": "Adafruit_LSM303DLHC-1.0.3.zip",
      "size": 10573,
      "checksum": "SHA-256:30b8f8f3a08e622380a86ab2efe100cabd7bec11a5ae5c9763b5bfaa595313d0"
    },
    {
      "name": "Adafruit LSM9DS0 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for LSM9DS0 9-DOF sensor board.",
      "paragraph": "Arduino library for LSM9DS0 9-DOF sensor board.",
      "website": "https://github.com/adafruit/Adafruit_LSM9DS0_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_LSM9DS0_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_LSM9DS0_Library-1.0.0.zip",
      "size": 10896,
      "checksum": "SHA-256:fe9215d5a02db8a34197194e52a438b34aafe45569a0fe5aceb1ff9fbabf48eb"
    },
    {
      "name": "Adafruit LSM9DS0 Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for LSM9DS0 9-DOF sensor board.",
      "paragraph": "Arduino library for LSM9DS0 9-DOF sensor board.",
      "website": "https://github.com/adafruit/Adafruit_LSM9DS0_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_LSM9DS0_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_LSM9DS0_Library-1.0.1.zip",
      "size": 10957,
      "checksum": "SHA-256:9ed9613c6b22480afdf0bb1e35df2ac48c5b2c5ef100ef8dc1904307c1e01eef"
    },
    {
      "name": "Adafruit MAX31855 library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit Thermocouple breakout with MAX31855K",
      "paragraph": "Library for the Adafruit Thermocouple breakout with MAX31855K",
      "website": "https://github.com/adafruit/Adafruit-MAX31855-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MAX31855_library-1.0.0.zip",
      "archiveFileName": "Adafruit_MAX31855_library-1.0.0.zip",
      "size": 6982,
      "checksum": "SHA-256:ff9569d92c46d2e82fcf65e583095b39209f26432c1e4ca1c87a785bd4b991b4"
    },
    {
      "name": "Adafruit MAX31855 library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit Thermocouple breakout with MAX31855K",
      "paragraph": "Library for the Adafruit Thermocouple breakout with MAX31855K",
      "website": "https://github.com/adafruit/Adafruit-MAX31855-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MAX31855_library-1.0.1.zip",
      "archiveFileName": "Adafruit_MAX31855_library-1.0.1.zip",
      "size": 7019,
      "checksum": "SHA-256:1607fccca77cb649d6237d683b462aa9eaecce716c721eb60e3f68d1aa3bcdb7"
    },
    {
      "name": "Adafruit MAX31855 library",
      "version": "1.0.3",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit Thermocouple breakout with MAX31855K",
      "paragraph": "Library for the Adafruit Thermocouple breakout with MAX31855K",
      "website": "https://github.com/adafruit/Adafruit-MAX31855-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MAX31855_library-1.0.3.zip",
      "archiveFileName": "Adafruit_MAX31855_library-1.0.3.zip",
      "size": 7891,
      "checksum": "SHA-256:4493e24225660bf64af1cbfbabedb89495eb93001f6b03c48fd40f8e9b82054a"
    },
    {
      "name": "Adafruit MCP23008 library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino Library for the MCP23008 (and '9) I2C I/O expander",
      "paragraph": "Arduino Library for the MCP23008 (and '9) I2C I/O expander",
      "website": "https://github.com/adafruit/Adafruit-MCP23008-library",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MCP23008_library-1.0.0.zip",
      "archiveFileName": "Adafruit_MCP23008_library-1.0.0.zip",
      "size": 4719,
      "checksum": "SHA-256:81dbedae057fdb7585e6d47159add185062897f25f25cc429207d1bc5378d6f6"
    },
    {
      "name": "Adafruit MCP23008 library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino Library for the MCP23008 (and '9) I2C I/O expander",
      "paragraph": "Arduino Library for the MCP23008 (and '9) I2C I/O expander",
      "website": "https://github.com/adafruit/Adafruit-MCP23008-library",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MCP23008_library-1.0.1.zip",
      "archiveFileName": "Adafruit_MCP23008_library-1.0.1.zip",
      "size": 4756,
      "checksum": "SHA-256:f3f5e9c7222c445d22fb17f0d29cc49acc2e46984a889f114e1d110fe76da2d5"
    },
    {
      "name": "Adafruit MCP23017 Arduino Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the MCP23017 I2C Port Expander",
      "paragraph": "Library for the MCP23017 I2C Port Expander",
      "website": "https://github.com/adafruit/Adafruit-MCP23017-Arduino-Library",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MCP23017_Arduino_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_MCP23017_Arduino_Library-1.0.0.zip",
      "size": 9422,
      "checksum": "SHA-256:39630980ad3d6b2050c0e91b3103de5dbcd07f3a352d40e57d5daddd0a3cfda8"
    },
    {
      "name": "Adafruit MCP23017 Arduino Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the MCP23017 I2C Port Expander",
      "paragraph": "Library for the MCP23017 I2C Port Expander",
      "website": "https://github.com/adafruit/Adafruit-MCP23017-Arduino-Library",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MCP23017_Arduino_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_MCP23017_Arduino_Library-1.0.1.zip",
      "size": 9441,
      "checksum": "SHA-256:aff546591d09918e925195b1173b0d72e9e15c0ea4d637ebd5682962e4605372"
    },
    {
      "name": "Adafruit MCP4725",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MCP4725 12-bit I2C DAC",
      "paragraph": "MCP4725 12-bit I2C DAC",
      "website": "https://github.com/adafruit/Adafruit_MCP4725",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MCP4725-1.0.0.zip",
      "archiveFileName": "Adafruit_MCP4725-1.0.0.zip",
      "size": 27995,
      "checksum": "SHA-256:7fcf74aa54064bc459a6e22dea7f994af3b18166403eab56a15f5c4b8242c397"
    },
    {
      "name": "Adafruit MCP4725",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MCP4725 12-bit I2C DAC",
      "paragraph": "MCP4725 12-bit I2C DAC",
      "website": "https://github.com/adafruit/Adafruit_MCP4725",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MCP4725-1.0.1.zip",
      "archiveFileName": "Adafruit_MCP4725-1.0.1.zip",
      "size": 27998,
      "checksum": "SHA-256:f146feb4e22838fd71ea71abab746633d6a06c024024a3171f447e453c4ae508"
    },
    {
      "name": "Adafruit MCP4725",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MCP4725 12-bit I2C DAC",
      "paragraph": "MCP4725 12-bit I2C DAC",
      "website": "https://github.com/adafruit/Adafruit_MCP4725",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MCP4725-1.0.2.zip",
      "archiveFileName": "Adafruit_MCP4725-1.0.2.zip",
      "size": 28013,
      "checksum": "SHA-256:804f1b6d176f52310a4bbbca14758a2f6e124a6cd0a4386f0e058aeaba20487d"
    },
    {
      "name": "Adafruit MiniMLX90614",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A simplified MLX90614 library for use with the Trinket/Gemma",
      "paragraph": "A simplified MLX90614 library for use with the Trinket/Gemma",
      "website": "https://github.com/adafruit/Adafruit_MiniMLX90614",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MiniMLX90614-1.0.0.zip",
      "archiveFileName": "Adafruit_MiniMLX90614-1.0.0.zip",
      "size": 4617,
      "checksum": "SHA-256:ce86cbfbb1db3c28d81ba417716e010fecf5889dbd2b0296cd24f7bc444f7078"
    },
    {
      "name": "Adafruit MCP9808 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the MCP9808 sensors in the Adafruit shop",
      "paragraph": "Arduino library for the MCP9808 sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit_MCP9808_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MCP9808_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_MCP9808_Library-1.0.0.zip",
      "size": 5176,
      "checksum": "SHA-256:3e018209a6ad6e8c5ce2cb77f41df114511a23bb380fa4e2efab9fa6fcdd10b2"
    },
    {
      "name": "Adafruit MCP9808 Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the MCP9808 sensors in the Adafruit shop",
      "paragraph": "Arduino library for the MCP9808 sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit_MCP9808_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MCP9808_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_MCP9808_Library-1.0.1.zip",
      "size": 5224,
      "checksum": "SHA-256:9e7e516f4ee1baf704783d8af8aff61e2870001d87426537ba69df1fcb5682cf"
    },
    {
      "name": "Adafruit MLX90614 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the MLX90614 sensors in the Adafruit shop",
      "paragraph": "Arduino library for the MLX90614 sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit-MLX90614-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MLX90614_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_MLX90614_Library-1.0.0.zip",
      "size": 3810,
      "checksum": "SHA-256:1b4845fa5b7adcbb464da4a00db0b0594a87cfc24034babb16294c56d7dccdbe"
    },
    {
      "name": "Adafruit MMA8451 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the MMA8451 Accelerometer sensors in the Adafruit shop",
      "paragraph": "Arduino library for the MMA8451 Accelerometer sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit_MMA8451_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MMA8451_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_MMA8451_Library-1.0.0.zip",
      "size": 7227,
      "checksum": "SHA-256:742d13f8a1d6f6814062325b9a4e640458f1e35b41622fa66e06abb412aea766"
    },
    {
      "name": "Adafruit MMA8451 Library",
      "version": "1.0.3",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the MMA8451 Accelerometer sensors in the Adafruit shop",
      "paragraph": "Arduino library for the MMA8451 Accelerometer sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit_MMA8451_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MMA8451_Library-1.0.3.zip",
      "archiveFileName": "Adafruit_MMA8451_Library-1.0.3.zip",
      "size": 7400,
      "checksum": "SHA-256:0bb6c6a75a9199a4eddadd29745a44f7bad6c1b0299d4efc159d083b7d7254e0"
    },
    {
      "name": "Adafruit Motor Shield library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit Motor shield V1 firmware with basic Microstepping support. Works with all Arduinos and the Mega",
      "paragraph": "Adafruit Motor shield V1 firmware with basic Microstepping support. Works with all Arduinos and the Mega",
      "website": "https://github.com/adafruit/Adafruit-Motor-Shield-library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Motor_Shield_library-1.0.0.zip",
      "archiveFileName": "Adafruit_Motor_Shield_library-1.0.0.zip",
      "size": 10828,
      "checksum": "SHA-256:a4af6c4c07b8ded9dd9775db32392d464fbd1fec189b6ba597c84bffa0660918"
    },
    {
      "name": "Adafruit Motor Shield V2 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit Motor Shield V2 for Arduino. It supports DC motors \u0026 stepper motors with microstepping as well as stacking-support.",
      "paragraph": "Library for the Adafruit Motor Shield V2 for Arduino. It supports DC motors \u0026 stepper motors with microstepping as well as stacking-support.",
      "website": "https://github.com/adafruit/Adafruit_Motor_Shield_V2_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Motor_Shield_V2_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_Motor_Shield_V2_Library-1.0.0.zip",
      "size": 16199,
      "checksum": "SHA-256:3a6b2256f145c665929e3d6c04ff05a0312fafc8f9bad2a186b31b0a3837c871"
    },
    {
      "name": "Adafruit Motor Shield V2 Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit Motor Shield V2 for Arduino. It supports DC motors \u0026 stepper motors with microstepping as well as stacking-support.",
      "paragraph": "Library for the Adafruit Motor Shield V2 for Arduino. It supports DC motors \u0026 stepper motors with microstepping as well as stacking-support.",
      "website": "https://github.com/adafruit/Adafruit_Motor_Shield_V2_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Motor_Shield_V2_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_Motor_Shield_V2_Library-1.0.1.zip",
      "size": 16152,
      "checksum": "SHA-256:5cd57bb8149967497149f58667f94cffbe467aaf65aa640347a94da9ce38e180"
    },
    {
      "name": "Adafruit Motor Shield V2 Library",
      "version": "1.0.4",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit Motor Shield V2 for Arduino. It supports DC motors \u0026 stepper motors with microstepping as well as stacking-support.",
      "paragraph": "Library for the Adafruit Motor Shield V2 for Arduino. It supports DC motors \u0026 stepper motors with microstepping as well as stacking-support.",
      "website": "https://github.com/adafruit/Adafruit_Motor_Shield_V2_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Motor_Shield_V2_Library-1.0.4.zip",
      "archiveFileName": "Adafruit_Motor_Shield_V2_Library-1.0.4.zip",
      "size": 16559,
      "checksum": "SHA-256:4f03880a52128cb572634f00c9f01bc8569094d740532822a5168a0f15df833a"
    },
    {
      "name": "Adafruit MPL115A2",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for the Adafruit MPL115A2 barometric pressure sensor breakout",
      "paragraph": "Driver for the Adafruit MPL115A2 barometric pressure sensor breakout",
      "website": "https://github.com/adafruit/Adafruit_MPL115A2",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MPL115A2-1.0.0.zip",
      "archiveFileName": "Adafruit_MPL115A2-1.0.0.zip",
      "size": 5152,
      "checksum": "SHA-256:48ec46ebf535cd951e5283c1215c18cfd18592aa10c1216c6012cd563a19f0ea"
    },
    {
      "name": "Adafruit MPL3115A2 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the MPL3115A2 sensors in the Adafruit shop",
      "paragraph": "Arduino library for the MPL3115A2 sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit_MPL3115A2_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MPL3115A2_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_MPL3115A2_Library-1.0.0.zip",
      "size": 5731,
      "checksum": "SHA-256:c26e38fbf831edc43423e3ebb7386198d7fe2736f7c8f7cee8a11604b5bd721a"
    },
    {
      "name": "Adafruit MPR121",
      "version": "1.0.0",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the MPR121-based capacitive sensors in the Adafruit shop.",
      "paragraph": "Designed specifically to work with the MPR121 Breakout in the Adafruit shop.",
      "website": "https://github.com/adafruit/Adafruit_MPR121_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MPR121-1.0.0.zip",
      "archiveFileName": "Adafruit_MPR121-1.0.0.zip",
      "size": 5401,
      "checksum": "SHA-256:314b0dcd869a1f2ce1a7356568cd0c55a56b92b0556be89989ee04a473a41b35"
    },
    {
      "name": "Adafruit NeoMatrix",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit_GFX-compatible library for NeoPixel grids",
      "paragraph": "Adafruit_GFX-compatible library for NeoPixel grids",
      "website": "https://github.com/adafruit/Adafruit_NeoMatrix",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_NeoMatrix-1.0.0.zip",
      "archiveFileName": "Adafruit_NeoMatrix-1.0.0.zip",
      "size": 22502,
      "checksum": "SHA-256:ef29612e158e6103e6acc81e349215415145de9241d5b39110a0937dded0533d"
    },
    {
      "name": "Adafruit NeoMatrix",
      "version": "1.1.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit_GFX-compatible library for NeoPixel grids",
      "paragraph": "Adafruit_GFX-compatible library for NeoPixel grids",
      "website": "https://github.com/adafruit/Adafruit_NeoMatrix",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_NeoMatrix-1.1.1.zip",
      "archiveFileName": "Adafruit_NeoMatrix-1.1.1.zip",
      "size": 22986,
      "checksum": "SHA-256:1d10ff45ecc2cef80b77672bafdd4d8dbcbb3dd512e1a964bd71737b61faac9d"
    },
    {
      "name": "Adafruit NeoMatrix",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit_GFX-compatible library for NeoPixel grids",
      "paragraph": "Adafruit_GFX-compatible library for NeoPixel grids",
      "website": "https://github.com/adafruit/Adafruit_NeoMatrix",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_NeoMatrix-1.0.1.zip",
      "archiveFileName": "Adafruit_NeoMatrix-1.0.1.zip",
      "size": 22545,
      "checksum": "SHA-256:8d3b3489a550a0aa5f453b8e6264bd7ca15b2e92fa7229e966e0cc76ecd0b50f"
    },
    {
      "name": "Adafruit NeoMatrix",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit_GFX-compatible library for NeoPixel grids",
      "paragraph": "Adafruit_GFX-compatible library for NeoPixel grids",
      "website": "https://github.com/adafruit/Adafruit_NeoMatrix",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_NeoMatrix-1.1.0.zip",
      "archiveFileName": "Adafruit_NeoMatrix-1.1.0.zip",
      "size": 22982,
      "checksum": "SHA-256:fd694e3636b57514c531fd5cc74b8b8fbee1019ad6d4cdfb9c5a85032c6ac7d5"
    },
    {
      "name": "Adafruit NeoMatrix",
      "version": "1.1.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit_GFX-compatible library for NeoPixel grids",
      "paragraph": "Adafruit_GFX-compatible library for NeoPixel grids",
      "website": "https://github.com/adafruit/Adafruit_NeoMatrix",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_NeoMatrix-1.1.2.zip",
      "archiveFileName": "Adafruit_NeoMatrix-1.1.2.zip",
      "size": 23027,
      "checksum": "SHA-256:2776d607c26861e066360ae5e3651535c8707d829ecf3e4622c8235709bed001"
    },
    {
      "name": "Adafruit NeoPixel",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "paragraph": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "website": "https://github.com/adafruit/Adafruit_NeoPixel",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_NeoPixel-1.0.0.zip",
      "archiveFileName": "Adafruit_NeoPixel-1.0.0.zip",
      "size": 29918,
      "checksum": "SHA-256:cdf25cc6a3f14817857807c3439db99e6e51b3d249bcd1ff1b58c3221edb8025"
    },
    {
      "name": "Adafruit NeoPixel",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "paragraph": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "website": "https://github.com/adafruit/Adafruit_NeoPixel",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_NeoPixel-1.0.1.zip",
      "archiveFileName": "Adafruit_NeoPixel-1.0.1.zip",
      "size": 31343,
      "checksum": "SHA-256:f54292bff918cd7ec4e7f946c8bd4723fb8b825a31b95f5e9e68c1dd9425ad55"
    },
    {
      "name": "Adafruit NeoPixel",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "paragraph": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "website": "https://github.com/adafruit/Adafruit_NeoPixel",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_NeoPixel-1.0.2.zip",
      "archiveFileName": "Adafruit_NeoPixel-1.0.2.zip",
      "size": 31714,
      "checksum": "SHA-256:ab49d6e1a28b2f5e59216b2bbfb179568243b793bcaed84d9a608b0344c2b6c9"
    },
    {
      "name": "Adafruit NeoPixel",
      "version": "1.0.3",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "paragraph": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "website": "https://github.com/adafruit/Adafruit_NeoPixel",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_NeoPixel-1.0.3.zip",
      "archiveFileName": "Adafruit_NeoPixel-1.0.3.zip",
      "size": 34424,
      "checksum": "SHA-256:9dd04b2da57187602ad6f39f470381cdb6f2626f0c20ec302cc8d085a5bab315"
    },
    {
      "name": "Adafruit NeoPixel",
      "version": "1.0.4",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "paragraph": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "website": "https://github.com/adafruit/Adafruit_NeoPixel",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_NeoPixel-1.0.4.zip",
      "archiveFileName": "Adafruit_NeoPixel-1.0.4.zip",
      "size": 30261,
      "checksum": "SHA-256:471da24c391387524c3685c29795b108cd8bc1b30d97419cf2605d7b44c26b54"
    },
    {
      "name": "Adafruit NeoPixel",
      "version": "1.0.5",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "paragraph": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "website": "https://github.com/adafruit/Adafruit_NeoPixel",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_NeoPixel-1.0.5.zip",
      "archiveFileName": "Adafruit_NeoPixel-1.0.5.zip",
      "size": 27627,
      "checksum": "SHA-256:066d1437c2d9fb69f9ac2d5e4f234c97e0401155b2e3d2cbbb6f938c2be0ecb1"
    },
    {
      "name": "Adafruit NeoPixel",
      "version": "1.0.6",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "paragraph": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "website": "https://github.com/adafruit/Adafruit_NeoPixel",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_NeoPixel-1.0.6.zip",
      "archiveFileName": "Adafruit_NeoPixel-1.0.6.zip",
      "size": 27879,
      "checksum": "SHA-256:fc5e4f5736d5101e2e7c39811cd5d3b47eda420cb7bb4e6995ef875281d9a478"
    },
    {
      "name": "Adafruit NeoPixel",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "paragraph": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "website": "https://github.com/adafruit/Adafruit_NeoPixel",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_NeoPixel-1.1.0.zip",
      "archiveFileName": "Adafruit_NeoPixel-1.1.0.zip",
      "size": 36316,
      "checksum": "SHA-256:36759b25993026d7f0905a9534b9d05a4fc0c741401fb7f1d9fbf76b8161c338"
    },
    {
      "name": "Adafruit NeoPixel",
      "version": "1.1.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "paragraph": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "website": "https://github.com/adafruit/Adafruit_NeoPixel",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_NeoPixel-1.1.1.zip",
      "archiveFileName": "Adafruit_NeoPixel-1.1.1.zip",
      "size": 36318,
      "checksum": "SHA-256:405ddb855baf6727dbe5e7a9a080d3bc0667482b5c9ac77138a61c8b2858ac91"
    },
    {
      "name": "Adafruit nRF8001",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Drivers for Adafruit's nRF8001 Bluetooth Low Energy Breakout",
      "paragraph": "Drivers for Adafruit's nRF8001 Bluetooth Low Energy Breakout",
      "website": "https://github.com/adafruit/Adafruit_nRF8001",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_nRF8001-1.0.0.zip",
      "archiveFileName": "Adafruit_nRF8001-1.0.0.zip",
      "size": 58452,
      "checksum": "SHA-256:bc313fff28722237cb0997764ff343707c3dd2b43e8304480c793bf4d908e652"
    },
    {
      "name": "Adafruit PCD8544 Nokia 5110 LCD library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino driver for PC8544, most commonly found in small Nokia 5110's",
      "paragraph": "Arduino driver for PC8544, most commonly found in small Nokia 5110's",
      "website": "https://github.com/adafruit/Adafruit-PCD8544-Nokia-5110-LCD-library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_PCD8544_Nokia_5110_LCD_library-1.0.0.zip",
      "archiveFileName": "Adafruit_PCD8544_Nokia_5110_LCD_library-1.0.0.zip",
      "size": 9728,
      "checksum": "SHA-256:404eef796c3e373c90f17278eaca3dba690ec1c1135e5df1818b34bec534a67f"
    },
    {
      "name": "Adafruit PN532",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for SPI and I2C access to the PN532 RFID/Near Field Communication chip",
      "paragraph": "Arduino library for SPI and I2C access to the PN532 RFID/Near Field Communication chip",
      "website": "https://github.com/adafruit/Adafruit-PN532",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_PN532-1.0.0.zip",
      "archiveFileName": "Adafruit_PN532-1.0.0.zip",
      "size": 53052,
      "checksum": "SHA-256:37a58580254cda8d91e058c0290b6e0cd205cd3314dea95d1e82a4c9824b59ae"
    },
    {
      "name": "Adafruit PS2 Trackpad",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "PS2 library for Adafruit capacitive trackpads",
      "paragraph": "PS2 library for Adafruit capacitive trackpads",
      "website": "https://github.com/adafruit/Adafruit-PS2-Trackpad",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_PS2_Trackpad-1.0.0.zip",
      "archiveFileName": "Adafruit_PS2_Trackpad-1.0.0.zip",
      "size": 5512,
      "checksum": "SHA-256:cabcb326e0fa89135d181bd3db1b56a13b5091926e4b50c1d325edc7b995f60f"
    },
    {
      "name": "Adafruit PWM Servo Driver Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit PWM Servo Driver Library",
      "paragraph": "Adafruit PWM Servo Driver Library",
      "website": "https://github.com/adafruit/Adafruit-PWM-Servo-Driver-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_PWM_Servo_Driver_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_PWM_Servo_Driver_Library-1.0.0.zip",
      "size": 7354,
      "checksum": "SHA-256:ff2c034a86b3cb3b9a3ac1ed565f9bab040127d2aee662acd50aaa5fb316d3cb"
    },
    {
      "name": "Adafruit RA8875",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit's Arduino driver for the RA8875 TFT driver",
      "paragraph": "Adafruit's Arduino driver for the RA8875 TFT driver",
      "website": "https://github.com/adafruit/Adafruit_RA8875",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_RA8875-1.0.0.zip",
      "archiveFileName": "Adafruit_RA8875-1.0.0.zip",
      "size": 77376,
      "checksum": "SHA-256:c77b3d13ba85f2a9944c3de025a3b1620af006c0043752e2585f6b52aef15b0f"
    },
    {
      "name": "Adafruit RA8875",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit's Arduino driver for the RA8875 TFT driver",
      "paragraph": "Adafruit's Arduino driver for the RA8875 TFT driver",
      "website": "https://github.com/adafruit/Adafruit_RA8875",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_RA8875-1.0.1.zip",
      "archiveFileName": "Adafruit_RA8875-1.0.1.zip",
      "size": 77393,
      "checksum": "SHA-256:90b4eec2c5055306fee9674cc6459c166cae86e39c81a3e6940071126dc18344"
    },
    {
      "name": "Adafruit RA8875",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit's Arduino driver for the RA8875 TFT driver",
      "paragraph": "Adafruit's Arduino driver for the RA8875 TFT driver",
      "website": "https://github.com/adafruit/Adafruit_RA8875",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_RA8875-1.0.2.zip",
      "archiveFileName": "Adafruit_RA8875-1.0.2.zip",
      "size": 77396,
      "checksum": "SHA-256:ef0c1e8c068d55ca9f60193aa0d23b179f8794edc8e2d7fd330ec4680179e5ba"
    },
    {
      "name": "Adafruit RGB LCD Shield Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit RGB 16x2 LCD Shield.",
      "paragraph": "Library for the Adafruit RGB 16x2 LCD Shield.",
      "website": "https://github.com/adafruit/Adafruit-RGB-LCD-Shield-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_RGB_LCD_Shield_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_RGB_LCD_Shield_Library-1.0.0.zip",
      "size": 11688,
      "checksum": "SHA-256:4270f1097cfd991a9514817c1a7c403ed444e9802c18fd5d2786005b7673a9ea"
    },
    {
      "name": "Adafruit RGB LCD Shield Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit RGB 16x2 LCD Shield.",
      "paragraph": "Library for the Adafruit RGB 16x2 LCD Shield.",
      "website": "https://github.com/adafruit/Adafruit-RGB-LCD-Shield-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_RGB_LCD_Shield_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_RGB_LCD_Shield_Library-1.0.1.zip",
      "size": 11723,
      "checksum": "SHA-256:cfe429d05b0e5cb98690c6f9cb12c6280922bd0ec92f8f8448a3555b7d240ed9"
    },
    {
      "name": "Adafruit SHARP Memory Display",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is an Arduino library for the Adafruit Monochrome SHARP Memory Displays",
      "paragraph": "This is an Arduino library for the Adafruit Monochrome SHARP Memory Displays",
      "website": "https://github.com/adafruit/Adafruit_SHARP_Memory_Display",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_SHARP_Memory_Display-1.0.0.zip",
      "archiveFileName": "Adafruit_SHARP_Memory_Display-1.0.0.zip",
      "size": 6151,
      "checksum": "SHA-256:cc5b7694f6075e0fcdf63c3d983ea83df28d0ab1907197d9f0c5b1fed83c37c6"
    },
    {
      "name": "Adafruit SHARP Memory Display",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is an Arduino library for the Adafruit Monochrome SHARP Memory Displays",
      "paragraph": "This is an Arduino library for the Adafruit Monochrome SHARP Memory Displays",
      "website": "https://github.com/adafruit/Adafruit_SHARP_Memory_Display",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_SHARP_Memory_Display-1.0.1.zip",
      "archiveFileName": "Adafruit_SHARP_Memory_Display-1.0.1.zip",
      "size": 6183,
      "checksum": "SHA-256:1e1ab7f7db3dba9188fd140758094f37e5ae9e17bd592c58c02f5a8006c983b0"
    },
    {
      "name": "Adafruit SHARP Memory Display",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is an Arduino library for the Adafruit Monochrome SHARP Memory Displays",
      "paragraph": "This is an Arduino library for the Adafruit Monochrome SHARP Memory Displays",
      "website": "https://github.com/adafruit/Adafruit_SHARP_Memory_Display",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_SHARP_Memory_Display-1.0.2.zip",
      "archiveFileName": "Adafruit_SHARP_Memory_Display-1.0.2.zip",
      "size": 6251,
      "checksum": "SHA-256:bb09f71aa7af2d78c4850f599dc45401a8f13c8cef8ec760543d53e88a05f78b"
    },
    {
      "name": "Adafruit SHARP Memory Display",
      "version": "1.0.4",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is an Arduino library for the Adafruit Monochrome SHARP Memory Displays",
      "paragraph": "This is an Arduino library for the Adafruit Monochrome SHARP Memory Displays",
      "website": "https://github.com/adafruit/Adafruit_SHARP_Memory_Display",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_SHARP_Memory_Display-1.0.4.zip",
      "archiveFileName": "Adafruit_SHARP_Memory_Display-1.0.4.zip",
      "size": 6509,
      "checksum": "SHA-256:843f07be12d6ad84ae526b60aa5e342cdedfc040a79ed45c87040cd89b9f18b0"
    },
    {
      "name": "Adafruit SI1145 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the SI1145 sensors in the Adafruit shop",
      "paragraph": "Arduino library for the SI1145 sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit_SI1145_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_SI1145_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_SI1145_Library-1.0.0.zip",
      "size": 5487,
      "checksum": "SHA-256:47e5d909fdcb233b631c40e60be6ac24a99f2fce7073ccd76f38df4ebd4be1ff"
    },
    {
      "name": "Adafruit Si4713 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the Si4714 FM+RDS Transmitter in the Adafruit shop",
      "paragraph": "Arduino library for the Si4714 FM+RDS Transmitter in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit-Si4713-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Si4713_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_Si4713_Library-1.0.0.zip",
      "size": 7401,
      "checksum": "SHA-256:952caebc887e42cf48bbb2fd1d67931b63182eceb3141f19ecfc113620d472e5"
    },
    {
      "name": "Adafruit Si5351 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for Adafruit's Si5351 Clockgen Breakout",
      "paragraph": "Driver for Adafruit's Si5351 Clockgen Breakout",
      "website": "https://github.com/adafruit/Adafruit_Si5351_Library",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Si5351_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_Si5351_Library-1.0.0.zip",
      "size": 14068,
      "checksum": "SHA-256:09b04e30e075b60f920bf488abd2b4ddcd4a03865f0e15f5b0ff3a32c00984ce"
    },
    {
      "name": "Adafruit Si5351 Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for Adafruit's Si5351 Clockgen Breakout",
      "paragraph": "Driver for Adafruit's Si5351 Clockgen Breakout",
      "website": "https://github.com/adafruit/Adafruit_Si5351_Library",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Si5351_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_Si5351_Library-1.0.1.zip",
      "size": 14070,
      "checksum": "SHA-256:33c682931d636a50b75192c4fca1d8f88bc1d69f131eea748dc126084eef06a6"
    },
    {
      "name": "Adafruit SoftServo",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A lightweight software servo library, designed for Trinket/Gemma but good for other Arduino-compats",
      "paragraph": "A lightweight software servo library, designed for Trinket/Gemma but good for other Arduino-compats",
      "website": "https://github.com/adafruit/Adafruit_SoftServo",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_SoftServo-1.0.0.zip",
      "archiveFileName": "Adafruit_SoftServo-1.0.0.zip",
      "size": 3046,
      "checksum": "SHA-256:c813579ea6dfa0497cd00ab8111288f4c47b2edc3484535a63b81ae3a797f537"
    },
    {
      "name": "Adafruit Soundboard library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino Library for UART control of the Adafruit Soundboard",
      "paragraph": "Arduino Library for UART control of the Adafruit Soundboard",
      "website": "https://github.com/adafruit/Adafruit_Soundboard_library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Soundboard_library-1.0.0.zip",
      "archiveFileName": "Adafruit_Soundboard_library-1.0.0.zip",
      "size": 6220,
      "checksum": "SHA-256:b27d7b00f4d6c36ac6033c71cb03d7e04aaedf0ae39839b917858b74259c7181"
    },
    {
      "name": "Adafruit SSD1306",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "SSD1306 oled driver library for 'monochrome' 128x64 and 128x32 OLEDs!",
      "paragraph": "SSD1306 oled driver library for 'monochrome' 128x64 and 128x32 OLEDs!",
      "website": "https://github.com/adafruit/Adafruit_SSD1306",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_SSD1306-1.0.0.zip",
      "archiveFileName": "Adafruit_SSD1306-1.0.0.zip",
      "size": 20330,
      "checksum": "SHA-256:e18471b40e86b58bbba956b140bb9cb86d468535e56ce56b7917e916d3e43ac5"
    },
    {
      "name": "Adafruit SSD1306",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "SSD1306 oled driver library for 'monochrome' 128x64 and 128x32 OLEDs!",
      "paragraph": "SSD1306 oled driver library for 'monochrome' 128x64 and 128x32 OLEDs!",
      "website": "https://github.com/adafruit/Adafruit_SSD1306",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_SSD1306-1.0.1.zip",
      "archiveFileName": "Adafruit_SSD1306-1.0.1.zip",
      "size": 21272,
      "checksum": "SHA-256:6658785f33153539cc6cdb8c607915fb48d159a488dae2ea83e84eeaf385b652"
    },
    {
      "name": "Adafruit SSD1306",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "SSD1306 oled driver library for 'monochrome' 128x64 and 128x32 OLEDs!",
      "paragraph": "SSD1306 oled driver library for 'monochrome' 128x64 and 128x32 OLEDs!",
      "website": "https://github.com/adafruit/Adafruit_SSD1306",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_SSD1306-1.1.0.zip",
      "archiveFileName": "Adafruit_SSD1306-1.1.0.zip",
      "size": 21132,
      "checksum": "SHA-256:4ed5303211087065023e2307eb3c81c6913b764b8a1e02c8d0f2c13a6465c3f8"
    },
    {
      "name": "Adafruit SSD1306",
      "version": "1.1.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "SSD1306 oled driver library for 'monochrome' 128x64 and 128x32 OLEDs!",
      "paragraph": "SSD1306 oled driver library for 'monochrome' 128x64 and 128x32 OLEDs!",
      "website": "https://github.com/adafruit/Adafruit_SSD1306",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_SSD1306-1.1.2.zip",
      "archiveFileName": "Adafruit_SSD1306-1.1.2.zip",
      "size": 21231,
      "checksum": "SHA-256:7ee4cad244572401843b248764f3a7b00f55eb4096d31238d066b165223875ed"
    },
    {
      "name": "Adafruit SSD1331 OLED Driver Library for Arduino",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "For 0.96\" OLEDs in the Adafruit shop",
      "paragraph": "For 0.96\" OLEDs in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit-SSD1331-OLED-Driver-Library-for-Arduino",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_SSD1331_OLED_Driver_Library_for_Arduino-1.0.0.zip",
      "archiveFileName": "Adafruit_SSD1331_OLED_Driver_Library_for_Arduino-1.0.0.zip",
      "size": 29890,
      "checksum": "SHA-256:0c5dbb1c3a1b86d06902f13b83051ccdb14c98001897d1add7e2e7123ef56b1d"
    },
    {
      "name": "Adafruit SSD1331 OLED Driver Library for Arduino",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "For 0.96\" OLEDs in the Adafruit shop",
      "paragraph": "For 0.96\" OLEDs in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit-SSD1331-OLED-Driver-Library-for-Arduino",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_SSD1331_OLED_Driver_Library_for_Arduino-1.0.1.zip",
      "archiveFileName": "Adafruit_SSD1331_OLED_Driver_Library_for_Arduino-1.0.1.zip",
      "size": 29906,
      "checksum": "SHA-256:96407c8aa4c4b8076bee54d7926a34fc4483ca820007c34ed346244210be8eaf"
    },
    {
      "name": "Adafruit SSD1331 OLED Driver Library for Arduino",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "For 0.96\" OLEDs in the Adafruit shop",
      "paragraph": "For 0.96\" OLEDs in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit-SSD1331-OLED-Driver-Library-for-Arduino",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_SSD1331_OLED_Driver_Library_for_Arduino-1.0.2.zip",
      "archiveFileName": "Adafruit_SSD1331_OLED_Driver_Library_for_Arduino-1.0.2.zip",
      "size": 29950,
      "checksum": "SHA-256:f54974e8627769d5985298b0877d0e2c2efb775139d777ae483765438928453e"
    },
    {
      "name": "Adafruit SSD1351 library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit library for the 1.27\" and 1.5\" color OLEDs in the shop",
      "paragraph": "Adafruit library for the 1.27\" and 1.5\" color OLEDs in the shop",
      "website": "https://github.com/adafruit/Adafruit-SSD1351-library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_SSD1351_library-1.0.0.zip",
      "archiveFileName": "Adafruit_SSD1351_library-1.0.0.zip",
      "size": 106326,
      "checksum": "SHA-256:e7c4a8c84318c9332341661fce1745b8f128fb6f99d5571cd0718c1953fb2648"
    },
    {
      "name": "Adafruit SSD1351 library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit library for the 1.27\" and 1.5\" color OLEDs in the shop",
      "paragraph": "Adafruit library for the 1.27\" and 1.5\" color OLEDs in the shop",
      "website": "https://github.com/adafruit/Adafruit-SSD1351-library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_SSD1351_library-1.0.1.zip",
      "archiveFileName": "Adafruit_SSD1351_library-1.0.1.zip",
      "size": 106344,
      "checksum": "SHA-256:6ba5ae2363ab5016e317ea457238f0c59c13c9e3f520258829024da8d1f5c4bc"
    },
    {
      "name": "Adafruit ST7735 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is a library for the Adafruit 1.8\" SPI displays.",
      "paragraph": "This is a library for the Adafruit 1.8\" SPI displays.",
      "website": "https://github.com/adafruit/Adafruit-ST7735-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_ST7735_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_ST7735_Library-1.0.0.zip",
      "size": 23720,
      "checksum": "SHA-256:1249442adc1e5e545acd8336cf9a55ce2a8db609703fa82a62083c6af9f51f0e"
    },
    {
      "name": "Adafruit ST7735 Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is a library for the Adafruit 1.8\" SPI displays.",
      "paragraph": "This is a library for the Adafruit 1.8\" SPI displays.",
      "website": "https://github.com/adafruit/Adafruit-ST7735-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_ST7735_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_ST7735_Library-1.0.1.zip",
      "size": 23730,
      "checksum": "SHA-256:5aa3b19ee55d6b472593c0c95fed423b7830a0e57a835e18d2a5fdfb3451d856"
    },
    {
      "name": "Adafruit ST7735 Library",
      "version": "1.0.4",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is a library for the Adafruit 1.8\" SPI displays.",
      "paragraph": "This is a library for the Adafruit 1.8\" SPI displays.",
      "website": "https://github.com/adafruit/Adafruit-ST7735-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_ST7735_Library-1.0.4.zip",
      "archiveFileName": "Adafruit_ST7735_Library-1.0.4.zip",
      "size": 23688,
      "checksum": "SHA-256:419ab3d3780486d19be1e8896e6183231dfb85b3b253b2974a80be9d12c896a7"
    },
    {
      "name": "Adafruit STMPE610",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for STMPE610/811 resistive touch screen controllers",
      "paragraph": "Arduino library for STMPE610/811 resistive touch screen controllers",
      "website": "https://github.com/adafruit/Adafruit_STMPE610",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_STMPE610-1.0.0.zip",
      "archiveFileName": "Adafruit_STMPE610-1.0.0.zip",
      "size": 6610,
      "checksum": "SHA-256:5ebcfab4b4691e1826e21e9b2fd4b510aca6a77545c838b84fef1f8164f84409"
    },
    {
      "name": "Adafruit TCS34725",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for Adafruit's TCS34725 RGB Color Sensor Breakout",
      "paragraph": "Driver for Adafruit's TCS34725 RGB Color Sensor Breakout",
      "website": "https://github.com/adafruit/Adafruit_TCS34725",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_TCS34725-1.0.0.zip",
      "archiveFileName": "Adafruit_TCS34725-1.0.0.zip",
      "size": 11298,
      "checksum": "SHA-256:05b8bcc77fd47d056b1cab8781bd57bb5307429fb6c312257e665fb554800a02"
    },
    {
      "name": "Adafruit TCS34725",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for Adafruit's TCS34725 RGB Color Sensor Breakout",
      "paragraph": "Driver for Adafruit's TCS34725 RGB Color Sensor Breakout",
      "website": "https://github.com/adafruit/Adafruit_TCS34725",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_TCS34725-1.0.1.zip",
      "archiveFileName": "Adafruit_TCS34725-1.0.1.zip",
      "size": 11327,
      "checksum": "SHA-256:c98a7c51c0d8e19dc6343375a134a00db29aa22ce022d272e0568b86d402a1e3"
    },
    {
      "name": "Adafruit TiCoServo",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Use NeoPixels and servos in the same Arduino sketch (with caveats)",
      "paragraph": "Use NeoPixels and servos in the same Arduino sketch (with caveats)",
      "website": "https://github.com/adafruit/Adafruit_TiCoServo",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_TiCoServo-1.0.0.zip",
      "archiveFileName": "Adafruit_TiCoServo-1.0.0.zip",
      "size": 10161,
      "checksum": "SHA-256:29c5d5714f5b7a2db04b6e5a75830efa2226ccab2070a2d8e8da1a96fe32e607"
    },
    {
      "name": "Adafruit Thermal Printer Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino Library for Small Thermal Printers",
      "paragraph": "Arduino Library for Small Thermal Printers",
      "website": "https://github.com/adafruit/Adafruit-Thermal-Printer-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Thermal_Printer_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_Thermal_Printer_Library-1.0.0.zip",
      "size": 18280,
      "checksum": "SHA-256:4613bf0b2082778363ac6b036eaf2e2ba115af933e8f982b6e26d02fc3fe2044"
    },
    {
      "name": "Adafruit Thermal Printer Library",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino Library for Small Thermal Printers",
      "paragraph": "Arduino Library for Small Thermal Printers",
      "website": "https://github.com/adafruit/Adafruit-Thermal-Printer-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Thermal_Printer_Library-1.1.0.zip",
      "archiveFileName": "Adafruit_Thermal_Printer_Library-1.1.0.zip",
      "size": 23647,
      "checksum": "SHA-256:9894f417c7847f9ed6c8e893095200aea78ac2b2a3de1533d745ac83f02dfe67"
    },
    {
      "name": "Adafruit Thermal Printer Library",
      "version": "1.1.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino Library for Small Thermal Printers",
      "paragraph": "Arduino Library for Small Thermal Printers",
      "website": "https://github.com/adafruit/Adafruit-Thermal-Printer-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Thermal_Printer_Library-1.1.1.zip",
      "archiveFileName": "Adafruit_Thermal_Printer_Library-1.1.1.zip",
      "size": 23876,
      "checksum": "SHA-256:e4bee6f86370974867f8ef645cf534d126070c75271f666a3184ee2be029a5a8"
    },
    {
      "name": "Adafruit TinyFlash",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Barebones Winbond SPI flash library for Arduino and Trinket",
      "paragraph": "Barebones Winbond SPI flash library for Arduino and Trinket",
      "website": "https://github.com/adafruit/Adafruit_TinyFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_TinyFlash-1.0.0.zip",
      "archiveFileName": "Adafruit_TinyFlash-1.0.0.zip",
      "size": 8439,
      "checksum": "SHA-256:f8bf049a612e44b1bcc43598ec3de0c81c0a726f7950cd0eb13d121d1e6a4f3d"
    },
    {
      "name": "Adafruit TinyRGBLCDShield",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit_RGBLCDShield library ported to Trinket/Gemma",
      "paragraph": "Adafruit_RGBLCDShield library ported to Trinket/Gemma",
      "website": "https://github.com/adafruit/Adafruit_TinyRGBLCDShield",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_TinyRGBLCDShield-1.0.0.zip",
      "archiveFileName": "Adafruit_TinyRGBLCDShield-1.0.0.zip",
      "size": 11542,
      "checksum": "SHA-256:6d3946ea10f167f9e61eff249e849ae0b79c964bdeb3ba731fa5b4768e45f962"
    },
    {
      "name": "Adafruit TLC5947",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit's Arduino driver for the TLC5947 PWM LED Driver Breakout.",
      "paragraph": "Adafruit's Arduino driver for the TLC5947 PWM LED Driver Breakout.",
      "website": "https://github.com/adafruit/Adafruit_TLC5947",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_TLC5947-1.0.0.zip",
      "archiveFileName": "Adafruit_TLC5947-1.0.0.zip",
      "size": 3982,
      "checksum": "SHA-256:340f0b91b888e723c0108f1d50900ea1c7e514758b896f166744ae98293b12ae"
    },
    {
      "name": "Adafruit TLC5947",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit's Arduino driver for the TLC5947 PWM LED Driver Breakout.",
      "paragraph": "Adafruit's Arduino driver for the TLC5947 PWM LED Driver Breakout.",
      "website": "https://github.com/adafruit/Adafruit_TLC5947",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_TLC5947-1.0.2.zip",
      "archiveFileName": "Adafruit_TLC5947-1.0.2.zip",
      "size": 4010,
      "checksum": "SHA-256:dd3391b48681ea42939b0703aa8f95ac491780edbb787b9727a4750849c3e1a9"
    },
    {
      "name": "Adafruit TLC59711",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for our Adafruit 12-channel PWM/LED driver.",
      "paragraph": "Library for our Adafruit 12-channel PWM/LED driver.",
      "website": "https://github.com/adafruit/Adafruit_TLC59711",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_TLC59711-1.0.0.zip",
      "archiveFileName": "Adafruit_TLC59711-1.0.0.zip",
      "size": 4293,
      "checksum": "SHA-256:43a8c06adb6c07182eab25783a17e5ec34257eaa8cf16a22eec9197e12b6a0bf"
    },
    {
      "name": "Adafruit TMP006",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is a library for the Adafruit TMP006 Infrared Thermopile Sensor",
      "paragraph": "This is a library for the Adafruit TMP006 Infrared Thermopile Sensor",
      "website": "https://github.com/adafruit/Adafruit_TMP006",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_TMP006-1.0.0.zip",
      "archiveFileName": "Adafruit_TMP006-1.0.0.zip",
      "size": 5230,
      "checksum": "SHA-256:487903294b9362aa56109141f105b451c0e371d63611c299251e488162cb964f"
    },
    {
      "name": "Adafruit TMP007 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for Adafruit TMP007 Thermopile sensor Breakout",
      "paragraph": "Arduino library for Adafruit TMP007 Thermopile sensor Breakout",
      "website": "https://github.com/adafruit/Adafruit_TMP007_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_TMP007_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_TMP007_Library-1.0.0.zip",
      "size": 4708,
      "checksum": "SHA-256:6bed64651ddbefff4f92aeb47577eab342545bfaf2bbd961288b4d498f52dc17"
    },
    {
      "name": "Adafruit TMP007 Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for Adafruit TMP007 Thermopile sensor Breakout",
      "paragraph": "Arduino library for Adafruit TMP007 Thermopile sensor Breakout",
      "website": "https://github.com/adafruit/Adafruit_TMP007_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_TMP007_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_TMP007_Library-1.0.1.zip",
      "size": 4695,
      "checksum": "SHA-256:91fd01f38323a5e0a933e704821754d456ef8e65892bda61998d51b4fcf6a0fa"
    },
    {
      "name": "Adafruit TMP007 Library",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for Adafruit TMP007 Thermopile sensor Breakout",
      "paragraph": "Arduino library for Adafruit TMP007 Thermopile sensor Breakout",
      "website": "https://github.com/adafruit/Adafruit_TMP007_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_TMP007_Library-1.0.2.zip",
      "archiveFileName": "Adafruit_TMP007_Library-1.0.2.zip",
      "size": 4620,
      "checksum": "SHA-256:33701f23b394ad809015e68fd5f37b9f0c1578c60994f5f8e6f49e83a6dd0b16"
    },
    {
      "name": "Adafruit TPA2016 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the Adafruit TPA2016(D2) I2C controlled AGC audio amplifier",
      "paragraph": "Arduino library for the Adafruit TPA2016(D2) I2C controlled AGC audio amplifier",
      "website": "https://github.com/adafruit/Adafruit-TPA2016-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_TPA2016_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_TPA2016_Library-1.0.0.zip",
      "size": 4920,
      "checksum": "SHA-256:5ed3ac68ea7f0e87c95a3e67052768d2f9c2b924482f61a90d7868c3ac3153af"
    },
    {
      "name": "Adafruit Trellis Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for controlling Adafruit Trellis",
      "paragraph": "Arduino library for controlling Adafruit Trellis",
      "website": "https://github.com/adafruit/Adafruit_Trellis_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Trellis_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_Trellis_Library-1.0.0.zip",
      "size": 10671,
      "checksum": "SHA-256:ac626ac7825c0c06036c945788fafa9cd7b7dc4873c1708609ea61075fd6ed22"
    },
    {
      "name": "Adafruit Trellis Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for controlling Adafruit Trellis",
      "paragraph": "Arduino library for controlling Adafruit Trellis",
      "website": "https://github.com/adafruit/Adafruit_Trellis_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Trellis_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_Trellis_Library-1.0.1.zip",
      "size": 10809,
      "checksum": "SHA-256:bb5b530f4b016c21f982f0b0de3d6d39f7757d50ad23bb4bd7d4b3a9f15d85d5"
    },
    {
      "name": "Adafruit TSL2561",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified sensor driver for Adafruit's TSL2561 breakouts",
      "paragraph": "Unified sensor driver for Adafruit's TSL2561 breakouts",
      "website": "https://github.com/adafruit/Adafruit_TSL2561",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_TSL2561-1.0.0.zip",
      "archiveFileName": "Adafruit_TSL2561-1.0.0.zip",
      "size": 12144,
      "checksum": "SHA-256:97a337e97e3622341d3f826073423f5b79772fb18aa36763bfd12a289689a6e4"
    },
    {
      "name": "Adafruit TSL2591 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the TSL2591 digital luminosity (light) sensors.",
      "paragraph": "Library for the TSL2591 digital luminosity (light) sensors.",
      "website": "https://github.com/adafruit/Adafruit_TSL2591_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_TSL2591_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_TSL2591_Library-1.0.0.zip",
      "size": 9116,
      "checksum": "SHA-256:9eb9df7eed23b2f73cb5d2024cfe622b065c45004386a282c820bd1fe498975a"
    },
    {
      "name": "Adafruit TSL2591 Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the TSL2591 digital luminosity (light) sensors.",
      "paragraph": "Library for the TSL2591 digital luminosity (light) sensors.",
      "website": "https://github.com/adafruit/Adafruit_TSL2591_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_TSL2591_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_TSL2591_Library-1.0.1.zip",
      "size": 9151,
      "checksum": "SHA-256:826c9719fbb2bc7637c04c0e23ca7d14c2ca666dad7a285d45a63d25e71cb218"
    },
    {
      "name": "Adafruit TSL2591 Library",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the TSL2591 digital luminosity (light) sensors.",
      "paragraph": "Library for the TSL2591 digital luminosity (light) sensors.",
      "website": "https://github.com/adafruit/Adafruit_TSL2591_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_TSL2591_Library-1.0.2.zip",
      "archiveFileName": "Adafruit_TSL2591_Library-1.0.2.zip",
      "size": 9148,
      "checksum": "SHA-256:cb5f8b740fc3f2dcf7428fd7fe9bd29f17e14b80fec19fbc00677017f007660b"
    },
    {
      "name": "Adafruit VC0706 Serial Camera Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for VC0706-based Serial JPEG Cameras",
      "paragraph": "Library for VC0706-based Serial JPEG Cameras",
      "website": "https://github.com/adafruit/Adafruit-VC0706-Serial-Camera-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_VC0706_Serial_Camera_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_VC0706_Serial_Camera_Library-1.0.0.zip",
      "size": 14474,
      "checksum": "SHA-256:d1478fb941c99b3bc68cba3664e7129e09bfa3c30b6b4d322fa9e3259b6cceb2"
    },
    {
      "name": "Adafruit VS1053 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is a library for the Adafruit VS1053 Codec Breakout and Music Maker Shields",
      "paragraph": "This is a library for the Adafruit VS1053 Codec Breakout and Music Maker Shields",
      "website": "https://github.com/adafruit/Adafruit_VS1053_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_VS1053_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_VS1053_Library-1.0.0.zip",
      "size": 32421,
      "checksum": "SHA-256:939dbdedadef06ba7af01ee3b4960218ba45333dc020315ac61c231129550291"
    },
    {
      "name": "Adafruit VS1053 Library",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is a library for the Adafruit VS1053 Codec Breakout and Music Maker Shields",
      "paragraph": "This is a library for the Adafruit VS1053 Codec Breakout and Music Maker Shields",
      "website": "https://github.com/adafruit/Adafruit_VS1053_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_VS1053_Library-1.0.2.zip",
      "archiveFileName": "Adafruit_VS1053_Library-1.0.2.zip",
      "size": 35911,
      "checksum": "SHA-256:141375ffca4611eda66e1f42bb7507f73f5d384c76514e6943de9f865c32cc8d"
    },
    {
      "name": "Adafruit WS2801 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for controlling strips/pixels using WS2801 driver chips",
      "paragraph": "Arduino library for controlling strips/pixels using WS2801 driver chips",
      "website": "https://github.com/adafruit/Adafruit-WS2801-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_WS2801_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_WS2801_Library-1.0.0.zip",
      "size": 9172,
      "checksum": "SHA-256:e49b66cd09b536b8709323166d46cd88c2222ad0d24a5329c4d4c695d9c9f14b"
    },
    {
      "name": "CC3000 MDNS",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Simple multicast DNS name resolution library for Adafruit's CC3000 and Arduino.",
      "paragraph": "Simple multicast DNS name resolution library for Adafruit's CC3000 and Arduino.",
      "website": "https://github.com/adafruit/CC3000_MDNS",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/CC3000_MDNS-1.0.0.zip",
      "archiveFileName": "CC3000_MDNS-1.0.0.zip",
      "size": 8841,
      "checksum": "SHA-256:7c1cebd59a95a14f93740fef8c6f85aa26d4e36248d71c1df57128dec77429e7"
    },
    {
      "name": "DHT sensor library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "paragraph": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "website": "https://github.com/adafruit/DHT-sensor-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/DHT_sensor_library-1.0.0.zip",
      "archiveFileName": "DHT_sensor_library-1.0.0.zip",
      "size": 4316,
      "checksum": "SHA-256:6ce57191bcc816e370b023977907cdf1c77323087761d3d96e2e436a32d86493"
    },
    {
      "name": "DHT sensor library",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "paragraph": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "website": "https://github.com/adafruit/DHT-sensor-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/DHT_sensor_library-1.1.0.zip",
      "archiveFileName": "DHT_sensor_library-1.1.0.zip",
      "size": 5672,
      "checksum": "SHA-256:887c83b872c8921b1f4a854c8a47e9ec3f9f7cb4c32624e33721678f039e92e4"
    },
    {
      "name": "DHT sensor library",
      "version": "1.1.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "paragraph": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "website": "https://github.com/adafruit/DHT-sensor-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/DHT_sensor_library-1.1.1.zip",
      "archiveFileName": "DHT_sensor_library-1.1.1.zip",
      "size": 6246,
      "checksum": "SHA-256:71882d6d72c12d9c2e2e93ce5ae1832b689198cc05fe0f4b3891e0c5b11e84d8"
    },
    {
      "name": "DHT sensor library",
      "version": "1.2.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "paragraph": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "website": "https://github.com/adafruit/DHT-sensor-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/DHT_sensor_library-1.2.0.zip",
      "archiveFileName": "DHT_sensor_library-1.2.0.zip",
      "size": 6339,
      "checksum": "SHA-256:83b2d737bdfc3b82af7ab8379d601467d611b95f3c6c1094e7d53d106100ae0b"
    },
    {
      "name": "DHT sensor library",
      "version": "1.2.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "paragraph": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "website": "https://github.com/adafruit/DHT-sensor-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/DHT_sensor_library-1.2.1.zip",
      "archiveFileName": "DHT_sensor_library-1.2.1.zip",
      "size": 6423,
      "checksum": "SHA-256:92386c2598de931831abc9be1e0d200fb881e69ebb81e5dc93fee3d5c8c63df4"
    },
    {
      "name": "DHT sensor library",
      "version": "1.2.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "paragraph": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "website": "https://github.com/adafruit/DHT-sensor-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/DHT_sensor_library-1.2.2.zip",
      "archiveFileName": "DHT_sensor_library-1.2.2.zip",
      "size": 6417,
      "checksum": "SHA-256:50fc792b02765eb40a5e7cf84c9bfa004a00aedef5d8c149f047d810208c067e"
    },
    {
      "name": "DHT sensor library",
      "version": "1.2.3",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "paragraph": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "website": "https://github.com/adafruit/DHT-sensor-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/DHT_sensor_library-1.2.3.zip",
      "archiveFileName": "DHT_sensor_library-1.2.3.zip",
      "size": 6581,
      "checksum": "SHA-256:f5f124fbf1312cc73d0df6bc9ecd64ff722643edf776b79c24b729e0e3ea605f"
    },
    {
      "name": "DHT sensor library",
      "version": "1.3.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "paragraph": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "website": "https://github.com/adafruit/DHT-sensor-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/DHT_sensor_library-1.3.0.zip",
      "archiveFileName": "DHT_sensor_library-1.3.0.zip",
      "size": 10949,
      "checksum": "SHA-256:3eb7536c4a8a38c9e828ad77faa9a9d156f40b037321b14e8e54945ec593bbfb"
    },
    {
      "name": "HL1606 LED Strip",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Code to control HL1606-based LED strips",
      "paragraph": "Code to control HL1606-based LED strips",
      "website": "https://github.com/adafruit/HL1606-LED-Strip",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/HL1606_LED_Strip-1.0.0.zip",
      "archiveFileName": "HL1606_LED_Strip-1.0.0.zip",
      "size": 7369,
      "checksum": "SHA-256:98c5aca25d85d2587f056fcdb4d98a3eccafe6dff72fc02cd1f8aefa3e0d6fb1"
    },
    {
      "name": "HL1606 LED Strip PWM",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "All the joy of HL1606 LED strips but with 9 or 12 bit color control!",
      "paragraph": "All the joy of HL1606 LED strips but with 9 or 12 bit color control!",
      "website": "https://github.com/adafruit/HL1606-LED-Strip-PWM",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/HL1606_LED_Strip_PWM-1.0.0.zip",
      "archiveFileName": "HL1606_LED_Strip_PWM-1.0.0.zip",
      "size": 8963,
      "checksum": "SHA-256:26e245b4af4246199214a40b502639d1bd4f5ead89eb968752e819ef76140355"
    },
    {
      "name": "FifteenStep",
      "version": "1.2.0",
      "author": "Todd Treece \u003ctodd@uniontownlabs.org\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A general purpose Arduino MIDI sequencer library.",
      "paragraph": "This library allows you to create a simple sequencer using any MIDI implementation (i.e. USB or Serial).",
      "website": "https://github.com/adafruit/FifteenStep",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/FifteenStep-1.2.0.zip",
      "archiveFileName": "FifteenStep-1.2.0.zip",
      "size": 2072958,
      "checksum": "SHA-256:5c767e4576c98f6c6189c30ee4bcee69d4e764f857ef96b140c9d82f330f1e90"
    },
    {
      "name": "FifteenStep",
      "version": "1.2.2",
      "author": "Todd Treece \u003ctodd@uniontownlabs.org\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A general purpose Arduino MIDI sequencer library.",
      "paragraph": "This library allows you to create a simple sequencer using any MIDI implementation (i.e. USB or Serial).",
      "website": "https://github.com/adafruit/FifteenStep",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/FifteenStep-1.2.2.zip",
      "archiveFileName": "FifteenStep-1.2.2.zip",
      "size": 2072959,
      "checksum": "SHA-256:565af2fa186bc3febdeb32a35dd2605bcd1f2b4c49c5a3f47a13575b413e16eb"
    },
    {
      "name": "FifteenStep",
      "version": "1.0.1",
      "author": "Todd Treece \u003ctodd@uniontownlabs.org\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A general purpose Arduino MIDI sequencer library.",
      "paragraph": "This library allows you to create a simple sequencer using any MIDI implementation (i.e. USB or Serial).",
      "website": "https://github.com/adafruit/FifteenStep",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/FifteenStep-1.0.1.zip",
      "archiveFileName": "FifteenStep-1.0.1.zip",
      "size": 24844,
      "checksum": "SHA-256:78c071ebb9183fd6544070f2107f2bcf3e9f256fba08d748bc4a1dc6997a5ab1"
    },
    {
      "name": "HT1632",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library code for HT1632(C) matrix panel driver chips, and the panels we have in the Adafruit shop",
      "paragraph": "Arduino library code for HT1632(C) matrix panel driver chips, and the panels we have in the Adafruit shop",
      "website": "https://github.com/adafruit/HT1632",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/HT1632-1.0.0.zip",
      "archiveFileName": "HT1632-1.0.0.zip",
      "size": 7978,
      "checksum": "SHA-256:223506b7147a3d3378eaf9a361d3004a29370151e44371622ea0bf53629d8c7f"
    },
    {
      "name": "HT1632",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library code for HT1632(C) matrix panel driver chips, and the panels we have in the Adafruit shop",
      "paragraph": "Arduino library code for HT1632(C) matrix panel driver chips, and the panels we have in the Adafruit shop",
      "website": "https://github.com/adafruit/HT1632",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/HT1632-1.0.1.zip",
      "archiveFileName": "HT1632-1.0.1.zip",
      "size": 8022,
      "checksum": "SHA-256:969cdc74c07407561beea07b02dd012a156e221cdc39f28be2c4ffe08216d09b"
    },
    {
      "name": "HT1632",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library code for HT1632(C) matrix panel driver chips, and the panels we have in the Adafruit shop",
      "paragraph": "Arduino library code for HT1632(C) matrix panel driver chips, and the panels we have in the Adafruit shop",
      "website": "https://github.com/adafruit/HT1632",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/HT1632-1.0.2.zip",
      "archiveFileName": "HT1632-1.0.2.zip",
      "size": 4982,
      "checksum": "SHA-256:760344ef12f5482fe4b1d0e8597abb029d4dc0b0f353febc5bda3dddd0ca360c"
    },
    {
      "name": "LPD6803 RGB Pixels",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Controlling library for strands of LPD6803 LED pixel dots.",
      "paragraph": "Controlling library for strands of LPD6803 LED pixel dots.",
      "website": "https://github.com/adafruit/LPD6803-RGB-Pixels",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/LPD6803_RGB_Pixels-1.0.0.zip",
      "archiveFileName": "LPD6803_RGB_Pixels-1.0.0.zip",
      "size": 4866,
      "checksum": "SHA-256:75df5e95a7e8b8b1eebf156279870b85f8066b63b2864d68dd1a227e8572f1e3"
    },
    {
      "name": "LPD8806",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for LED strips and pixels using LPD8806 (and probably LPD8803/LPD8809)",
      "paragraph": "Arduino library for LED strips and pixels using LPD8806 (and probably LPD8803/LPD8809)",
      "website": "https://github.com/adafruit/LPD8806",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/LPD8806-1.0.0.zip",
      "archiveFileName": "LPD8806-1.0.0.zip",
      "size": 20642,
      "checksum": "SHA-256:1e1d2b1b54286f5c907beacb64267dc4e946de1fa78971da87700cc52336fd1b"
    },
    {
      "name": "MAX31850 DallasTemp",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A version of the DallasTemp Arduino library with MAX31850 support (Requires OneWire with MAX31850 support!)",
      "paragraph": "A version of the DallasTemp Arduino library with MAX31850 support (Requires OneWire with MAX31850 support!)",
      "website": "https://github.com/adafruit/MAX31850_DallasTemp",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/MAX31850_DallasTemp-1.0.0.zip",
      "archiveFileName": "MAX31850_DallasTemp-1.0.0.zip",
      "size": 17729,
      "checksum": "SHA-256:69511b583ddb8253c3033414224c807f6a6c2dae94c12ea382acf114edd0f815"
    },
    {
      "name": "MAX6675 library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for interfacing with MAX6675 thermocouple amplifier",
      "paragraph": "Arduino library for interfacing with MAX6675 thermocouple amplifier",
      "website": "https://github.com/adafruit/MAX6675-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/MAX6675_library-1.0.0.zip",
      "archiveFileName": "MAX6675_library-1.0.0.zip",
      "size": 3324,
      "checksum": "SHA-256:711edeb4da9701d78b7e4360305c91b7de02d3c64332e2463089ee7ae703215a"
    },
    {
      "name": "MAX31850 OneWire",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A version of the OneWire Arduino library with MAX31850 support",
      "paragraph": "A version of the OneWire Arduino library with MAX31850 support",
      "website": "https://github.com/adafruit/MAX31850_OneWire",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/MAX31850_OneWire-1.0.0.zip",
      "archiveFileName": "MAX31850_OneWire-1.0.0.zip",
      "size": 19319,
      "checksum": "SHA-256:4a9d58ad717442907266b1922608a466c762d137bacdfda90776e816fc4191b3"
    },
    {
      "name": "RGB matrix Panel",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library and example code for the 16x32 RGB matrix panels in the shop",
      "paragraph": "Arduino library and example code for the 16x32 RGB matrix panels in the shop",
      "website": "https://github.com/adafruit/RGB-matrix-Panel",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/RGB_matrix_Panel-1.0.0.zip",
      "archiveFileName": "RGB_matrix_Panel-1.0.0.zip",
      "size": 26875,
      "checksum": "SHA-256:3257f75caae9ccccaeac604039d9459d9b7ac594e4762f976b32d623fd6a8c13"
    },
    {
      "name": "RGB matrix Panel",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library and example code for the 16x32 RGB matrix panels in the shop",
      "paragraph": "Arduino library and example code for the 16x32 RGB matrix panels in the shop",
      "website": "https://github.com/adafruit/RGB-matrix-Panel",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/RGB_matrix_Panel-1.0.1.zip",
      "archiveFileName": "RGB_matrix_Panel-1.0.1.zip",
      "size": 26862,
      "checksum": "SHA-256:763aa614918c3879639458879f43adc5331d4da868e0a527c1ae3bd4d9375cee"
    },
    {
      "name": "RGB matrix Panel",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library and example code for the 16x32 RGB matrix panels in the shop",
      "paragraph": "Arduino library and example code for the 16x32 RGB matrix panels in the shop",
      "website": "https://github.com/adafruit/RGB-matrix-Panel",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/RGB_matrix_Panel-1.0.2.zip",
      "archiveFileName": "RGB_matrix_Panel-1.0.2.zip",
      "size": 26910,
      "checksum": "SHA-256:79f4e0601e2b69089935601c3eed0f78db81b053104b0e403fcffe4f34263f07"
    },
    {
      "name": "Pro Trinket USB Mouse",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for Pro trinket to turn it into a mouse!",
      "paragraph": "Library for Pro trinket to turn it into a mouse!",
      "website": "https://github.com/adafruit/Pro_Trinket_USB_Mouse",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Pro_Trinket_USB_Mouse-1.0.0.zip",
      "archiveFileName": "Pro_Trinket_USB_Mouse-1.0.0.zip",
      "size": 978660,
      "checksum": "SHA-256:02082216411a93a70f3d8b6ffe72d2ffc4806ab84fbb57590a0284ea3ed2540d"
    },
    {
      "name": "RTClib",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A fork of Jeelab's fantastic RTC library",
      "paragraph": "A fork of Jeelab's fantastic RTC library",
      "website": "https://github.com/adafruit/RTClib",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/RTClib-1.0.0.zip",
      "archiveFileName": "RTClib-1.0.0.zip",
      "size": 9387,
      "checksum": "SHA-256:f73b9fd6f4d995acd1404c18c62e63a36a05a193958d5c38a9ca7f419f9aec42"
    },
    {
      "name": "RTClib",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A fork of Jeelab's fantastic RTC library",
      "paragraph": "A fork of Jeelab's fantastic RTC library",
      "website": "https://github.com/adafruit/RTClib",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/RTClib-1.1.0.zip",
      "archiveFileName": "RTClib-1.1.0.zip",
      "size": 9711,
      "checksum": "SHA-256:ff0c2347fbdb2fc601a683fc422d27e0001249bcbac1e2503f578b06d6970ea1"
    },
    {
      "name": "RTClib",
      "version": "1.2.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A fork of Jeelab's fantastic RTC library",
      "paragraph": "A fork of Jeelab's fantastic RTC library",
      "website": "https://github.com/adafruit/RTClib",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/RTClib-1.2.0.zip",
      "archiveFileName": "RTClib-1.2.0.zip",
      "size": 13608,
      "checksum": "SHA-256:00e3fbdb5d2f09d27da9eda761503fac7dbaae6110e9a63079628b2c8900fa0c"
    },
    {
      "name": "Pro Trinket USB Keyboard Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "An arduino library to turn a Pro Trinket 5V/16MHz into a USB Keyboard!",
      "paragraph": "An arduino library to turn a Pro Trinket 5V/16MHz into a USB Keyboard!",
      "website": "https://github.com/adafruit/Pro_Trinket_USB_Keyboard_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Pro_Trinket_USB_Keyboard_Library-1.0.0.zip",
      "archiveFileName": "Pro_Trinket_USB_Keyboard_Library-1.0.0.zip",
      "size": 3390186,
      "checksum": "SHA-256:65f1129f2f3e377ad8bab3437bdf3adc4bf1bb2649c40a081f3e7a58b57a1db2"
    },
    {
      "name": "SPI VFD",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino Library for 20T202DA2JA SPI VFD",
      "paragraph": "Arduino Library for 20T202DA2JA SPI VFD",
      "website": "https://github.com/adafruit/SPI_VFD",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/SPI_VFD-1.0.0.zip",
      "archiveFileName": "SPI_VFD-1.0.0.zip",
      "size": 14809,
      "checksum": "SHA-256:1b4eb21a97feb197f41763a594f062b795fa86b7f178f5b90ea5b7cbaec68909"
    },
    {
      "name": "TinyLiquidCrystal",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A simplified library for the Adafruit I2C/SPI backpack, for use with Gemma \u0026 Trinket",
      "paragraph": "A simplified library for the Adafruit I2C/SPI backpack, for use with Gemma \u0026 Trinket",
      "website": "https://github.com/adafruit/TinyLiquidCrystal",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/TinyLiquidCrystal-1.0.0.zip",
      "archiveFileName": "TinyLiquidCrystal-1.0.0.zip",
      "size": 10402,
      "checksum": "SHA-256:83a87ea59e9b038d5652b83b38c8f8fa3f5540fc7a6063aefc3f5e11a23f9100"
    },
    {
      "name": "TinyRTCLib",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A tiny version of RTCLib, for use with TinyWireM",
      "paragraph": "A tiny version of RTCLib, for use with TinyWireM",
      "website": "https://github.com/adafruit/TinyRTCLib",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/TinyRTCLib-1.0.0.zip",
      "archiveFileName": "TinyRTCLib-1.0.0.zip",
      "size": 5697,
      "checksum": "SHA-256:2f1aae5aa9cc52731e82305704ce50871b05209b5844ee7f0fbe8dddc9bcbfc9"
    },
    {
      "name": "TinyWireM",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "I2C library for Trinket and Gemma, adapted from BroHogan's code on Arduino Playground",
      "paragraph": "I2C library for Trinket and Gemma, adapted from BroHogan's code on Arduino Playground",
      "website": "https://github.com/adafruit/TinyWireM",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/TinyWireM-1.0.0.zip",
      "archiveFileName": "TinyWireM-1.0.0.zip",
      "size": 15668,
      "checksum": "SHA-256:185c58c5b730edc77ea69d3e55d37a7d1edf3525f6597cdb935d8f7b93f52cc3"
    },
    {
      "name": "TSL2561 Arduino Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for using the TSL2561 Luminosity sensor",
      "paragraph": "Arduino library for using the TSL2561 Luminosity sensor",
      "website": "https://github.com/adafruit/TSL2561-Arduino-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/TSL2561_Arduino_Library-1.0.0.zip",
      "archiveFileName": "TSL2561_Arduino_Library-1.0.0.zip",
      "size": 7566,
      "checksum": "SHA-256:493e168e11559aa481a46b3c343414bbbd690768f57de055a4e194933515178f"
    },
    {
      "name": "Adafruit Unified Sensor",
      "version": "1.0.0",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Required for all Adafruit Unified Sensor based libraries.",
      "paragraph": "A unified sensor abstraction layer used by many Adafruit sensor libraries.",
      "website": "https://github.com/adafruit/Adafruit_Sensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Unified_Sensor-1.0.0.zip",
      "archiveFileName": "Adafruit_Unified_Sensor-1.0.0.zip",
      "size": 6975,
      "checksum": "SHA-256:9c68de98ec584ad2b67b5d7d7299c8fdd78a342f5461390a70c3ec7968c994f2"
    },
    {
      "name": "Adafruit Unified Sensor",
      "version": "1.0.1",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Required for all Adafruit Unified Sensor based libraries.",
      "paragraph": "A unified sensor abstraction layer used by many Adafruit sensor libraries.",
      "website": "https://github.com/adafruit/Adafruit_Sensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Unified_Sensor-1.0.1.zip",
      "archiveFileName": "Adafruit_Unified_Sensor-1.0.1.zip",
      "size": 6954,
      "checksum": "SHA-256:fde23503127625b6bd66eeddc4d347ce55e33823451069b050ceeb995f6eefa2"
    },
    {
      "name": "Adafruit Unified Sensor",
      "version": "1.0.2",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Required for all Adafruit Unified Sensor based libraries.",
      "paragraph": "A unified sensor abstraction layer used by many Adafruit sensor libraries.",
      "website": "https://github.com/adafruit/Adafruit_Sensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Unified_Sensor-1.0.2.zip",
      "archiveFileName": "Adafruit_Unified_Sensor-1.0.2.zip",
      "size": 6711,
      "checksum": "SHA-256:7aed049fe0de5dd3529ce1f01ed27ede6d93bfaba2d2ca02cc6c52080d831441"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_GFX_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.0.0.zip",
      "size": 9670,
      "checksum": "SHA-256:0054dd21c832532d3de5912db7164b129c094e9b7ff30b16b92c1ceb0d17e87b"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_GFX_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.0.1.zip",
      "size": 10871,
      "checksum": "SHA-256:9d6c82aa6025f71125871b32563906cfda41f8dad9bdabc666936d196faca37b"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.1.7",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_GFX_Library-1.1.7.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.1.7.zip",
      "size": 298738,
      "checksum": "SHA-256:a49964fc61e8d45f9de31e65ffb02626a43dd95ba1b09553ede97eaadac7f17e"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.1.8",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_GFX_Library-1.1.8.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.1.8.zip",
      "size": 301966,
      "checksum": "SHA-256:a6f82b027321d545ad14649c0ab76399d47f746058473add95a31ebabbddc4fd"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.1.9",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_GFX_Library-1.1.9.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.1.9.zip",
      "size": 302028,
      "checksum": "SHA-256:f05262e57a421bf86ca925b871cd035a37183beb9a3ef1d287e53791e1155f98"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.2.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_GFX_Library-1.2.0.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.2.0.zip",
      "size": 302812,
      "checksum": "SHA-256:44c755738acc9f5d82851745a2017631b4162ae7a07758ff7c608f0d30fb71bf"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.2.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_GFX_Library-1.2.1.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.2.1.zip",
      "size": 302912,
      "checksum": "SHA-256:139998cd9d7767aa6cdd303852f258db9abf645d6e2ea0725d1c3058ce228152"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.2.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_GFX_Library-1.2.2.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.2.2.zip",
      "size": 302899,
      "checksum": "SHA-256:f180e19d1aeb9ad9ad5e445bc4c8d6ccee719c6a3801e047cabbb3b6ab0b9de6"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_GFX_Library-1.0.2.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.0.2.zip",
      "size": 10932,
      "checksum": "SHA-256:c8706c9170ccf864edefefa22350ef11c6c71d2e8d7894c99f76898e864c2b87"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_GFX_Library-1.1.0.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.1.0.zip",
      "size": 288933,
      "checksum": "SHA-256:96796dbb0276d1a215a0426bdcb6ac8eba1a5583002f709c6c34e0c70d5453de"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.1.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_GFX_Library-1.1.1.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.1.1.zip",
      "size": 288945,
      "checksum": "SHA-256:5ac66f2c5112e32a544756a42ec2dc1333e5d987a1be634d96d776668b9df67d"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.1.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_GFX_Library-1.1.2.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.1.2.zip",
      "size": 290287,
      "checksum": "SHA-256:ac1a4c81e2e9753a6082ed6b11722833938940c858cb33e322ee57fd1bea91d7"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.1.3",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_GFX_Library-1.1.3.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.1.3.zip",
      "size": 290259,
      "checksum": "SHA-256:1f0be0784495fae34d5621acf2f482377f4f920b614c9c3e589617d07fa759a0"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.1.4",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_GFX_Library-1.1.4.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.1.4.zip",
      "size": 290253,
      "checksum": "SHA-256:1e39ac6c3e9012a1d6ef60c574fecd8c9faa138bf7f8ba024d6938500cbc76cf"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.1.5",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_GFX_Library-1.1.5.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.1.5.zip",
      "size": 295879,
      "checksum": "SHA-256:33de9bc3b7c5e91aeaa7eeecab74930258422e60db1d1a623458094d0d266918"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.1.6",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_GFX_Library-1.1.6.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.1.6.zip",
      "size": 298060,
      "checksum": "SHA-256:c3a71bd74e36f48ca88fcb3059e75227e00be32785429d705441e63f030f8f04"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.10.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MQTT_Library-0.10.0.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.10.0.zip",
      "size": 27495,
      "checksum": "SHA-256:738cab8fc52375aa5a042e9681e5f869895c1716fd7219fcc8831030ba1481f8"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.11.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, Yun, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MQTT_Library-0.11.0.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.11.0.zip",
      "size": 29551,
      "checksum": "SHA-256:053805c6448ca503baf865d32fd2cd5f2b7211bc1d3336aa52eabc13e8514071"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.11.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, Yun, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MQTT_Library-0.11.1.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.11.1.zip",
      "size": 29747,
      "checksum": "SHA-256:91c7cbfc65bec4eb364a5af153326b5e06d423eabf7ae08e3e6b6113902f9fa8"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.12.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, Yun, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MQTT_Library-0.12.0.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.12.0.zip",
      "size": 32844,
      "checksum": "SHA-256:225739ec3661e1c020c0f0f955641469f7608a58a6d6bc2b3ff477e32c813dd1"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.12.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, Yun, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MQTT_Library-0.12.1.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.12.1.zip",
      "size": 33120,
      "checksum": "SHA-256:4b71464431492202cff919f8f8aff324bb2c51a9a1557baa169ac1cc3d06bdfb"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.12.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, Yun, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MQTT_Library-0.12.2.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.12.2.zip",
      "size": 38531,
      "checksum": "SHA-256:f524faa40480ae3e6a84aee40cfa7c75b6827d26ba39bfb4f24652265d5f2b24"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.12.3",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, Yun, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MQTT_Library-0.12.3.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.12.3.zip",
      "size": 907356,
      "checksum": "SHA-256:8da7e2d2bb6773f057f27bbb2624adb839eb0f9cb4d9045dd7f19f18fe4a71ab"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.13.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, Yun, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MQTT_Library-0.13.0.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.13.0.zip",
      "size": 911036,
      "checksum": "SHA-256:4b93e53a42214e1dbbec229464eac1dd12c9141ec1276ced4e20e82fab98e2a2"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.13.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, Yun, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MQTT_Library-0.13.2.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.13.2.zip",
      "size": 913263,
      "checksum": "SHA-256:1aad35c59f74a4a054530bfe4a563974f5dceed1fd4fd1600f594feb2f58b188"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.13.3",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, Yun, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MQTT_Library-0.13.3.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.13.3.zip",
      "size": 915574,
      "checksum": "SHA-256:519479d1d2821454e26270e589592ae56f2f4d6304d84f3dbce278063a71b1fb"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.14.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, Yun, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MQTT_Library-0.14.1.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.14.1.zip",
      "size": 918617,
      "checksum": "SHA-256:e037731500bb285fd2236defc6c636fcb596524bb0245de1e6ac6d61805443e2"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.14.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, Yun, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MQTT_Library-0.14.2.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.14.2.zip",
      "size": 919702,
      "checksum": "SHA-256:3fd31bb36322caec399a5f4aa5295727893aea0ab7ab8e835260c05344bbb86e"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.15.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, Yun, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MQTT_Library-0.15.0.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.15.0.zip",
      "size": 922406,
      "checksum": "SHA-256:39a26106f51715b42c19dfc94a520e9b799997a22b9b92ab9af019159c14bef4"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.16.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, Yun, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MQTT_Library-0.16.0.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.16.0.zip",
      "size": 921665,
      "checksum": "SHA-256:772b430e5d7150fcfc813adc70bc9621cf2253bc4f17bb42eb4b68fd722fcc8c"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.16.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, Yun, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MQTT_Library-0.16.1.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.16.1.zip",
      "size": 920672,
      "checksum": "SHA-256:9f34be03176297951f9377e6974e53ef3966bd964ce0aff254c2267d46e262eb"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.16.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, Yun, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MQTT_Library-0.16.2.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.16.2.zip",
      "size": 920711,
      "checksum": "SHA-256:d0efb34917a05db3ca29ee2623313f3038aaa5d8c946c739fe2de9a8dca13b02"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.17.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, Yun, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MQTT_Library-0.17.0.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.17.0.zip",
      "size": 913931,
      "checksum": "SHA-256:fe56770758e4db26272b8743f6024a273f415d2ecdf6b5c500d21c96b717596e"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.9.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MQTT_Library-0.9.0.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.9.0.zip",
      "size": 24725,
      "checksum": "SHA-256:82350a2ae2c7564d509f5cde8135426eee2037323d4c89f38e26e7784eee9c7e"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.9.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MQTT_Library-0.9.1.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.9.1.zip",
      "size": 24665,
      "checksum": "SHA-256:27af384555fd1df7068f17a5e91d8983b77bc429c903c1bf4ae3e52b7cf32413"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.9.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MQTT_Library-0.9.2.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.9.2.zip",
      "size": 25525,
      "checksum": "SHA-256:8f18b8d01366fdf1d7e6c3bddc84b79763e9f8183f91147c2fac6409abab31dc"
    },
    {
      "name": "Adafruit SleepyDog Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library to use the watchdog timer for system reset and low power sleep.",
      "paragraph": "Arduino library to use the watchdog timer for system reset and low power sleep.",
      "website": "https://github.com/adafruit/Adafruit_SleepyDog",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_SleepyDog_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_SleepyDog_Library-1.0.0.zip",
      "size": 6627,
      "checksum": "SHA-256:e6dcb6d33d9ce84edbcc6b7381cddd1221998e4207350a55245ba070ea7b6910"
    },
    {
      "name": "Adafruit SleepyDog Library",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library to use the watchdog timer for system reset and low power sleep.",
      "paragraph": "Arduino library to use the watchdog timer for system reset and low power sleep.",
      "website": "https://github.com/adafruit/Adafruit_SleepyDog",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_SleepyDog_Library-1.1.0.zip",
      "archiveFileName": "Adafruit_SleepyDog_Library-1.1.0.zip",
      "size": 9025,
      "checksum": "SHA-256:6e6c7a2468e15182689d441fbfe56372a1deec3480a17a88a0c4e7a915e32d8d"
    },
    {
      "name": "Adafruit SleepyDog Library",
      "version": "1.1.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library to use the watchdog timer for system reset and low power sleep.",
      "paragraph": "Arduino library to use the watchdog timer for system reset and low power sleep.",
      "website": "https://github.com/adafruit/Adafruit_SleepyDog",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_SleepyDog_Library-1.1.1.zip",
      "archiveFileName": "Adafruit_SleepyDog_Library-1.1.1.zip",
      "size": 14250,
      "checksum": "SHA-256:d40e1439a2fc199319ed4c0fda94321a569c63e6afb057726973571eea84c8ee"
    },
    {
      "name": "Adafruit BNO055",
      "version": "1.0.0",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit BNO055 Absolute Orientation Sensor.",
      "paragraph": "Designed specifically to work with the Adafruit BNO055 Breakout, and is based on Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_BNO055",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BNO055-1.0.0.zip",
      "archiveFileName": "Adafruit_BNO055-1.0.0.zip",
      "size": 1629732,
      "checksum": "SHA-256:9065128018550fdbc9344577fda18539514847a458b7fa6a840b73d62a2fcb0a"
    },
    {
      "name": "Adafruit BNO055",
      "version": "1.0.4",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit BNO055 Absolute Orientation Sensor.",
      "paragraph": "Designed specifically to work with the Adafruit BNO055 Breakout, and is based on Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_BNO055",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BNO055-1.0.4.zip",
      "archiveFileName": "Adafruit_BNO055-1.0.4.zip",
      "size": 1629738,
      "checksum": "SHA-256:99d8d3e2fe94fdc45b476d604e75ee33b59841ac98ece2b737979d2817302673"
    },
    {
      "name": "Adafruit BNO055",
      "version": "1.0.5",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit BNO055 Absolute Orientation Sensor.",
      "paragraph": "Designed specifically to work with the Adafruit BNO055 Breakout, and is based on Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_BNO055",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BNO055-1.0.5.zip",
      "archiveFileName": "Adafruit_BNO055-1.0.5.zip",
      "size": 1630266,
      "checksum": "SHA-256:2ce0fbf84f33e5871071f9ff19656f8398d4d7b49a6d1aef6e01af4356d52e6c"
    },
    {
      "name": "Adafruit BNO055",
      "version": "1.0.6",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit BNO055 Absolute Orientation Sensor.",
      "paragraph": "Designed specifically to work with the Adafruit BNO055 Breakout, and is based on Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_BNO055",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BNO055-1.0.6.zip",
      "archiveFileName": "Adafruit_BNO055-1.0.6.zip",
      "size": 1630612,
      "checksum": "SHA-256:025324e928a70f1fe8e150794684d6e1b5c88091cc43163485b202eae0d3145a"
    },
    {
      "name": "Adafruit BNO055",
      "version": "1.1.1",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit BNO055 Absolute Orientation Sensor.",
      "paragraph": "Designed specifically to work with the Adafruit BNO055 Breakout, and is based on Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_BNO055",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BNO055-1.1.1.zip",
      "archiveFileName": "Adafruit_BNO055-1.1.1.zip",
      "size": 1635057,
      "checksum": "SHA-256:f49bdd4757eb939312dca01ac55d17f9269ee028c2bf89f31f70242015001cbe"
    },
    {
      "name": "Adafruit BNO055",
      "version": "1.1.2",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit BNO055 Absolute Orientation Sensor.",
      "paragraph": "Designed specifically to work with the Adafruit BNO055 Breakout, and is based on Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_BNO055",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BNO055-1.1.2.zip",
      "archiveFileName": "Adafruit_BNO055-1.1.2.zip",
      "size": 1635107,
      "checksum": "SHA-256:3a8fd5c1492df649278d2b0f844018a70f96c9e55a51698a1be4ea124bfa7e82"
    },
    {
      "name": "Adafruit BNO055",
      "version": "1.1.3",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit BNO055 Absolute Orientation Sensor.",
      "paragraph": "Designed specifically to work with the Adafruit BNO055 Breakout, and is based on Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_BNO055",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BNO055-1.1.3.zip",
      "archiveFileName": "Adafruit_BNO055-1.1.3.zip",
      "size": 7251112,
      "checksum": "SHA-256:f0f2c85197af5ddb55e1f242688ce2757f76e2b88a59a8db5c354797e30e9b5e"
    },
    {
      "name": "Adafruit IO Arduino",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library to access the Adafruit IO REST API.",
      "paragraph": "Arduino library to access the Adafruit IO REST API using the CC3000, ESP8266/generic Client, or FONA hardware.",
      "website": "https://github.com/adafruit/Adafruit_IO_Arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_IO_Arduino-1.0.0.zip",
      "archiveFileName": "Adafruit_IO_Arduino-1.0.0.zip",
      "size": 21734,
      "checksum": "SHA-256:bced3d235108254bebd69f6747507de87bf0ec0b59477a1a8a9dd367d5a9da53"
    },
    {
      "name": "Adafruit IO Arduino",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library to access the Adafruit IO REST API.",
      "paragraph": "Arduino library to access the Adafruit IO REST API using the CC3000, ESP8266/generic Client, or FONA hardware.",
      "website": "https://github.com/adafruit/Adafruit_IO_Arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_IO_Arduino-1.0.1.zip",
      "archiveFileName": "Adafruit_IO_Arduino-1.0.1.zip",
      "size": 22972,
      "checksum": "SHA-256:cecdec0ce4384aeded8b47c1b85ac510c71c16c18c2a70fad75081036721e0ea"
    },
    {
      "name": "Adafruit IO Arduino",
      "version": "2.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library to access Adafruit IO.",
      "paragraph": "Arduino library to access Adafruit IO using the Adafruit ESP8266, M0 WINC1500, WICED, Ethernet, or FONA hardware.",
      "website": "https://github.com/adafruit/Adafruit_IO_Arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_IO_Arduino-2.0.0.zip",
      "archiveFileName": "Adafruit_IO_Arduino-2.0.0.zip",
      "size": 33425,
      "checksum": "SHA-256:e9ffacce3c9d7584eca471a5af80ce7f2281e39aa07c28aaff3a278dfc4ec326"
    },
    {
      "name": "Adafruit IO Arduino",
      "version": "2.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library to access Adafruit IO.",
      "paragraph": "Arduino library to access Adafruit IO using the Adafruit ESP8266, M0 WINC1500, WICED, Ethernet, or FONA hardware.",
      "website": "https://github.com/adafruit/Adafruit_IO_Arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_IO_Arduino-2.0.1.zip",
      "archiveFileName": "Adafruit_IO_Arduino-2.0.1.zip",
      "size": 33754,
      "checksum": "SHA-256:73c8a6cdc044c0d0e5ffe196269ee54f3785887ef7407c435687d2c7519e8b56"
    },
    {
      "name": "Adafruit IO Arduino",
      "version": "2.1.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library to access Adafruit IO.",
      "paragraph": "Arduino library to access Adafruit IO using the Adafruit ESP8266, M0 WINC1500, WICED, MKR1000, Ethernet, or FONA hardware.",
      "website": "https://github.com/adafruit/Adafruit_IO_Arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_IO_Arduino-2.1.1.zip",
      "archiveFileName": "Adafruit_IO_Arduino-2.1.1.zip",
      "size": 41745,
      "checksum": "SHA-256:659bc3718f78eea8f8e2e88448a2282227d98fab268ffac9b76632d44530cd6b"
    },
    {
      "name": "Adafruit IO Arduino",
      "version": "2.2.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library to access Adafruit IO.",
      "paragraph": "Arduino library to access Adafruit IO using the Adafruit ESP8266, M0 WINC1500, WICED, MKR1000, Ethernet, or FONA hardware.",
      "website": "https://github.com/adafruit/Adafruit_IO_Arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_IO_Arduino-2.2.0.zip",
      "archiveFileName": "Adafruit_IO_Arduino-2.2.0.zip",
      "size": 42130,
      "checksum": "SHA-256:90531c5dcfae680fc29aa70b1e9aea710e880881d81532e5c7398c836833208b"
    },
    {
      "name": "Adafruit IO Arduino",
      "version": "2.3.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library to access Adafruit IO.",
      "paragraph": "Arduino library to access Adafruit IO using the Adafruit ESP8266, M0 WINC1500, WICED, MKR1000, Ethernet, or FONA hardware.",
      "website": "https://github.com/adafruit/Adafruit_IO_Arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_IO_Arduino-2.3.1.zip",
      "archiveFileName": "Adafruit_IO_Arduino-2.3.1.zip",
      "size": 69973,
      "checksum": "SHA-256:d07cf288d6432ea8d10af86ef0f3aa17dba04650ffe218bceab127d3a8614ddc"
    },
    {
      "name": "Adafruit IO Arduino",
      "version": "2.4.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library to access Adafruit IO.",
      "paragraph": "Arduino library to access Adafruit IO using the Adafruit ESP8266, M0 WINC1500, WICED, MKR1000, Ethernet, or FONA hardware.",
      "website": "https://github.com/adafruit/Adafruit_IO_Arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_IO_Arduino-2.4.0.zip",
      "archiveFileName": "Adafruit_IO_Arduino-2.4.0.zip",
      "size": 74253,
      "checksum": "SHA-256:fb137bdf4b38a93179cc06e2a8d58487999732189957247a61c89cc79901f452"
    },
    {
      "name": "Adafruit IO Arduino",
      "version": "2.4.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library to access Adafruit IO.",
      "paragraph": "Arduino library to access Adafruit IO using the Adafruit ESP8266, M0 WINC1500, WICED, MKR1000, Ethernet, or FONA hardware.",
      "website": "https://github.com/adafruit/Adafruit_IO_Arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_IO_Arduino-2.4.1.zip",
      "archiveFileName": "Adafruit_IO_Arduino-2.4.1.zip",
      "size": 76554,
      "checksum": "SHA-256:72fca129dda37ef151ecf4190b400f6a7af69fb8eae3daed456480a4adfa5611"
    },
    {
      "name": "Adafruit IO Arduino",
      "version": "2.4.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library to access Adafruit IO.",
      "paragraph": "Arduino library to access Adafruit IO using the Adafruit ESP8266, M0 WINC1500, WICED, MKR1000, Ethernet, or FONA hardware.",
      "website": "https://github.com/adafruit/Adafruit_IO_Arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_IO_Arduino-2.4.2.zip",
      "archiveFileName": "Adafruit_IO_Arduino-2.4.2.zip",
      "size": 78620,
      "checksum": "SHA-256:8260b8fcd08eda52588272481d6d264b5d2a5ecdf314193399d949ab872a4314"
    },
    {
      "name": "Adafruit IO Arduino",
      "version": "2.4.3",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library to access Adafruit IO.",
      "paragraph": "Arduino library to access Adafruit IO using the Adafruit ESP8266, M0 WINC1500, WICED, MKR1000, Ethernet, or FONA hardware.",
      "website": "https://github.com/adafruit/Adafruit_IO_Arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_IO_Arduino-2.4.3.zip",
      "archiveFileName": "Adafruit_IO_Arduino-2.4.3.zip",
      "size": 78620,
      "checksum": "SHA-256:6580bec5cf8289557ce2ab8a018d5c38511379600d4a3460d7a8e46848ab04df"
    },
    {
      "name": "Adafruit UNTZtrument",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit UNTZtrument",
      "paragraph": "Adafruit UNTZtrument",
      "website": "https://github.com/adafruit/Adafruit_UNTZtrument",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_UNTZtrument-1.0.0.zip",
      "archiveFileName": "Adafruit_UNTZtrument-1.0.0.zip",
      "size": 10004,
      "checksum": "SHA-256:6eaf736ee07556650ed772d8d6bcdf93a1b4daa94b4610317879f314f38cf3bf"
    },
    {
      "name": "Adafruit UNTZtrument",
      "version": "2.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit UNTZtrument",
      "paragraph": "Adafruit UNTZtrument",
      "website": "https://github.com/adafruit/Adafruit_UNTZtrument",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_UNTZtrument-2.0.0.zip",
      "archiveFileName": "Adafruit_UNTZtrument-2.0.0.zip",
      "size": 18207,
      "checksum": "SHA-256:97c269bc0ed2353e038ae4b2bf5f77558fc7aff37572da91e10cdd4b9890787b"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BluefruitLE_nRF51-1.0.0.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.0.0.zip",
      "size": 53022,
      "checksum": "SHA-256:01ca846afad4d9f99487804e081e77f7adca4667e8af4e8e5a0d9b573135e323"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.6.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BluefruitLE_nRF51-1.6.0.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.6.0.zip",
      "size": 79780,
      "checksum": "SHA-256:321b4b4a9112360ec3634281638fac489dc648d561bbe68dd4e7583cb31ed260"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.7.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BluefruitLE_nRF51-1.7.0.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.7.0.zip",
      "size": 84599,
      "checksum": "SHA-256:12bacf03450b72aed253a4abb2bf323802462a911dcf73fd71029d9d93ce4d71"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.7.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BluefruitLE_nRF51-1.7.2.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.7.2.zip",
      "size": 87730,
      "checksum": "SHA-256:bd00ae71b4589f763a0db76ceac8e24a0c60467b7c2e5e69bb2dfcd76987658c"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.7.3",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BluefruitLE_nRF51-1.7.3.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.7.3.zip",
      "size": 91387,
      "checksum": "SHA-256:0edce983f13e131415f3303027c2dc4aa095c414c3bdc1eda936a514c24c03b3"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.7.4",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BluefruitLE_nRF51-1.7.4.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.7.4.zip",
      "size": 92548,
      "checksum": "SHA-256:2daf67baad62668cca7411ef95faf908c47cae42e63343d8491a8746a7ac5383"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.7.5",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BluefruitLE_nRF51-1.7.5.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.7.5.zip",
      "size": 92650,
      "checksum": "SHA-256:7da891d0a26ffecf3f80a82224cfd55fc506088ce9c2c5dd77cdb116b1814608"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.7.6",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BluefruitLE_nRF51-1.7.6.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.7.6.zip",
      "size": 94909,
      "checksum": "SHA-256:d9f5faaa12853f27fa8e094e3f8875917ede47da4d19eef11586364f5f8816de"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.7.7",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BluefruitLE_nRF51-1.7.7.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.7.7.zip",
      "size": 94909,
      "checksum": "SHA-256:a23f1fc28fa7ceeacd6d132849d2c2bdae43a3eded5987dc7fe60f21ec3a1ce4"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.7.8",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BluefruitLE_nRF51-1.7.8.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.7.8.zip",
      "size": 94920,
      "checksum": "SHA-256:6b4635ab79057d57a45c6fc4465b96dc7a0149f7fe0fea49098fcd8a393bab1b"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.8.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BluefruitLE_nRF51-1.8.0.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.8.0.zip",
      "size": 94938,
      "checksum": "SHA-256:f06897268759f02b287e725e27e8f816b18d0e9b6a5d904cfbdcba0d90605dfb"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.9.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BluefruitLE_nRF51-1.9.0.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.9.0.zip",
      "size": 143208,
      "checksum": "SHA-256:88abef4d442e2b9529d5c58a9e4a81ec30ab922812225bc02c47bd522bd63b74"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.9.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BluefruitLE_nRF51-1.9.1.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.9.1.zip",
      "size": 143209,
      "checksum": "SHA-256:0015c5e1734288a22229b3e750939b59f2c10cc02c6e68e2cc920616408fa20d"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.9.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BluefruitLE_nRF51-1.9.2.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.9.2.zip",
      "size": 148437,
      "checksum": "SHA-256:06607f88474df6c14408a138f359c6010fac07dcbfee34cf41e9e79af99a6bc0"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.9.3",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BluefruitLE_nRF51-1.9.3.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.9.3.zip",
      "size": 148705,
      "checksum": "SHA-256:25d3fd9c41d215b69c5cf4dbe09a15d9aa80cd5c597b141214e9165526247ae1"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.9.4",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BluefruitLE_nRF51-1.9.4.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.9.4.zip",
      "size": 154328,
      "checksum": "SHA-256:21117f98abee001d14bf23334afa6dd45d7c0b53dba352d5158a23292c7a8e22"
    },
    {
      "name": "Adafruit SSD1325",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "SSD1325 monochrome OLED library",
      "paragraph": "SSD1325 monochome OLED library (note does not support grayscale).",
      "website": "https://github.com/adafruit/Adafruit_SSD1325_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_SSD1325-1.0.0.zip",
      "archiveFileName": "Adafruit_SSD1325-1.0.0.zip",
      "size": 11188,
      "checksum": "SHA-256:cc9f1e04fe89f9792639d7ec372dc7780b8224f6ae043c81c748142e454cfeaf"
    },
    {
      "name": "Adafruit BME280 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for BME280 sensors.",
      "paragraph": "Arduino library for BME280 humidity and pressure sensors.",
      "website": "https://github.com/adafruit/Adafruit_BME280_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BME280_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_BME280_Library-1.0.0.zip",
      "size": 6124,
      "checksum": "SHA-256:bfda115e8aa7516eeb785d4f3e17c1bccd6f9247a5e34626abedd7ce09d6d107"
    },
    {
      "name": "Adafruit BME280 Library",
      "version": "1.0.3",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for BME280 sensors.",
      "paragraph": "Arduino library for BME280 humidity and pressure sensors.",
      "website": "https://github.com/adafruit/Adafruit_BME280_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BME280_Library-1.0.3.zip",
      "archiveFileName": "Adafruit_BME280_Library-1.0.3.zip",
      "size": 6501,
      "checksum": "SHA-256:bada76dadbeaf731a69f09e0ba9292b2ef9f951790f1d27401d618227c787343"
    },
    {
      "name": "Adafruit BME280 Library",
      "version": "1.0.4",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for BME280 sensors.",
      "paragraph": "Arduino library for BME280 humidity and pressure sensors.",
      "website": "https://github.com/adafruit/Adafruit_BME280_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BME280_Library-1.0.4.zip",
      "archiveFileName": "Adafruit_BME280_Library-1.0.4.zip",
      "size": 7035,
      "checksum": "SHA-256:83fa846237d6c9b1000a5ee63a9331733b526c263e1cdd1579e3f5954afa4837"
    },
    {
      "name": "Adafruit BME280 Library",
      "version": "1.0.5",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for BME280 sensors.",
      "paragraph": "Arduino library for BME280 humidity and pressure sensors.",
      "website": "https://github.com/adafruit/Adafruit_BME280_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BME280_Library-1.0.5.zip",
      "archiveFileName": "Adafruit_BME280_Library-1.0.5.zip",
      "size": 10951,
      "checksum": "SHA-256:919bf1c463c7429dcde1a4c0523f4ec62429f1bf57c48e960911b5f26831a81f"
    },
    {
      "name": "Adafruit BMP280 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for BMP280 sensors.",
      "paragraph": "Arduino library for BMP280 pressure and altitude sensors.",
      "website": "https://github.com/adafruit/Adafruit_BMP280_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BMP280_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_BMP280_Library-1.0.0.zip",
      "size": 5477,
      "checksum": "SHA-256:60c20019e92b5f3b4c19f3a2c4d71297e4019a60628311438aa57de3d2fdf231"
    },
    {
      "name": "Adafruit BMP280 Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for BMP280 sensors.",
      "paragraph": "Arduino library for BMP280 pressure and altitude sensors.",
      "website": "https://github.com/adafruit/Adafruit_BMP280_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BMP280_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_BMP280_Library-1.0.1.zip",
      "size": 5559,
      "checksum": "SHA-256:799ac9077a530b57bb08641603a34b11468bc3acec5e314fefd1230ff6f287d9"
    },
    {
      "name": "Adafruit BMP280 Library",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for BMP280 sensors.",
      "paragraph": "Arduino library for BMP280 pressure and altitude sensors.",
      "website": "https://github.com/adafruit/Adafruit_BMP280_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_BMP280_Library-1.0.2.zip",
      "archiveFileName": "Adafruit_BMP280_Library-1.0.2.zip",
      "size": 6096,
      "checksum": "SHA-256:2856dd949b960a52b2e5e8f37dac446a7522886d4747905290242191c0211e3e"
    },
    {
      "name": "Adafruit LIS3DH",
      "version": "1.0.0",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit LIS3DH Accelerometer.",
      "paragraph": "Designed specifically to work with the Adafruit LIS3DH Breakout, and is based on Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_LIS3DH",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_LIS3DH-1.0.0.zip",
      "archiveFileName": "Adafruit_LIS3DH-1.0.0.zip",
      "size": 9679,
      "checksum": "SHA-256:64bb4796acc5b649014403b0b7d6bbe0381edbc8f19a19263186daeb21623983"
    },
    {
      "name": "Adafruit LIS3DH",
      "version": "1.0.1",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit LIS3DH Accelerometer.",
      "paragraph": "Designed specifically to work with the Adafruit LIS3DH Breakout, and is based on Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_LIS3DH",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_LIS3DH-1.0.1.zip",
      "archiveFileName": "Adafruit_LIS3DH-1.0.1.zip",
      "size": 9678,
      "checksum": "SHA-256:263992368888d03b94a152d05b2248dd792390d7570bafdbcb79af7475b139f6"
    },
    {
      "name": "Adafruit LIS3DH",
      "version": "1.0.3",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit LIS3DH Accelerometer.",
      "paragraph": "Designed specifically to work with the Adafruit LIS3DH Breakout, and is based on Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_LIS3DH",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_LIS3DH-1.0.3.zip",
      "archiveFileName": "Adafruit_LIS3DH-1.0.3.zip",
      "size": 9814,
      "checksum": "SHA-256:18fa023fb3553b46cabbed70c548c8bb8375f81b421e6d6beb50b77d136a03f7"
    },
    {
      "name": "Adafruit LIS3DH",
      "version": "1.0.4",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit LIS3DH Accelerometer.",
      "paragraph": "Designed specifically to work with the Adafruit LIS3DH Breakout, and is based on Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_LIS3DH",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_LIS3DH-1.0.4.zip",
      "archiveFileName": "Adafruit_LIS3DH-1.0.4.zip",
      "size": 9906,
      "checksum": "SHA-256:73587548063e1073e695c63c43cf7bfb3ed16441199b994a818011c476c8dc03"
    },
    {
      "name": "Adafruit SHT31 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for SHT31 temperature \u0026 humidity sensor.",
      "paragraph": "Arduino library for SHT31 temperature \u0026 humidity sensor.",
      "website": "https://github.com/adafruit/Adafruit_SHT31",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_SHT31_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_SHT31_Library-1.0.0.zip",
      "size": 4332,
      "checksum": "SHA-256:b1bc6ef225bc222a28b090f9cf5063424597aaa12fd2dd9816992924c1bcc707"
    },
    {
      "name": "Adafruit LiquidCrystal",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Fork of LiquidCrystal HD44780-compatible LCD driver library, now with support for ATtiny85.",
      "paragraph": "Fork of LiquidCrystal HD44780-compatible LCD driver library, now with support for ATtiny85.",
      "website": "https://github.com/adafruit/LiquidCrystal/",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_LiquidCrystal-1.0.0.zip",
      "archiveFileName": "Adafruit_LiquidCrystal-1.0.0.zip",
      "size": 19070,
      "checksum": "SHA-256:a472428e4c26a720407dd9c38937398f94b4126e0b15449a8e83f7188de02788"
    },
    {
      "name": "Adafruit MAX31865 library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit RTD Amplifier breakout with MAX31865",
      "paragraph": "Library for the Adafruit RTD Amplifier breakout with MAX31865",
      "website": "https://github.com/adafruit/Adafruit_MAX31865",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MAX31865_library-1.0.0.zip",
      "archiveFileName": "Adafruit_MAX31865_library-1.0.0.zip",
      "size": 4540,
      "checksum": "SHA-256:2c86f467abc5ef4888b2268b1a0cdc0614ad0c50f9a08b596631b10d9474efba"
    },
    {
      "name": "Adafruit MAX31856 library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit Thermocouple Amplifier breakout with MAX31856",
      "paragraph": "Library for the Adafruit Thermocouple Amplifier breakout with MAX31856",
      "website": "https://github.com/adafruit/Adafruit_MAX31856",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MAX31856_library-1.0.1.zip",
      "archiveFileName": "Adafruit_MAX31856_library-1.0.1.zip",
      "size": 5080,
      "checksum": "SHA-256:184146d24696b33f4528be98c3449ec764234eb16f847de183431d3773aaede7"
    },
    {
      "name": "Adafruit Circuit Playground",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "All in one library to control Adafruit's Circuit Playground board.",
      "paragraph": "All in one library to control Adafruit's Circuit Playground board.  Requires no other dependencies and exposes all Circuit Playground components in a simple to use class.",
      "website": "https://github.com/adafruit/Adafruit_CircuitPlayground",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Circuit_Playground-1.0.0.zip",
      "archiveFileName": "Adafruit_Circuit_Playground-1.0.0.zip",
      "size": 30041,
      "checksum": "SHA-256:bf54f522f8b17cc4c3428e1ee8a617a2f5ac16e4c2a8ccee0b6c4dee7ad65449"
    },
    {
      "name": "Adafruit Circuit Playground",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "All in one library to control Adafruit's Circuit Playground board.",
      "paragraph": "All in one library to control Adafruit's Circuit Playground board.  Requires no other dependencies and exposes all Circuit Playground components in a simple to use class.",
      "website": "https://github.com/adafruit/Adafruit_CircuitPlayground",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Circuit_Playground-1.0.1.zip",
      "archiveFileName": "Adafruit_Circuit_Playground-1.0.1.zip",
      "size": 32784,
      "checksum": "SHA-256:bdeb893503f8046dc45fa25027b490d8237a393d37b3182fc17dd6f004a7f06e"
    },
    {
      "name": "Adafruit Circuit Playground",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "All in one library to control Adafruit's Circuit Playground board.",
      "paragraph": "All in one library to control Adafruit's Circuit Playground board.  Requires no other dependencies and exposes all Circuit Playground components in a simple to use class.",
      "website": "https://github.com/adafruit/Adafruit_CircuitPlayground",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Circuit_Playground-1.0.2.zip",
      "archiveFileName": "Adafruit_Circuit_Playground-1.0.2.zip",
      "size": 44650,
      "checksum": "SHA-256:623d14a4c9fc247dceff0ea0347b1796733f6ea5eccf0163db84f6b53a844d2c"
    },
    {
      "name": "Adafruit Circuit Playground",
      "version": "1.0.3",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "All in one library to control Adafruit's Circuit Playground board.",
      "paragraph": "All in one library to control Adafruit's Circuit Playground board.  Requires no other dependencies and exposes all Circuit Playground components in a simple to use class.",
      "website": "https://github.com/adafruit/Adafruit_CircuitPlayground",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Circuit_Playground-1.0.3.zip",
      "archiveFileName": "Adafruit_Circuit_Playground-1.0.3.zip",
      "size": 45983,
      "checksum": "SHA-256:1eaef65d2f0cf112166e6ef503b3b258333e9750084fa40d11d48e24eb66b3ad"
    },
    {
      "name": "Adafruit Circuit Playground",
      "version": "1.0.4",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "All in one library to control Adafruit's Circuit Playground board.",
      "paragraph": "All in one library to control Adafruit's Circuit Playground board.  Requires no other dependencies and exposes all Circuit Playground components in a simple to use class.",
      "website": "https://github.com/adafruit/Adafruit_CircuitPlayground",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Circuit_Playground-1.0.4.zip",
      "archiveFileName": "Adafruit_Circuit_Playground-1.0.4.zip",
      "size": 46043,
      "checksum": "SHA-256:7e057bbe2a6cf9617721e32ef81c3a45510356a8dd841a6dbe4b10fdad68767f"
    },
    {
      "name": "Adafruit Circuit Playground",
      "version": "1.0.5",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "All in one library to control Adafruit's Circuit Playground board.",
      "paragraph": "All in one library to control Adafruit's Circuit Playground board.  Requires no other dependencies and exposes all Circuit Playground components in a simple to use class.",
      "website": "https://github.com/adafruit/Adafruit_CircuitPlayground",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Circuit_Playground-1.0.5.zip",
      "archiveFileName": "Adafruit_Circuit_Playground-1.0.5.zip",
      "size": 48493,
      "checksum": "SHA-256:5f97e95b7373acdc6406aeb5c005de565e163e88d4cd5098e0f36f1d4f21a452"
    },
    {
      "name": "Adafruit Circuit Playground",
      "version": "1.0.6",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "All in one library to control Adafruit's Circuit Playground board.",
      "paragraph": "All in one library to control Adafruit's Circuit Playground board.  Requires no other dependencies and exposes all Circuit Playground components in a simple to use class.",
      "website": "https://github.com/adafruit/Adafruit_CircuitPlayground",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Circuit_Playground-1.0.6.zip",
      "archiveFileName": "Adafruit_Circuit_Playground-1.0.6.zip",
      "size": 56751,
      "checksum": "SHA-256:d7eb15754495df473b2b5c724e940d0c885ff3acd11b09ee580dc4b1baf96679"
    },
    {
      "name": "Adafruit Circuit Playground",
      "version": "1.0.7",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "All in one library to control Adafruit's Circuit Playground board.",
      "paragraph": "All in one library to control Adafruit's Circuit Playground board.  Requires no other dependencies and exposes all Circuit Playground components in a simple to use class.",
      "website": "https://github.com/adafruit/Adafruit_CircuitPlayground",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Circuit_Playground-1.0.7.zip",
      "archiveFileName": "Adafruit_Circuit_Playground-1.0.7.zip",
      "size": 57060,
      "checksum": "SHA-256:3cd15eaadcef4681838c45a723eabb489f1b83122c61427451d0baaf68235d62"
    },
    {
      "name": "Adafruit Circuit Playground",
      "version": "1.0.8",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "All in one library to control Adafruit's Circuit Playground board.",
      "paragraph": "All in one library to control Adafruit's Circuit Playground board.  Requires no other dependencies and exposes all Circuit Playground components in a simple to use class.",
      "website": "https://github.com/adafruit/Adafruit_CircuitPlayground",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Circuit_Playground-1.0.8.zip",
      "archiveFileName": "Adafruit_Circuit_Playground-1.0.8.zip",
      "size": 57076,
      "checksum": "SHA-256:87205b69444201e13ae07e98d198a34a2443a7074c7992878a99cad38a3965c4"
    },
    {
      "name": "Adafruit Circuit Playground",
      "version": "1.0.9",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "All in one library to control Adafruit's Circuit Playground board.",
      "paragraph": "All in one library to control Adafruit's Circuit Playground board.  Requires no other dependencies and exposes all Circuit Playground components in a simple to use class.",
      "website": "https://github.com/adafruit/Adafruit_CircuitPlayground",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Circuit_Playground-1.0.9.zip",
      "archiveFileName": "Adafruit_Circuit_Playground-1.0.9.zip",
      "size": 59245,
      "checksum": "SHA-256:f9ed849b4f45196f6c4e14c1ce53990ec247b8912c328f9ab71d41d054172bfb"
    },
    {
      "name": "Adafruit Circuit Playground",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "All in one library to control Adafruit's Circuit Playground board.",
      "paragraph": "All in one library to control Adafruit's Circuit Playground board.  Requires no other dependencies and exposes all Circuit Playground components in a simple to use class.",
      "website": "https://github.com/adafruit/Adafruit_CircuitPlayground",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Circuit_Playground-1.1.0.zip",
      "archiveFileName": "Adafruit_Circuit_Playground-1.1.0.zip",
      "size": 59244,
      "checksum": "SHA-256:54aea38de1bd491d16f15fc57916e6fb7f094ee26f125563cef0c919c7bad641"
    },
    {
      "name": "Adafruit Circuit Playground",
      "version": "1.2.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "All in one library to control Adafruit's Circuit Playground board.",
      "paragraph": "All in one library to control Adafruit's Circuit Playground board.  Requires no other dependencies and exposes all Circuit Playground components in a simple to use class.",
      "website": "https://github.com/adafruit/Adafruit_CircuitPlayground",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Circuit_Playground-1.2.0.zip",
      "archiveFileName": "Adafruit_Circuit_Playground-1.2.0.zip",
      "size": 61435,
      "checksum": "SHA-256:d09cd73f25959d3b41a2f25af49b9ba1fa635cbf3236fde517674f823cb221b5"
    },
    {
      "name": "Adafruit Circuit Playground",
      "version": "1.2.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "All in one library to control Adafruit's Circuit Playground board.",
      "paragraph": "All in one library to control Adafruit's Circuit Playground board.  Requires no other dependencies and exposes all Circuit Playground components in a simple to use class.",
      "website": "https://github.com/adafruit/Adafruit_CircuitPlayground",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Circuit_Playground-1.2.1.zip",
      "archiveFileName": "Adafruit_Circuit_Playground-1.2.1.zip",
      "size": 61711,
      "checksum": "SHA-256:117f8a97d447a68068c6ac3b564f83bf326e88a65084facc795c63fd5c5fa861"
    },
    {
      "name": "Adafruit Circuit Playground",
      "version": "1.6.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "All in one library to control Adafruit's Circuit Playground board.",
      "paragraph": "All in one library to control Adafruit's Circuit Playground board.  Requires no other dependencies and exposes all Circuit Playground components in a simple to use class.",
      "website": "https://github.com/adafruit/Adafruit_CircuitPlayground",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Circuit_Playground-1.6.0.zip",
      "archiveFileName": "Adafruit_Circuit_Playground-1.6.0.zip",
      "size": 308873,
      "checksum": "SHA-256:f5abef25186aa48fe2181c55f0aeeaed9f048d48f7a237dab6dc5260acae606e"
    },
    {
      "name": "Adafruit Circuit Playground",
      "version": "1.6.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "All in one library to control Adafruit's Circuit Playground board.",
      "paragraph": "All in one library to control Adafruit's Circuit Playground board.  Requires no other dependencies and exposes all Circuit Playground components in a simple to use class.",
      "website": "https://github.com/adafruit/Adafruit_CircuitPlayground",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Circuit_Playground-1.6.2.zip",
      "archiveFileName": "Adafruit_Circuit_Playground-1.6.2.zip",
      "size": 314323,
      "checksum": "SHA-256:c617b7027dd65b29ab3348cb41101108ec0b533171b9eb8b3beae699f7bf41c3"
    },
    {
      "name": "Adafruit Circuit Playground",
      "version": "1.6.3",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "All in one library to control Adafruit's Circuit Playground board.",
      "paragraph": "All in one library to control Adafruit's Circuit Playground board.  Requires no other dependencies and exposes all Circuit Playground components in a simple to use class.",
      "website": "https://github.com/adafruit/Adafruit_CircuitPlayground",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Circuit_Playground-1.6.3.zip",
      "archiveFileName": "Adafruit_Circuit_Playground-1.6.3.zip",
      "size": 312313,
      "checksum": "SHA-256:f174f5d9def68fc7cda1043e9848e28047309400d2f75c30e761f9cc28d98961"
    },
    {
      "name": "Adafruit Circuit Playground",
      "version": "1.6.4",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "All in one library to control Adafruit's Circuit Playground board.",
      "paragraph": "All in one library to control Adafruit's Circuit Playground board.  Requires no other dependencies and exposes all Circuit Playground components in a simple to use class.",
      "website": "https://github.com/adafruit/Adafruit_CircuitPlayground",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Circuit_Playground-1.6.4.zip",
      "archiveFileName": "Adafruit_Circuit_Playground-1.6.4.zip",
      "size": 312365,
      "checksum": "SHA-256:e51562d1107650d150ecd16caa8d49c00c851c50e6c3bf65290dcee73ab8b813"
    },
    {
      "name": "Adafruit Circuit Playground",
      "version": "1.4.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "All in one library to control Adafruit's Circuit Playground board.",
      "paragraph": "All in one library to control Adafruit's Circuit Playground board.  Requires no other dependencies and exposes all Circuit Playground components in a simple to use class.",
      "website": "https://github.com/adafruit/Adafruit_CircuitPlayground",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Circuit_Playground-1.4.0.zip",
      "archiveFileName": "Adafruit_Circuit_Playground-1.4.0.zip",
      "size": 70021,
      "checksum": "SHA-256:8046b0c5cd466662a2662863fcb9725c17bb462e0bd99ef6ae398f729ab19b51"
    },
    {
      "name": "Adafruit Circuit Playground",
      "version": "1.5.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "All in one library to control Adafruit's Circuit Playground board.",
      "paragraph": "All in one library to control Adafruit's Circuit Playground board.  Requires no other dependencies and exposes all Circuit Playground components in a simple to use class.",
      "website": "https://github.com/adafruit/Adafruit_CircuitPlayground",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Circuit_Playground-1.5.0.zip",
      "archiveFileName": "Adafruit_Circuit_Playground-1.5.0.zip",
      "size": 308870,
      "checksum": "SHA-256:6a6c1dca2efad41452f8f8e299908657f71731245fd8bf953d73df3f7d62ae20"
    },
    {
      "name": "Adafruit Circuit Playground",
      "version": "1.6.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "All in one library to control Adafruit's Circuit Playground board.",
      "paragraph": "All in one library to control Adafruit's Circuit Playground board.  Requires no other dependencies and exposes all Circuit Playground components in a simple to use class.",
      "website": "https://github.com/adafruit/Adafruit_CircuitPlayground",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_Circuit_Playground-1.6.1.zip",
      "archiveFileName": "Adafruit_Circuit_Playground-1.6.1.zip",
      "size": 308864,
      "checksum": "SHA-256:ddaf92182d875d5cfe5c5b3b32239480d51100bc7bb2b6de634abfd083f1eadd"
    },
    {
      "name": "Adafruit FXAS21002C",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified sensor driver for the FXAS210002C Gyroscope",
      "paragraph": "Unified sensor driver for the FXAS21002C Gyroscope",
      "website": "https://github.com/adafruit/Adafruit_FXAS21002C",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_FXAS21002C-1.1.0.zip",
      "archiveFileName": "Adafruit_FXAS21002C-1.1.0.zip",
      "size": 5967,
      "checksum": "SHA-256:18206996bca6b24f4cfa833f5045677a04ea91fd8220f31ec2efc8a9a305517e"
    },
    {
      "name": "Adafruit FXAS21002C",
      "version": "1.1.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified sensor driver for the FXAS210002C Gyroscope",
      "paragraph": "Unified sensor driver for the FXAS21002C Gyroscope",
      "website": "https://github.com/adafruit/Adafruit_FXAS21002C",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_FXAS21002C-1.1.1.zip",
      "archiveFileName": "Adafruit_FXAS21002C-1.1.1.zip",
      "size": 5953,
      "checksum": "SHA-256:8307cfd3aa6a3ab1b91030f79020fc5c537b83beebcbd5c24e15726a524ad657"
    },
    {
      "name": "Adafruit FXAS21002C",
      "version": "1.1.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified sensor driver for the FXAS210002C Gyroscope",
      "paragraph": "Unified sensor driver for the FXAS21002C Gyroscope",
      "website": "https://github.com/adafruit/Adafruit_FXAS21002C",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_FXAS21002C-1.1.2.zip",
      "archiveFileName": "Adafruit_FXAS21002C-1.1.2.zip",
      "size": 5937,
      "checksum": "SHA-256:15953e6af688678af424aa638325653d85a2c8566ab380ee5caa94d1ab6511f5"
    },
    {
      "name": "Adafruit FXOS8700",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified sensor driver for the FXOS8700 Accelerometer/Magnetometer",
      "paragraph": "Unified sensor driver for the FXOS8700 Accelerometer/Magnetometer",
      "website": "https://github.com/adafruit/Adafruit_FXOS8700",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_FXOS8700-1.1.0.zip",
      "archiveFileName": "Adafruit_FXOS8700-1.1.0.zip",
      "size": 6501,
      "checksum": "SHA-256:bda7b890d6300ce476b17067d74abf0026562280525f3271dc8b00b8ac6719b4"
    },
    {
      "name": "SmartEverything SIGFOX LE51-868",
      "version": "1.0.0",
      "author": "Mik",
      "maintainer": "amel-tech \u003cdev@amel-tech.com\u003e",
      "sentence": "Library code for the TELEIT LE51-868 a SIGFOX module",
      "paragraph": "\u003cbr\u003eThe LE51-868 S is a high performance certified Short Range to Long Range module designed to cover the 863-870 MHz band working with the Telit Proprietary protocol and acting as a SIGFOX gateway.\u003cbr\u003eIt has high value technical characteristics such as a -126dBm sensitivity, ultra-low power consumption and up to 15.5dBm of Output power.\u003cbr\u003eIt is very easy to integrate, with small form factor and acts as a long range communication module connecting directly to SIGFOX network",
      "website": "https://github.com/ameltech/sme-le51-868-library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_SIGFOX_LE51_868-1.0.0.zip",
      "archiveFileName": "SmartEverything_SIGFOX_LE51_868-1.0.0.zip",
      "size": 17346,
      "checksum": "SHA-256:98f98c1ec3ad010c1e047a6c7a5e3db0a8f265ba79a185d077d345aedae52c5a"
    },
    {
      "name": "SmartEverything SIGFOX LE51-868",
      "version": "2.1.0",
      "author": "Mik",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for the TELEIT LE51-868 a SIGFOX module",
      "paragraph": "\u003cbr\u003eThe LE51-868 S is a high performance certified Short Range to Long Range module designed to cover the 863-870 MHz band working with the Telit Proprietary protocol and acting as a SIGFOX gateway.\u003cbr\u003eIt has high value technical characteristics such as a -126dBm sensitivity, ultra-low power consumption and up to 15.5dBm of Output power.\u003cbr\u003eIt is very easy to integrate, with small form factor and acts as a long range communication module connecting directly to SIGFOX network",
      "website": "https://github.com/ameltech/sme-le51-868-library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_SIGFOX_LE51_868-2.1.0.zip",
      "archiveFileName": "SmartEverything_SIGFOX_LE51_868-2.1.0.zip",
      "size": 128855,
      "checksum": "SHA-256:8e62f7e442affb4ce4fa3113e6f640e05952432052aaf9be11f8f622da368b8b"
    },
    {
      "name": "SmartEverything SIGFOX LE51-868",
      "version": "2.1.1",
      "author": "Mik",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for the TELEIT LE51-868 a SIGFOX module",
      "paragraph": "\u003cbr\u003eThe LE51-868 S is a high performance certified Short Range to Long Range module designed to cover the 863-870 MHz band working with the Telit Proprietary protocol and acting as a SIGFOX gateway.\u003cbr\u003eIt has high value technical characteristics such as a -126dBm sensitivity, ultra-low power consumption and up to 15.5dBm of Output power.\u003cbr\u003eIt is very easy to integrate, with small form factor and acts as a long range communication module connecting directly to SIGFOX network",
      "website": "https://github.com/ameltech/sme-le51-868-library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_SIGFOX_LE51_868-2.1.1.zip",
      "archiveFileName": "SmartEverything_SIGFOX_LE51_868-2.1.1.zip",
      "size": 26406,
      "checksum": "SHA-256:b8d388f2d3cf459675d5f2fedeedbc74e006dd876405ec5de60aa9f01c94c855"
    },
    {
      "name": "SmartEverything SIGFOX LE51-868",
      "version": "2.0.0",
      "author": "Mik",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for the TELEIT LE51-868 a SIGFOX module",
      "paragraph": "\u003cbr\u003eThe LE51-868 S is a high performance certified Short Range to Long Range module designed to cover the 863-870 MHz band working with the Telit Proprietary protocol and acting as a SIGFOX gateway.\u003cbr\u003eIt has high value technical characteristics such as a -126dBm sensitivity, ultra-low power consumption and up to 15.5dBm of Output power.\u003cbr\u003eIt is very easy to integrate, with small form factor and acts as a long range communication module connecting directly to SIGFOX network",
      "website": "https://github.com/ameltech/sme-le51-868-library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_SIGFOX_LE51_868-2.0.0.zip",
      "archiveFileName": "SmartEverything_SIGFOX_LE51_868-2.0.0.zip",
      "size": 126708,
      "checksum": "SHA-256:8c1edc9df9105470b3d86bd48fb09c56bef2b40f45b7768f4f62c7474d4b7475"
    },
    {
      "name": "SmartEverything NFC NT3H1101",
      "version": "1.0.0",
      "author": "Mik",
      "maintainer": "amel-tech \u003cdev@amel-tech.com\u003e",
      "sentence": "Library code for the NXP NT3H1101 a NFC_I2C module",
      "paragraph": "\u003cbr\u003eThe NXP NT3H1101 is the first product of NXP's NTAG family offering both contactless and contact interfaces.\u003cbr\u003eIn addition to the passive NFC Forum compliant contactless interface, the IC features an I2C contact interface, which can communicate with a microcontroller if the NTAG I2C is powered from an external power supply.",
      "website": "https://github.com/ameltech/sme-nt3h1x01-library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_NFC_NT3H1101-1.0.0.zip",
      "archiveFileName": "SmartEverything_NFC_NT3H1101-1.0.0.zip",
      "size": 17551,
      "checksum": "SHA-256:658db91c14938ffdd53bebfcbd06e2e50411866e4158e789df78c145507671de"
    },
    {
      "name": "SmartEverything NFC NT3H1101",
      "version": "1.1.1",
      "author": "Mik",
      "maintainer": "axelelettronica \u003csmkk@axelelettronica.it\u003e",
      "sentence": "Library code for the NXP NT3H1101 a NFC_I2C module",
      "paragraph": "\u003cbr\u003eThe NXP NT3H1101 is the first product of NXP's NTAG family offering both contactless and contact interfaces.\u003cbr\u003eIn addition to the passive NFC Forum compliant contactless interface, the IC features an I2C contact interface, which can communicate with a microcontroller if the NTAG I2C is powered from an external power supply.",
      "website": "https://github.com/ameltech/sme-nt3h1x01-library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_NFC_NT3H1101-1.1.1.zip",
      "archiveFileName": "SmartEverything_NFC_NT3H1101-1.1.1.zip",
      "size": 17918,
      "checksum": "SHA-256:5724fb6e15304a0a242bc8b371cefd5d81fff2a65bfed253ac3bc172f6c5ca51"
    },
    {
      "name": "SmartEverything NFC NT3H1101",
      "version": "1.1.0",
      "author": "Mik",
      "maintainer": "axelelettronica \u003csmkk@axelelettronica.it\u003e",
      "sentence": "Library code for the NXP NT3H1101 a NFC_I2C module",
      "paragraph": "\u003cbr\u003eThe NXP NT3H1101 is the first product of NXP's NTAG family offering both contactless and contact interfaces.\u003cbr\u003eIn addition to the passive NFC Forum compliant contactless interface, the IC features an I2C contact interface, which can communicate with a microcontroller if the NTAG I2C is powered from an external power supply.",
      "website": "https://github.com/ameltech/sme-nt3h1x01-library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_NFC_NT3H1101-1.1.0.zip",
      "archiveFileName": "SmartEverything_NFC_NT3H1101-1.1.0.zip",
      "size": 17840,
      "checksum": "SHA-256:8fed1496bf70ed3bb8a6f405f266b4cbed6cd7ceac36698cecbada771c7e3305"
    },
    {
      "name": "SmartEverything VL6180X",
      "version": "1.0.0",
      "author": "Mik",
      "maintainer": "amel-tech  \u003cdev@amel-tech.com\u003e",
      "sentence": "Library code for the Ambient Light \u0026 Proximity sensor from ST component.",
      "paragraph": "Combining an IR emitter, a range sensor and an ambient light sensor in a three-in-one ready-to-use reflowable package.\u003cbr\u003eThe VL6180X is easy to integrate and saves the end-product maker long and costly optical and mechanical design optimizations.",
      "website": "https://github.com/ameltech/sme-vl6180x-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_VL6180X-1.0.0.zip",
      "archiveFileName": "SmartEverything_VL6180X-1.0.0.zip",
      "size": 13852,
      "checksum": "SHA-256:87f423527708b4e49b7eb10fac05b1e827ffd4099aa63e5ce431549cfc46396b"
    },
    {
      "name": "SmartEverything VL6180X",
      "version": "1.1.1",
      "author": "Mik",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for the Ambient Light \u0026 Proximity sensor from ST component.",
      "paragraph": "Combining an IR emitter, a range sensor and an ambient light sensor in a three-in-one ready-to-use reflowable package.\u003cbr\u003eThe VL6180X is easy to integrate and saves the end-product maker long and costly optical and mechanical design optimizations.",
      "website": "https://github.com/ameltech/sme-vl6180x-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_VL6180X-1.1.1.zip",
      "archiveFileName": "SmartEverything_VL6180X-1.1.1.zip",
      "size": 12599,
      "checksum": "SHA-256:d45a0790ac06209680b2bc0ce7bd43a6aee027e639dad096bf5f071c0c941774"
    },
    {
      "name": "SmartEverything VL6180X",
      "version": "1.0.1",
      "author": "Mik",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for the Ambient Light \u0026 Proximity sensor from ST component.",
      "paragraph": "Combining an IR emitter, a range sensor and an ambient light sensor in a three-in-one ready-to-use reflowable package.\u003cbr\u003eThe VL6180X is easy to integrate and saves the end-product maker long and costly optical and mechanical design optimizations.",
      "website": "https://github.com/ameltech/sme-vl6180x-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_VL6180X-1.0.1.zip",
      "archiveFileName": "SmartEverything_VL6180X-1.0.1.zip",
      "size": 13950,
      "checksum": "SHA-256:ae56c03c969c6a865b5f1f88632ce67978638a3dd49a13521f8f2f0d8a399fff"
    },
    {
      "name": "SmartEverything SE868-AS",
      "version": "1.0.0",
      "author": "speirano",
      "maintainer": "amel-tech  \u003cdev@amel-tech.com\u003e",
      "sentence": "Library code for the Telit SE868-AS GPS System",
      "paragraph": "\u003cbr\u003eThe SE868-AS is a GPS Smart antenna module featuring an embedded antenna with an optimized RF path and standard SMT mounting.\u003cbr\u003eThe SE868-AS is designed to track and navigate GPS and QZSS constellations, giving the positioning data though standard UART at a very low power rate.",
      "website": "https://github.com/ameltech/sme-se868-a-library",
      "category": "Uncategorized",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_SE868_AS-1.0.0.zip",
      "archiveFileName": "SmartEverything_SE868_AS-1.0.0.zip",
      "size": 11144,
      "checksum": "SHA-256:0b728e240c0aca1bb2e085feaa428febe586476146ed1f1a14ab562535287173"
    },
    {
      "name": "SmartEverything SE868-AS",
      "version": "1.0.1",
      "author": "Seve",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for the Telit SE868-AS GPS System",
      "paragraph": "\u003cbr\u003eThe SE868-AS is a GPS Smart antenna module featuring an embedded antenna with an optimized RF path and standard SMT mounting.\u003cbr\u003eThe SE868-AS is designed to track and navigate GPS and QZSS constellations, giving the positioning data though standard UART at a very low power rate.",
      "website": "https://github.com/ameltech/sme-se868-a-library",
      "category": "Uncategorized",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_SE868_AS-1.0.1.zip",
      "archiveFileName": "SmartEverything_SE868_AS-1.0.1.zip",
      "size": 12965,
      "checksum": "SHA-256:9e8bd935aaf4d4fc6dba3e8b7d1c89ab6aa074510ad7156f0380a0a8b223db0b"
    },
    {
      "name": "SmartEverything SE868-AS",
      "version": "1.1.0",
      "author": "Seve",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for the Telit SE868-AS GPS System",
      "paragraph": "\u003cbr\u003eThe SE868-AS is a GPS Smart antenna module featuring an embedded antenna with an optimized RF path and standard SMT mounting.\u003cbr\u003eThe SE868-AS is designed to track and navigate GPS and QZSS constellations, giving the positioning data though standard UART at a very low power rate.",
      "website": "https://github.com/ameltech/sme-se868-a-library",
      "category": "Uncategorized",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_SE868_AS-1.1.0.zip",
      "archiveFileName": "SmartEverything_SE868_AS-1.1.0.zip",
      "size": 17983,
      "checksum": "SHA-256:b1c3ee5bf46e1f31c15fca696727eb154cd48cfb36508b41adcb616799dcef05"
    },
    {
      "name": "SmartEverything SE868-AS",
      "version": "1.1.1",
      "author": "Seve",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for the Telit SE868-AS GPS System",
      "paragraph": "\u003cbr\u003eThe SE868-AS is a GPS Smart antenna module featuring an embedded antenna with an optimized RF path and standard SMT mounting.\u003cbr\u003eThe SE868-AS is designed to track and navigate GPS and QZSS constellations, giving the positioning data though standard UART at a very low power rate.",
      "website": "https://github.com/ameltech/sme-se868-a-library",
      "category": "Uncategorized",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_SE868_AS-1.1.1.zip",
      "archiveFileName": "SmartEverything_SE868_AS-1.1.1.zip",
      "size": 16309,
      "checksum": "SHA-256:e6403077ff941bf398673749bb31e6af81a436c5ec75983bd10f6bde0f5ce34e"
    },
    {
      "name": "SmartEverything HTS221",
      "version": "1.0.0",
      "author": "Seve",
      "maintainer": "amel-tech  \u003cdev@amel-tech.com\u003e",
      "sentence": "Library code for HTS221 Capacitive digital sensor for relative humidity and temperature",
      "paragraph": "The HTS221 is an ultra compact sensor for relative humidity and temperature.\u003cbr\u003eIt includes a sensing element and a mixed signal ASIC to provide the measurement information through digital serial interfaces.\u003cbr\u003eThe sensing element consists of a polymer dielectric planar capacitor structure capable of detecting relative humidity variations and is manufactured using a dedicated ST process.\u003cbr\u003eThe HTS221 is available in a small top-holed cap land grid array (HLGA) package guaranteed to operate over a temperature range from -40 °C to +120 °C.",
      "website": "https://github.com/ameltech/sme-hts221-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_HTS221-1.0.0.zip",
      "archiveFileName": "SmartEverything_HTS221-1.0.0.zip",
      "size": 6858,
      "checksum": "SHA-256:1f2bd107b3ee99fa862ca61cd62c1472d3abcfe7503b38a3a726aa712dc3bcd3"
    },
    {
      "name": "SmartEverything HTS221",
      "version": "1.1.1",
      "author": "Seve",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for HTS221 Capacitive digital sensor for relative humidity and temperature",
      "paragraph": "The HTS221 is an ultra compact sensor for relative humidity and temperature.\u003cbr\u003eIt includes a sensing element and a mixed signal ASIC to provide the measurement information through digital serial interfaces.\u003cbr\u003eThe sensing element consists of a polymer dielectric planar capacitor structure capable of detecting relative humidity variations and is manufactured using a dedicated ST process.\u003cbr\u003eThe HTS221 is available in a small top-holed cap land grid array (HLGA) package guaranteed to operate over a temperature range from -40 °C to +120 °C.",
      "website": "https://github.com/ameltech/sme-hts221-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_HTS221-1.1.1.zip",
      "archiveFileName": "SmartEverything_HTS221-1.1.1.zip",
      "size": 9060,
      "checksum": "SHA-256:7c8030efec1dd4e5e585942d5d986d5107be870716d3e45793fde0b040ac613b"
    },
    {
      "name": "SmartEverything HTS221",
      "version": "1.1.0",
      "author": "Seve",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for HTS221 Capacitive digital sensor for relative humidity and temperature",
      "paragraph": "The HTS221 is an ultra compact sensor for relative humidity and temperature.\u003cbr\u003eIt includes a sensing element and a mixed signal ASIC to provide the measurement information through digital serial interfaces.\u003cbr\u003eThe sensing element consists of a polymer dielectric planar capacitor structure capable of detecting relative humidity variations and is manufactured using a dedicated ST process.\u003cbr\u003eThe HTS221 is available in a small top-holed cap land grid array (HLGA) package guaranteed to operate over a temperature range from -40 °C to +120 °C.",
      "website": "https://github.com/ameltech/sme-hts221-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_HTS221-1.1.0.zip",
      "archiveFileName": "SmartEverything_HTS221-1.1.0.zip",
      "size": 8967,
      "checksum": "SHA-256:6cca70304625b071c6b35144dc4630a48b0786735f1483dd8da704590ed97499"
    },
    {
      "name": "SmartEverything HTS221",
      "version": "1.1.2",
      "author": "Seve",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for HTS221 Capacitive digital sensor for relative humidity and temperature",
      "paragraph": "The HTS221 is an ultra compact sensor for relative humidity and temperature.\u003cbr\u003eIt includes a sensing element and a mixed signal ASIC to provide the measurement information through digital serial interfaces.\u003cbr\u003eThe sensing element consists of a polymer dielectric planar capacitor structure capable of detecting relative humidity variations and is manufactured using a dedicated ST process.\u003cbr\u003eThe HTS221 is available in a small top-holed cap land grid array (HLGA) package guaranteed to operate over a temperature range from -40 °C to +120 °C.",
      "website": "https://github.com/ameltech/sme-hts221-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_HTS221-1.1.2.zip",
      "archiveFileName": "SmartEverything_HTS221-1.1.2.zip",
      "size": 9130,
      "checksum": "SHA-256:895e7cb1e8f16d32968ccbeabbc135e3cc9443fceae6def618a46a7a464489af"
    },
    {
      "name": "SmartEverything LSM9DS1",
      "version": "1.0.0",
      "author": "Seve",
      "maintainer": "amel-tech  \u003cdev@amel-tech.com\u003e",
      "sentence": "Library code for LSM9DS1 iNEMO inertial module:3D accelerometer, 3D gyroscope, 3D magnetometer",
      "paragraph": "The LSM9DS1 is a system-in-package featuring a 3D digital linear acceleration sensor, a 3D digital angular rate sensor, and a 3D digital magnetic sensor.\u003cbr\u003eThe LSM9DS1 has a linear acceleration full scale of ±2g/±4g/±8/±16 g, a magnetic field full scale of ±4/±8/±12/±16 gauss and an angular rate of ±245/±500/±2000 dps.\u003cbr\u003eThe LSM9DS1 includes an I2C serial bus interface supporting standard and fast mode (100 kHz and 400 kHz) and an SPI serial standard interface.\u003cbr\u003eMagnetic, accelerometer and gyroscope sensing can be enabled or set in power-down mode separately for smart power management.",
      "website": "https://github.com/ameltech/sme-lsm9ds1-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_LSM9DS1-1.0.0.zip",
      "archiveFileName": "SmartEverything_LSM9DS1-1.0.0.zip",
      "size": 8539,
      "checksum": "SHA-256:f23cedc07b65f94a8d0bb41d1d56ddb258f822cb1924bde96373ba4bd70e9c8f"
    },
    {
      "name": "SmartEverything LSM9DS1",
      "version": "1.1.0",
      "author": "Seve",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for LSM9DS1 iNEMO inertial module:3D accelerometer, 3D gyroscope, 3D magnetometer",
      "paragraph": "The LSM9DS1 is a system-in-package featuring a 3D digital linear acceleration sensor, a 3D digital angular rate sensor, and a 3D digital magnetic sensor.\u003cbr\u003eThe LSM9DS1 has a linear acceleration full scale of ±2g/±4g/±8/±16 g, a magnetic field full scale of ±4/±8/±12/±16 gauss and an angular rate of ±245/±500/±2000 dps.\u003cbr\u003eThe LSM9DS1 includes an I2C serial bus interface supporting standard and fast mode (100 kHz and 400 kHz) and an SPI serial standard interface.\u003cbr\u003eMagnetic, accelerometer and gyroscope sensing can be enabled or set in power-down mode separately for smart power management.",
      "website": "https://github.com/ameltech/sme-lsm9ds1-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_LSM9DS1-1.1.0.zip",
      "archiveFileName": "SmartEverything_LSM9DS1-1.1.0.zip",
      "size": 8463,
      "checksum": "SHA-256:765c7029fa892129d59130a42a8ad88f73c9e71c8e1e384f61164b50e9cc63ae"
    },
    {
      "name": "SmartEverything LPS25H",
      "version": "1.0.0",
      "author": "Seve",
      "maintainer": "amel-tech  \u003cdev@amel-tech.com\u003e",
      "sentence": "Library code for LPS25H MEMS pressure sensor: 260-1260 hPa absolute digital output barometer",
      "paragraph": "The LPS25H is an ultra compact absolute piezoresistive pressure sensor.\u003cbr\u003eIt includes a monolithic sensing element and an IC interface able to take the information from the sensing element and to provide a digital signal to the external world.\u003cbr\u003e\u003cbr\u003eThe sensing element consists of a suspended membrane realized inside a single mono-silicon substrate.\u003cbr\u003eIt is capable to detect the absolute pressure and is manufactured with a dedicated process developed by ST.",
      "website": "https://github.com/ameltech/sme-lps25h-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_LPS25H-1.0.0.zip",
      "archiveFileName": "SmartEverything_LPS25H-1.0.0.zip",
      "size": 6424,
      "checksum": "SHA-256:1203ff4c0f85dd326c921b0f5d62e106aed235926d5ea62a13d82da0c891881b"
    },
    {
      "name": "SmartEverything LPS25H",
      "version": "1.1.1",
      "author": "Seve",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for LPS25H MEMS pressure sensor: 260-1260 hPa absolute digital output barometer",
      "paragraph": "The LPS25H is an ultra compact absolute piezoresistive pressure sensor.\u003cbr\u003eIt includes a monolithic sensing element and an IC interface able to take the information from the sensing element and to provide a digital signal to the external world.\u003cbr\u003e\u003cbr\u003eThe sensing element consists of a suspended membrane realized inside a single mono-silicon substrate.\u003cbr\u003eIt is capable to detect the absolute pressure and is manufactured with a dedicated process developed by ST.",
      "website": "https://github.com/ameltech/sme-lps25h-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_LPS25H-1.1.1.zip",
      "archiveFileName": "SmartEverything_LPS25H-1.1.1.zip",
      "size": 6422,
      "checksum": "SHA-256:1be42c3fc491b939b0030d709df1d825bd8168dd20a4f67d84ac147d42917ce3"
    },
    {
      "name": "SmartEverything LPS25H",
      "version": "1.1.0",
      "author": "Seve",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for LPS25H MEMS pressure sensor: 260-1260 hPa absolute digital output barometer",
      "paragraph": "The LPS25H is an ultra compact absolute piezoresistive pressure sensor.\u003cbr\u003eIt includes a monolithic sensing element and an IC interface able to take the information from the sensing element and to provide a digital signal to the external world.\u003cbr\u003e\u003cbr\u003eThe sensing element consists of a suspended membrane realized inside a single mono-silicon substrate.\u003cbr\u003eIt is capable to detect the absolute pressure and is manufactured with a dedicated process developed by ST.",
      "website": "https://github.com/ameltech/sme-lps25h-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_LPS25H-1.1.0.zip",
      "archiveFileName": "SmartEverything_LPS25H-1.1.0.zip",
      "size": 6346,
      "checksum": "SHA-256:e718a11dc5a30a3ca9287f83e510aae4e0d34af546f41fd5de871b5088b146b5"
    },
    {
      "name": "Parse Arduino SDK",
      "version": "1.0.2",
      "author": "Parse, LLC.",
      "maintainer": "Parse, LLC.",
      "sentence": "A library that provides access to Parse",
      "paragraph": "Provides convenience methods to access the REST API on Parse.com from Arduino",
      "website": "https://github.com/ParsePlatform/Parse-SDK-Arduino",
      "category": "Uncategorized",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ParsePlatform/Parse_Arduino_SDK-1.0.2.zip",
      "archiveFileName": "Parse_Arduino_SDK-1.0.2.zip",
      "size": 41686,
      "checksum": "SHA-256:ff1ee9ba78575cbfaf4eeb77cf780d881aa4ddb453ec11e79880b684d32a52f5"
    },
    {
      "name": "Parse Arduino SDK",
      "version": "1.0.3",
      "author": "Parse, LLC.",
      "maintainer": "Parse, LLC.",
      "sentence": "A library that provides access to Parse",
      "paragraph": "Provides convenience methods to access the REST API on Parse.com from Arduino.",
      "website": "https://github.com/ParsePlatform/parse-embedded-sdks",
      "category": "Uncategorized",
      "architectures": [
        "avr",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ParsePlatform/Parse_Arduino_SDK-1.0.3.zip",
      "archiveFileName": "Parse_Arduino_SDK-1.0.3.zip",
      "size": 56761,
      "checksum": "SHA-256:272dad9d40f8b9bfc3015df7dcddb1ffa6a3000adf62ff2f0be92819b380cce4"
    },
    {
      "name": "AltSoftSerial",
      "version": "1.2.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Software emulated serial using hardware timers for improved compatibility",
      "paragraph": "Improved software emulated serial, using hardware timers for precise signal timing and improved compatibility with other interrupt-based libraries.",
      "website": "http://www.pjrc.com/teensy/td_libs_AltSoftSerial.html",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/AltSoftSerial-1.2.0.zip",
      "archiveFileName": "AltSoftSerial-1.2.0.zip",
      "size": 10042,
      "checksum": "SHA-256:073bf1d209353d4e5aed6cc36f961cd8651b45ad8b5d46674b7c2eec5ad5732f"
    },
    {
      "name": "AltSoftSerial",
      "version": "1.3.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Software emulated serial using hardware timers for improved compatibility",
      "paragraph": "Improved software emulated serial, using hardware timers for precise signal timing and improved compatibility with other interrupt-based libraries.",
      "website": "http://www.pjrc.com/teensy/td_libs_AltSoftSerial.html",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/AltSoftSerial-1.3.0.zip",
      "archiveFileName": "AltSoftSerial-1.3.0.zip",
      "size": 10099,
      "checksum": "SHA-256:01813f4fc12b3ff9cfe1dc4e50c1ee84595f18903a123261ddbaee727c8e0967"
    },
    {
      "name": "AltSoftSerial",
      "version": "1.4.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Software emulated serial using hardware timers for improved compatibility",
      "paragraph": "Improved software emulated serial, using hardware timers for precise signal timing and improved compatibility with other interrupt-based libraries.",
      "website": "http://www.pjrc.com/teensy/td_libs_AltSoftSerial.html",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/AltSoftSerial-1.4.0.zip",
      "archiveFileName": "AltSoftSerial-1.4.0.zip",
      "size": 11235,
      "checksum": "SHA-256:9acb41d5530fc30161749084dd2b5b088b22de8dfcd954d81d62147f5c1fa739"
    },
    {
      "name": "CapacitiveSensor",
      "version": "0.5.0",
      "author": "Paul Bagder, Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Create capacitive sensors that can detect touch or proximity.",
      "paragraph": "The capacitiveSensor library turns two or more Arduino pins into a capacitive sensor, which can sense the electrical capacitance of the human body. All the sensor setup requires is a medium to high value resistor and a piece of wire and a small (to large) piece of aluminum foil on the end. At its most sensitive, the sensor will start to sense a hand or body inches away from the sensor.",
      "website": "http://playground.arduino.cc/Main/CapacitiveSensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/CapacitiveSensor-0.5.0.zip",
      "archiveFileName": "CapacitiveSensor-0.5.0.zip",
      "size": 5824,
      "checksum": "SHA-256:9e5cef2d8f9f8e9f07b10cf1b420aa84aba7672566f0e099034852cb1830a180"
    },
    {
      "name": "CapacitiveSensor",
      "version": "0.5.1",
      "author": "Paul Bagder, Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Create capacitive sensors that can detect touch or proximity.",
      "paragraph": "The capacitiveSensor library turns two or more Arduino pins into a capacitive sensor, which can sense the electrical capacitance of the human body. All the sensor setup requires is a medium to high value resistor and a piece of wire and a small (to large) piece of aluminum foil on the end. At its most sensitive, the sensor will start to sense a hand or body inches away from the sensor.",
      "website": "http://playground.arduino.cc/Main/CapacitiveSensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/CapacitiveSensor-0.5.1.zip",
      "archiveFileName": "CapacitiveSensor-0.5.1.zip",
      "size": 6668,
      "checksum": "SHA-256:747832aeac71cdf31451545e78fd5100320cb18e07868cf7442d3d9aa806a815"
    },
    {
      "name": "DmxSimple",
      "version": "3.1.0",
      "author": "Peter Knight, Tinker.it!",
      "maintainer": "Paul Stoffregen",
      "sentence": "Drive DMX controlled lights and visual effects available from DJ or theatrical suppliers.",
      "website": "https://code.google.com/p/tinkerit/wiki/DmxSimple",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/DmxSimple-3.1.0.zip",
      "archiveFileName": "DmxSimple-3.1.0.zip",
      "size": 39933,
      "checksum": "SHA-256:2fe7c3f5a5015d168b50ac34f904acef3fd7662660a2a692dffb9d0f455874ec"
    },
    {
      "name": "DS1307RTC",
      "version": "1.4.0",
      "author": "Michael Margolis",
      "maintainer": "Paul Stoffregen",
      "sentence": "Use a DS1307 Real Time Clock chip with the Time library",
      "website": "http://playground.arduino.cc/code/time",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/DS1307RTC-1.4.0.zip",
      "archiveFileName": "DS1307RTC-1.4.0.zip",
      "size": 4701,
      "checksum": "SHA-256:13f90bbea63dfe3dc20b0720d0ef840e75a40adffda0e093b92eb3cb7a6a7f94"
    },
    {
      "name": "Encoder",
      "version": "1.3.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Counts quadrature pulses from rotary \u0026 linear position encoders.",
      "paragraph": "Encoder counts pulses from quadrature encoded signals, which are commonly available from rotary knobs, motor or shaft sensors and other position sensors.",
      "website": "http://www.pjrc.com/teensy/td_libs_Encoder.html",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/Encoder-1.3.0.zip",
      "archiveFileName": "Encoder-1.3.0.zip",
      "size": 13816,
      "checksum": "SHA-256:495d938ceaf47b58a328341bf5c224772e0d3900fd61c38692f3199d3c79b0be"
    },
    {
      "name": "Encoder",
      "version": "1.4.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Counts quadrature pulses from rotary \u0026 linear position encoders.",
      "paragraph": "Encoder counts pulses from quadrature encoded signals, which are commonly available from rotary knobs, motor or shaft sensors and other position sensors.",
      "website": "http://www.pjrc.com/teensy/td_libs_Encoder.html",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/Encoder-1.4.0.zip",
      "archiveFileName": "Encoder-1.4.0.zip",
      "size": 14587,
      "checksum": "SHA-256:605dc25afa2e43ead2f146c21281209e37ec94670bc4ae1825fb0a076d0c3cd4"
    },
    {
      "name": "Encoder",
      "version": "1.4.1",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Counts quadrature pulses from rotary \u0026 linear position encoders.",
      "paragraph": "Encoder counts pulses from quadrature encoded signals, which are commonly available from rotary knobs, motor or shaft sensors and other position sensors.",
      "website": "http://www.pjrc.com/teensy/td_libs_Encoder.html",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/Encoder-1.4.1.zip",
      "archiveFileName": "Encoder-1.4.1.zip",
      "size": 14757,
      "checksum": "SHA-256:a5aa9dbc5abf1b75317430362b4e56dcca8828ab1fc37b9925cb77bd9e94c28f"
    },
    {
      "name": "FreqCount",
      "version": "1.2.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "FreqCount measures the frequency of a signal by counting the number of pulses during a fixed time.",
      "website": "http://www.pjrc.com/teensy/td_libs_FreqCount.html",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/FreqCount-1.2.0.zip",
      "archiveFileName": "FreqCount-1.2.0.zip",
      "size": 8134,
      "checksum": "SHA-256:02570006a083a1d8eb4cab0ed93951ef922fc0cf61b5a7356a088d29b1d92354"
    },
    {
      "name": "FreqCount",
      "version": "1.3.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "FreqCount measures the frequency of a signal by counting the number of pulses during a fixed time.",
      "website": "http://www.pjrc.com/teensy/td_libs_FreqCount.html",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/FreqCount-1.3.0.zip",
      "archiveFileName": "FreqCount-1.3.0.zip",
      "size": 8147,
      "checksum": "SHA-256:8360300fdc9288dcea3487ab974945a06ccc40d49fcd386bba9ec10886d37213"
    },
    {
      "name": "FreqMeasure",
      "version": "1.2.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "FreqMeasure measures the elapsed time during each cycle of an input frequency.",
      "website": "http://www.pjrc.com/teensy/td_libs_FreqMeasure.html",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/FreqMeasure-1.2.0.zip",
      "archiveFileName": "FreqMeasure-1.2.0.zip",
      "size": 7298,
      "checksum": "SHA-256:fa00afbe327df215dd0793a0eb06c956ac7068152fbbb384cdb12a8633fe95a8"
    },
    {
      "name": "FrequencyTimer2",
      "version": "2.1.0",
      "author": "Jim Studt",
      "maintainer": "Paul Stoffregen",
      "sentence": "Generate a frequency using Timer2",
      "website": "http://playground.arduino.cc/Code/FrequencyTimer2",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/FrequencyTimer2-2.1.0.zip",
      "archiveFileName": "FrequencyTimer2-2.1.0.zip",
      "size": 5551,
      "checksum": "SHA-256:359b99ca9306410feddfe3359f4fc5969ae434722747af4d546482ae40429bd9"
    },
    {
      "name": "ILI9341_t3",
      "version": "1.0.0",
      "author": "Limor Fried, Adafruit, Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Optimized ILI9341 (320x240 Color TFT) Display",
      "website": "https://github.com/PaulStoffregen/ILI9341_t3",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/ILI9341_t3-1.0.0.zip",
      "archiveFileName": "ILI9341_t3-1.0.0.zip",
      "size": 25555,
      "checksum": "SHA-256:4737ae4e1d72dc8b6cf434ca70a77b1ae964ae70b2f8ba503daf231161081029"
    },
    {
      "name": "MsTimer2",
      "version": "1.1.0",
      "author": "Javier Valencia",
      "maintainer": "Paul Stoffregen",
      "sentence": "Run an interrupt function using Timer2",
      "website": "http://playground.arduino.cc/Main/MsTimer2",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/MsTimer2-1.1.0.zip",
      "archiveFileName": "MsTimer2-1.1.0.zip",
      "size": 4448,
      "checksum": "SHA-256:17bb516d4f274e228aacb35d5d986816881d7ab9bdc6e7aaeafe3e491df1894b"
    },
    {
      "name": "OctoWS2811",
      "version": "1.2.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Control thousands of WS2812B / NeoPixel LEDs at video refresh speeds",
      "paragraph": "OctoWS2811 is a high performance WS2811 \u0026 WS2812 \u0026 WS2812B LED library featuring simultaneous update to 8 LED strips using efficient DMA-based data transfer.  Minimal CPU impact and double buffering allows complex animation. A VideoDisplay example is included, capable of scaling to extremely large LED installations.",
      "website": "http://www.pjrc.com/teensy/td_libs_OctoWS2811.html",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/OctoWS2811-1.2.0.zip",
      "archiveFileName": "OctoWS2811-1.2.0.zip",
      "size": 172419,
      "checksum": "SHA-256:c867dcbdef0fa7c9d6089ea432231404d2e8632a32b6ab328d4d2914fb1c5a9c"
    },
    {
      "name": "PS2Keyboard",
      "version": "2.4.0",
      "author": "Christian Weichel, Paul Stoffregen, L. Abraham Smith, Cuningan",
      "maintainer": "Paul Stoffregen",
      "sentence": "Use a PS/2 Keyboard for input",
      "website": "https://github.com/PaulStoffregen/PS2Keyboard",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/PS2Keyboard-2.4.0.zip",
      "archiveFileName": "PS2Keyboard-2.4.0.zip",
      "size": 10783,
      "checksum": "SHA-256:b089f36b1962513dbc47523270359d56a9286c42ac030aeb449547ff1b88030b"
    },
    {
      "name": "OneWire",
      "version": "2.3.0",
      "author": "Jim Studt, Tom Pollard, Robin James, Glenn Trewitt, Jason Dangel, Guillermo Lovato, Paul Stoffregen, Scott Roberts, Bertrik Sikken, Mark Tillotson, Ken Butcher, Roger Clark, Love Nystrom",
      "maintainer": "Paul Stoffregen",
      "sentence": "Access 1-wire temperature sensors, memory and other chips.",
      "website": "http://www.pjrc.com/teensy/td_libs_OneWire.html",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/OneWire-2.3.0.zip",
      "archiveFileName": "OneWire-2.3.0.zip",
      "size": 16071,
      "checksum": "SHA-256:02fdfbf1bb12d6038857ea7738ceff83538284f2370ce7d748509a8888984ec8"
    },
    {
      "name": "OneWire",
      "version": "2.3.1",
      "author": "Jim Studt, Tom Pollard, Robin James, Glenn Trewitt, Jason Dangel, Guillermo Lovato, Paul Stoffregen, Scott Roberts, Bertrik Sikken, Mark Tillotson, Ken Butcher, Roger Clark, Love Nystrom",
      "maintainer": "Paul Stoffregen",
      "sentence": "Access 1-wire temperature sensors, memory and other chips.",
      "website": "http://www.pjrc.com/teensy/td_libs_OneWire.html",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/OneWire-2.3.1.zip",
      "archiveFileName": "OneWire-2.3.1.zip",
      "size": 16359,
      "checksum": "SHA-256:973a43a9d06ad09a384ced02a2555e84ae4c93bfa935ad59a56e52befd54587e"
    },
    {
      "name": "OneWire",
      "version": "2.3.2",
      "author": "Jim Studt, Tom Pollard, Robin James, Glenn Trewitt, Jason Dangel, Guillermo Lovato, Paul Stoffregen, Scott Roberts, Bertrik Sikken, Mark Tillotson, Ken Butcher, Roger Clark, Love Nystrom",
      "maintainer": "Paul Stoffregen",
      "sentence": "Access 1-wire temperature sensors, memory and other chips.",
      "website": "http://www.pjrc.com/teensy/td_libs_OneWire.html",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/OneWire-2.3.2.zip",
      "archiveFileName": "OneWire-2.3.2.zip",
      "size": 16948,
      "checksum": "SHA-256:0e2ac036aba193aa2f7c268a3db361e002918f66dda6a6f318af4ba625d6e0b6"
    },
    {
      "name": "OneWire",
      "version": "2.3.3",
      "author": "Jim Studt, Tom Pollard, Robin James, Glenn Trewitt, Jason Dangel, Guillermo Lovato, Paul Stoffregen, Scott Roberts, Bertrik Sikken, Mark Tillotson, Ken Butcher, Roger Clark, Love Nystrom",
      "maintainer": "Paul Stoffregen",
      "sentence": "Access 1-wire temperature sensors, memory and other chips.",
      "website": "http://www.pjrc.com/teensy/td_libs_OneWire.html",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/OneWire-2.3.3.zip",
      "archiveFileName": "OneWire-2.3.3.zip",
      "size": 17745,
      "checksum": "SHA-256:f16d0bb791873a1a5d4372ea593127583996d8e0917baf0ba03cd848402dd9d4"
    },
    {
      "name": "PulsePosition",
      "version": "1.0.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Send and receive multiple high resolution PPM encoded signal streams.",
      "paragraph": "Pulse Position Modulation (PPM) is a single-wire signal that encodes many Pulse Width Modulated (PWM) signals.  It's commonly used in radio control of hobby aircraft and drones, where a radio transmits the PPM signal, which is decoded into many PWM signals to control RC servo motors.  PulsePosition can simultaneously receive and send up to 8 PPM streams.",
      "website": "http://www.pjrc.com/teensy/td_libs_PulsePosition.html",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/PulsePosition-1.0.0.zip",
      "archiveFileName": "PulsePosition-1.0.0.zip",
      "size": 8904,
      "checksum": "SHA-256:761c2c4a34199931bd473d878b4a62817365d86240529755d9f0cd7e098757a4"
    },
    {
      "name": "SerialFlash",
      "version": "0.1.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Access SPI Serial Flash memory with filesystem-like functions",
      "paragraph": "SerialFlash provides low-latency, high performance access to SPI Flash memory with a filesystem-like interface. Familiar file-based functions, similar to the SD library, are used to access data.",
      "website": "https://github.com/PaulStoffregen/SerialFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/SerialFlash-0.1.0.zip",
      "archiveFileName": "SerialFlash-0.1.0.zip",
      "size": 21082,
      "checksum": "SHA-256:9686fed4c0e6dbb26b89820cc6121f65f9165d00379a04e25551b61139dfe163"
    },
    {
      "name": "SerialFlash",
      "version": "0.3.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Access SPI Serial Flash memory with filesystem-like functions",
      "paragraph": "SerialFlash provides low-latency, high performance access to SPI Flash memory with a filesystem-like interface. Familiar file-based functions, similar to the SD library, are used to access data.",
      "website": "https://github.com/PaulStoffregen/SerialFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/SerialFlash-0.3.0.zip",
      "archiveFileName": "SerialFlash-0.3.0.zip",
      "size": 29136,
      "checksum": "SHA-256:51b479d3a4e4d376695dba8a876a83b3aa5329858984de50227aa99d8d542aca"
    },
    {
      "name": "SerialFlash",
      "version": "0.5.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Access SPI Serial Flash memory with filesystem-like functions",
      "paragraph": "SerialFlash provides low-latency, high performance access to SPI Flash memory with a filesystem-like interface. Familiar file-based functions, similar to the SD library, are used to access data.",
      "website": "https://github.com/PaulStoffregen/SerialFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/SerialFlash-0.5.0.zip",
      "archiveFileName": "SerialFlash-0.5.0.zip",
      "size": 40452,
      "checksum": "SHA-256:bb5f9c63c21d154a4676f69ea1c7bba56e3bb76012b01633dc55da5e5c7f9725"
    },
    {
      "name": "SerialFlash",
      "version": "0.4.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Access SPI Serial Flash memory with filesystem-like functions",
      "paragraph": "SerialFlash provides low-latency, high performance access to SPI Flash memory with a filesystem-like interface. Familiar file-based functions, similar to the SD library, are used to access data.",
      "website": "https://github.com/PaulStoffregen/SerialFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/SerialFlash-0.4.0.zip",
      "archiveFileName": "SerialFlash-0.4.0.zip",
      "size": 37636,
      "checksum": "SHA-256:41db14b8fca2d32eb6668e0021d6af544feecb719a2560d4774740f9a117cdfa"
    },
    {
      "name": "TimeAlarms",
      "version": "1.4.0",
      "author": "Michael Margolis",
      "maintainer": "Paul Stoffregen",
      "sentence": "Perform tasks at specific times or after specific intervals.",
      "paragraph": "The Alarm library is a companion to the Time library that makes it easy to perform tasks at specific times or after specific intervals.  Tasks scheduled at a particular time of day are called Alarms, tasks scheduled after an interval of time has elapsed are called Timers.  These tasks can be created to continuously repeat or to occur once only.",
      "website": "http://playground.arduino.cc/code/time",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/TimeAlarms-1.4.0.zip",
      "archiveFileName": "TimeAlarms-1.4.0.zip",
      "size": 11143,
      "checksum": "SHA-256:c7306f6801335623c787faaf7d4588c719798328afb69a88b3fd8528e4030897"
    },
    {
      "name": "TimeAlarms",
      "version": "1.5.0",
      "author": "Michael Margolis",
      "maintainer": "Paul Stoffregen",
      "sentence": "Perform tasks at specific times or after specific intervals.",
      "paragraph": "The Alarm library is a companion to the Time library that makes it easy to perform tasks at specific times or after specific intervals.  Tasks scheduled at a particular time of day are called Alarms, tasks scheduled after an interval of time has elapsed are called Timers.  These tasks can be created to continuously repeat or to occur once only.",
      "website": "http://playground.arduino.cc/code/time",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/TimeAlarms-1.5.0.zip",
      "archiveFileName": "TimeAlarms-1.5.0.zip",
      "size": 11013,
      "checksum": "SHA-256:a4f079b3b95fe0d22c20fe2f83fa80b06a5099d46215b67c43544f79cd4e8ae7"
    },
    {
      "name": "Time",
      "version": "1.4.0",
      "author": "Michael Margolis",
      "maintainer": "Paul Stoffregen",
      "sentence": "Timekeeping functionality for Arduino",
      "paragraph": "Date and Time functions, with provisions to synchronize to external time sources like GPS and NTP (Internet).",
      "website": "http://playground.arduino.cc/code/time",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/Time-1.4.0.zip",
      "archiveFileName": "Time-1.4.0.zip",
      "size": 23539,
      "checksum": "SHA-256:917949e7268083385ffe6fa22d2ab4ea07592c5171500dad2746693d178f4517"
    },
    {
      "name": "Time",
      "version": "1.5.0",
      "author": "Michael Margolis",
      "maintainer": "Paul Stoffregen",
      "sentence": "Timekeeping functionality for Arduino",
      "paragraph": "Date and Time functions, with provisions to synchronize to external time sources like GPS and NTP (Internet).  This library is often used together with TimeAlarms and DS1307RTC.",
      "website": "http://playground.arduino.cc/code/time",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/Time-1.5.0.zip",
      "archiveFileName": "Time-1.5.0.zip",
      "size": 25779,
      "checksum": "SHA-256:836ad80dcb8b4f6d015c3e2b227d3047235d08f19ca85b12b79f08de67c5fbe8"
    },
    {
      "name": "TimerOne",
      "version": "1.1.0",
      "author": "Jesse Tane, Jérôme Despatis, Michael Polli, Dan Clemens, Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Use hardware Timer1 for finer PWM control and/or running an periodic interrupt function",
      "website": "http://playground.arduino.cc/Code/Timer1",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/TimerOne-1.1.0.zip",
      "archiveFileName": "TimerOne-1.1.0.zip",
      "size": 7607,
      "checksum": "SHA-256:f9bf13f22d7c96770408a089b0b3e2f4ea0a7785c311547e87aa479598e2d17f"
    },
    {
      "name": "TimerThree",
      "version": "1.1.0",
      "author": "Jesse Tane, Jérôme Despatis, Michael Polli, Dan Clemens, Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Use hardware Timer3 for finer PWM control and/or running an periodic interrupt function",
      "website": "http://playground.arduino.cc/Code/Timer1",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/TimerThree-1.1.0.zip",
      "archiveFileName": "TimerThree-1.1.0.zip",
      "size": 7673,
      "checksum": "SHA-256:c76ca217b629c5271896cd39c68201c9c5b7c95cc6125ff7192627666182efea"
    },
    {
      "name": "Tlc5940",
      "version": "0.15.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Use the Texas Instruments TLC5940 16-channel LED Driver",
      "paragraph": "The TLC5940 is a 16 channel PWM unit with 12 bit duty cycle control (0 - 4095), 6 bit current limit control (0 - 63), and a daisy chainable serial interface. It is handy for expanding the number of PWM outputs available.",
      "website": "http://playground.arduino.cc/Learning/TLC5940",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/Tlc5940-0.15.0.zip",
      "archiveFileName": "Tlc5940-0.15.0.zip",
      "size": 70399,
      "checksum": "SHA-256:41d3405d49953df4061c56d35a7353e1986bbc591c92112e1e4c478de597cc5e"
    },
    {
      "name": "SparkFun Graphic LCD Serial Backpack",
      "version": "1.0.0",
      "author": "Mike Hord",
      "maintainer": "SparkFun Electronics",
      "sentence": "Library containing functions for SparkFun Graphic LCD Serial Backpack",
      "paragraph": "Library containing functions for SparkFun Graphic LCD Serial Backpack",
      "website": "https://github.com/sparkfun/GraphicLCD_Serial_Backpack",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_Graphic_LCD_Serial_Backpack-1.0.0.zip",
      "archiveFileName": "SparkFun_Graphic_LCD_Serial_Backpack-1.0.0.zip",
      "size": 62928,
      "checksum": "SHA-256:86dd2830aceb60eb5420b456e4e055e81a19b2216af8d3e8e5f87f439b14a4d2"
    },
    {
      "name": "SparkFun Graphic LCD Serial Backpack",
      "version": "1.0.1",
      "author": "Mike Hord",
      "maintainer": "SparkFun Electronics \u003ctechsupport@SparkFun.com\u003e",
      "sentence": "Library containing functions for SparkFun Graphic LCD Serial Backpack",
      "paragraph": "Library containing functions for SparkFun Graphic LCD Serial Backpack",
      "website": "https://github.com/sparkfun/GraphicLCD_Serial_Backpack",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_Graphic_LCD_Serial_Backpack-1.0.1.zip",
      "archiveFileName": "SparkFun_Graphic_LCD_Serial_Backpack-1.0.1.zip",
      "size": 9310,
      "checksum": "SHA-256:5904bd5f74cfd3453b520660df8577cc00ca55d8a0834ecd511bc7390b607571"
    },
    {
      "name": "XPT2046_Touchscreen",
      "version": "1.2.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Touchscreens using the XPT2046 controller chip.",
      "paragraph": "Many very low cost color TFT displays with touch screens have this chip.",
      "website": "https://github.com/PaulStoffregen/XPT2046_Touchscreen",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/XPT2046_Touchscreen-1.2.0.zip",
      "archiveFileName": "XPT2046_Touchscreen-1.2.0.zip",
      "size": 77098,
      "checksum": "SHA-256:a2b8274981be622c27e27dd38a72cf4d72afee8fccd6312aecba6fc83b73c27b"
    },
    {
      "name": "XPT2046_Touchscreen",
      "version": "1.0.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Touchscreens using the XPT2046 controller chip.",
      "paragraph": "Many very low cost color TFT displays with touch screens have this chip.",
      "website": "https://github.com/PaulStoffregen/XPT2046_Touchscreen",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/XPT2046_Touchscreen-1.0.0.zip",
      "archiveFileName": "XPT2046_Touchscreen-1.0.0.zip",
      "size": 75451,
      "checksum": "SHA-256:0a8f6bf3a31779d57953a3bbf9a99daa6e5951e9cb4e9fad565329ce2c448fe9"
    },
    {
      "name": "XPT2046_Touchscreen",
      "version": "1.1.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Touchscreens using the XPT2046 controller chip.",
      "paragraph": "Many very low cost color TFT displays with touch screens have this chip.",
      "website": "https://github.com/PaulStoffregen/XPT2046_Touchscreen",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/XPT2046_Touchscreen-1.1.0.zip",
      "archiveFileName": "XPT2046_Touchscreen-1.1.0.zip",
      "size": 75719,
      "checksum": "SHA-256:1554a1c87e8bc223cfd8e4dd470be20527db9c2f6b4e08ad1507c95fff7d00da"
    },
    {
      "name": "SparkFun Color LCD Shield",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "This is an Arduino library for SparkFun's Color LCD Shield",
      "paragraph": "This is an Arduino library for SparkFun's Color LCD Shield",
      "website": "https://github.com/sparkfun/SparkFun_Color_LCD_Shield_Arduino_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_Color_LCD_Shield-1.0.0.zip",
      "archiveFileName": "SparkFun_Color_LCD_Shield-1.0.0.zip",
      "size": 20689,
      "checksum": "SHA-256:bc501ffc48889e2a85826bc7e800db24f0b0dd48c942d3594c2a274ed7177e97"
    },
    {
      "name": "SparkFun Color LCD Shield",
      "version": "1.0.1",
      "author": "Jim@SparkFun Electronics",
      "maintainer": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "sentence": "This is an Arduino library for SparkFun's Color LCD Shield",
      "paragraph": "This is an Arduino library for SparkFun's Color LCD Shield",
      "website": "https://github.com/sparkfun/SparkFun_Color_LCD_Shield_Arduino_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_Color_LCD_Shield-1.0.1.zip",
      "archiveFileName": "SparkFun_Color_LCD_Shield-1.0.1.zip",
      "size": 20721,
      "checksum": "SHA-256:e6ab3ecc488e42e72171ec65d7743bff458fc1ce9dcf4b47b3e600465e125ace"
    },
    {
      "name": "Phant",
      "version": "2.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "A simple interface to post data to a phant stream.",
      "paragraph": "A simple interface to post, get, or clear data from a Phant stream (data.sparkfun.com).",
      "website": "https://github.com/sparkfun/phant-arduino",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/Phant-2.0.0.zip",
      "archiveFileName": "Phant-2.0.0.zip",
      "size": 5329,
      "checksum": "SHA-256:84cf4692c77e015999ab6c0233cd5c210dbf3f19821cc4dded9e97ea3c17631a"
    },
    {
      "name": "Phant",
      "version": "2.2.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "A simple interface to post data to a phant stream.",
      "paragraph": "A simple interface to post, get, or clear data from a Phant stream (data.sparkfun.com).",
      "website": "https://github.com/sparkfun/phant-arduino",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/Phant-2.2.0.zip",
      "archiveFileName": "Phant-2.2.0.zip",
      "size": 5366,
      "checksum": "SHA-256:0aeb9ecffc957d476f78900be95f03185a226dc81e9c82bf79e9d65c7ff7e0c5"
    },
    {
      "name": "SparkFun Micro OLED Breakout",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "Breakout board for a monochrome, 0.66\", 64x48 OLED display.",
      "paragraph": "Breakout board for a monochrome, 0.66\", 64x48 OLED display.",
      "website": "https://github.com/sparkfun/Micro_OLED_Breakout",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_Micro_OLED_Breakout-1.0.0.zip",
      "archiveFileName": "SparkFun_Micro_OLED_Breakout-1.0.0.zip",
      "size": 44942,
      "checksum": "SHA-256:017d140051795750a7d4cae8ae88da7aa7a01f9d90f3220fbd0853d862cb55fc"
    },
    {
      "name": "SparkFun Micro OLED Breakout",
      "version": "1.1.1",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library for the \u003ca href=\"https://www.sparkfun.com/products/13003\"\u003eSparkFun Micro OLED Breakout\u003c/a\u003e.",
      "paragraph": "Library for the Micro OLED Breakout, a monochrome, 0.66\", 64x48 OLED display. Several basic functionlity examples included.",
      "website": "https://github.com/sparkfun/SparkFun_Micro_OLED_Arduino_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_Micro_OLED_Breakout-1.1.1.zip",
      "archiveFileName": "SparkFun_Micro_OLED_Breakout-1.1.1.zip",
      "size": 44665,
      "checksum": "SHA-256:cb0e7959adb48a05024fbd76d617de7791d6d44820ad87a75b9fface4840cf23"
    },
    {
      "name": "SparkFun Micro OLED Breakout",
      "version": "1.1.2",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library for the \u003ca href=\"https://www.sparkfun.com/products/13003\"\u003eSparkFun Micro OLED Breakout\u003c/a\u003e.",
      "paragraph": "Library for the Micro OLED Breakout, a monochrome, 0.66\", 64x48 OLED display. Several basic functionlity examples included.",
      "website": "https://github.com/sparkfun/SparkFun_Micro_OLED_Arduino_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_Micro_OLED_Breakout-1.1.2.zip",
      "archiveFileName": "SparkFun_Micro_OLED_Breakout-1.1.2.zip",
      "size": 45354,
      "checksum": "SHA-256:567ad3b7364a5d967b68980cf2d0f4abcc71668866e62cb3cc16ef525c3265cb"
    },
    {
      "name": "SparkFun Micro OLED Breakout",
      "version": "1.2.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library for the \u003ca href=\"https://www.sparkfun.com/products/13003\"\u003eSparkFun Micro OLED Breakout\u003c/a\u003e.",
      "paragraph": "Library for the Micro OLED Breakout, a monochrome, 0.66\", 64x48 OLED display. Several basic functionlity examples included.",
      "website": "https://github.com/sparkfun/SparkFun_Micro_OLED_Arduino_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_Micro_OLED_Breakout-1.2.0.zip",
      "archiveFileName": "SparkFun_Micro_OLED_Breakout-1.2.0.zip",
      "size": 51085,
      "checksum": "SHA-256:cdb4f24b4701b4024b16ded3c04af5024d9581422c0d42bae4d7e729404d24e3"
    },
    {
      "name": "SparkFun VKey Arduino Library",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Arduino Library for interfacing the SparkFun VKey Voltage Keypad ().",
      "paragraph": "Arduino Library for interfacing the SparkFun VKey Voltage Keypad (https://www.sparkfun.com/products/12080).",
      "website": "https://github.com/sparkfun/SparkFun_VKey_Voltage_Keypad_Arduino_Library",
      "category": "Signal Input/Output",
      "architectures": [
        "AVR"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_VKey_Arduino_Library-1.0.0.zip",
      "archiveFileName": "SparkFun_VKey_Arduino_Library-1.0.0.zip",
      "size": 7192,
      "checksum": "SHA-256:8b1c8327832cbd28e584e6115ef9e35558f6adb01c1b648329a83d43c5e0ae31"
    },
    {
      "name": "SparkFun VKey Arduino Library",
      "version": "1.0.1",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Arduino Library for interfacing the SparkFun VKey Voltage Keypad.",
      "paragraph": "Arduino Library for interfacing the SparkFun VKey Voltage Keypad (https://www.sparkfun.com/products/12080). Gives the user access to a 12 switch keypad using only a few I/O pins.",
      "website": "https://github.com/sparkfun/SparkFun_VKey_Voltage_Keypad_Arduino_Library",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_VKey_Arduino_Library-1.0.1.zip",
      "archiveFileName": "SparkFun_VKey_Arduino_Library-1.0.1.zip",
      "size": 7295,
      "checksum": "SHA-256:3d6a388ad3da48356a29cd00d4b873b0db56f3834ccd7e3d43221ffd1484fa19"
    },
    {
      "name": "SparkFun VKey Arduino Library",
      "version": "1.0.2",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Arduino Library for interfacing the SparkFun VKey Voltage Keypad.",
      "paragraph": "Arduino Library for interfacing the SparkFun VKey Voltage Keypad (https://www.sparkfun.com/products/12080). Gives the user access to a 12 switch keypad using only a few I/O pins.",
      "website": "https://github.com/sparkfun/SparkFun_VKey_Voltage_Keypad_Arduino_Library",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_VKey_Arduino_Library-1.0.2.zip",
      "archiveFileName": "SparkFun_VKey_Arduino_Library-1.0.2.zip",
      "size": 7369,
      "checksum": "SHA-256:72ce020beff94b1245bb3c8ad14bd4b3089773ea3baad437233602fde3a1fde9"
    },
    {
      "name": "SparkFun MPL3115A2 Altitude and Pressure Sensor Breakout",
      "version": "1.2.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "SparkFun's breakout for the Freescale MPL3115A2 Precision Altimeter",
      "paragraph": "Breakout board for MEMS altitude sensor capable of 30cm altitude resolution.",
      "website": "https://github.com/sparkfun/SparkFun_MPL3115A2_Breakout_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_MPL3115A2_Altitude_and_Pressure_Sensor_Breakout-1.2.0.zip",
      "archiveFileName": "SparkFun_MPL3115A2_Altitude_and_Pressure_Sensor_Breakout-1.2.0.zip",
      "size": 29188,
      "checksum": "SHA-256:b5e9e72c30835cc0d67df4d0feb0ba56e20be52bbe173b460bdcae89b7f3c35f"
    },
    {
      "name": "SparkFun MicroView",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "The MicroView is a chip-sized Arduino with a built-in OLED, available from SparkFun Electronics",
      "paragraph": "The MicroView is a chip-sized Arduino with a built-in OLED, available from SparkFun Electronics",
      "website": "https://github.com/sparkfun/MicroView",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_MicroView-1.0.0.zip",
      "archiveFileName": "SparkFun_MicroView-1.0.0.zip",
      "size": 1091580,
      "checksum": "SHA-256:c190e3319774c0f9169013903b1fc9b0f2716eb498462dfcbc09bcb041b3634e"
    },
    {
      "name": "SparkFun MicroView",
      "version": "1.0.1",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "The MicroView is a chip-sized Arduino with a built-in OLED, available from SparkFun Electronics",
      "paragraph": "The \u003ca href=\"https://www.sparkfun.com/products/12923\"\u003eMicroView\u003c/a\u003e is a chip-sized Arduino with a built-in OLED, available from SparkFun Electronics.",
      "website": "https://github.com/sparkfun/SparkFun_MicroView_Arduino_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_MicroView-1.0.1.zip",
      "archiveFileName": "SparkFun_MicroView-1.0.1.zip",
      "size": 1091680,
      "checksum": "SHA-256:e0aa35bd3eacce1b1f5504c1292e4b36bed111328b2516295301da7f808a44ba"
    },
    {
      "name": "SparkFun MicroView",
      "version": "1.0.2",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "The MicroView is a chip-sized Arduino with a built-in OLED, available from SparkFun Electronics",
      "paragraph": "The \u003ca href=\"https://www.sparkfun.com/products/12923\"\u003eMicroView\u003c/a\u003e is a chip-sized Arduino with a built-in OLED, available from SparkFun Electronics.",
      "website": "https://github.com/sparkfun/SparkFun_MicroView_Arduino_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_MicroView-1.0.2.zip",
      "archiveFileName": "SparkFun_MicroView-1.0.2.zip",
      "size": 1092326,
      "checksum": "SHA-256:f1fb133f3bf35d95c80cdf414f52b93f2c9b4f40e1f4deed036b4bd2c22eb254"
    },
    {
      "name": "SparkFun MiniMoto",
      "version": "1.1.0",
      "author": "Mike H@SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Arduino Library for the SparkFun MiniMoto board, which uses the TI DRV8830 IC for I2C low-voltage DC motor control.",
      "paragraph": "Communication protocol of I2C, operating voltage of 2.7V to 6.8V and is good for small robotics projects. This library provides basic functionality.",
      "website": "https://github.com/sparkfun/SparkFun_MiniMoto_Arduino_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_MiniMoto-1.1.0.zip",
      "archiveFileName": "SparkFun_MiniMoto-1.1.0.zip",
      "size": 6494,
      "checksum": "SHA-256:7e4a255c2a141dbcca510c1fe59b9a9764bcd196785ed60bb38918fc948d8757"
    },
    {
      "name": "SparkFun TLC5940",
      "version": "1.0.2",
      "author": "Alex Leone \u003cacleone~AT~gmail.com\u003e, SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library for the TLC5940 IC.",
      "paragraph": "The TLC5940 gives the user 16 channel PWM control and can be daisy chained over the serial interface. This library works with the \u003ca href=\"https://www.sparkfun.com/products/10616\"\u003eSparkFun LED Driver Breakout\u003c/a\u003e and the \u003ca href=\"https://www.sparkfun.com/products/10615\"\u003eSparkFun PWM Shield\u003c/a\u003e.",
      "website": "https://github.com/sparkfun/SparkFun_TLC5940_Arduino_Library",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_TLC5940-1.0.2.zip",
      "archiveFileName": "SparkFun_TLC5940-1.0.2.zip",
      "size": 61169,
      "checksum": "SHA-256:92fa031c6c8323c9dfdf17639b8d9bf640716120888e8e6423692251da48f463"
    },
    {
      "name": "SparkFun TLC5940",
      "version": "1.1.0",
      "author": "Alex Leone \u003cacleone~AT~gmail.com\u003e, SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library for the TLC5940 IC.",
      "paragraph": "The TLC5940 gives the user 16 channel PWM control and can be daisy chained over the serial interface. This library works with the \u003ca href=\"https://www.sparkfun.com/products/10616\"\u003eSparkFun LED Driver Breakout\u003c/a\u003e and the \u003ca href=\"https://www.sparkfun.com/products/10615\"\u003eSparkFun PWM Shield\u003c/a\u003e.",
      "website": "https://github.com/sparkfun/SparkFun_TLC5940_Arduino_Library",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_TLC5940-1.1.0.zip",
      "archiveFileName": "SparkFun_TLC5940-1.1.0.zip",
      "size": 61316,
      "checksum": "SHA-256:d20f1dd7d3196a9dcf6f462afb7aa1bab0d31f07c61cde4c71ce5d1b58f79bc1"
    },
    {
      "name": "SparkFun MiniGen",
      "version": "1.1.0",
      "author": "Mike Hord@SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "SparkFun MiniGen library allows the user to generate sine, square, or triangle waves at up to 3MHz, and approximately 1Vp-p.",
      "paragraph": "Communication occurs via SPI, and eanbles the 10-bit DAC for accuracy.",
      "website": "https://github.com/sparkfun/SparkFun_MiniGen_Arduino_Library",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_MiniGen-1.1.0.zip",
      "archiveFileName": "SparkFun_MiniGen-1.1.0.zip",
      "size": 8713,
      "checksum": "SHA-256:e74605b7bc5b4f17f5732ae70bda9b94683cc8d63e1c1ac843bd4b0909c6bf27"
    },
    {
      "name": "SparkFun MetaWatch",
      "version": "1.1.0",
      "author": "Jim@SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "A simple library to interface from Arduino to BlueSMiRF to MetaWatch",
      "paragraph": "Sets up auto-connection between Arduino and the MetaWatch, and gives user control over the backlight, time settings, and battery level readings.",
      "website": "https://github.com/sparkfun/SparkFun_MetaWatch_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_MetaWatch-1.1.0.zip",
      "archiveFileName": "SparkFun_MetaWatch-1.1.0.zip",
      "size": 15136,
      "checksum": "SHA-256:75fd9c8a5a44d958ba1b64fec1308b66bcaf7cd2fbe4ecaf7b25a09708db6b06"
    },
    {
      "name": "SparkFun VL6180 Sensor",
      "version": "1.1.0",
      "author": "Casey Kuhns@SparkFun \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "The VL6180 combines an IR emitter, a range sensor, and an ambient light sensor together for you to easily use and communicate with via an I2C interface.",
      "paragraph": "Library allows you to read distance and light outputs from the sensor, outputting the data via a serial connection.",
      "website": "https://github.com/sparkfun/SparkFun_ToF_Range_Finder-VL6180_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_VL6180_Sensor-1.1.0.zip",
      "archiveFileName": "SparkFun_VL6180_Sensor-1.1.0.zip",
      "size": 10064,
      "checksum": "SHA-256:f33669abc0f8d9ab656f8088cab74163b77ab64d42104ff6a15f47503837bbd7"
    },
    {
      "name": "Sparkfun T5403 Barometric Sensor Library",
      "version": "1.0.1",
      "author": "Casey Kuhns \u003ccasey.kuhns@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Arduino Library for interfacing with the T5403 Barometric sensor.",
      "paragraph": "The T5403 by Epcos is a low cost I2C barometric pressure sensor. This sensor can be used in weather stations and for altitude estimations.",
      "website": "https://github.com/sparkfun/SparkFun_T5403_Barometric_Sensor_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/Sparkfun_T5403_Barometric_Sensor_Library-1.0.1.zip",
      "archiveFileName": "Sparkfun_T5403_Barometric_Sensor_Library-1.0.1.zip",
      "size": 8544,
      "checksum": "SHA-256:5f13307e03200c33821f77c0ef841b3cd8a56e7ef8b53ff33844826a71d3212a"
    },
    {
      "name": "SX1509 IO Expander",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "Arduino library and hardware files for the SX1509 IO Expander Breakout board.",
      "paragraph": "Arduino library and hardware files for the SX1509 IO Expander Breakout board.",
      "website": "https://github.com/sparkfun/SX1509_IO-Expander",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SX1509_IO_Expander-1.0.0.zip",
      "archiveFileName": "SX1509_IO_Expander-1.0.0.zip",
      "size": 30310,
      "checksum": "SHA-256:8325cef0f3f59317d9c02dce41aaa3ec1cf8554c53f7c469ad5ac63ca9736950"
    },
    {
      "name": "SX1509 IO Expander",
      "version": "2.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "Arduino library and hardware files for the SX1509 IO Expander Breakout board.",
      "paragraph": "Arduino library and hardware files for the SX1509 IO Expander Breakout board.",
      "website": "https://github.com/sparkfun/SX1509_IO-Expander",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SX1509_IO_Expander-2.0.0.zip",
      "archiveFileName": "SX1509_IO_Expander-2.0.0.zip",
      "size": 1355062,
      "checksum": "SHA-256:bee71f89f9d66eca3dcd8cf19e8c218a517c7c663c941d588772272f3f70d0d7"
    },
    {
      "name": "SX1509 IO Expander",
      "version": "2.0.1",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "Arduino library and hardware files for the SX1509 IO Expander Breakout board.",
      "paragraph": "Arduino library and hardware files for the SX1509 IO Expander Breakout board.",
      "website": "https://github.com/sparkfun/SX1509_IO-Expander",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SX1509_IO_Expander-2.0.1.zip",
      "archiveFileName": "SX1509_IO_Expander-2.0.1.zip",
      "size": 1355061,
      "checksum": "SHA-256:d9e5600b7cd31f4ab216ddcc30ccbe71900f4f70dc282eebf7a8c014b9ebbdea"
    },
    {
      "name": "SparkFun LSM9DS0 Breakout",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "A breakout board for ST Micro's LSM9DS0 -- a 3D accelerometer, gyroscop, and magnetometer.",
      "paragraph": "A breakout board for ST Micro's LSM9DS0 -- a 3D accelerometer, gyroscop, and magnetometer.",
      "website": "https://github.com/sparkfun/LSM9DS0_Breakout",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_LSM9DS0_Breakout-1.0.0.zip",
      "archiveFileName": "SparkFun_LSM9DS0_Breakout-1.0.0.zip",
      "size": 33610,
      "checksum": "SHA-256:2aae1d0e2a071235c2cf07d1efd900ade8649ab2a05cf787b2c679fec73761dd"
    },
    {
      "name": "SparkFun LSM9DS0 Breakout",
      "version": "1.0.1",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library for the 9 degree of freedom IC -ST Micro's LSM9DS0.",
      "paragraph": "A \u003ca href=\"https://www.sparkfun.com/products/12636\"\u003ebreakout board\u003c/a\u003e for ST Micro's LSM9DS0 -- a 3D accelerometer, gyroscop, and magnetometer. This library gives the user 9DOF functionality.",
      "website": "https://github.com/sparkfun/SparkFun_LSM9DS0_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_LSM9DS0_Breakout-1.0.1.zip",
      "archiveFileName": "SparkFun_LSM9DS0_Breakout-1.0.1.zip",
      "size": 33838,
      "checksum": "SHA-256:bbc9d5158d09fec846298b32b50975129b8a3731f1ba030c1065147c5eb6f318"
    },
    {
      "name": "SparkFun HTU21D Humidity and Temperature Sensor Breakout",
      "version": "1.1.1",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "HTU21D temperature and humidity densor breakout.",
      "paragraph": "This is a breadboard friendly breakout board for the Measurement Specialties HTU21D, a high-precision, low-power digital temperature and humidity sensor.",
      "website": "https://github.com/sparkfun/SparkFun_HTU21D_Breakout_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_HTU21D_Humidity_and_Temperature_Sensor_Breakout-1.1.1.zip",
      "archiveFileName": "SparkFun_HTU21D_Humidity_and_Temperature_Sensor_Breakout-1.1.1.zip",
      "size": 7158,
      "checksum": "SHA-256:82d4cf4380b4da959bde393f843ddb34e6a7ca9c08d4f696ac36eeeb971205cb"
    },
    {
      "name": "SparkFun HTU21D Humidity and Temperature Sensor Breakout",
      "version": "1.1.3",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "HTU21D temperature and humidity densor breakout.",
      "paragraph": "This is a breadboard friendly breakout board for the Measurement Specialties HTU21D, a high-precision, low-power digital temperature and humidity sensor.",
      "website": "https://github.com/sparkfun/SparkFun_HTU21D_Breakout_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_HTU21D_Humidity_and_Temperature_Sensor_Breakout-1.1.3.zip",
      "archiveFileName": "SparkFun_HTU21D_Humidity_and_Temperature_Sensor_Breakout-1.1.3.zip",
      "size": 8833,
      "checksum": "SHA-256:e9899fa9459eeba2c320cea64c523053eaecd95cc8c78c1825a9d55f5e6a130f"
    },
    {
      "name": "SparkFun MMA8452Q Accelerometer",
      "version": "1.1.0",
      "author": "Jim@SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Basic I2C functionality of the MMA8452Q Accelerometer Breakout (https://www.sparkfun.com/products/12756)",
      "paragraph": "Sensor has user selectable scales of 2g/4g/8g, as well as low power mode, and 12 bit resolution.",
      "website": "https://github.com/sparkfun/SparkFun_MMA8452Q_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_MMA8452Q_Accelerometer-1.1.0.zip",
      "archiveFileName": "SparkFun_MMA8452Q_Accelerometer-1.1.0.zip",
      "size": 9456,
      "checksum": "SHA-256:3aeb4393ffbd27039dc23bd2a98681c8e128c87e686994cdc7da14a19edc2188"
    },
    {
      "name": "SparkFun MMA8452Q Accelerometer",
      "version": "1.2.0",
      "author": "Jim@SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Basic I2C functionality of the MMA8452Q Accelerometer Breakout (https://www.sparkfun.com/products/12756)",
      "paragraph": "Sensor has user selectable scales of 2g/4g/8g, as well as low power mode, and 12 bit resolution.",
      "website": "https://github.com/sparkfun/SparkFun_MMA8452Q_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_MMA8452Q_Accelerometer-1.2.0.zip",
      "archiveFileName": "SparkFun_MMA8452Q_Accelerometer-1.2.0.zip",
      "size": 9895,
      "checksum": "SHA-256:c52ca09a268e4561e87734e863d8eac0878dcfd77cfc04e2c85305de2356c7ab"
    },
    {
      "name": "SparkFun ISL29125 Breakout",
      "version": "1.0.1",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Arduino library showing basic functionality for the ISL29125 RGB Light Sensor Breakout Board.",
      "paragraph": "The ISL29125 breakout board makes it very easy to sense and record the light intensity of the general red, green, and blue spectrums of visible light while rejecting IR from light sources.",
      "website": "https://github.com/sparkfun/ISL29125_Breakout",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_ISL29125_Breakout-1.0.1.zip",
      "archiveFileName": "SparkFun_ISL29125_Breakout-1.0.1.zip",
      "size": 10158,
      "checksum": "SHA-256:7cb12d49efed15d0ecefd4d8721a8ff1dfd2de6debc1630db2fd6f17435db62e"
    },
    {
      "name": "SparkFun ISL29125 Breakout",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "A Breakout Board for the ISL29125 RGB Light Sensor.",
      "paragraph": "A Breakout Board for the ISL29125 RGB Light Sensor.",
      "website": "https://github.com/sparkfun/ISL29125_Breakout",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_ISL29125_Breakout-1.0.0.zip",
      "archiveFileName": "SparkFun_ISL29125_Breakout-1.0.0.zip",
      "size": 9971,
      "checksum": "SHA-256:5b19d7cbe993f7150d4ccc7c50acce435297859dfac0ab459fe63783d9dd3edc"
    },
    {
      "name": "SparkFun MS5803-14BA Pressure Sensor",
      "version": "1.1.0",
      "author": "Casey@SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library for MS5803-14BA Pressure Sensor.",
      "paragraph": "Provides I2C communication protocol for measuring wather depth, altitude, or other pressure readings.",
      "website": "https://github.com/sparkfun/SparkFun_MS5803-14BA_Breakout_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_MS5803_14BA_Pressure_Sensor-1.1.0.zip",
      "archiveFileName": "SparkFun_MS5803_14BA_Pressure_Sensor-1.1.0.zip",
      "size": 8153,
      "checksum": "SHA-256:d8c7fbd935a93cd8c29233f5734f35b7bcb7eaf2e2ebd4705f1f4a9b255a66a7"
    },
    {
      "name": "SparkFun APDS9960 RGB and Gesture Sensor",
      "version": "1.4.2",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library for the Avago APDS-9960 sensor",
      "paragraph": "This library works with the SparkFun Breakout board for the Avago APDS-9960 proximity, light, RGB, and gesture sensor, made by SparkFun Electronics.",
      "website": "https://github.com/sparkfun/SparkFun_APDS-9960_Sensor_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_APDS9960_RGB_and_Gesture_Sensor-1.4.2.zip",
      "archiveFileName": "SparkFun_APDS9960_RGB_and_Gesture_Sensor-1.4.2.zip",
      "size": 22011,
      "checksum": "SHA-256:9b783645b25c8301466cf0ab63c2fa377ffaf28ccd43e15402f785604f7fad7c"
    },
    {
      "name": "SparkFun AD5330",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "AD5330 Breakout",
      "paragraph": "AD5330 Breakout",
      "website": "https://github.com/sparkfun/AD5330_Breakout",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_AD5330-1.0.0.zip",
      "archiveFileName": "SparkFun_AD5330-1.0.0.zip",
      "size": 251658,
      "checksum": "SHA-256:8a97c4eace625d94862ae824ad78a400de24dcab6d9577d0385c8f2ee4344cab"
    },
    {
      "name": "SparkFun AD5330",
      "version": "1.2.1",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "Libraries for the AD5330 8-bit DAC",
      "paragraph": "Libraries for the Sparkfun AD5330 DAC and breakout board",
      "website": "https://github.com/sparkfun/AD5330_Breakout",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_AD5330-1.2.1.zip",
      "archiveFileName": "SparkFun_AD5330-1.2.1.zip",
      "size": 251731,
      "checksum": "SHA-256:c804335c347e6088fc77c77e1c662e63fcd87697d3ecb30194205bc0384fe5ea"
    },
    {
      "name": "SparkFun AD5330",
      "version": "1.2.3",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Libraries for the AD5330 8-bit DAC",
      "paragraph": "Libraries for the Sparkfun AD5330 DAC and breakout board",
      "website": "https://github.com/sparkfun/SparkFun_AD5330_Breakout_Arduino_Library",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_AD5330-1.2.3.zip",
      "archiveFileName": "SparkFun_AD5330-1.2.3.zip",
      "size": 251783,
      "checksum": "SHA-256:bbdf0a0e55595dab38b543408e52ccebded9dc6788d24ea792323af164f07321"
    },
    {
      "name": "SparkFun Bar Graph Library",
      "version": "1.2.0",
      "author": "Mike Grusin, SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Provides functionality of 10-segment bar graphs.",
      "paragraph": "Allows users to drive three 10-segment bar graphs, using 74HC595 shift registers. Compatible with the \u003ca href=\"https://www.sparkfun.com/products/10936\"\u003eSparkFun Bar Graph Breakout Kit\u003c/a\u003e.",
      "website": "https://github.com/sparkfun/SparkFun_Bar_Graph_Breakout_Arduino_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_Bar_Graph_Library-1.2.0.zip",
      "archiveFileName": "SparkFun_Bar_Graph_Library-1.2.0.zip",
      "size": 12357,
      "checksum": "SHA-256:d796640c47d304c7bd8d9f6eee2f0c32b3bbc9f26d875334e104ecdcf91a088d"
    },
    {
      "name": "SparkFun Quadstepper Motor Driver",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "4-axis stepper motor driver, available from SparkFun Electronics",
      "paragraph": "Arduino Library for SparkFun Quadstepper 4-axis stepper motor driver, available from SparkFun Electronics",
      "website": "https://github.com/sparkfun/Quadstepper_Motor_Driver",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_Quadstepper_Motor_Driver-1.0.0.zip",
      "archiveFileName": "SparkFun_Quadstepper_Motor_Driver-1.0.0.zip",
      "size": 5522,
      "checksum": "SHA-256:2f8a02b8e430a5668ed91d12f47a3dc2a9f1868987cc58309009cdd21dc7a3dd"
    },
    {
      "name": "SparkFun Quadstepper Motor Driver",
      "version": "1.0.1",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "4-axis stepper motor driver, available from SparkFun Electronics",
      "paragraph": "Arduino Library for SparkFun Quadstepper 4-axis stepper motor driver, available from SparkFun Electronics",
      "website": "https://github.com/sparkfun/Quadstepper_Motor_Driver",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_Quadstepper_Motor_Driver-1.0.1.zip",
      "archiveFileName": "SparkFun_Quadstepper_Motor_Driver-1.0.1.zip",
      "size": 5629,
      "checksum": "SHA-256:57f1909f3a40a12636440a50e5f20249a522a4412db6b8436160e1e9b73d38c4"
    },
    {
      "name": "SparkFun ATSHA204 Library",
      "version": "1.0.0",
      "author": "Jim@SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library for the ATSHA204 IC.",
      "paragraph": "This code verifies basic functionality of the ATSHA204 IC, and allows the user to obtain the unique serial number.",
      "website": "https://github.com/sparkfun/SparkFun_ATSHA204_Arduino_Library",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_ATSHA204_Library-1.0.0.zip",
      "archiveFileName": "SparkFun_ATSHA204_Library-1.0.0.zip",
      "size": 15736,
      "checksum": "SHA-256:34d8b0172dd365161cbc140cb75ef33d835c7d9ef1b20e16c413d9c648cb6251"
    },
    {
      "name": "SparkFun TSL2561",
      "version": "1.0.0",
      "author": "Nathan Seidle \u003ctechsupport@sparkfun.com\u003e, Joel Bartlett \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "An Arduino Library for the TSL2561_Luminosity_Sensor_BOB from SparkFun Electronics.",
      "paragraph": "An Arduino Library for the TSL2561_Luminosity_Sensor_BOB from SparkFun Electronics.",
      "website": "https://github.com/sparkfun/SparkFun_TSL2561_Luminosity_Sensor_BOB_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_TSL2561-1.0.0.zip",
      "archiveFileName": "SparkFun_TSL2561-1.0.0.zip",
      "size": 10439,
      "checksum": "SHA-256:f5541c0b98f29e9827391a63b3b1e7761a82bc091b31c90582d483abd124d0bc"
    },
    {
      "name": "SparkFun TSL2561",
      "version": "1.1.0",
      "author": "Mike Grusin@SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "An Arduino Library for the \u003ca href=\"https://www.sparkfun.com/products/12055\"\u003eTSL2561 Luminosity Sensor Breakout\u003c/a\u003e from SparkFun Electronics.",
      "paragraph": "Via I2C communication, the sensor conducts specific light ranges from 0.1-40k+ Lux.",
      "website": "https://github.com/sparkfun/SparkFun_TSL2561_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_TSL2561-1.1.0.zip",
      "archiveFileName": "SparkFun_TSL2561-1.1.0.zip",
      "size": 9841,
      "checksum": "SHA-256:98f97a7756d20e216a91db2db9301992da6bcc9bf0b9e8b3fb9620cad80ac1ea"
    },
    {
      "name": "SparkFun ZX Distance and Gesture Sensor",
      "version": "1.0.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "The ZX Sensor uses infrared light to determine the distance from an object and where the object is located on the X axis (between IR LEDs), available from SparkFun Electronics",
      "paragraph": "The \u003ca href=\"https://www.sparkfun.com/products/12780\"\u003eZX Distance and Gesture Sensor\u003c/a\u003e is sensor capable of sensing an object's distance from the sensor and its location between the IR LEDs.",
      "website": "https://github.com/sparkfun/SparkFun_ZX_Distance_and_Gesture_Sensor_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_ZX_Distance_and_Gesture_Sensor-1.0.0.zip",
      "archiveFileName": "SparkFun_ZX_Distance_and_Gesture_Sensor-1.0.0.zip",
      "size": 16984,
      "checksum": "SHA-256:1fea0347b4be5a4c3b36da37a350d26033bfb1d93cfead21519cef6eef8d5098"
    },
    {
      "name": "SparkFun ZX Distance and Gesture Sensor",
      "version": "1.0.1",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "The ZX Sensor uses infrared light to determine the distance from an object and where the object is located on the X axis (between IR LEDs), available from SparkFun Electronics",
      "paragraph": "The \u003ca href=\"https://www.sparkfun.com/products/12780\"\u003eZX Distance and Gesture Sensor\u003c/a\u003e is sensor capable of sensing an object's distance from the sensor and its location between the IR LEDs.",
      "website": "https://github.com/sparkfun/SparkFun_ZX_Distance_and_Gesture_Sensor_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_ZX_Distance_and_Gesture_Sensor-1.0.1.zip",
      "archiveFileName": "SparkFun_ZX_Distance_and_Gesture_Sensor-1.0.1.zip",
      "size": 17042,
      "checksum": "SHA-256:a219842c237ac9e459031957f7d64109839e3522b3753adbe2cad5483521bb40"
    },
    {
      "name": "SparkFun LSM6DS3 Breakout",
      "version": "1.0.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "A library to drive the STmicro LSM6DS3 by SPI or I2C.",
      "paragraph": "Driver handles Mode 1 (slave device) in either SPI or I2C, interrupt readback, and FIFO operation",
      "website": "https://github.com/sparkfun/SparkFun_LSM6DS3_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_LSM6DS3_Breakout-1.0.0.zip",
      "archiveFileName": "SparkFun_LSM6DS3_Breakout-1.0.0.zip",
      "size": 58743,
      "checksum": "SHA-256:17f17fbdf63024531ba918eb1efcd02ac085b782ff9883454898d24687289a49"
    },
    {
      "name": "SparkFun LSM303C 6 DOF IMU Breakout",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics \u003cTechSupport@SparkFun.com\u003e",
      "sentence": "Driver for ST's LSM303C 6-DOF IMU (3-axis accelerometer \u0026 3-axis magnetometer)",
      "paragraph": "The \u003ca href=\"http://www.st.com/web/en/resource/technical/document/datasheet/DM00089896.pdf\"\u003eLSM303C\u003c/a\u003e is a system-in-package featuring a 3D digital linear acceleration sensor and a 3D digital magnetic sensor. The LSM303C has linear acceleration full scales of ±2 g / ±4 g / ±8 g and a magnetic field full scale of ±16 gauss. The LSM303C includes an I2C serial bus interface that supports standard and fast mode (100 kHz and 400 kHz) and a half-duplex subset of the SPI serial interface.",
      "website": "https://github.com/sparkfun/LSM303C_6_DOF_IMU_Breakout",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_LSM303C_6_DOF_IMU_Breakout-1.0.0.zip",
      "archiveFileName": "SparkFun_LSM303C_6_DOF_IMU_Breakout-1.0.0.zip",
      "size": 15424,
      "checksum": "SHA-256:ade561015ccd208bb5f43448c2423dfe7b450520cd27aec0d12388355a84134e"
    },
    {
      "name": "SparkFun MG2639 CellShield",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "Jim Lindblom \u003cjim@sparkfun.com\u003e",
      "sentence": "Driver library for SparkFun's MG2639 cellular shield.",
      "paragraph": "Simple API to use SMS, TCP, and other functions made available by the MG2639 Cellular Shield.",
      "website": "http://github.com/sparkfun/MG2639_Cellular_Shield",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_MG2639_CellShield-1.0.0.zip",
      "archiveFileName": "SparkFun_MG2639_CellShield-1.0.0.zip",
      "size": 3410260,
      "checksum": "SHA-256:08ace80cbb20c58420ceae06f0d84b4b4b568d669805a203940b23650c72bb5b"
    },
    {
      "name": "SparkFun Line Follower Array",
      "version": "0.4.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library to operate the 8 position line sensor bar for robots.",
      "paragraph": "This library can: get raw data, get position, get number of points detected, and build a circular buffer to record the data as it passes.",
      "website": "https://github.com/sparkfun/RedBot_Line_Follower_Bar_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_Line_Follower_Array-0.4.0.zip",
      "archiveFileName": "SparkFun_Line_Follower_Array-0.4.0.zip",
      "size": 39751,
      "checksum": "SHA-256:89c79f8ab3ed71af8797cae233c0446a5e30c2fa09cea856a8318b2536b225ce"
    },
    {
      "name": "SparkFun Line Follower Array",
      "version": "1.0.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library to operate the 8 position line sensor array for robots.",
      "paragraph": "This library can: get raw data, get position, get number of points detected, and build a circular buffer to record the data as it passes.",
      "website": "https://github.com/sparkfun/SparkFun_Line_Follower_Array_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_Line_Follower_Array-1.0.0.zip",
      "archiveFileName": "SparkFun_Line_Follower_Array-1.0.0.zip",
      "size": 237810,
      "checksum": "SHA-256:6a976bbb5131e77489e43f592e9669c4104118ff29d633c64d10e64e9c694301"
    },
    {
      "name": "SparkFun Line Follower Array",
      "version": "1.0.1",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library to operate the 8 position line sensor array for robots.",
      "paragraph": "This library can: get raw data, get position, get number of points detected, and build a circular buffer to record the data as it passes.",
      "website": "https://github.com/sparkfun/SparkFun_Line_Follower_Array_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_Line_Follower_Array-1.0.1.zip",
      "archiveFileName": "SparkFun_Line_Follower_Array-1.0.1.zip",
      "size": 237818,
      "checksum": "SHA-256:b195cf7da7b085bc5ff7493a38e71fe550b7b85bb777d000d3d59a9be75a97d5"
    },
    {
      "name": "SparkFun BME280",
      "version": "1.0.0",
      "author": "Marshall Taylor",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "A library to drive the Bosch BME280 Altimeter and Pressure sensor",
      "paragraph": "See code for comments.",
      "website": "https://github.com/sparkfun/SparkFun_BME280_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_BME280-1.0.0.zip",
      "archiveFileName": "SparkFun_BME280-1.0.0.zip",
      "size": 51697,
      "checksum": "SHA-256:1e1d0d1bd688120973949f6f4f6e8e4e9565c3f0a7742be63a5dffc870422d5b"
    },
    {
      "name": "SparkFun BME280",
      "version": "1.1.0",
      "author": "Marshall Taylor",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "A library to drive the Bosch BME280 Altimeter and Pressure sensor",
      "paragraph": "See code for comments.",
      "website": "https://github.com/sparkfun/SparkFun_BME280_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_BME280-1.1.0.zip",
      "archiveFileName": "SparkFun_BME280-1.1.0.zip",
      "size": 51748,
      "checksum": "SHA-256:6fcde47a10511b30017152f50cd3ee7f37e8b6705e796452d298b132e4846e4e"
    },
    {
      "name": "SparkFun MAX31855K Thermocouple Digitizer",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics \u003ctechsupport@SparkFun.com\u003e",
      "sentence": "K type thermocouple digitizer board.",
      "paragraph": "The \u003ca href=\"http://datasheets.maximintegrated.com/en/ds/MAX31855.pdf\"\u003eMAX31855\u003c/a\u003e performs cold-junction compensation and digitizes the signal from a K-type thermocouple. The data is output in a signed 14-bit, SPI-compatible, read-only format. Example is pin compatible with the 3.3 V \u003ca href=\"http://www.sparkfun.com/products/11114\"\u003eArduino Pro Mini\u003c/a\u003e.",
      "website": "http://github.com/sparkfun/MAX31855K_Thermocouple_Digitizer",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_MAX31855K_Thermocouple_Digitizer-1.0.0.zip",
      "archiveFileName": "SparkFun_MAX31855K_Thermocouple_Digitizer-1.0.0.zip",
      "size": 9289,
      "checksum": "SHA-256:8da65757bbf78e81ce4daffbc628beafbb7338676fac442cdae2c2593138bf56"
    },
    {
      "name": "MQTT",
      "version": "1.0.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "wrapper for the official eclipse paho embedded library",
      "paragraph": "Hello there",
      "website": "http://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/256dpi/MQTT-1.0.0.zip",
      "archiveFileName": "MQTT-1.0.0.zip",
      "size": 33494,
      "checksum": "SHA-256:60be7734df6291d1ec3087b954f3a94eb9a87ee045da69f28d5f959a9ba137a8"
    },
    {
      "name": "MQTT",
      "version": "1.1.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "paho mqtt library wrapper for arduino",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the eclipse paho project and adds a thin wrapper to get an Arduino like API.",
      "website": "http://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/256dpi/MQTT-1.1.0.zip",
      "archiveFileName": "MQTT-1.1.0.zip",
      "size": 34249,
      "checksum": "SHA-256:a65e2c00e643e90af049e4fdd964b41790c4da2d223625785c196e9a56f02503"
    },
    {
      "name": "MQTT",
      "version": "1.10.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/256dpi/MQTT-1.10.0.zip",
      "archiveFileName": "MQTT-1.10.0.zip",
      "size": 64680,
      "checksum": "SHA-256:61203e124c8917ffd27882c62506ff7a47094234fdac9656c3be3abcee015c6b"
    },
    {
      "name": "MQTT",
      "version": "1.10.1",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/256dpi/MQTT-1.10.1.zip",
      "archiveFileName": "MQTT-1.10.1.zip",
      "size": 65955,
      "checksum": "SHA-256:c8b0ddc49efaf9b783e3af84019c369abb79c6dd3e5088df6ae00cb92369512e"
    },
    {
      "name": "MQTT",
      "version": "1.11.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/256dpi/MQTT-1.11.0.zip",
      "archiveFileName": "MQTT-1.11.0.zip",
      "size": 68122,
      "checksum": "SHA-256:3a5cde80b3a75d4b709bd5c46e5d837c0a093ddcd446e18508279c98341dc575"
    },
    {
      "name": "MQTT",
      "version": "1.2.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "paho mqtt library wrapper for arduino",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the eclipse paho project and adds a thin wrapper to get an Arduino like API.",
      "website": "http://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/256dpi/MQTT-1.2.0.zip",
      "archiveFileName": "MQTT-1.2.0.zip",
      "size": 34627,
      "checksum": "SHA-256:fc2d3990cc670b0d4087d05bf8de5a714f636c3756cfb1c232db4e25cf5a775e"
    },
    {
      "name": "MQTT",
      "version": "1.3.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "paho mqtt library wrapper for arduino",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the eclipse paho project and adds a thin wrapper to get an Arduino like API.",
      "website": "http://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/256dpi/MQTT-1.3.0.zip",
      "archiveFileName": "MQTT-1.3.0.zip",
      "size": 34722,
      "checksum": "SHA-256:fe6ad9cded32a537eedc9f706d0548df457781d8ad06ba5dbbc617e035957cb0"
    },
    {
      "name": "MQTT",
      "version": "1.3.2",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "Paho MQTT library wrapper for Arduino.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the eclipse paho project and adds a thin wrapper to get an Arduino like API.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/256dpi/MQTT-1.3.2.zip",
      "archiveFileName": "MQTT-1.3.2.zip",
      "size": 34696,
      "checksum": "SHA-256:ed6a7812d9264840e730304263c80384b2226928572c0190ecb68001f6b055e3"
    },
    {
      "name": "MQTT",
      "version": "1.4.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower resources usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/256dpi/MQTT-1.4.0.zip",
      "archiveFileName": "MQTT-1.4.0.zip",
      "size": 38429,
      "checksum": "SHA-256:2af9dd63fe80a7f4d4311783bb3dfc675b86e3e9e241ee9b49ab42723a8fc60b"
    },
    {
      "name": "MQTT",
      "version": "1.5.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/256dpi/MQTT-1.5.0.zip",
      "archiveFileName": "MQTT-1.5.0.zip",
      "size": 57637,
      "checksum": "SHA-256:a72b4fc9f7f3bed9c4b6b70e74f3ecb700752447f6ab0165fbaf8c2447781162"
    },
    {
      "name": "MQTT",
      "version": "1.5.1",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/256dpi/MQTT-1.5.1.zip",
      "archiveFileName": "MQTT-1.5.1.zip",
      "size": 57648,
      "checksum": "SHA-256:ffe2df592ddf1080e834be0d6746b407b0a0b334f1e454349169ade5324a20b5"
    },
    {
      "name": "MQTT",
      "version": "1.6.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/256dpi/MQTT-1.6.0.zip",
      "archiveFileName": "MQTT-1.6.0.zip",
      "size": 58152,
      "checksum": "SHA-256:0c17c1b22a4f81b137ea4baf3f98a32132bc9c94673e7caa9b87c2003b458c64"
    },
    {
      "name": "MQTT",
      "version": "1.7.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/256dpi/MQTT-1.7.0.zip",
      "archiveFileName": "MQTT-1.7.0.zip",
      "size": 59217,
      "checksum": "SHA-256:114272c31bd66fb4c42eb250610dbf64a6cbab2734d2f5866aa48b0aaf21033e"
    },
    {
      "name": "MQTT",
      "version": "1.8.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/256dpi/MQTT-1.8.0.zip",
      "archiveFileName": "MQTT-1.8.0.zip",
      "size": 54581,
      "checksum": "SHA-256:31300984b5bb1f062ea1286fa8bc223c4bb8325a587eef35ed0ab898db5b6733"
    },
    {
      "name": "MQTT",
      "version": "1.8.1",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/256dpi/MQTT-1.8.1.zip",
      "archiveFileName": "MQTT-1.8.1.zip",
      "size": 54614,
      "checksum": "SHA-256:c5bc5669a0a20b20d42049d287d52fd396eb84ff18d4e96a3e8b3f5d647734ef"
    },
    {
      "name": "MQTT",
      "version": "1.8.2",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/256dpi/MQTT-1.8.2.zip",
      "archiveFileName": "MQTT-1.8.2.zip",
      "size": 54924,
      "checksum": "SHA-256:4f7c2bcb4f708721921b894f814b45ad8c7587818c037d3e5b543008050171e0"
    },
    {
      "name": "MQTT",
      "version": "1.9.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/256dpi/MQTT-1.9.0.zip",
      "archiveFileName": "MQTT-1.9.0.zip",
      "size": 55258,
      "checksum": "SHA-256:c1cb6aa994e1b37a4946df7e37ae05c4ac915fe39b320382df461a7671c40c39"
    },
    {
      "name": "MQTT",
      "version": "1.9.1",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/256dpi/MQTT-1.9.1.zip",
      "archiveFileName": "MQTT-1.9.1.zip",
      "size": 56983,
      "checksum": "SHA-256:028f584b20f0986822dfcc1edee6a4cdc41cd4ac188c81550992a44f28f555a8"
    },
    {
      "name": "MQTT",
      "version": "1.9.2",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/256dpi/MQTT-1.9.2.zip",
      "archiveFileName": "MQTT-1.9.2.zip",
      "size": 61219,
      "checksum": "SHA-256:1f6bb1f5a92ceb0018de1ca903f1501a725e575ee05b598ff2e04aacbb467da6"
    },
    {
      "name": "MQTT",
      "version": "1.9.3",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/256dpi/MQTT-1.9.3.zip",
      "archiveFileName": "MQTT-1.9.3.zip",
      "size": 61355,
      "checksum": "SHA-256:c4a46355b4964376f0a3653ae96d86e2125e347c64021a9c14c8a44d89577b77"
    },
    {
      "name": "MQTT",
      "version": "1.9.4",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/256dpi/MQTT-1.9.4.zip",
      "archiveFileName": "MQTT-1.9.4.zip",
      "size": 62346,
      "checksum": "SHA-256:0162cfb8f9333cf32033b778e13c7218e4a350ecfe1fd3c06e8ac9b48b8247e2"
    },
    {
      "name": "MQTT",
      "version": "1.9.5",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/256dpi/MQTT-1.9.5.zip",
      "archiveFileName": "MQTT-1.9.5.zip",
      "size": 62349,
      "checksum": "SHA-256:b621d5f6bbec826b84ec2ca66b7f91c71dafb96c3f68ccb4eb3db3ae089644ec"
    },
    {
      "name": "MQTT",
      "version": "1.9.6",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/256dpi/MQTT-1.9.6.zip",
      "archiveFileName": "MQTT-1.9.6.zip",
      "size": 64341,
      "checksum": "SHA-256:ba6b75d51d2fa9b0694d53a7e3b0b5021a22ab46d0f1becb7ba82b6487dd4a7c"
    },
    {
      "name": "Akafugu Four Letter Word Library",
      "version": "1.0.0",
      "author": "Akafugu",
      "maintainer": "Akafugu \u003cinfo@akafugu.jp\u003e",
      "sentence": "Akafugu Four Letter Word Library",
      "paragraph": "Akafugu Four Letter Word Library",
      "website": "https://github.com/akafugu/FourLetterWord",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/akafugu/Akafugu_Four_Letter_Word_Library-1.0.0.zip",
      "archiveFileName": "Akafugu_Four_Letter_Word_Library-1.0.0.zip",
      "size": 10416,
      "checksum": "SHA-256:ca78836317d5da6028fad68a08170a5251e1b5e4128bf77ef8bcd7603c00ef20"
    },
    {
      "name": "Akafugu TWIDisplay Library",
      "version": "1.0.0",
      "author": "Akafugu",
      "maintainer": "Akafugu \u003cinfo@akafugu.jp\u003e",
      "sentence": "Akafugu TWIDisplay Library",
      "paragraph": "Akafugu TWIDisplay Library",
      "website": "https://github.com/akafugu/TWIDisplayLibrary",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/akafugu/Akafugu_TWIDisplay_Library-1.0.0.zip",
      "archiveFileName": "Akafugu_TWIDisplay_Library-1.0.0.zip",
      "size": 11408,
      "checksum": "SHA-256:05b7734e09d4a7bc7a9e61c5133a32b658451c1f65bba81747b8ab7b67400d4b"
    },
    {
      "name": "Akafugu TWIDisplay Library",
      "version": "1.0.1",
      "author": "Akafugu",
      "maintainer": "Akafugu \u003cinfo@akafugu.jp\u003e",
      "sentence": "Akafugu TWIDisplay Library",
      "paragraph": "Akafugu TWIDisplay Library",
      "website": "https://github.com/akafugu/TWIDisplayLibrary",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/akafugu/Akafugu_TWIDisplay_Library-1.0.1.zip",
      "archiveFileName": "Akafugu_TWIDisplay_Library-1.0.1.zip",
      "size": 11401,
      "checksum": "SHA-256:5d50206a018e6f22bdce61b3ba6a51ca97ea71c2e53d1452c3fbc9f7b92335b7"
    },
    {
      "name": "ModbusMaster",
      "version": "0.10.2",
      "author": "Doc Walker \u003c4-20ma@wvfans.net\u003e",
      "maintainer": "Doc Walker \u003c4-20ma@wvfans.net\u003e",
      "sentence": "ModbusMaster",
      "paragraph": "Enables communication with Modbus slaves over RS232/485 (via RTU protocol).",
      "website": "https://github.com/4-20ma/ModbusMaster",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/4-20ma/ModbusMaster-0.10.2.zip",
      "archiveFileName": "ModbusMaster-0.10.2.zip",
      "size": 875123,
      "checksum": "SHA-256:7d11a4cc42fa1a616a088a3cab0974d1e0c55d8df173fc3352de1125d5e796fa"
    },
    {
      "name": "ModbusMaster",
      "version": "0.10.3",
      "author": "Doc Walker",
      "maintainer": "Doc Walker \u003c4-20ma@wvfans.net\u003e",
      "sentence": "Enlighten your Arduino to be a Modbus master.",
      "paragraph": "Enables communication with Modbus slaves over RS232/485 (via RTU protocol). Requires a RS232/485 transceiver.",
      "website": "https://github.com/4-20ma/ModbusMaster",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/4-20ma/ModbusMaster-0.10.3.zip",
      "archiveFileName": "ModbusMaster-0.10.3.zip",
      "size": 1056081,
      "checksum": "SHA-256:230a08b85666c869e749cf93549dcfada4828e6da936ee3de503fd80a2244a31"
    },
    {
      "name": "ModbusMaster",
      "version": "0.11.0",
      "author": "Doc Walker",
      "maintainer": "Doc Walker \u003c4-20ma@wvfans.net\u003e",
      "sentence": "Enlighten your Arduino to be a Modbus master.",
      "paragraph": "Enables communication with Modbus slaves over RS232/485 (via RTU protocol). Requires an RS232/485 transceiver.",
      "website": "https://github.com/4-20ma/ModbusMaster",
      "category": "Communication",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/4-20ma/ModbusMaster-0.11.0.zip",
      "archiveFileName": "ModbusMaster-0.11.0.zip",
      "size": 1236332,
      "checksum": "SHA-256:2ac4fedd2ee11b9f82fd2f3d3829f8371130937675ed88c73c72a021ccfdf137"
    },
    {
      "name": "ModbusMaster",
      "version": "1.0.0",
      "author": "Doc Walker",
      "maintainer": "Doc Walker \u003c4-20ma@wvfans.net\u003e",
      "sentence": "Enlighten your Arduino to be a Modbus master.",
      "paragraph": "Enables communication with Modbus slaves over RS232/485 (via RTU protocol). Requires an RS232/485 transceiver.",
      "website": "https://github.com/4-20ma/ModbusMaster",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/4-20ma/ModbusMaster-1.0.0.zip",
      "archiveFileName": "ModbusMaster-1.0.0.zip",
      "size": 1441483,
      "checksum": "SHA-256:15ba1b4133d91f50dcffdd710d46df4068f892b5922225da9b6f134fc7d073ce"
    },
    {
      "name": "ModbusMaster",
      "version": "2.0.0",
      "author": "Doc Walker",
      "maintainer": "Doc Walker \u003c4-20ma@wvfans.net\u003e",
      "sentence": "Enlighten your Arduino to be a Modbus master.",
      "paragraph": "Enables communication with Modbus slaves over RS232/485 (via RTU protocol). Requires an RS232/485 transceiver.",
      "website": "https://github.com/4-20ma/ModbusMaster",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/4-20ma/ModbusMaster-2.0.0.zip",
      "archiveFileName": "ModbusMaster-2.0.0.zip",
      "size": 267368,
      "checksum": "SHA-256:b5e3f4b7129c6c00dcc7cf24130c593ba27342a839db0d0efa0110de576f8ecf"
    },
    {
      "name": "ModbusMaster",
      "version": "2.0.1",
      "author": "Doc Walker",
      "maintainer": "Doc Walker \u003c4-20ma@wvfans.net\u003e",
      "sentence": "Enlighten your Arduino to be a Modbus master.",
      "paragraph": "Enables communication with Modbus slaves over RS232/485 (via RTU protocol). Requires an RS232/485 transceiver.",
      "website": "https://github.com/4-20ma/ModbusMaster",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/4-20ma/ModbusMaster-2.0.1.zip",
      "archiveFileName": "ModbusMaster-2.0.1.zip",
      "size": 267372,
      "checksum": "SHA-256:d5ab141c722cd93dbc1975f9df00bb2f2562bdfc96ced1aaa0691f7919f8373a"
    },
    {
      "name": "Akafugu TWIKeyboard Library",
      "version": "1.0.0",
      "author": "Akafugu",
      "maintainer": "Akafugu \u003cinfo@akafugu.jp\u003e",
      "sentence": "Akafugu TWIKeyboard Library",
      "paragraph": "Akafugu TWIKeyboard Library",
      "website": "https://github.com/akafugu/TWIKeyboardLibrary",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/akafugu/Akafugu_TWIKeyboard_Library-1.0.0.zip",
      "archiveFileName": "Akafugu_TWIKeyboard_Library-1.0.0.zip",
      "size": 8591,
      "checksum": "SHA-256:cc8b987a96312ca3e6f70bacdeb11ac4b0c02f0e2a6f1204c069be054f092bb2"
    },
    {
      "name": "Akafugu TWIKeyboard Library",
      "version": "1.0.1",
      "author": "Akafugu",
      "maintainer": "Akafugu \u003cinfo@akafugu.jp\u003e",
      "sentence": "Akafugu TWIKeyboard Library",
      "paragraph": "Akafugu TWIKeyboard Library",
      "website": "https://github.com/akafugu/TWIKeyboardLibrary",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/akafugu/Akafugu_TWIKeyboard_Library-1.0.1.zip",
      "archiveFileName": "Akafugu_TWIKeyboard_Library-1.0.1.zip",
      "size": 8585,
      "checksum": "SHA-256:c346e5d4bc1a0024827246e5507cce12de6f804afdb9494e9cd145374f787c1f"
    },
    {
      "name": "Akafugu TWILiquidCrystal Library",
      "version": "1.0.0",
      "author": "Akafugu",
      "maintainer": "Akafugu \u003cinfo@akafugu.jp\u003e",
      "sentence": "Akafugu TWILiquidCrystal Library",
      "paragraph": "Akafugu TWILiquidCrystal Library",
      "website": "https://github.com/akafugu/TWILiquidCrystalLibrary",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/akafugu/Akafugu_TWILiquidCrystal_Library-1.0.0.zip",
      "archiveFileName": "Akafugu_TWILiquidCrystal_Library-1.0.0.zip",
      "size": 21860,
      "checksum": "SHA-256:2e79abab98069c1b0292cc4d3db47b0ed31ad2811c44c8a784fb4c0be7b214a7"
    },
    {
      "name": "Akafugu TWILiquidCrystal Library",
      "version": "1.0.1",
      "author": "Akafugu",
      "maintainer": "Akafugu \u003cinfo@akafugu.jp\u003e",
      "sentence": "Akafugu TWILiquidCrystal Library",
      "paragraph": "Akafugu TWILiquidCrystal Library",
      "website": "https://github.com/akafugu/TWILiquidCrystalLibrary",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/akafugu/Akafugu_TWILiquidCrystal_Library-1.0.1.zip",
      "archiveFileName": "Akafugu_TWILiquidCrystal_Library-1.0.1.zip",
      "size": 21854,
      "checksum": "SHA-256:6949a7ca16ba87c5876ce1de5c1c59449cb8fc323d55486b00958390189b0995"
    },
    {
      "name": "Akafugu TWILiquidCrystal Library",
      "version": "1.0.2",
      "author": "Akafugu",
      "maintainer": "Akafugu \u003cinfo@akafugu.jp\u003e",
      "sentence": "Akafugu TWILiquidCrystal Library",
      "paragraph": "Akafugu TWILiquidCrystal Library",
      "website": "https://github.com/akafugu/TWILiquidCrystalLibrary",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/akafugu/Akafugu_TWILiquidCrystal_Library-1.0.2.zip",
      "archiveFileName": "Akafugu_TWILiquidCrystal_Library-1.0.2.zip",
      "size": 21861,
      "checksum": "SHA-256:03f5e4dffb3a8c0720bd7c7c1faadb7e85d2b7b543104e0d5e5527398af2933e"
    },
    {
      "name": "Akafugu WireRtc Library",
      "version": "1.0.0",
      "author": "Akafugu",
      "maintainer": "Akafugu \u003cinfo@akafugu.jp\u003e",
      "sentence": "Akafugu WireRtc Library",
      "paragraph": "Akafugu WireRtc Library",
      "website": "https://github.com/akafugu/WireRtcLibrary",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/akafugu/Akafugu_WireRtc_Library-1.0.0.zip",
      "archiveFileName": "Akafugu_WireRtc_Library-1.0.0.zip",
      "size": 11386,
      "checksum": "SHA-256:b20a5e4454c94e486c00c5c62631fc71383f702bd865f561258c1069231722e0"
    },
    {
      "name": "Akafugu WireRtc Library",
      "version": "1.0.1",
      "author": "Akafugu",
      "maintainer": "Akafugu \u003cinfo@akafugu.jp\u003e",
      "sentence": "Akafugu WireRtc Library",
      "paragraph": "Akafugu WireRtc Library",
      "website": "https://github.com/akafugu/WireRtcLibrary",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/akafugu/Akafugu_WireRtc_Library-1.0.1.zip",
      "archiveFileName": "Akafugu_WireRtc_Library-1.0.1.zip",
      "size": 11380,
      "checksum": "SHA-256:b7df090a351b05556495a2d12a5a2361a75d16023fa8a27a8e4c9a97445ae405"
    },
    {
      "name": "HttpClient",
      "version": "2.2.0",
      "author": "Adrian McEwen \u003cadrianm@mcqn.com\u003e",
      "maintainer": "Adrian McEwen \u003cadrianm@mcqn.com\u003e",
      "sentence": "Library to easily make HTTP GET, POST and PUT requests to a web server.",
      "paragraph": "Works with any class derived from Client - so switching between Ethernet, WiFi and GSMClient requires minimal code changes.",
      "website": "http://github.com/amcewen/HttpClient",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/amcewen/HttpClient-2.2.0.zip",
      "archiveFileName": "HttpClient-2.2.0.zip",
      "size": 12750,
      "checksum": "SHA-256:6af26786d3ec4bea57491577aa66e8172a6b7ec08188f1a4f47b69cd94b3be1d"
    },
    {
      "name": "Tsunami",
      "version": "1.0.0",
      "author": "Nick Johnson \u003cnick@arachnidlabs.com\u003e",
      "maintainer": "Nick Johnson \u003cnick@arachnidlabs.com\u003e",
      "sentence": "Library for interfacing with the Tsunami's hardware peripherals.",
      "paragraph": "Provides an easy to use API for programming the Tsunami.",
      "website": "https://github.com/arachnidlabs/tsunami-arduino",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arachnidlabs/Tsunami-1.0.0.zip",
      "archiveFileName": "Tsunami-1.0.0.zip",
      "size": 18023,
      "checksum": "SHA-256:6f9ec1044df23c39125af3fd0cb86c18683fa2709f3a4070fac820ca8496d740"
    },
    {
      "name": "TVout",
      "version": "1.0.0",
      "author": "mdmetzle@gmail.com",
      "maintainer": "Avamander \u003cavamander@gmail.com\u003e",
      "sentence": "A library for generating PAL or NTSC video output with an AVR.",
      "paragraph": "Supports PAL and NTSC with the max resolution of 128 times 96 pixels.",
      "website": "https://github.com/Avamander/arduino-tvout/",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Avamander/TVout-1.0.0.zip",
      "archiveFileName": "TVout-1.0.0.zip",
      "size": 61262,
      "checksum": "SHA-256:87529377524de16bad7c262d84cbf742c81f4812f02eacdd43fcea980160e5c1"
    },
    {
      "name": "TVout",
      "version": "1.0.1",
      "author": "mdmetzle@gmail.com",
      "maintainer": "Avamander \u003cavamander@gmail.com\u003e",
      "sentence": "A library for generating PAL or NTSC video output with an AVR.",
      "paragraph": "Supports PAL and NTSC with the max resolution of 128 times 96 pixels.",
      "website": "https://github.com/Avamander/arduino-tvout/",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Avamander/TVout-1.0.1.zip",
      "archiveFileName": "TVout-1.0.1.zip",
      "size": 62465,
      "checksum": "SHA-256:d8c5e9e4a7451c2b571b397e0ac2ba67d9f9030f2d3a59abaf2cd0ce262168e4"
    },
    {
      "name": "Awesome",
      "version": "0.1.0",
      "author": "Chris Palmer \u003cchris@awesomeshield.com\u003e",
      "maintainer": "Chris Palmer \u003cchris@awesomeshield.com\u003e",
      "sentence": "The library that supports the Awesome Shield PCB.",
      "paragraph": "An integral part of the Awesome Shield learning ecosystem. Learn more at AwesomeShield dot com.",
      "website": "https://github.com/awesomeshield/Awesome-Shield-Library",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/awesomeshield/Awesome-0.1.0.zip",
      "archiveFileName": "Awesome-0.1.0.zip",
      "size": 9841,
      "checksum": "SHA-256:8a8fa0bc5069551285432a82fcd7bc550c6afad06cfdc9ce519a175172be0991"
    },
    {
      "name": "Awesome",
      "version": "0.2.0",
      "author": "Chris Palmer \u003cchris@awesomeshield.com\u003e",
      "maintainer": "Chris Palmer \u003cchris@awesomeshield.com\u003e",
      "sentence": "The library that supports the Awesome Shield PCB.",
      "paragraph": "An integral part of the Awesome Shield learning ecosystem. Learn more at AwesomeShield.com",
      "website": "https://github.com/awesomeshield/Awesome-Shield-Library",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/awesomeshield/Awesome-0.2.0.zip",
      "archiveFileName": "Awesome-0.2.0.zip",
      "size": 49571,
      "checksum": "SHA-256:3dd640331c7192b48230836d93342f50e497ee116d5cd7c50627474d943b3529"
    },
    {
      "name": "Awesome",
      "version": "1.0.0",
      "author": "Awesome Shield UG \u003cadmin@awesomeshield.com\u003e",
      "maintainer": "Chris Palmer \u003cchris@awesomeshield.com\u003e",
      "sentence": "The library that supports the Awesome Shield PCB.",
      "paragraph": "An integral part of the Awesome Shield learning ecosystem. Learn more at AwesomeShield.com",
      "website": "https://github.com/awesomeshield/Awesome-Shield-Library",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/awesomeshield/Awesome-1.0.0.zip",
      "archiveFileName": "Awesome-1.0.0.zip",
      "size": 49246,
      "checksum": "SHA-256:875fb072a49c8b6964086a7a4d00b641629d19677c5660e37b1dce29f64aedd3"
    },
    {
      "name": "Awesome",
      "version": "1.0.1",
      "author": "Awesome Shield UG \u003cadmin@awesomeshield.com\u003e",
      "maintainer": "Chris Palmer \u003cchris@awesomeshield.com\u003e",
      "sentence": "The library that supports the Awesome Shield PCB.",
      "paragraph": "An integral part of the Awesome Shield learning ecosystem. Learn more at AwesomeShield.com",
      "website": "https://github.com/awesomeshield/Awesome-Shield-Library",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/awesomeshield/Awesome-1.0.1.zip",
      "archiveFileName": "Awesome-1.0.1.zip",
      "size": 49275,
      "checksum": "SHA-256:a75110f8dd2c95f2c35bffbf66123f431ace6b385987d7d019efeb1d5102fa2f"
    },
    {
      "name": "Awesome",
      "version": "1.1.0",
      "author": "Awesome Shield UG \u003cadmin@awesomeshield.com\u003e",
      "maintainer": "Chris Palmer \u003cchris@awesomeshield.com\u003e",
      "sentence": "The library that supports the Awesome Shield PCB.",
      "paragraph": "An integral part of the Awesome Shield learning ecosystem. Learn more at AwesomeShield.com",
      "website": "https://github.com/awesomeshield/Awesome-Shield-Library",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/awesomeshield/Awesome-1.1.0.zip",
      "archiveFileName": "Awesome-1.1.0.zip",
      "size": 49437,
      "checksum": "SHA-256:c647492e779cce59aef64bc06530687e416e4e40f052d938dedaa93f70de8bdd"
    },
    {
      "name": "ALA",
      "version": "2.0.0",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino Light Animation (ALA) is a library",
      "paragraph": "Arduino Light Animation (ALA) is a library for Arduino boards to simplify the development of light animations using LEDs and LED strips.",
      "website": "https://github.com/bportaluri/ALA",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bportaluri/ALA-2.0.0.zip",
      "archiveFileName": "ALA-2.0.0.zip",
      "size": 922824,
      "checksum": "SHA-256:fbefb4fcf0ef542a35046ef23a2182501e3ac771e8903b257579ab3c41a6120a"
    },
    {
      "name": "ALA",
      "version": "2.1.0",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino Light Animation (ALA) is a library",
      "paragraph": "Arduino Light Animation (ALA) is a library for Arduino boards to simplify the development of light animations using LEDs and LED strips.",
      "website": "https://github.com/bportaluri/ALA",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bportaluri/ALA-2.1.0.zip",
      "archiveFileName": "ALA-2.1.0.zip",
      "size": 923309,
      "checksum": "SHA-256:f8fd06f81300dadd94931fbbb4551c5a3db6ce9c54681473a36e524bca4f7ae6"
    },
    {
      "name": "ALA",
      "version": "2.2.0",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino Light Animation (ALA) is a library",
      "paragraph": "Arduino Light Animation (ALA) is a library for Arduino boards to simplify the development of light animations using LEDs and LED strips.",
      "website": "https://github.com/bportaluri/ALA",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bportaluri/ALA-2.2.0.zip",
      "archiveFileName": "ALA-2.2.0.zip",
      "size": 923309,
      "checksum": "SHA-256:de5589d6a94646afd7e921a2748816858dae85761dc47a4aa127fb1791ee7430"
    },
    {
      "name": "ALA",
      "version": "2.3.0",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino Light Animation (ALA) is a library",
      "paragraph": "Arduino Light Animation (ALA) is a library for Arduino boards to simplify the development of light animations using LEDs and LED strips.",
      "website": "https://github.com/bportaluri/ALA",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bportaluri/ALA-2.3.0.zip",
      "archiveFileName": "ALA-2.3.0.zip",
      "size": 924392,
      "checksum": "SHA-256:6eb6086e32fb927d058d7c04b8a8a5c096e57a6847e020677e9d259ff50c3d48"
    },
    {
      "name": "PID",
      "version": "1.1.1",
      "author": "Brett Beauregard",
      "maintainer": "Brett Beauregard",
      "sentence": "PID controller",
      "paragraph": "A PID controller seeks to keep some input variable close to a desired setpoint by adjusting an output. The way in which it does this can be 'tuned' by adjusting three parameters (P,I,D).",
      "website": "http://playground.arduino.cc/Code/PIDLibrary",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/br3ttb/PID-1.1.1.zip",
      "archiveFileName": "PID-1.1.1.zip",
      "size": 7938,
      "checksum": "SHA-256:eab4baedf717081c55f4510d8405253aa0a12a80ac549618fce06dc09ae62242"
    },
    {
      "name": "PCD8544",
      "version": "1.4.2",
      "author": "Carlos Rodrigues",
      "maintainer": "Carlos Rodrigues \u003ccefrodrigues@gmail.com\u003e",
      "sentence": "Philips PCD8544 or compatible LCD library.",
      "paragraph": "PCD8544 supports monochrome LCDs most commonly found on old Nokia phones. This is a minimal library intended for low memory usage.",
      "website": "https://github.com/carlosefr/pcd8544",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/carlosefr/PCD8544-1.4.2.zip",
      "archiveFileName": "PCD8544-1.4.2.zip",
      "size": 12858,
      "checksum": "SHA-256:725d487e40a876e0e35b62a88c54c8a91a64bb99a44b4cd4e69af3a266fc8818"
    },
    {
      "name": "PCD8544",
      "version": "1.4.3",
      "author": "Carlos Rodrigues",
      "maintainer": "Carlos Rodrigues \u003ccefrodrigues@gmail.com\u003e",
      "sentence": "Philips PCD8544 or compatible LCD library.",
      "paragraph": "PCD8544 supports monochrome LCDs most commonly found on old Nokia phones. This is a minimal library intended for low memory usage.",
      "website": "https://github.com/carlosefr/pcd8544",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/carlosefr/PCD8544-1.4.3.zip",
      "archiveFileName": "PCD8544-1.4.3.zip",
      "size": 13306,
      "checksum": "SHA-256:2e6bbd0a06ec6c390face16ad100200031a6939d71f75e3fa423ecb0d92381b6"
    },
    {
      "name": "MagStripe",
      "version": "1.8.2",
      "author": "Carlos Rodrigues",
      "maintainer": "Carlos Rodrigues \u003ccefrodrigues@gmail.com\u003e",
      "sentence": "Decode data from TTL (raw) magnetic card readers.",
      "paragraph": "MagStripe supports decoding any of the three tracks from standard magnetic stripe cards using a TTL (raw) card reader.",
      "website": "https://github.com/carlosefr/magstripelib",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/carlosefr/MagStripe-1.8.2.zip",
      "archiveFileName": "MagStripe-1.8.2.zip",
      "size": 8701,
      "checksum": "SHA-256:9188df6a2cc6b68a47c42fa9620830ab70cadb59f621fc7bc3a11d9e394309f0"
    },
    {
      "name": "ArduinoJson",
      "version": "4.0.0",
      "author": "Benoit Blanchon \u003chttp://blog.benoitblanchon.fr/\u003e",
      "maintainer": "Benoit Blanchon \u003chttp://blog.benoitblanchon.fr/\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino",
      "paragraph": "Supports JSON parsing and formatting. Uses fixed memory allocation.",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-4.0.0.zip",
      "archiveFileName": "ArduinoJson-4.0.0.zip",
      "size": 1295806,
      "checksum": "SHA-256:67fd50c12b19e8f1f7d0c6f01cac56a70157aa38b34440230c044523caf70a5f"
    },
    {
      "name": "ArduinoJson",
      "version": "5.0.0",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.0.0.zip",
      "archiveFileName": "ArduinoJson-5.0.0.zip",
      "size": 1301519,
      "checksum": "SHA-256:d030f48ae7b54a7f88d4fff374734671dbaa464b8970909afbd416aeea022930"
    },
    {
      "name": "ArduinoJson",
      "version": "5.0.1",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.0.1.zip",
      "archiveFileName": "ArduinoJson-5.0.1.zip",
      "size": 1310564,
      "checksum": "SHA-256:637e0c2b226bdf5e1a7208c54fb563e2821499cb235bf9ede41f1984c49cea3a"
    },
    {
      "name": "ArduinoJson",
      "version": "5.0.2",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.0.2.zip",
      "archiveFileName": "ArduinoJson-5.0.2.zip",
      "size": 1311480,
      "checksum": "SHA-256:66a896da5339988a9c35cdda45d0946ee0784ecabf04673e2db033dd2e1ab98d"
    },
    {
      "name": "ArduinoJson",
      "version": "5.0.3",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.0.3.zip",
      "archiveFileName": "ArduinoJson-5.0.3.zip",
      "size": 1312597,
      "checksum": "SHA-256:f644cf9dec8e8e539e01146a5fd1df0102533f00a8b08a1a00183f016c281aa0"
    },
    {
      "name": "ArduinoJson",
      "version": "5.0.4",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.0.4.zip",
      "archiveFileName": "ArduinoJson-5.0.4.zip",
      "size": 1317920,
      "checksum": "SHA-256:8d98826527137388350a34894faf36ef4bc6bc69ad911a33cf9722233d22d4fd"
    },
    {
      "name": "ArduinoJson",
      "version": "5.0.5",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.0.5.zip",
      "archiveFileName": "ArduinoJson-5.0.5.zip",
      "size": 1319154,
      "checksum": "SHA-256:71cbe0ee5ec9335f8c2144cedd4320978047beca643c27ab08bcae3ee1be700c"
    },
    {
      "name": "ArduinoJson",
      "version": "5.0.6",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.0.6.zip",
      "archiveFileName": "ArduinoJson-5.0.6.zip",
      "size": 1319360,
      "checksum": "SHA-256:b5ae99523808096d2ddbf5fba705c5a253454969e8631b66c972466883cbface"
    },
    {
      "name": "ArduinoJson",
      "version": "5.0.7",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.0.7.zip",
      "archiveFileName": "ArduinoJson-5.0.7.zip",
      "size": 1318908,
      "checksum": "SHA-256:1355d58c23bfd9386d931bce33be6fc406fd9824de66fdf91d05c39849a0caaf"
    },
    {
      "name": "ArduinoJson",
      "version": "5.0.8",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.0.8.zip",
      "archiveFileName": "ArduinoJson-5.0.8.zip",
      "size": 1325447,
      "checksum": "SHA-256:1fd3742028ebf41408c9d35ee527f5ed842ca77e8c616cf570f5eb51fcc36636"
    },
    {
      "name": "ArduinoJson",
      "version": "5.1.0",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.1.0.zip",
      "archiveFileName": "ArduinoJson-5.1.0.zip",
      "size": 1331106,
      "checksum": "SHA-256:5c5b35a29f0c83e1f5b30d105fd6184a724855105b892c86c99986cb56ffc89d"
    },
    {
      "name": "ArduinoJson",
      "version": "5.1.0-beta.1",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.1.0-beta.1.zip",
      "archiveFileName": "ArduinoJson-5.1.0-beta.1.zip",
      "size": 1335057,
      "checksum": "SHA-256:de02e8a739b0b97b430f28dac51d675cc5796bf503446b9711f2a20c285a7eec"
    },
    {
      "name": "ArduinoJson",
      "version": "5.1.0-beta.2",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.1.0-beta.2.zip",
      "archiveFileName": "ArduinoJson-5.1.0-beta.2.zip",
      "size": 1335021,
      "checksum": "SHA-256:2aba3015fc64f73f50cff3a4f31100037bea5a807ed0ae7d2ff79b028e7e6633"
    },
    {
      "name": "ArduinoJson",
      "version": "5.1.1",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.1.1.zip",
      "archiveFileName": "ArduinoJson-5.1.1.zip",
      "size": 1331401,
      "checksum": "SHA-256:bf5ddf15cd1126d7911356a38813c18b5989336ad19e98a8ac38ca00d397a6b1"
    },
    {
      "name": "ArduinoJson",
      "version": "5.2.0",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.2.0.zip",
      "archiveFileName": "ArduinoJson-5.2.0.zip",
      "size": 1335649,
      "checksum": "SHA-256:f77b7791ba6fa5fd2b73bbb981d3c00e07e0033baad11b282e4ebddff2637025"
    },
    {
      "name": "ArduinoJson",
      "version": "5.3.0",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.3.0.zip",
      "archiveFileName": "ArduinoJson-5.3.0.zip",
      "size": 1339538,
      "checksum": "SHA-256:223de6735cb24f8b6923c0b70c5d1fd75475eec53d64d2d22e35ea0d78fb30c2"
    },
    {
      "name": "ArduinoJson",
      "version": "5.4.0",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.4.0.zip",
      "archiveFileName": "ArduinoJson-5.4.0.zip",
      "size": 1339602,
      "checksum": "SHA-256:f0910939f7a5b2015fc988ee6e5ac25ba72a0ad478bf6464cccfc9d38753beea"
    },
    {
      "name": "ArduinoJson",
      "version": "5.5.0",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.5.0.zip",
      "archiveFileName": "ArduinoJson-5.5.0.zip",
      "size": 1340285,
      "checksum": "SHA-256:868a31501968420ac3cfbc2f9e6e602db656634f3b238bb72d460cd648177dcd"
    },
    {
      "name": "ArduinoJson",
      "version": "5.5.1",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.5.1.zip",
      "archiveFileName": "ArduinoJson-5.5.1.zip",
      "size": 1340693,
      "checksum": "SHA-256:7124a19f56ecf3d9ed85cab8f4245dd8e50525cc88e82052084589e47a2933f1"
    },
    {
      "name": "ArduinoJson",
      "version": "5.6.0",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.6.0.zip",
      "archiveFileName": "ArduinoJson-5.6.0.zip",
      "size": 1336136,
      "checksum": "SHA-256:b12c389d8d145fc06ac9c9ce9517e4edc6679d26e3ce6b43c4a06c5adc037892"
    },
    {
      "name": "ArduinoJson",
      "version": "5.6.1",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.6.1.zip",
      "archiveFileName": "ArduinoJson-5.6.1.zip",
      "size": 1335438,
      "checksum": "SHA-256:20b8e6e56854b3711c554ad1d4862ec87dbc8dbeaf8971b15c405ec66fbea9e0"
    },
    {
      "name": "ArduinoJson",
      "version": "5.6.2",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.6.2.zip",
      "archiveFileName": "ArduinoJson-5.6.2.zip",
      "size": 1334820,
      "checksum": "SHA-256:e2e4ef1bc38019f196faa15a7ae6721ea73494cdb10292fa79e1cc56eded7464"
    },
    {
      "name": "ArduinoJson",
      "version": "5.6.3",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.6.3.zip",
      "archiveFileName": "ArduinoJson-5.6.3.zip",
      "size": 1336059,
      "checksum": "SHA-256:e9ce695bfbe0979a09baa4a607c8c29dd98cec50026a92a22ed7d3f83649ab2e"
    },
    {
      "name": "ArduinoJson",
      "version": "5.6.4",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.6.4.zip",
      "archiveFileName": "ArduinoJson-5.6.4.zip",
      "size": 1337162,
      "checksum": "SHA-256:ebee0bba68576cb27f107741b250270e44864dca3f49d34ed5079e9c4d2ecfec"
    },
    {
      "name": "ArduinoJson",
      "version": "5.6.5",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.6.5.zip",
      "archiveFileName": "ArduinoJson-5.6.5.zip",
      "size": 1337286,
      "checksum": "SHA-256:b68c254849e89c27cd1d5022f25dcb8d17f8b8ccce0eb90786c20d1b578eba5d"
    },
    {
      "name": "ArduinoJson",
      "version": "5.6.6",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.6.6.zip",
      "archiveFileName": "ArduinoJson-5.6.6.zip",
      "size": 1339380,
      "checksum": "SHA-256:f97722bbdc8f0a199a6be6e2d7dbb61d5d57908e33bb60320626d8ca610103be"
    },
    {
      "name": "ArduinoJson",
      "version": "5.6.7",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.6.7.zip",
      "archiveFileName": "ArduinoJson-5.6.7.zip",
      "size": 1340905,
      "checksum": "SHA-256:a2cf773fb38d72bbbfd3ccbe20a121d8e299e723aaa24b5748ceece6b1176a8b"
    },
    {
      "name": "ArduinoJson",
      "version": "5.7.0",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.7.0.zip",
      "archiveFileName": "ArduinoJson-5.7.0.zip",
      "size": 1343499,
      "checksum": "SHA-256:ef38cfef2696f5ee52c2e7613abf48f14beb4ea56cb49d869181b808f5f2aa4f"
    },
    {
      "name": "ArduinoJson",
      "version": "5.7.1",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.7.1.zip",
      "archiveFileName": "ArduinoJson-5.7.1.zip",
      "size": 1344672,
      "checksum": "SHA-256:a8a160046e7e3a21c963a234f0ec1e86b66e2b69c7dd0a1a90678f95ada90df1"
    },
    {
      "name": "ArduinoJson",
      "version": "5.7.2",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.7.2.zip",
      "archiveFileName": "ArduinoJson-5.7.2.zip",
      "size": 1343268,
      "checksum": "SHA-256:655f538a5c28cfcbf412aaa521f175b5413d7fa0e474f81372f15dacd9e016cf"
    },
    {
      "name": "ArduinoJson",
      "version": "5.7.3",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.7.3.zip",
      "archiveFileName": "ArduinoJson-5.7.3.zip",
      "size": 1343590,
      "checksum": "SHA-256:409b623b02355eed7d6c2efc87e5c3607ab238b524bedb974a3853030cee74ac"
    },
    {
      "name": "ArduinoJson",
      "version": "5.8.0",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.8.0.zip",
      "archiveFileName": "ArduinoJson-5.8.0.zip",
      "size": 1353600,
      "checksum": "SHA-256:06e16b9924976d525edf555fd6e1a920b297329ecf406543f72398cfbe6944c2"
    },
    {
      "name": "ArduinoJson",
      "version": "5.8.1",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.8.1.zip",
      "archiveFileName": "ArduinoJson-5.8.1.zip",
      "size": 1360780,
      "checksum": "SHA-256:c11262a251250700aff262b23219fc10bbc16fe55f222534e169faf4a62ffc44"
    },
    {
      "name": "ArduinoJson",
      "version": "5.8.2",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.8.2.zip",
      "archiveFileName": "ArduinoJson-5.8.2.zip",
      "size": 1363519,
      "checksum": "SHA-256:915fbb6b44ddbefccd8dab0899b46dd70e37905afb6df28ed853236b04b1e085"
    },
    {
      "name": "ArduinoJson",
      "version": "5.8.3",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.8.3.zip",
      "archiveFileName": "ArduinoJson-5.8.3.zip",
      "size": 1365148,
      "checksum": "SHA-256:0bf3c34f670ab5706aa0f2db7ca3acbfe35288bd033c2cfedfa2a99c59e81af2"
    },
    {
      "name": "ArduinoJson",
      "version": "5.8.4",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://bblanchon.github.io/ArduinoJson/",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.8.4.zip",
      "archiveFileName": "ArduinoJson-5.8.4.zip",
      "size": 1373757,
      "checksum": "SHA-256:87feddcee60f5111bb8e0d30e90e81b0ac4f23a2805e697b54a6f68f991b295f"
    },
    {
      "name": "ArduinoJson",
      "version": "5.9.0",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://bblanchon.github.io/ArduinoJson/",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bblanchon/ArduinoJson-5.9.0.zip",
      "archiveFileName": "ArduinoJson-5.9.0.zip",
      "size": 227775,
      "checksum": "SHA-256:4be77d4ac2103ca502d902dd8de36e4403a7b5634bb1c7cff62956b377b72f32"
    },
    {
      "name": "BitBool",
      "version": "1.1.1",
      "author": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "Easily control bit sets, just like an array!",
      "paragraph": "This library provides an efficient and easy to use method for dealing with individual bits. The library is in fact a drop-in replacement for a bool or boolean array. However it has many more possibilities and is perfect for use on embedded systems. The main feature of this library is the fact it allows bits to be read and written using a simple array subscript notation.",
      "website": "https://arduino.land/Code/BitBool/",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Chris--A/BitBool-1.1.1.zip",
      "archiveFileName": "BitBool-1.1.1.zip",
      "size": 3172,
      "checksum": "SHA-256:d09a70b765c6e14fd781c9c0e2a7494e751930f0f5f0edf0efbaf8f0ea0e6cd4"
    },
    {
      "name": "BitBool",
      "version": "1.1.2",
      "author": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "Easily control bit sets, just like an array!",
      "paragraph": "This library provides an efficient and easy to use method for dealing with individual bits. The library is in fact a drop-in replacement for a bool or boolean array. However it has many more possibilities and is perfect for use on embedded systems. The main feature of this library is the fact it allows bits to be read and written using a simple array subscript notation.",
      "website": "https://arduino.land/Code/BitBool/",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Chris--A/BitBool-1.1.2.zip",
      "archiveFileName": "BitBool-1.1.2.zip",
      "size": 3213,
      "checksum": "SHA-256:61844e5f1e9004d37d97fdb516eeaf3257547674080b57375059e17faa362a99"
    },
    {
      "name": "BitBool",
      "version": "1.1.3",
      "author": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "Easily control bit sets, just like an array!",
      "paragraph": "This library provides an efficient and easy to use method for dealing with individual bits. The library is in fact a drop-in replacement for a bool or boolean array. However it has many more possibilities and is perfect for use on embedded systems. The main feature of this library is the fact it allows bits to be read and written using a simple array subscript notation.",
      "website": "https://arduino.land/Code/BitBool/",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Chris--A/BitBool-1.1.3.zip",
      "archiveFileName": "BitBool-1.1.3.zip",
      "size": 4310,
      "checksum": "SHA-256:808cfa76a5b0494f4740c9bdfa5630f99cb19c1b16f736c828797c13a450184c"
    },
    {
      "name": "BitBool",
      "version": "1.2.0",
      "author": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "The ultimate bit manipulation tool.",
      "paragraph": "This library provides an efficient and easy to use method for dealing with individual bits. The library is in fact a drop-in replacement for a bool or boolean array. However it has many more possibilities and is perfect for use on embedded systems. The main feature of this library is the fact it allows bits to be read and written using a simple array subscript notation.",
      "website": "https://arduino.land/Code/BitBool/",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Chris--A/BitBool-1.2.0.zip",
      "archiveFileName": "BitBool-1.2.0.zip",
      "size": 5410,
      "checksum": "SHA-256:fc314b7fbe607f813f893cbb5f1100e58ee1e3939c9456ba3cbc939b0f3ff15b"
    },
    {
      "name": "Keypad",
      "version": "3.1.0",
      "author": "Mark Stanley, Alexander Brevig",
      "maintainer": "Community https://github.com/Chris--A/Keypad",
      "sentence": "Keypad is a library for using matrix style keypads with the Arduino.",
      "paragraph": "As of version 3.0 it now supports mulitple keypresses. This library is based upon the Keypad Tutorial. It was created to promote Hardware Abstraction. It improves readability of the code by hiding the pinMode and digitalRead calls for the user.",
      "website": "http://playground.arduino.cc/Code/Keypad",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Chris--A/Keypad-3.1.0.zip",
      "archiveFileName": "Keypad-3.1.0.zip",
      "size": 30105,
      "checksum": "SHA-256:8290784c0cdff757e53793dbc550ea1ac45502dcae880317859eba6cfd507f6b"
    },
    {
      "name": "Keypad",
      "version": "3.1.1",
      "author": "Mark Stanley, Alexander Brevig",
      "maintainer": "Community https://github.com/Chris--A/Keypad",
      "sentence": "Keypad is a library for using matrix style keypads with the Arduino.",
      "paragraph": "As of version 3.0 it now supports mulitple keypresses. This library is based upon the Keypad Tutorial. It was created to promote Hardware Abstraction. It improves readability of the code by hiding the pinMode and digitalRead calls for the user.",
      "website": "http://playground.arduino.cc/Code/Keypad",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Chris--A/Keypad-3.1.1.zip",
      "archiveFileName": "Keypad-3.1.1.zip",
      "size": 30111,
      "checksum": "SHA-256:cecdef05a4a3a68830724dda093761f19cd7897e8f38bb0716fc8917f46baa36"
    },
    {
      "name": "PrintEx",
      "version": "1.1.10",
      "author": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "A printing \u0026 formatting enhancement for Stream \u0026 Print based libraries.",
      "paragraph": "Enhance your projects with an Arduino tailored set of functionality. Includes streaming (in/out), printf with floating point support, repitition and EEPROM/PROGMEM access.",
      "website": "https://github.com/Chris--A/PrintEx#printex-library-for-arduino-",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Chris--A/PrintEx-1.1.10.zip",
      "archiveFileName": "PrintEx-1.1.10.zip",
      "size": 31617,
      "checksum": "SHA-256:4475a21b735926ac8219f5b1da620d8f8065ef52770590cfda56dead3517bb86"
    },
    {
      "name": "PrintEx",
      "version": "1.1.6",
      "author": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "A printing \u0026 formatting enhancement for Stream \u0026 Print based libraries.",
      "paragraph": "Enhance your projects with an Arduino tailored set of functionality. Includes streaming (in/out), printf with floating point support, repitition and EEPROM/PROGMEM access.",
      "website": "https://github.com/Chris--A/PrintEx#printex-library-for-arduino-",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Chris--A/PrintEx-1.1.6.zip",
      "archiveFileName": "PrintEx-1.1.6.zip",
      "size": 29015,
      "checksum": "SHA-256:1bb8906c871ddcfe9bffabfef615c6fd27e584da61a7d20273fe28c612471610"
    },
    {
      "name": "PrintEx",
      "version": "1.1.8",
      "author": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "A printing \u0026 formatting enhancement for Stream \u0026 Print based libraries.",
      "paragraph": "Enhance your projects with an Arduino tailored set of functionality. Includes streaming (in/out), printf with floating point support, repitition and EEPROM/PROGMEM access.",
      "website": "https://github.com/Chris--A/PrintEx#printex-library-for-arduino-",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Chris--A/PrintEx-1.1.8.zip",
      "archiveFileName": "PrintEx-1.1.8.zip",
      "size": 30299,
      "checksum": "SHA-256:02b7c213f68be474526af3f5a3ac6b4764c2ea75e04f97a6434ac23606e51008"
    },
    {
      "name": "PrintEx",
      "version": "1.1.9",
      "author": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "A printing \u0026 formatting enhancement for Stream \u0026 Print based libraries.",
      "paragraph": "Enhance your projects with an Arduino tailored set of functionality. Includes streaming (in/out), printf with floating point support, repitition and EEPROM/PROGMEM access.",
      "website": "https://github.com/Chris--A/PrintEx#printex-library-for-arduino-",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Chris--A/PrintEx-1.1.9.zip",
      "archiveFileName": "PrintEx-1.1.9.zip",
      "size": 30335,
      "checksum": "SHA-256:b467162bc70ad3b4715cb8c53124be084a6f9a5bad28a8fd77125830588181cb"
    },
    {
      "name": "PrintEx",
      "version": "1.2.0",
      "author": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "A printing \u0026 formatting enhancement for Stream \u0026 Print based libraries.",
      "paragraph": "Enhance your projects with an Arduino tailored set of functionality. Includes streaming (in/out), printf with floating point support, repitition and EEPROM/PROGMEM access.",
      "website": "https://github.com/Chris--A/PrintEx#printex-library-for-arduino-",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Chris--A/PrintEx-1.2.0.zip",
      "archiveFileName": "PrintEx-1.2.0.zip",
      "size": 53021,
      "checksum": "SHA-256:debd50c2899675acffa3ec0b3457ffdaf89fe9a0a917c094a7b882e3db14013b"
    },
    {
      "name": "BLE SDK for Arduino",
      "version": "1.0.1",
      "author": "RedBearLab",
      "maintainer": "RedBearLab \u003csupport@redbearlab.com\u003e",
      "sentence": "Nordic BLE SDK for Arduino for nRF8001 products such as the BLE Shield, Blend and Blend Micro.",
      "paragraph": "Provides a library and a lot of tutorials/examples for developing BLE application using Nordic nRF8001 BLE connectivity chip for Arduino.",
      "website": "https://github.com/cheong2k/ble-sdk-arduino",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Cheong2K/BLE_SDK_for_Arduino-1.0.1.zip",
      "archiveFileName": "BLE_SDK_for_Arduino-1.0.1.zip",
      "size": 6072471,
      "checksum": "SHA-256:2a841cd6fde01fa8eb23254a90939f6e8358f516687e66d2594996b172aac10d"
    },
    {
      "name": "SmallSetup",
      "version": "1.0.0",
      "author": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "Optimize the Arduino setup routines.",
      "paragraph": "This library reorders the way Arduino starts. Depending on your particular application, savings can be from 20 up to hundreds of bytes. Testing is encouraged as not every application may benefit, however this may allow you to squeeze in a little extra code.",
      "website": "https://arduino.land/Code/SmallSetup/",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Chris--A/SmallSetup-1.0.0.zip",
      "archiveFileName": "SmallSetup-1.0.0.zip",
      "size": 3822,
      "checksum": "SHA-256:cd108f42b49aa11351d4a0fd8b0f919371ca20f4d5d87453527b75978bf72939"
    },
    {
      "name": "StereoSID",
      "version": "2.0.3",
      "author": "Christoph Haberer,Mario Patino,Giovanni Giorgi",
      "maintainer": "Giovani Giorgi",
      "sentence": "MOS6581 Stereo SID Emulator Arduino Library",
      "paragraph": "This library emulates the SID sound chip of the famous Commodore 64 with enhanched stereo support.",
      "website": "http://gioorgi.com/tag/stereosid/",
      "category": "Uncategorized",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/daitangio/StereoSID-2.0.3.zip",
      "archiveFileName": "StereoSID-2.0.3.zip",
      "size": 14824,
      "checksum": "SHA-256:a60e4e2ca2edfab4ca5764789eced54a30568101e0c3dc80c6648577225d1caf"
    },
    {
      "name": "MP3Player",
      "version": "1.0.0",
      "author": "Cytron Technologies Sdn Bhd \u003csupport@cytron.com.my\u003e",
      "maintainer": "Cytron Technologies Sdn Bhd \u003cwww.cytron.com.my\u003e",
      "sentence": "Library for playing MP3 files",
      "paragraph": "This library works with Cytron Tech MP3 shield",
      "website": "https://github.com/CytronTechnologies/Cytron_MP3Shield",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CytronTechnologies/MP3Player-1.0.0.zip",
      "archiveFileName": "MP3Player-1.0.0.zip",
      "size": 220447,
      "checksum": "SHA-256:1fd12592d88fdb3091aebc44cfffdfc4c24297ab44bddd0700be321c05006dac"
    },
    {
      "name": "MP3Player",
      "version": "1.1.0",
      "author": "Cytron Technologies Sdn Bhd \u003csupport@cytron.com.my\u003e",
      "maintainer": "Cytron Technologies Sdn Bhd \u003cwww.cytron.com.my\u003e",
      "sentence": "Library for playing MP3 files",
      "paragraph": "This library works with Cytron Tech MP3 shield",
      "website": "https://github.com/CytronTechnologies/Cytron_MP3Shield",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CytronTechnologies/MP3Player-1.1.0.zip",
      "archiveFileName": "MP3Player-1.1.0.zip",
      "size": 215088,
      "checksum": "SHA-256:7ad8b10700e93b2ebd098c774309100239231b79193ee709e05e88af215ae3b9"
    },
    {
      "name": "Cardinal",
      "version": "1.0.0",
      "author": "DaAwesomeP",
      "maintainer": "DaAwesomeP",
      "license": "Apache-2.0",
      "sentence": "An Arduino library that takes input in degrees and output a string or integer for the 4, 8, 16, or 32 compass headings (like North, South, East, and West).",
      "paragraph": "Cardinal is an Arduino library that takes input in degrees and output a string or integer for the 4, 8, 16, or 32 compass headings (like North, South, East, and West). It also makes available environment variables for the minimum, maximum, and middle azimuth of all of the 32 directions. It works fantastically when paired with a magnetometer.",
      "website": "https://github.com/DaAwesomeP/arduino-cardinal",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DaAwesomeP/Cardinal-1.0.0.zip",
      "archiveFileName": "Cardinal-1.0.0.zip",
      "size": 12150,
      "checksum": "SHA-256:b6809e5e1d8df569835fc652e439a7982c1fe3cf72003285d9401c37ee890709"
    },
    {
      "name": "Exosite",
      "version": "2.3.11",
      "author": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "maintainer": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "sentence": "Easily interface with Exosite's simple data APIs.",
      "paragraph": "This allows you to easily read and write data to Exosite's One Platform.",
      "website": "https://github.com/exosite-garage/arduino_exosite_library/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/exosite-garage/Exosite-2.3.11.zip",
      "archiveFileName": "Exosite-2.3.11.zip",
      "size": 2446286,
      "checksum": "SHA-256:1c282711841587d6b84f5295f3243b05ebc03f0401b0e199f39889bb22e8ab65"
    },
    {
      "name": "Exosite",
      "version": "2.3.10",
      "author": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "maintainer": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "sentence": "Easily interface with Exosite's simple data APIs.",
      "paragraph": "This allows you to easily read and write data to Exosite's One Platform.",
      "website": "https://github.com/exosite-garage/arduino_exosite_library/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/exosite-garage/Exosite-2.3.10.zip",
      "archiveFileName": "Exosite-2.3.10.zip",
      "size": 2446096,
      "checksum": "SHA-256:bd4c59836dfe559189313e34aeb0bd265bb225dcc7491ff451bd710a51751eaf"
    },
    {
      "name": "Exosite",
      "version": "2.3.3",
      "author": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "maintainer": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "sentence": "Easily interface with Exosite's simple data APIs.",
      "paragraph": "This allows you to easily read and write data to Exosite's One Platform.",
      "website": "https://github.com/exosite-garage/arduino_exosite_library/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/exosite-garage/Exosite-2.3.3.zip",
      "archiveFileName": "Exosite-2.3.3.zip",
      "size": 260279,
      "checksum": "SHA-256:68498b63810277020b327947f6d58675a877a07c14648ed119652eac71a9e36a"
    },
    {
      "name": "Exosite",
      "version": "2.3.5",
      "author": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "maintainer": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "sentence": "Easily interface with Exosite's simple data APIs.",
      "paragraph": "This allows you to easily read and write data to Exosite's One Platform.",
      "website": "https://github.com/exosite-garage/arduino_exosite_library/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/exosite-garage/Exosite-2.3.5.zip",
      "archiveFileName": "Exosite-2.3.5.zip",
      "size": 404082,
      "checksum": "SHA-256:e56277553a630e3f4bf242d837b01842f18a06aca407cd14b8465df0efd6fdaf"
    },
    {
      "name": "Exosite",
      "version": "2.3.6",
      "author": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "maintainer": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "sentence": "Easily interface with Exosite's simple data APIs.",
      "paragraph": "This allows you to easily read and write data to Exosite's One Platform.",
      "website": "https://github.com/exosite-garage/arduino_exosite_library/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/exosite-garage/Exosite-2.3.6.zip",
      "archiveFileName": "Exosite-2.3.6.zip",
      "size": 404268,
      "checksum": "SHA-256:e04618c4a5b650da773be866ca11c1bea3a79aefbc0d2c05f0681c79dece1dec"
    },
    {
      "name": "Exosite",
      "version": "2.3.7",
      "author": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "maintainer": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "sentence": "Easily interface with Exosite's simple data APIs.",
      "paragraph": "This allows you to easily read and write data to Exosite's One Platform.",
      "website": "https://github.com/exosite-garage/arduino_exosite_library/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/exosite-garage/Exosite-2.3.7.zip",
      "archiveFileName": "Exosite-2.3.7.zip",
      "size": 405272,
      "checksum": "SHA-256:7d25c988c6962d0a14572ef1379787bd311cd2f042693d3e65d5a2d19eaffc4f"
    },
    {
      "name": "Exosite",
      "version": "2.3.9",
      "author": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "maintainer": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "sentence": "Easily interface with Exosite's simple data APIs.",
      "paragraph": "This allows you to easily read and write data to Exosite's One Platform.",
      "website": "https://github.com/exosite-garage/arduino_exosite_library/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/exosite-garage/Exosite-2.3.9.zip",
      "archiveFileName": "Exosite-2.3.9.zip",
      "size": 2446019,
      "checksum": "SHA-256:a71b598432edd26884db2d2de46cc683c77646e2ffee177b42ce546dfe605a64"
    },
    {
      "name": "Exosite",
      "version": "2.4.0",
      "author": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "maintainer": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "sentence": "Easily interface with Exosite's simple data APIs.",
      "paragraph": "This allows you to easily read and write data to Exosite's One Platform.",
      "website": "https://github.com/exosite-garage/arduino_exosite_library/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/exosite-garage/Exosite-2.4.0.zip",
      "archiveFileName": "Exosite-2.4.0.zip",
      "size": 2446354,
      "checksum": "SHA-256:aa005a4fe357d70d21062f12ef8bae5d2648ca3fb2bac95f405e80fe1d740d08"
    },
    {
      "name": "Exosite",
      "version": "2.5.0",
      "author": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "maintainer": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "sentence": "Easily interface with Exosite's simple data APIs.",
      "paragraph": "This allows you to easily read and write data to Exosite's One Platform.",
      "website": "https://github.com/exosite-garage/arduino_exosite_library/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/exosite-garage/Exosite-2.5.0.zip",
      "archiveFileName": "Exosite-2.5.0.zip",
      "size": 2451734,
      "checksum": "SHA-256:7182964c2baa07ec102706448ea39834d76843dd9a9448ccb65614fa7ab89e4a"
    },
    {
      "name": "Exosite",
      "version": "2.5.2",
      "author": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "maintainer": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "sentence": "Easily interface with Exosite's simple data APIs.",
      "paragraph": "This allows you to easily read and write data to Exosite's One Platform.",
      "website": "https://github.com/exosite-garage/arduino_exosite_library/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/exosite-garage/Exosite-2.5.2.zip",
      "archiveFileName": "Exosite-2.5.2.zip",
      "size": 2451769,
      "checksum": "SHA-256:f88004d0deb3ad26ddf1fb592d42321e760c4bc06b66e19df204458ac0b86dc6"
    },
    {
      "name": "Exosite",
      "version": "2.6.0",
      "author": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "maintainer": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "sentence": "Easily interface with Exosite's simple data APIs.",
      "paragraph": "This allows you to easily read and write data to Exosite's One Platform.",
      "website": "https://github.com/exosite-garage/arduino_exosite_library/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/exosite-garage/Exosite-2.6.0.zip",
      "archiveFileName": "Exosite-2.6.0.zip",
      "size": 2455192,
      "checksum": "SHA-256:ae316dea40b27e544b774e786c3c0aeec1120ad7da192f7cd4de7c47c2e270d9"
    },
    {
      "name": "Pin",
      "version": "1.0.0",
      "author": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "maintainer": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "sentence": "An easy to use Arduino library for fast digital I/O using port manipulation.",
      "paragraph": "Supports Arduino Mega, Arduino Uno, and Arduino Leonardo.",
      "website": "https://github.com/fenichelar/Pin",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/fenichelar/Pin-1.0.0.zip",
      "archiveFileName": "Pin-1.0.0.zip",
      "size": 42601,
      "checksum": "SHA-256:ac768f9c6ad06fa9a6ff84dd9827619daa132f2fa3414e49dd2f93ea17383ccb"
    },
    {
      "name": "Pin",
      "version": "2.0.0",
      "author": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "maintainer": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "sentence": "An easy to use Arduino library for fast digital I/O using port manipulation.",
      "paragraph": "Capable of simultaneous operations on multiple Pins. Supports Arduino Mega, Arduino Uno, and Arduino Leonardo.",
      "website": "https://github.com/fenichelar/Pin",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/fenichelar/Pin-2.0.0.zip",
      "archiveFileName": "Pin-2.0.0.zip",
      "size": 44453,
      "checksum": "SHA-256:0b534172ab92ceabfdc65b9335c15de94c5ba5b04901638a5a7666deac4745d0"
    },
    {
      "name": "Pin",
      "version": "2.1.0",
      "author": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "maintainer": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "sentence": "An easy to use Arduino library for fast digital I/O using port manipulation.",
      "paragraph": "Capable of simultaneous operations on multiple Pins. Supports Arduino Mega, Arduino Uno, and Arduino Leonardo.",
      "website": "https://github.com/fenichelar/Pin",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/fenichelar/Pin-2.1.0.zip",
      "archiveFileName": "Pin-2.1.0.zip",
      "size": 44711,
      "checksum": "SHA-256:8e58c7ed915e149f57002ccad7cd34ea32ec8ece3965e0826f96bb6c5e97ded9"
    },
    {
      "name": "Pin",
      "version": "2.2.0",
      "author": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "maintainer": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "sentence": "An easy to use Arduino library for fast digital I/O using port manipulation.",
      "paragraph": "Capable of simultaneous operations on multiple Pins. Supports Arduino Mega, Arduino Uno, and Arduino Leonardo.",
      "website": "https://github.com/fenichelar/Pin",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/fenichelar/Pin-2.2.0.zip",
      "archiveFileName": "Pin-2.2.0.zip",
      "size": 44899,
      "checksum": "SHA-256:75ce2e7f782b8c96db467317bf310a6ffd7f1e6ae288537afa7d9f42610f1532"
    },
    {
      "name": "Pin",
      "version": "2.2.1",
      "author": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "maintainer": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "sentence": "An easy to use Arduino library for fast digital I/O using port manipulation.",
      "paragraph": "Capable of simultaneous operations on multiple Pins. Supports Arduino Mega, Arduino Uno, and Arduino Leonardo.",
      "website": "https://github.com/fenichelar/Pin",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/fenichelar/Pin-2.2.1.zip",
      "archiveFileName": "Pin-2.2.1.zip",
      "size": 44985,
      "checksum": "SHA-256:cc26013be4772177c48cf2b511b145f76c7c24438ce63af0f42d3bf8d7bf8052"
    },
    {
      "name": "Pin",
      "version": "2.2.2",
      "author": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "maintainer": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "sentence": "An easy to use Arduino library for fast digital I/O using port manipulation.",
      "paragraph": "Capable of simultaneous operations on multiple Pins. Supports Arduino Mega, Arduino Uno, and Arduino Leonardo.",
      "website": "https://github.com/fenichelar/Pin",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/fenichelar/Pin-2.2.2.zip",
      "archiveFileName": "Pin-2.2.2.zip",
      "size": 45063,
      "checksum": "SHA-256:f48931de15a322bb79aba35b18d337b2e3c5dad591931a3a71bf05f450b8b014"
    },
    {
      "name": "Pin",
      "version": "2.2.3",
      "author": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "maintainer": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "sentence": "An easy to use Arduino library for fast digital I/O using port manipulation.",
      "paragraph": "Capable of simultaneous operations on multiple Pins. Supports Arduino Mega, Arduino Uno, and Arduino Leonardo.",
      "website": "https://pin.fenichelar.com",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/fenichelar/Pin-2.2.3.zip",
      "archiveFileName": "Pin-2.2.3.zip",
      "size": 45281,
      "checksum": "SHA-256:b89768aef1c575c56d09bbe7f15d2bc828aaa72c82ea64aa080ca3acda613aac"
    },
    {
      "name": "Pin",
      "version": "2.3.0",
      "author": "Alec Fenichel \u003calec.fenichel@gmail.com\u003e",
      "maintainer": "Alec Fenichel \u003calec.fenichel@gmail.com\u003e",
      "sentence": "An easy to use Arduino library for fast digital I/O using port manipulation.",
      "paragraph": "Capable of simultaneous operations on multiple Pins. Supports Arduino Mega, Arduino Uno, and Arduino Leonardo.",
      "website": "https://pin.fenichelar.com",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/fenichelar/Pin-2.3.0.zip",
      "archiveFileName": "Pin-2.3.0.zip",
      "size": 50207,
      "checksum": "SHA-256:62be5a498dab8e2ce1c75095b6ff7b757c19b3c9f22461c4dcf60e660dbc99ef"
    },
    {
      "name": "Pin",
      "version": "2.4.0",
      "author": "Alec Fenichel \u003calec.fenichel@gmail.com\u003e",
      "maintainer": "Alec Fenichel \u003calec.fenichel@gmail.com\u003e",
      "sentence": "An easy to use Arduino library for fast digital I/O using port manipulation.",
      "paragraph": "Capable of simultaneous operations on multiple Pins. Supports AVR architecture.",
      "website": "https://pin.fenichelar.com",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/fenichelar/Pin-2.4.0.zip",
      "archiveFileName": "Pin-2.4.0.zip",
      "size": 50319,
      "checksum": "SHA-256:e598c8c8fc36d4319e9666843bdfacbe5a7bbd842e9cbc5e1bbc5d14cb500e84"
    },
    {
      "name": "Pin",
      "version": "2.4.1",
      "author": "Alec Fenichel \u003calec.fenichel@gmail.com\u003e",
      "maintainer": "Alec Fenichel \u003calec.fenichel@gmail.com\u003e",
      "sentence": "An easy to use Arduino library for fast digital I/O using port manipulation.",
      "paragraph": "Capable of simultaneous operations on multiple Pins. Supports AVR architecture.",
      "website": "https://pin.fenichelar.com",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/fenichelar/Pin-2.4.1.zip",
      "archiveFileName": "Pin-2.4.1.zip",
      "size": 50341,
      "checksum": "SHA-256:b106a5388b4ea97970c54ba3692a0ba050a7ab6cfffb4a2dc92f728a730cd7fe"
    },
    {
      "name": "Pin",
      "version": "3.0.0",
      "author": "Alec Fenichel \u003calec.fenichel@gmail.com\u003e",
      "maintainer": "Alec Fenichel \u003calec.fenichel@gmail.com\u003e",
      "sentence": "An easy to use Arduino library for fast and simultaneous operations to Arduino I/O pins using port manipulation.",
      "paragraph": "Supports Arduino AVR boards natively and custom boards by manually defining register addresses.",
      "website": "https://pin.fenichelar.com",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/fenichelar/Pin-3.0.0.zip",
      "archiveFileName": "Pin-3.0.0.zip",
      "size": 52080,
      "checksum": "SHA-256:3cafdc319d06368e1ff6fa85baf019e912240aa17b9c4775cc573af0d69e4f13"
    },
    {
      "name": "Pin",
      "version": "3.0.1",
      "author": "Alec Fenichel \u003calec.fenichel@gmail.com\u003e",
      "maintainer": "Alec Fenichel \u003calec.fenichel@gmail.com\u003e",
      "sentence": "An easy to use Arduino library for fast and simultaneous operations to Arduino I/O pins using port manipulation.",
      "paragraph": "Supports Arduino AVR boards natively and custom boards by manually defining register addresses.",
      "website": "https://pin.fenichelar.com",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/fenichelar/Pin-3.0.1.zip",
      "archiveFileName": "Pin-3.0.1.zip",
      "size": 52131,
      "checksum": "SHA-256:d29c7533a4f5b314bc4e912e8dbc4a7223b02c2924d29cd37ed727326f4f3ed9"
    },
    {
      "name": "Pin",
      "version": "4.0.0",
      "author": "Alec Fenichel \u003calec.fenichel@gmail.com\u003e",
      "maintainer": "Alec Fenichel \u003calec.fenichel@gmail.com\u003e",
      "sentence": "An easy to use Arduino library for fast and simultaneous operations to Arduino I/O pins using port manipulation.",
      "paragraph": "Supports Arduino AVR boards natively and custom boards by manually defining register addresses.",
      "website": "https://pin.fenichelar.com",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/fenichelar/Pin-4.0.0.zip",
      "archiveFileName": "Pin-4.0.0.zip",
      "size": 45813,
      "checksum": "SHA-256:c677b2c802b94e10f8a41fdbd0b3968576f78924e296a104df80ac10346663d8"
    },
    {
      "name": "Pin",
      "version": "4.0.1",
      "author": "Alec Fenichel \u003calec.fenichel@gmail.com\u003e",
      "maintainer": "Alec Fenichel \u003calec.fenichel@gmail.com\u003e",
      "sentence": "An easy to use Arduino library for fast and simultaneous operations to Arduino I/O pins.",
      "paragraph": "Supports Arduino AVR boards natively and custom boards by manually defining register addresses.",
      "website": "https://pin.fenichelar.com",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/fenichelar/Pin-4.0.1.zip",
      "archiveFileName": "Pin-4.0.1.zip",
      "size": 45744,
      "checksum": "SHA-256:435831de166a4ef8098497ab37040d747a81fbeb17665a81ca26a4e854604393"
    },
    {
      "name": "Pin",
      "version": "4.1.0",
      "author": "Alec Fenichel \u003calec.fenichel@gmail.com\u003e",
      "maintainer": "Alec Fenichel \u003calec.fenichel@gmail.com\u003e",
      "sentence": "An easy to use Arduino library for fast and simultaneous operations on Arduino I/O pins.",
      "paragraph": "Supports Arduino AVR boards natively and custom boards by manually defining register addresses.",
      "website": "https://pin.fenichelar.com",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/fenichelar/Pin-4.1.0.zip",
      "archiveFileName": "Pin-4.1.0.zip",
      "size": 130742,
      "checksum": "SHA-256:9846c5551c0f945016ce91d098bca780f6ac3cca089e9722698da121c618f0fe"
    },
    {
      "name": "Pin",
      "version": "4.1.1",
      "author": "Alec Fenichel \u003calec.fenichel@gmail.com\u003e",
      "maintainer": "Alec Fenichel \u003calec.fenichel@gmail.com\u003e",
      "sentence": "An easy to use Arduino library for fast and simultaneous operations on Arduino I/O pins.",
      "paragraph": "Supports Arduino AVR boards natively and custom boards by manually defining register addresses.",
      "website": "https://pin.fenichelar.com",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/fenichelar/Pin-4.1.1.zip",
      "archiveFileName": "Pin-4.1.1.zip",
      "size": 130992,
      "checksum": "SHA-256:b4bb2840a9b86135470cbe0a2a0c232450d9aa3c3897ee40a6499a1bed3d99bc"
    },
    {
      "name": "USB Host Shield Library 2.0",
      "version": "1.0.0",
      "author": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e, Alexei Glushchenko (Circuits@Home) \u003calex-gl@mail.ru\u003e",
      "maintainer": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e",
      "sentence": "Revision 2.0 of MAX3421E-based USB Host Shield Library.",
      "paragraph": "Supports HID devices, FTDI, ADK, ACM, PL2303, Bluetooth HID devices, SPP communication and mass storage devices. Furthermore it supports PS3, PS4, PS Buzz, Wii and Xbox controllers.",
      "website": "https://github.com/felis/USB_Host_Shield_2.0",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/felis/USB_Host_Shield_Library_2_0-1.0.0.zip",
      "archiveFileName": "USB_Host_Shield_Library_2_0-1.0.0.zip",
      "size": 355165,
      "checksum": "SHA-256:52ead8d2a34bc712dab0333e256ff1935fd05edfdfc89ab2e5c471ae86876e54"
    },
    {
      "name": "USB Host Shield Library 2.0",
      "version": "1.1.0",
      "author": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e, Alexei Glushchenko (Circuits@Home) \u003calex-gl@mail.ru\u003e",
      "maintainer": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e",
      "sentence": "Revision 2.0 of MAX3421E-based USB Host Shield Library.",
      "paragraph": "Supports HID devices, FTDI, ADK, ACM, PL2303, Bluetooth HID devices, SPP communication and mass storage devices. Furthermore it supports PS3, PS4, PS Buzz, Wii and Xbox controllers.",
      "website": "https://github.com/felis/USB_Host_Shield_2.0",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/felis/USB_Host_Shield_Library_2_0-1.1.0.zip",
      "archiveFileName": "USB_Host_Shield_Library_2_0-1.1.0.zip",
      "size": 358303,
      "checksum": "SHA-256:ded66b81164031fed9e9e5f49867d6b8b421ffbf6fd2484f2085ce0b0f79d988"
    },
    {
      "name": "USB Host Shield Library 2.0",
      "version": "1.1.1",
      "author": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e, Alexei Glushchenko (Circuits@Home) \u003calex-gl@mail.ru\u003e",
      "maintainer": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e",
      "sentence": "Revision 2.0 of MAX3421E-based USB Host Shield Library.",
      "paragraph": "Supports HID devices, FTDI, ADK, ACM, PL2303, Bluetooth HID devices, SPP communication and mass storage devices. Furthermore it supports PS3, PS4, PS Buzz, Wii and Xbox controllers.",
      "website": "https://github.com/felis/USB_Host_Shield_2.0",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/felis/USB_Host_Shield_Library_2_0-1.1.1.zip",
      "archiveFileName": "USB_Host_Shield_Library_2_0-1.1.1.zip",
      "size": 358439,
      "checksum": "SHA-256:92be3dfb658b0c1319d61aa4d91ff5c3277607324e1e2267c361a86f7c4f9058"
    },
    {
      "name": "USB Host Shield Library 2.0",
      "version": "1.2.0",
      "author": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e, Alexei Glushchenko (Circuits@Home) \u003calex-gl@mail.ru\u003e",
      "maintainer": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e",
      "sentence": "Revision 2.0 of MAX3421E-based USB Host Shield Library.",
      "paragraph": "Supports HID devices, FTDI, ADK, ACM, PL2303, Bluetooth HID devices, SPP communication and mass storage devices. Furthermore it supports PS3, PS4, PS Buzz, Wii and Xbox controllers.",
      "website": "https://github.com/felis/USB_Host_Shield_2.0",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/felis/USB_Host_Shield_Library_2_0-1.2.0.zip",
      "archiveFileName": "USB_Host_Shield_Library_2_0-1.2.0.zip",
      "size": 359687,
      "checksum": "SHA-256:1f6e9f9cdc33b7baa573253bcf56045f5015f0b92984e7525edcf98a8180e229"
    },
    {
      "name": "USB Host Shield Library 2.0",
      "version": "1.2.1",
      "author": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e, Alexei Glushchenko (Circuits@Home) \u003calex-gl@mail.ru\u003e",
      "maintainer": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e",
      "sentence": "Revision 2.0 of MAX3421E-based USB Host Shield Library.",
      "paragraph": "Supports HID devices, FTDI, ADK, ACM, PL2303, Bluetooth HID devices, SPP communication and mass storage devices. Furthermore it supports PS3, PS4, PS Buzz, Wii and Xbox controllers.",
      "website": "https://github.com/felis/USB_Host_Shield_2.0",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/felis/USB_Host_Shield_Library_2_0-1.2.1.zip",
      "archiveFileName": "USB_Host_Shield_Library_2_0-1.2.1.zip",
      "size": 359841,
      "checksum": "SHA-256:11b66f971c304148a788f03d24b72593b03dc32d09c1afad573a4a81fb6b6cda"
    },
    {
      "name": "USB Host Shield Library 2.0",
      "version": "1.3.0",
      "author": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e, Alexei Glushchenko (Circuits@Home) \u003calex-gl@mail.ru\u003e",
      "maintainer": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e",
      "sentence": "Revision 2.0 of MAX3421E-based USB Host Shield Library.",
      "paragraph": "Supports HID devices, FTDI, ADK, ACM, PL2303, Bluetooth HID devices, SPP communication and mass storage devices. Furthermore it supports PS3, PS4, PS Buzz, Wii and Xbox controllers.",
      "website": "https://github.com/felis/USB_Host_Shield_2.0",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/felis/USB_Host_Shield_Library_2_0-1.3.0.zip",
      "archiveFileName": "USB_Host_Shield_Library_2_0-1.3.0.zip",
      "size": 386969,
      "checksum": "SHA-256:5b4c0f2a9428c385c5e4e952015507d174f17a5ebe4bf8acb33e62a9dd888daf"
    },
    {
      "name": "FTOLED",
      "version": "1.0.0",
      "author": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "maintainer": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "sentence": "Library to drive Freetronics OLED128 128x128 display.",
      "paragraph": "Supports graphics operations (test, images, etc.) on the OLED128. Can probably be used with other SSD1351 based displays. Manual at https://github.com/freetronics/FTOLED/wiki",
      "website": "https://github.com/freetronics/FTOLED/",
      "category": "Display",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/freetronics/FTOLED-1.0.0.zip",
      "archiveFileName": "FTOLED-1.0.0.zip",
      "size": 323206,
      "checksum": "SHA-256:d3f17f22fa88f2bdfbccf90100be27fb7adae279e17aaa579281214a1e5e3812"
    },
    {
      "name": "FTOLED",
      "version": "1.1.0",
      "author": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "maintainer": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "sentence": "Library to drive Freetronics OLED128 128x128 display.",
      "paragraph": "Supports graphics operations (test, images, etc.) on the OLED128. Can probably be used with other SSD1351 based displays. Manual at https://github.com/freetronics/FTOLED/wiki",
      "website": "https://github.com/freetronics/FTOLED/",
      "category": "Display",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/freetronics/FTOLED-1.1.0.zip",
      "archiveFileName": "FTOLED-1.1.0.zip",
      "size": 323403,
      "checksum": "SHA-256:d31ea7a12b45865d0398c98d8a18c43ae5579a549b74a450200050f19984b1fd"
    },
    {
      "name": "FTOLED",
      "version": "1.1.2",
      "author": "Freetronics",
      "maintainer": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "sentence": "Library to drive Freetronics OLED128 128x128 display.",
      "paragraph": "Supports graphics operations (test, images, etc.) on the OLED128. Can probably be used with other SSD1351 based displays. Manual at https://github.com/freetronics/FTOLED/wiki",
      "website": "https://github.com/freetronics/FTOLED/",
      "category": "Display",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/freetronics/FTOLED-1.1.2.zip",
      "archiveFileName": "FTOLED-1.1.2.zip",
      "size": 323403,
      "checksum": "SHA-256:943f581def5d53c84b21b6908f01853e20f0d6ecd44b81a3cc8a6a4ee1520692"
    },
    {
      "name": "FTOLED",
      "version": "1.1.3",
      "author": "Freetronics",
      "maintainer": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "sentence": "Library to drive Freetronics OLED128 128x128 display.",
      "paragraph": "Supports graphics operations (test, images, etc.) on the OLED128. Can probably be used with other SSD1351 based displays. Manual at https://github.com/freetronics/FTOLED/wiki",
      "website": "https://github.com/freetronics/FTOLED/",
      "category": "Display",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/freetronics/FTOLED-1.1.3.zip",
      "archiveFileName": "FTOLED-1.1.3.zip",
      "size": 323533,
      "checksum": "SHA-256:1a8468f2898e0bd3190b4f81e89b366454aef6bb894c33086c50b1c7805dbced"
    },
    {
      "name": "FTRGBLED",
      "version": "1.0.0",
      "author": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "maintainer": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "sentence": "Freetronics RGBLED module (WS2801-based) driver library.",
      "paragraph": "Display RGB colours on a chain of WS2801-based Freetronics RGBLEDs (or compatible).",
      "website": "https://github.com/freetronics/FTRGBLED/",
      "category": "Display",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/freetronics/FTRGBLED-1.0.0.zip",
      "archiveFileName": "FTRGBLED-1.0.0.zip",
      "size": 9288,
      "checksum": "SHA-256:248a70e47f08d7206d67943ee9f8bc1fc0cd7c7ab220703c686a528bca6b0411"
    },
    {
      "name": "DMD2",
      "version": "0.0.1",
      "author": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "maintainer": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "sentence": "Updated (beta) library for Freetronics DMD dot matrix displays.",
      "paragraph": "Supports graphics operations (test, images, etc.) Still experimental, the stable library is called called \"DMD\"",
      "website": "https://github.com/freetronics/DMD2/",
      "category": "Display",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/freetronics/DMD2-0.0.1.zip",
      "archiveFileName": "DMD2-0.0.1.zip",
      "size": 51001,
      "checksum": "SHA-256:7f67b3ac356d671ccae5d5636507ae40764c157924eac39dce1e411ddf44752a"
    },
    {
      "name": "DMD2",
      "version": "0.0.3",
      "author": "Freetronics",
      "maintainer": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "sentence": "Updated (beta) library for Freetronics DMD dot matrix displays.",
      "paragraph": "Supports graphics operations (test, images, etc.) Still experimental, the stable library is called called \"DMD\"",
      "website": "https://github.com/freetronics/DMD2/",
      "category": "Display",
      "architectures": [
        "avr",
        "sam",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/freetronics/DMD2-0.0.3.zip",
      "archiveFileName": "DMD2-0.0.3.zip",
      "size": 51882,
      "checksum": "SHA-256:be1204232001f6ca727f2de73188fa92112a7721317e096d4b8ded2b60f3668d"
    },
    {
      "name": "BaroLibrary",
      "version": "1.0.0",
      "author": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "maintainer": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "sentence": "Library for Measurement Specialties MS5637-02BA03 Altimeter/Pressure sensor (including Freetronics BARO module).",
      "website": "https://github.com/freetronics/BaroSensor",
      "category": "Sensors",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/freetronics/BaroLibrary-1.0.0.zip",
      "archiveFileName": "BaroLibrary-1.0.0.zip",
      "size": 18929,
      "checksum": "SHA-256:43deccebd6eab8021449bf3aef4d93aa31d80d9aefd99d85322499e58cfc6989"
    },
    {
      "name": "Pushetta",
      "version": "1.0.0",
      "author": "Fabrizio Guglielmino \u003cguglielmino@gumino.com\u003e",
      "maintainer": "Fabrizio Guglielmino \u003cguglielmino@gumino.com\u003e",
      "sentence": "The library to use Pushetta service, a service to push notifications to mobile phones and other devices",
      "paragraph": "Pushetta is a Web API that provides an unificated way to send realtime notifications to multiple devices. Used with Arduino Yun it's possible to send alert, informations or any data in realtime to groups of subscribers (more on pushetta web site)",
      "website": "https://github.com/guglielmino/arduino-pushetta-lib",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/guglielmino/Pushetta-1.0.0.zip",
      "archiveFileName": "Pushetta-1.0.0.zip",
      "size": 4501,
      "checksum": "SHA-256:6dad2023b21d2fd23cded8f4b1982cfbed5960128f3e2510443db1a7dfbcee41"
    },
    {
      "name": "Pushetta",
      "version": "1.0.1",
      "author": "Fabrizio Guglielmino \u003cguglielmino@gumino.com\u003e",
      "maintainer": "Fabrizio Guglielmino \u003cguglielmino@gumino.com\u003e",
      "sentence": "The library to use Pushetta service, a service to push notifications to mobile phones and other devices",
      "paragraph": "Pushetta is a Web API that provides an unificated way to send realtime notifications to multiple devices. Used with Arduino Yun it's possible to send alert, informations or any data in realtime to groups of subscribers (more on pushetta web site)",
      "website": "https://github.com/guglielmino/arduino-pushetta-lib",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/guglielmino/Pushetta-1.0.1.zip",
      "archiveFileName": "Pushetta-1.0.1.zip",
      "size": 4520,
      "checksum": "SHA-256:ba016a7ab5497cfba9064410651a98caa9c5f45bb925ecc4c30ca5760016c4c6"
    },
    {
      "name": "UTFT_SdRaw",
      "version": "1.2.0",
      "author": "Graham Lawrence \u003cghlawrence2000@yahoo.co.uk\u003e",
      "maintainer": "Graham Lawrence \u003cghlawrence2000@yahoo.co.uk\u003e",
      "sentence": "A library that adds high speed image drawing functions from SD to UTFT.",
      "paragraph": "Supports PAN/SCALE/CPLD Page from SD also basic drawing from Serial source.",
      "website": "https://github.com/ghlawrence2000/UTFT_SdRaw",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ghlawrence2000/UTFT_SdRaw-1.2.0.zip",
      "archiveFileName": "UTFT_SdRaw-1.2.0.zip",
      "size": 3731196,
      "checksum": "SHA-256:e81fcc8d788ca18164f4aa2d39c7437bf5dca74cc96795ac1008e9200bd44c69"
    },
    {
      "name": "UTFT_SdRaw",
      "version": "1.2.2",
      "author": "Graham Lawrence \u003cghlawrence2000@yahoo.co.uk\u003e",
      "maintainer": "Graham Lawrence \u003cghlawrence2000@yahoo.co.uk\u003e",
      "sentence": "A library that adds high speed image drawing functions from SD to UTFT.",
      "paragraph": "Supports PAN/SCALE/CPLD Page from SD also basic drawing from Serial source.",
      "website": "https://github.com/ghlawrence2000/UTFT_SdRaw",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ghlawrence2000/UTFT_SdRaw-1.2.2.zip",
      "archiveFileName": "UTFT_SdRaw-1.2.2.zip",
      "size": 3903364,
      "checksum": "SHA-256:b83e619c9f4b27d25085ee063a6984d294d6f5a8ef5b7a1417a02e13d79e79a7"
    },
    {
      "name": "UTFT_SdRaw",
      "version": "1.2.3",
      "author": "Graham Lawrence \u003cghlawrence2000@yahoo.co.uk\u003e",
      "maintainer": "Graham Lawrence \u003cghlawrence2000@yahoo.co.uk\u003e",
      "sentence": "A library that adds high speed image drawing functions from SD to UTFT.",
      "paragraph": "Supports load/pan/loadcpld from SD and loadS for drawing images from Serial source.",
      "website": "https://github.com/ghlawrence2000/UTFT_SdRaw",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ghlawrence2000/UTFT_SdRaw-1.2.3.zip",
      "archiveFileName": "UTFT_SdRaw-1.2.3.zip",
      "size": 3906220,
      "checksum": "SHA-256:de8f5ff42123d00fcced0813ddc1137698cb8c939b9961b8c01351d0277dc3f2"
    },
    {
      "name": "UTFT_SdRaw",
      "version": "1.2.4",
      "author": "Graham Lawrence \u003cghlawrence2000@yahoo.co.uk\u003e",
      "maintainer": "Graham Lawrence \u003cghlawrence2000@yahoo.co.uk\u003e",
      "sentence": "A library that adds high speed image drawing functions from SD to UTFT.",
      "paragraph": "Supports load/pan/loadcpld from SD and loadS for drawing images from Serial source. Now updated examples use URTouch.",
      "website": "https://github.com/ghlawrence2000/UTFT_SdRaw",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ghlawrence2000/UTFT_SdRaw-1.2.4.zip",
      "archiveFileName": "UTFT_SdRaw-1.2.4.zip",
      "size": 3906286,
      "checksum": "SHA-256:4ac7be398821cd226398e533139e5e6be7aae8cb89cd2f5090bbdf16af4cf35f"
    },
    {
      "name": "EnableInterrupt",
      "version": "0.6.0",
      "author": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "maintainer": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "sentence": "Assign an interrupt to any supported pin on all Arduinos (includes Due / not Gemma) and ATmega 644/1284.",
      "paragraph": "Provides a ponsistent API across chips, architectures, and interrupt types. Makes External, Pin Change, and Due pin interrupts operate similarly. Code optimized for speed; includes an extra-high-speed mode for speed critical code.",
      "website": "https://github.com/GreyGnome/EnableInterrupt",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/GreyGnome/EnableInterrupt-0.6.0.zip",
      "archiveFileName": "EnableInterrupt-0.6.0.zip",
      "size": 2789790,
      "checksum": "SHA-256:d096307ccbe6f485bfd922931ef5e1b6e0133c0f430191d9809ee4bae39703e9"
    },
    {
      "name": "EnableInterrupt",
      "version": "0.8.2",
      "author": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "maintainer": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "sentence": "Assign an interrupt to any supported pin on all Arduinos (includes Due / not Gemma) and ATmega 644/1284.",
      "paragraph": "Provides a consistent API across chips, architectures, and interrupt types. Makes External, Pin Change, and Due pin interrupts operate similarly. Code optimized for speed; includes an extra-high-speed mode for speed critical code.",
      "website": "https://github.com/GreyGnome/EnableInterrupt",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/GreyGnome/EnableInterrupt-0.8.2.zip",
      "archiveFileName": "EnableInterrupt-0.8.2.zip",
      "size": 2801426,
      "checksum": "SHA-256:ba186ed7cdd6d0b13b4d3222886a9b1b2ccd0aa2887b98c10d22c1e844ab43cf"
    },
    {
      "name": "EnableInterrupt",
      "version": "0.9.0",
      "author": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "maintainer": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "sentence": "Assign an interrupt to any supported pin on all Arduinos (includes Due) and ATmega 644/1284.",
      "paragraph": "Provides a consistent API across chips, architectures, and interrupt types. Makes External, Pin Change, and Due pin interrupts operate similarly. Code optimized for speed; includes an extra-high-speed mode for speed critical code.",
      "website": "https://github.com/GreyGnome/EnableInterrupt",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/GreyGnome/EnableInterrupt-0.9.0.zip",
      "archiveFileName": "EnableInterrupt-0.9.0.zip",
      "size": 2809621,
      "checksum": "SHA-256:b65c6525efdd1990d2be91a5dcc24f25bca2c0553f7a0ee597fb3ac83f35996c"
    },
    {
      "name": "EnableInterrupt",
      "version": "0.9.1",
      "author": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "maintainer": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "sentence": "Assign an interrupt to any supported pin on all Arduinos, plus ATtiny 84/85 and ATmega 644/1284.",
      "paragraph": "Provides a consistent API across chips, architectures, and interrupt types. Makes External and Pin Change on the ATmega series, and Due and Zero pin interrupts operate similarly. Code optimized for speed; includes an extra-high-speed mode for speed critical code.",
      "website": "https://github.com/GreyGnome/EnableInterrupt",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/GreyGnome/EnableInterrupt-0.9.1.zip",
      "archiveFileName": "EnableInterrupt-0.9.1.zip",
      "size": 2811194,
      "checksum": "SHA-256:cf626da84db194101317567a9a34bc86c241999b540bc815760607151f41bebd"
    },
    {
      "name": "EnableInterrupt",
      "version": "0.9.2",
      "author": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "maintainer": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "sentence": "Assign an interrupt to any supported pin on all Arduinos, plus ATtiny 84/85 and ATmega 644/1284.",
      "paragraph": "Provides a consistent API across chips, architectures, and interrupt types. Makes External and Pin Change on the ATmega series, and Due and Zero pin interrupts operate similarly. Code optimized for speed; includes an extra-high-speed mode for speed critical code.",
      "website": "https://github.com/GreyGnome/EnableInterrupt",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/GreyGnome/EnableInterrupt-0.9.2.zip",
      "archiveFileName": "EnableInterrupt-0.9.2.zip",
      "size": 2811446,
      "checksum": "SHA-256:25d258a4a104f4e53daa74f2c7c9d21a591a5b22d976dc11cf5e488ec4ba72b5"
    },
    {
      "name": "EnableInterrupt",
      "version": "0.9.3",
      "author": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "maintainer": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "sentence": "Assign an interrupt to any supported pin on all Arduinos, plus ATtiny 84/85 and ATmega 644/1284.",
      "paragraph": "Provides a consistent API across chips, architectures, and interrupt types. Makes External and Pin Change on the ATmega series, and Due and Zero pin interrupts operate similarly. Code optimized for speed; includes an extra-high-speed mode for speed critical code.",
      "website": "https://github.com/GreyGnome/EnableInterrupt",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/GreyGnome/EnableInterrupt-0.9.3.zip",
      "archiveFileName": "EnableInterrupt-0.9.3.zip",
      "size": 2811630,
      "checksum": "SHA-256:1e3b9e79b5a48c6893ad0d24ccc0a4e9d3d5a62c54bc4030cdc52cd92f32571e"
    },
    {
      "name": "EnableInterrupt",
      "version": "0.9.4",
      "author": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "maintainer": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "sentence": "Assign an interrupt to any supported pin on all Arduinos, plus ATtiny 84/85 and ATmega 644/1284.",
      "paragraph": "Provides a consistent API across chips, architectures, and interrupt types. Makes External and Pin Change on the ATmega series, and Due and Zero pin interrupts operate similarly. Code optimized for speed; includes an extra-high-speed mode for speed critical code.",
      "website": "https://github.com/GreyGnome/EnableInterrupt",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/GreyGnome/EnableInterrupt-0.9.4.zip",
      "archiveFileName": "EnableInterrupt-0.9.4.zip",
      "size": 2811870,
      "checksum": "SHA-256:df8dccd2c151dd61b31da101de5e2ff728adf39137a728539b6a2173d24dedb1"
    },
    {
      "name": "EnableInterrupt",
      "version": "0.9.5",
      "author": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "maintainer": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "sentence": "Assign an interrupt to any supported pin on all Arduinos, plus ATtiny 84/85 and ATmega 644/1284.",
      "paragraph": "Provides a consistent API across chips, architectures, and interrupt types. Makes External and Pin Change on the ATmega series, and Due and Zero pin interrupts operate similarly. Code optimized for speed; includes an extra-high-speed mode for speed critical code.",
      "website": "https://github.com/GreyGnome/EnableInterrupt",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/GreyGnome/EnableInterrupt-0.9.5.zip",
      "archiveFileName": "EnableInterrupt-0.9.5.zip",
      "size": 2813601,
      "checksum": "SHA-256:06caaed6aebf0be77955fa8607d7f082d63c75f9f7a9303ef8bac5e5e4d8ada4"
    },
    {
      "name": "OneSheeld",
      "version": "1.10.0",
      "author": "Integreight, Inc. \u003cinfo@integreight.com\u003e",
      "maintainer": "Eslam Ali \u003ceali@integreight.com\u003e, Islam Mustafa \u003cislam@integreight.com\u003e, Mustafa Fayez \u003cmustafa@integreight.com\u003e",
      "sentence": "It allows you to control your 1Sheeld(s).",
      "paragraph": "1Sheeld is an All-In-One Arduino shield that lets you use your smartphone capabilites (Sensors, Internet,...etc) to power your Arduino projects.",
      "website": "http://www.1sheeld.com/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Integreight/OneSheeld-1.10.0.zip",
      "archiveFileName": "OneSheeld-1.10.0.zip",
      "size": 185490,
      "checksum": "SHA-256:659ca5786eb5cd0ece347230e50438db1cc77cdf868bce014a857713cc13b9a3"
    },
    {
      "name": "OneSheeld",
      "version": "1.11.0",
      "author": "Integreight, Inc. \u003cinfo@integreight.com\u003e",
      "maintainer": "Eslam Ali \u003ceali@integreight.com\u003e, Islam Mustafa \u003cislam@integreight.com\u003e, Mustafa Fayez \u003cmustafa@integreight.com\u003e",
      "sentence": "It allows you to control your 1Sheeld(s).",
      "paragraph": "1Sheeld is an All-In-One Arduino shield that lets you use your smartphone capabilites (Sensors, Internet,...etc) to power your Arduino projects.",
      "website": "http://www.1sheeld.com/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Integreight/OneSheeld-1.11.0.zip",
      "archiveFileName": "OneSheeld-1.11.0.zip",
      "size": 191466,
      "checksum": "SHA-256:2fa9e819c6831b19b10d9d0993bdfde28c002438c005d21e195b5183bd248f1c"
    },
    {
      "name": "OneSheeld",
      "version": "1.12.0",
      "author": "Integreight, Inc. \u003cinfo@integreight.com\u003e",
      "maintainer": "Eslam Ali \u003ceali@integreight.com\u003e, Islam Mustafa \u003cislam@integreight.com\u003e, Mustafa Fayez \u003cmustafa@integreight.com\u003e",
      "sentence": "It allows you to control your 1Sheeld(s).",
      "paragraph": "1Sheeld is an All-In-One Arduino shield that lets you use your smartphone capabilites (Sensors, Internet,...etc) to power your Arduino projects.",
      "website": "http://www.1sheeld.com/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Integreight/OneSheeld-1.12.0.zip",
      "archiveFileName": "OneSheeld-1.12.0.zip",
      "size": 194084,
      "checksum": "SHA-256:866378db5854d0e9473f283f185541a278fe43cb581e5642bf535b5c20b1a937"
    },
    {
      "name": "OneSheeld",
      "version": "1.13.0",
      "author": "Integreight, Inc. \u003cinfo@integreight.com\u003e",
      "maintainer": "Eslam Ali \u003ceali@integreight.com\u003e, Islam Mustafa \u003cislam@integreight.com\u003e, Mustafa Fayez \u003cmustafa@integreight.com\u003e",
      "sentence": "It allows you to control your 1Sheeld(s).",
      "paragraph": "1Sheeld is an All-In-One Arduino shield that lets you use your smartphone capabilites (Sensors, Internet,...etc) to power your Arduino projects.",
      "website": "http://www.1sheeld.com/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Integreight/OneSheeld-1.13.0.zip",
      "archiveFileName": "OneSheeld-1.13.0.zip",
      "size": 202368,
      "checksum": "SHA-256:daadf0a12e44b623523d4e04a410fb8c068d7b286bbd1c4edafd77994c02b4e9"
    },
    {
      "name": "OneSheeld",
      "version": "1.5.0",
      "author": "Integreight, Inc. \u003cinfo@integreight.com\u003e",
      "maintainer": "Eslam Ali \u003ceali@integreight.com\u003e, Islam Mustafa \u003cislam@integreight.com\u003e, Mustafa Fayez \u003cmustafa@integreight.com\u003e",
      "sentence": "It allows you to control your 1Sheeld(s).",
      "paragraph": "1Sheeld is an All-In-One Arduino shield that lets you use your smartphone capabilites (Sensors, Internet,...etc) to power your Arduino projects.",
      "website": "http://www.1sheeld.com/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Integreight/OneSheeld-1.5.0.zip",
      "archiveFileName": "OneSheeld-1.5.0.zip",
      "size": 151309,
      "checksum": "SHA-256:40e8d71ed623ac5338e3ded44541e8585109dfc7ac8df2922532d91d4a4fb6c5"
    },
    {
      "name": "OneSheeld",
      "version": "1.6.0",
      "author": "Integreight, Inc. \u003cinfo@integreight.com\u003e",
      "maintainer": "Eslam Ali \u003ceali@integreight.com\u003e, Islam Mustafa \u003cislam@integreight.com\u003e, Mustafa Fayez \u003cmustafa@integreight.com\u003e",
      "sentence": "It allows you to control your 1Sheeld(s).",
      "paragraph": "1Sheeld is an All-In-One Arduino shield that lets you use your smartphone capabilites (Sensors, Internet,...etc) to power your Arduino projects.",
      "website": "http://www.1sheeld.com/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Integreight/OneSheeld-1.6.0.zip",
      "archiveFileName": "OneSheeld-1.6.0.zip",
      "size": 174475,
      "checksum": "SHA-256:4173bd427a69ebcf6a2748a6bf94a70666e8cc4a974300760b255c94733dae63"
    },
    {
      "name": "OneSheeld",
      "version": "1.6.1",
      "author": "Integreight, Inc. \u003cinfo@integreight.com\u003e",
      "maintainer": "Eslam Ali \u003ceali@integreight.com\u003e, Islam Mustafa \u003cislam@integreight.com\u003e, Mustafa Fayez \u003cmustafa@integreight.com\u003e",
      "sentence": "It allows you to control your 1Sheeld(s).",
      "paragraph": "1Sheeld is an All-In-One Arduino shield that lets you use your smartphone capabilites (Sensors, Internet,...etc) to power your Arduino projects.",
      "website": "http://www.1sheeld.com/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Integreight/OneSheeld-1.6.1.zip",
      "archiveFileName": "OneSheeld-1.6.1.zip",
      "size": 173648,
      "checksum": "SHA-256:a3b1bf4dcff7be21f7031663bbd4997b652a32f81808c6f260587285a3b0e8f3"
    },
    {
      "name": "OneSheeld",
      "version": "1.7.0",
      "author": "Integreight, Inc. \u003cinfo@integreight.com\u003e",
      "maintainer": "Eslam Ali \u003ceali@integreight.com\u003e, Islam Mustafa \u003cislam@integreight.com\u003e, Mustafa Fayez \u003cmustafa@integreight.com\u003e",
      "sentence": "It allows you to control your 1Sheeld(s).",
      "paragraph": "1Sheeld is an All-In-One Arduino shield that lets you use your smartphone capabilites (Sensors, Internet,...etc) to power your Arduino projects.",
      "website": "http://www.1sheeld.com/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Integreight/OneSheeld-1.7.0.zip",
      "archiveFileName": "OneSheeld-1.7.0.zip",
      "size": 175851,
      "checksum": "SHA-256:3e0ced9a4aa0ccf88a223eff12ad26a3121a487402e520b6c976f8182f4729f6"
    },
    {
      "name": "OneSheeld",
      "version": "1.8.0",
      "author": "Integreight, Inc. \u003cinfo@integreight.com\u003e",
      "maintainer": "Eslam Ali \u003ceali@integreight.com\u003e, Islam Mustafa \u003cislam@integreight.com\u003e, Mustafa Fayez \u003cmustafa@integreight.com\u003e",
      "sentence": "It allows you to control your 1Sheeld(s).",
      "paragraph": "1Sheeld is an All-In-One Arduino shield that lets you use your smartphone capabilites (Sensors, Internet,...etc) to power your Arduino projects.",
      "website": "http://www.1sheeld.com/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Integreight/OneSheeld-1.8.0.zip",
      "archiveFileName": "OneSheeld-1.8.0.zip",
      "size": 178718,
      "checksum": "SHA-256:8341f045575f67baa778c81db997456b6b5ac1f55279d3b9968ba02c251b204c"
    },
    {
      "name": "OneSheeld",
      "version": "1.9.0",
      "author": "Integreight, Inc. \u003cinfo@integreight.com\u003e",
      "maintainer": "Eslam Ali \u003ceali@integreight.com\u003e, Islam Mustafa \u003cislam@integreight.com\u003e, Mustafa Fayez \u003cmustafa@integreight.com\u003e",
      "sentence": "It allows you to control your 1Sheeld(s).",
      "paragraph": "1Sheeld is an All-In-One Arduino shield that lets you use your smartphone capabilites (Sensors, Internet,...etc) to power your Arduino projects.",
      "website": "http://www.1sheeld.com/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Integreight/OneSheeld-1.9.0.zip",
      "archiveFileName": "OneSheeld-1.9.0.zip",
      "size": 179248,
      "checksum": "SHA-256:f1bc505648df8239604719b03f96daf382b4a4745bdde1829bfc13a220da3ea4"
    },
    {
      "name": "OneSheeld",
      "version": "1.9.1",
      "author": "Integreight, Inc. \u003cinfo@integreight.com\u003e",
      "maintainer": "Eslam Ali \u003ceali@integreight.com\u003e, Islam Mustafa \u003cislam@integreight.com\u003e, Mustafa Fayez \u003cmustafa@integreight.com\u003e",
      "sentence": "It allows you to control your 1Sheeld(s).",
      "paragraph": "1Sheeld is an All-In-One Arduino shield that lets you use your smartphone capabilites (Sensors, Internet,...etc) to power your Arduino projects.",
      "website": "http://www.1sheeld.com/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Integreight/OneSheeld-1.9.1.zip",
      "archiveFileName": "OneSheeld-1.9.1.zip",
      "size": 179343,
      "checksum": "SHA-256:6370d8ab014bd33935c057fb32f092a96e34453ccd492db45fa77f937a9118a7"
    },
    {
      "name": "OneSheeld",
      "version": "1.9.2",
      "author": "Integreight, Inc. \u003cinfo@integreight.com\u003e",
      "maintainer": "Eslam Ali \u003ceali@integreight.com\u003e, Islam Mustafa \u003cislam@integreight.com\u003e, Mustafa Fayez \u003cmustafa@integreight.com\u003e",
      "sentence": "It allows you to control your 1Sheeld(s).",
      "paragraph": "1Sheeld is an All-In-One Arduino shield that lets you use your smartphone capabilites (Sensors, Internet,...etc) to power your Arduino projects.",
      "website": "http://www.1sheeld.com/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Integreight/OneSheeld-1.9.2.zip",
      "archiveFileName": "OneSheeld-1.9.2.zip",
      "size": 179379,
      "checksum": "SHA-256:078183a8e396677a57c03eb9fc202fa5d4cd59fb76e8954f2b9e595bb6f44311"
    },
    {
      "name": "Iobeam",
      "version": "0.1.0",
      "author": "iobeam \u003chello@iobeam.com\u003e",
      "maintainer": "Rob Kiefer \u003crob@iobeam.com\u003e",
      "sentence": "Client library for using the iobeam cloud.",
      "paragraph": "Iobeam is a data analysis platform for connected devices. This library allows Arduino clients to register and send data to the iobeam cloud for processing.",
      "website": "https://www.iobeam.com",
      "category": "Data Processing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/iobeam/Iobeam-0.1.0.zip",
      "archiveFileName": "Iobeam-0.1.0.zip",
      "size": 46596,
      "checksum": "SHA-256:d18dd5050e57c85022b917e8dbb5cc1d32352a02ed3cad53d884fc5e5f77d106"
    },
    {
      "name": "ArduinoThread",
      "version": "2.0.0",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "A simple way to run Threads on Arduino",
      "paragraph": "This Library helps to maintain organized and to facilitate the use of multiple tasks. We can use Timers Interrupts, and make it really powerfull, running \"pseudo-background\" tasks on the rug.",
      "website": "https://github.com/ivanseidel/ArduinoThread",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ivanseidel/ArduinoThread-2.0.0.zip",
      "archiveFileName": "ArduinoThread-2.0.0.zip",
      "size": 24164,
      "checksum": "SHA-256:ebf519b25833e13e12b013faf07d0ba7922597125532d4f1f8dba5e6de6062ff"
    },
    {
      "name": "ArduinoThread",
      "version": "2.0.2",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "A simple way to run Threads on Arduino",
      "paragraph": "This Library helps to maintain organized and to facilitate the use of multiple tasks. We can use Timers Interrupts, and make it really powerfull, running \"pseudo-background\" tasks on the rug.",
      "website": "https://github.com/ivanseidel/ArduinoThread",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ivanseidel/ArduinoThread-2.0.2.zip",
      "archiveFileName": "ArduinoThread-2.0.2.zip",
      "size": 24209,
      "checksum": "SHA-256:752f7bf53b05739276a5d3ea6aec25efc608286073e53196ed0e013d3855661f"
    },
    {
      "name": "ArduinoThread",
      "version": "2.0.3",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "A simple way to run Threads on Arduino",
      "paragraph": "This Library helps to maintain organized and to facilitate the use of multiple tasks. We can use Timers Interrupts, and make it really powerfull, running \"pseudo-background\" tasks on the rug.",
      "website": "https://github.com/ivanseidel/ArduinoThread",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ivanseidel/ArduinoThread-2.0.3.zip",
      "archiveFileName": "ArduinoThread-2.0.3.zip",
      "size": 24750,
      "checksum": "SHA-256:d2f72e66554f0b1d3afc00650dd331ac7ead31dcfabbf41db7ec588e3f7d4681"
    },
    {
      "name": "ArduinoThread",
      "version": "2.1.0",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "A simple way to run Threads on Arduino",
      "paragraph": "This Library helps to maintain organized and to facilitate the use of multiple tasks. We can use Timers Interrupts, and make it really powerfull, running \"pseudo-background\" tasks on the rug.",
      "website": "https://github.com/ivanseidel/ArduinoThread",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ivanseidel/ArduinoThread-2.1.0.zip",
      "archiveFileName": "ArduinoThread-2.1.0.zip",
      "size": 27404,
      "checksum": "SHA-256:76c664c809617af8d5b6894dbdfc183b3d29c8e2a47bc4000992f7433d82d279"
    },
    {
      "name": "ArduinoThread",
      "version": "2.1.1",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "A simple way to run Threads on Arduino",
      "paragraph": "This Library helps to maintain organized and to facilitate the use of multiple tasks. We can use Timers Interrupts, and make it really powerfull, running \"pseudo-background\" tasks on the rug.",
      "website": "https://github.com/ivanseidel/ArduinoThread",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ivanseidel/ArduinoThread-2.1.1.zip",
      "archiveFileName": "ArduinoThread-2.1.1.zip",
      "size": 27409,
      "checksum": "SHA-256:4ed520853a6fea6c8f260168adf066428be74f3b26b2e926a588f11894049ef8"
    },
    {
      "name": "ArduinoSensors",
      "version": "2.0.0",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "A Library of Libraries of Sensors",
      "paragraph": "REQUIRES \u003cArduinoThread\u003e  Library. This library was made to provide lot's of out-of-the-box features, such as 'Interfaces', 'Threadable' sensors, and reliability over C++ Objects.",
      "website": "https://github.com/ivanseidel/ArduinoSensors",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ivanseidel/ArduinoSensors-2.0.0.zip",
      "archiveFileName": "ArduinoSensors-2.0.0.zip",
      "size": 82130,
      "checksum": "SHA-256:bf5cd5ed57fa65985adb99004d831919c8c07ebb906bf1ef8c533bb4009ba7eb"
    },
    {
      "name": "ArduinoSensors",
      "version": "1.1.0",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "A Library of Libraries of Sensors",
      "paragraph": "REQUIRES \u003cArduinoThread\u003e  Library. This library was made to provide lot`s of out-of-the-box features, such as 'Interfaces', 'Threadable' sensors, and reliability over C++ Objects.",
      "website": "https://github.com/ivanseidel/ArduinoSensors",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ivanseidel/ArduinoSensors-1.1.0.zip",
      "archiveFileName": "ArduinoSensors-1.1.0.zip",
      "size": 82127,
      "checksum": "SHA-256:f1d0a68d10bcbb68d6d0074d156985a13a30b53986cbca4da1b96e9b07779ea9"
    },
    {
      "name": "DueTimer",
      "version": "1.4.5",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "Timer Library fully implemented for Arduino DUE",
      "paragraph": "There are 9 Timer objects already instantiated for you: Timer0, Timer1, Timer2, Timer3, Timer4, Timer5, Timer6, Timer7 and Timer8.",
      "website": "https://github.com/ivanseidel/DueTimer",
      "category": "Timing",
      "architectures": [
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ivanseidel/DueTimer-1.4.5.zip",
      "archiveFileName": "DueTimer-1.4.5.zip",
      "size": 10421,
      "checksum": "SHA-256:bfc300cd02c5a811b0a93ec26ed0cc4772e05f849f7067b7014970caf17bdc7c"
    },
    {
      "name": "DueTimer",
      "version": "1.4.6",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "Timer Library fully implemented for Arduino DUE",
      "paragraph": "There are 9 Timer objects already instantiated for you: Timer0, Timer1, Timer2, Timer3, Timer4, Timer5, Timer6, Timer7 and Timer8.",
      "website": "https://github.com/ivanseidel/DueTimer",
      "category": "Timing",
      "architectures": [
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ivanseidel/DueTimer-1.4.6.zip",
      "archiveFileName": "DueTimer-1.4.6.zip",
      "size": 10429,
      "checksum": "SHA-256:7a8a91b2fa6289c738f86ba71f09db96a317aa4aed9763a9c2a63d24b9d32ed3"
    },
    {
      "name": "DueTimer",
      "version": "1.4.7",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "Timer Library fully implemented for Arduino DUE",
      "paragraph": "There are 9 Timer objects already instantiated for you: Timer0, Timer1, Timer2, Timer3, Timer4, Timer5, Timer6, Timer7 and Timer8.",
      "website": "https://github.com/ivanseidel/DueTimer",
      "category": "Timing",
      "architectures": [
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ivanseidel/DueTimer-1.4.7.zip",
      "archiveFileName": "DueTimer-1.4.7.zip",
      "size": 10819,
      "checksum": "SHA-256:d8ac01ff4449e802a17b5c5448f6f2ab18e077f462ad79fe685738639c61f009"
    },
    {
      "name": "LinkedList",
      "version": "1.2.2",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "A fully implemented LinkedList made to work with Arduino projects",
      "paragraph": "The objective of this library is to create a pattern for projects. If you need to use a List of: int, float, objects, Lists or Wales. This is what you are looking for.",
      "website": "https://github.com/ivanseidel/LinkedList",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ivanseidel/LinkedList-1.2.2.zip",
      "archiveFileName": "LinkedList-1.2.2.zip",
      "size": 7000,
      "checksum": "SHA-256:5c068613d94c16b937de39a5bccb7bc6176b2e72f1baba341c35bfe3820747c8"
    },
    {
      "name": "LinkedList",
      "version": "1.2.3",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "A fully implemented LinkedList made to work with Arduino projects",
      "paragraph": "The objective of this library is to create a pattern for projects. If you need to use a List of: int, float, objects, Lists or Wales. This is what you are looking for.",
      "website": "https://github.com/ivanseidel/LinkedList",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ivanseidel/LinkedList-1.2.3.zip",
      "archiveFileName": "LinkedList-1.2.3.zip",
      "size": 7474,
      "checksum": "SHA-256:61b44d05f770480025b2988cd53a32c3675204d97c35a492d0f385c178577f0a"
    },
    {
      "name": "Gaussian",
      "version": "1.0.4",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "Gaussian math and Moving Average made easy",
      "paragraph": "Library that makes Gaussian work easy to use with C++ and Arduino. REQUIRES \u003cLinkedList\u003e Class if using GaussianAverage.",
      "website": "https://github.com/ivanseidel/Gaussian",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ivanseidel/Gaussian-1.0.4.zip",
      "archiveFileName": "Gaussian-1.0.4.zip",
      "size": 9709,
      "checksum": "SHA-256:4c1218b86e36a3bf5c32517cbd530a3bcaa40311902b84cce6766e5c50762d41"
    },
    {
      "name": "Gaussian",
      "version": "1.0.5",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "Gaussian math, Kalman Filters and Moving Averages made easy",
      "paragraph": "Simple to use and Object Oriented Class to deal with Gaussian and Moving Averages math. REQUIRES LinkedList Class if using GaussianAverage.",
      "website": "https://github.com/ivanseidel/Gaussian",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ivanseidel/Gaussian-1.0.5.zip",
      "archiveFileName": "Gaussian-1.0.5.zip",
      "size": 9719,
      "checksum": "SHA-256:5aa28c6cfeea950dde58c14fa7695e86a9190e28c7d71dae5d76a0ad3ce442ca"
    },
    {
      "name": "Gaussian",
      "version": "1.0.6",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "Gaussian math, Kalman Filters and Moving Averages made easy",
      "paragraph": "Simple to use and Object Oriented Class to deal with Gaussian and Moving Averages math. REQUIRES LinkedList Class if using GaussianAverage.",
      "website": "https://github.com/ivanseidel/Gaussian",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ivanseidel/Gaussian-1.0.6.zip",
      "archiveFileName": "Gaussian-1.0.6.zip",
      "size": 9724,
      "checksum": "SHA-256:fa59c4d3fbeddf28506623ee608eb8b1a13f63f6ddf4806d8b04138a9cd20557"
    },
    {
      "name": "Gaussian",
      "version": "1.0.7",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "Gaussian math, Kalman Filters and Moving Averages made easy",
      "paragraph": "Simple to use and Object Oriented Class to deal with Gaussian and Moving Averages math. REQUIRES LinkedList Class if using GaussianAverage.",
      "website": "https://github.com/ivanseidel/Gaussian",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ivanseidel/Gaussian-1.0.7.zip",
      "archiveFileName": "Gaussian-1.0.7.zip",
      "size": 10007,
      "checksum": "SHA-256:16b91c2ab9ff1e5ca8c7658f8463de89efdd367ecc796abc35716e1bd8eac7e1"
    },
    {
      "name": "arduino-menusystem",
      "version": "2.0.0",
      "author": "Jon Black \u003cjon@humblecoder.com\u003e",
      "maintainer": "Jon Black \u003cjon@humblecoder.com\u003e",
      "sentence": "A library for implementing a menu system",
      "paragraph": "Supports nesting and tracks the current selected item.",
      "website": "https://github.com/jonblack/arduino-menusystem",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jonblack/arduino_menusystem-2.0.0.zip",
      "archiveFileName": "arduino_menusystem-2.0.0.zip",
      "size": 13028,
      "checksum": "SHA-256:5491d7cd9b8f6428e4c4e3d330e856cab53c7080bea9bca4562645a37952ae9c"
    },
    {
      "name": "arduino-menusystem",
      "version": "2.0.1",
      "author": "Jon Black \u003cjon@humblecoder.com\u003e",
      "maintainer": "Jon Black \u003cjon@humblecoder.com\u003e",
      "sentence": "A library for implementing a menu system",
      "paragraph": "Supports nesting and tracks the current selected item.",
      "website": "https://github.com/jonblack/arduino-menusystem",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jonblack/arduino_menusystem-2.0.1.zip",
      "archiveFileName": "arduino_menusystem-2.0.1.zip",
      "size": 16477,
      "checksum": "SHA-256:211bb7a66fd97d3fb8e574058ff63a9d3a379fced5772f76d54f07ece3979fe0"
    },
    {
      "name": "arduino-menusystem",
      "version": "2.0.2",
      "author": "Jon Black \u003cjon@humblecoder.com\u003e",
      "maintainer": "Jon Black \u003cjon@humblecoder.com\u003e",
      "sentence": "A library for implementing a menu system",
      "paragraph": "Supports nesting and tracks the current selected item.",
      "website": "https://github.com/jonblack/arduino-menusystem",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jonblack/arduino_menusystem-2.0.2.zip",
      "archiveFileName": "arduino_menusystem-2.0.2.zip",
      "size": 20244,
      "checksum": "SHA-256:0683886920e4c983f8ccf4d227e4ff848478c94e7ea49b1c6f2a023c8fc30e3f"
    },
    {
      "name": "arduino-menusystem",
      "version": "2.1.0",
      "author": "Jon Black \u003cjon@humblecoder.com\u003e",
      "maintainer": "Jon Black \u003cjon@humblecoder.com\u003e",
      "sentence": "A library for implementing a menu system",
      "paragraph": "Supports nesting and tracks the current selected item.",
      "website": "https://github.com/jonblack/arduino-menusystem",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jonblack/arduino_menusystem-2.1.0.zip",
      "archiveFileName": "arduino_menusystem-2.1.0.zip",
      "size": 20570,
      "checksum": "SHA-256:27f609ef5b540e4be426c1df6372520846f7f0a3df0329ee42e5d1f7d3300b65"
    },
    {
      "name": "arduino-menusystem",
      "version": "2.1.1",
      "author": "Jon Black \u003cjon@humblecoder.com\u003e",
      "maintainer": "Jon Black \u003cjon@humblecoder.com\u003e",
      "sentence": "A library for implementing a menu system",
      "paragraph": "Supports nesting and tracks the current selected item.",
      "website": "https://github.com/jonblack/arduino-menusystem",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jonblack/arduino_menusystem-2.1.1.zip",
      "archiveFileName": "arduino_menusystem-2.1.1.zip",
      "size": 20617,
      "checksum": "SHA-256:0c043dc5bff56a91a3e7408ae89a2d2266980178ec7752c26cb0f57e6d706f5a"
    },
    {
      "name": "arduino-fsm",
      "version": "2.0.0",
      "author": "Jon Black \u003cjon@humblecoder.com\u003e",
      "maintainer": "Jon Black \u003cjon@humblecoder.com\u003e",
      "sentence": "A library for implementing a finite state machine",
      "paragraph": "Supports events for exiting and entering states.",
      "website": "https://github.com/jonblack/arduino-fsm",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jonblack/arduino_fsm-2.0.0.zip",
      "archiveFileName": "arduino_fsm-2.0.0.zip",
      "size": 4354,
      "checksum": "SHA-256:ba6c043f57abd939b1ca50ad8783b70eba8e8a92c8b100b011cb02cc2223101d"
    },
    {
      "name": "arduino-fsm",
      "version": "2.1.0",
      "author": "Jon Black \u003cjon@humblecoder.com\u003e",
      "maintainer": "Jon Black \u003cjon@humblecoder.com\u003e",
      "sentence": "A library for implementing a finite state machine",
      "paragraph": "Supports events for exiting and entering states.",
      "website": "https://github.com/jonblack/arduino-fsm",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jonblack/arduino_fsm-2.1.0.zip",
      "archiveFileName": "arduino_fsm-2.1.0.zip",
      "size": 5497,
      "checksum": "SHA-256:437b4263950fdef449c95659fadae372969145503e356fa3fe6576b54db85586"
    },
    {
      "name": "aREST",
      "version": "2.1.0",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "RESTful API for the Arduino platform.",
      "paragraph": "A simple library that implements a REST API for Arduino. It is designed to be universal and currently supports REST calls via HTTP, Serial \u0026 BLE.  See more at: http://arest.io/",
      "website": "https://github.com/marcoschwartz/aREST",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/marcoschwartz/aREST-2.1.0.zip",
      "archiveFileName": "aREST-2.1.0.zip",
      "size": 27161,
      "checksum": "SHA-256:5caefb2b410791d9f5bc06630f324df93f93dd41ad20e8760a1b3087a84bf3d1"
    },
    {
      "name": "aREST",
      "version": "1.9.9",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "RESTful API for the Arduino platform.",
      "paragraph": "A simple library that implements a REST API for Arduino. It is designed to be universal and currently supports REST calls via HTTP, Serial \u0026 BLE.  See more at: http://arest.io/",
      "website": "https://github.com/marcoschwartz/aREST",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/marcoschwartz/aREST-1.9.9.zip",
      "archiveFileName": "aREST-1.9.9.zip",
      "size": 22255,
      "checksum": "SHA-256:ca3c717c069a76b531de2414b8e348c7dfa3995d7813921b7d2e5f093c79bbb2"
    },
    {
      "name": "aREST",
      "version": "1.9.7",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "RESTful API for the Arduino platform.",
      "paragraph": "A simple library that implements a REST API for Arduino. It is designed to be universal and currently supports REST calls via HTTP, Serial \u0026 BLE.  See more at: http://arest.io/",
      "website": "https://github.com/marcoschwartz/aREST",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/marcoschwartz/aREST-1.9.7.zip",
      "archiveFileName": "aREST-1.9.7.zip",
      "size": 21275,
      "checksum": "SHA-256:49ceec8c4a945ebf3693344dfa1441d55869d5b74dc394108c8a4573aa0a4c50"
    },
    {
      "name": "aREST",
      "version": "2.0.1",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "RESTful API for the Arduino platform.",
      "paragraph": "A simple library that implements a REST API for Arduino. It is designed to be universal and currently supports REST calls via HTTP, Serial \u0026 BLE.  See more at: http://arest.io/",
      "website": "https://github.com/marcoschwartz/aREST",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/marcoschwartz/aREST-2.0.1.zip",
      "archiveFileName": "aREST-2.0.1.zip",
      "size": 24791,
      "checksum": "SHA-256:d5cd25bef168e3d688caa091762ecb931d0c56864ca4c4ffd2e42d9c4c6c2567"
    },
    {
      "name": "aREST",
      "version": "2.0.3",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "RESTful API for the Arduino platform.",
      "paragraph": "A simple library that implements a REST API for Arduino. It is designed to be universal and currently supports REST calls via HTTP, Serial \u0026 BLE.  See more at: http://arest.io/",
      "website": "https://github.com/marcoschwartz/aREST",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/marcoschwartz/aREST-2.0.3.zip",
      "archiveFileName": "aREST-2.0.3.zip",
      "size": 27161,
      "checksum": "SHA-256:39d35249a28c8efaf66439a3e0f417a3e9d079d1a2a4c04bcaa7abaa8f821bc2"
    },
    {
      "name": "aREST",
      "version": "2.1.1",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "RESTful API for the Arduino platform.",
      "paragraph": "A simple library that implements a REST API for Arduino. It is designed to be universal and currently supports REST calls via HTTP, Serial \u0026 BLE.  See more at: http://arest.io/",
      "website": "https://github.com/marcoschwartz/aREST",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/marcoschwartz/aREST-2.1.1.zip",
      "archiveFileName": "aREST-2.1.1.zip",
      "size": 27200,
      "checksum": "SHA-256:e5aa3e7884cc343a4916858247c8c0b7d9c97cb3de99163099c6b0fb8653fa05"
    },
    {
      "name": "aREST",
      "version": "2.2.0",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "RESTful API for the Arduino platform.",
      "paragraph": "A simple library that implements a REST API for Arduino. It is designed to be universal and currently supports REST calls via HTTP, Serial \u0026 BLE.  See more at: http://arest.io/",
      "website": "https://github.com/marcoschwartz/aREST",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/marcoschwartz/aREST-2.2.0.zip",
      "archiveFileName": "aREST-2.2.0.zip",
      "size": 29430,
      "checksum": "SHA-256:5aa4affd02b2c93ec53b385d74b83e2fd8f39e1ddb91f3c74310d2d6011ae481"
    },
    {
      "name": "aREST",
      "version": "2.3.0",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "RESTful API for the Arduino platform.",
      "paragraph": "A simple library that implements a REST API for Arduino. It is designed to be universal and currently supports REST calls via HTTP, Serial \u0026 BLE.  See more at: http://arest.io/",
      "website": "https://github.com/marcoschwartz/aREST",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/marcoschwartz/aREST-2.3.0.zip",
      "archiveFileName": "aREST-2.3.0.zip",
      "size": 30560,
      "checksum": "SHA-256:a83ec4be94a02fb1e2bc37322286b4ee5cc60d3c79ebe253c2d8e3d06516587c"
    },
    {
      "name": "aREST",
      "version": "2.3.1",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "RESTful API for the Arduino platform.",
      "paragraph": "A simple library that implements a REST API for Arduino. It is designed to be universal and currently supports REST calls via HTTP, Serial \u0026 BLE.  See more at: http://arest.io/",
      "website": "https://github.com/marcoschwartz/aREST",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/marcoschwartz/aREST-2.3.1.zip",
      "archiveFileName": "aREST-2.3.1.zip",
      "size": 34807,
      "checksum": "SHA-256:6c13f8cb9664358dd56aa137a5963ce2d81d822fd1f71ee67725c29689335873"
    },
    {
      "name": "aREST",
      "version": "2.4.0",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "RESTful API for the Arduino platform.",
      "paragraph": "A simple library that implements a REST API for Arduino. It is designed to be universal and currently supports REST calls via HTTP, Serial \u0026 BLE.  See more at: http://arest.io/",
      "website": "https://github.com/marcoschwartz/aREST",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/marcoschwartz/aREST-2.4.0.zip",
      "archiveFileName": "aREST-2.4.0.zip",
      "size": 35356,
      "checksum": "SHA-256:37cb42da30f0935ee6cb797e7bb7962c41b516f6f226725dfb3ad4b47d2f0ecd"
    },
    {
      "name": "aREST",
      "version": "2.4.1",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "RESTful API for the Arduino platform.",
      "paragraph": "A simple library that implements a REST API for Arduino. It is designed to be universal and currently supports REST calls via HTTP, Serial \u0026 BLE.  See more at: http://arest.io/",
      "website": "https://github.com/marcoschwartz/aREST",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/marcoschwartz/aREST-2.4.1.zip",
      "archiveFileName": "aREST-2.4.1.zip",
      "size": 37620,
      "checksum": "SHA-256:fe013b9bf7670b123faaa37740cffd21109d1be2915f29d2fe31b9fe3a80a15a"
    },
    {
      "name": "aREST",
      "version": "2.5.0",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "RESTful API for the Arduino platform.",
      "paragraph": "A simple library that implements a REST API for Arduino. It is designed to be universal and currently supports REST calls via HTTP, Serial \u0026 BLE.  See more at: http://arest.io/",
      "website": "https://github.com/marcoschwartz/aREST",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/marcoschwartz/aREST-2.5.0.zip",
      "archiveFileName": "aREST-2.5.0.zip",
      "size": 40036,
      "checksum": "SHA-256:847b83d6f2534dc88c614a84e24256e45b2a7fb25f63db5577821046559aedbc"
    },
    {
      "name": "aREST UI",
      "version": "1.0.1",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "A graphical user interface for Arduino based on the aREST API.",
      "paragraph": "A graphical user interface for Arduino based on the aREST API. It is designed to be universal and currently supports REST calls via HTTP, Serial \u0026 BLE.  See more at: http://arest.io/",
      "website": "https://github.com/marcoschwartz/aREST_UI",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/marcoschwartz/aREST_UI-1.0.1.zip",
      "archiveFileName": "aREST_UI-1.0.1.zip",
      "size": 8108,
      "checksum": "SHA-256:7d5e1658ccc2f6f76741501c350b8cb099dc8336fda28a3bed782dcb2f8d1150"
    },
    {
      "name": "aREST UI",
      "version": "1.1.0",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "A graphical user interface for Arduino based on the aREST API.",
      "paragraph": "A graphical user interface for Arduino based on the aREST API. It is designed to be universal and currently supports REST calls via HTTP, Serial \u0026 BLE.  See more at: http://arest.io/",
      "website": "https://github.com/marcoschwartz/aREST_UI",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/marcoschwartz/aREST_UI-1.1.0.zip",
      "archiveFileName": "aREST_UI-1.1.0.zip",
      "size": 8378,
      "checksum": "SHA-256:599ec5ad4ee7eb5334775aebe8c24b8504cec667813f3e0fc63f3775fceb92d2"
    },
    {
      "name": "aREST UI",
      "version": "1.1.1",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "A graphical user interface for Arduino based on the aREST API.",
      "paragraph": "A graphical user interface for Arduino based on the aREST API. It is designed to be universal and currently supports REST calls via HTTP, Serial \u0026 BLE.  See more at: http://arest.io/",
      "website": "https://github.com/marcoschwartz/aREST_UI",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/marcoschwartz/aREST_UI-1.1.1.zip",
      "archiveFileName": "aREST_UI-1.1.1.zip",
      "size": 8531,
      "checksum": "SHA-256:1e6cda4d92d7491c0768582455d89d721f49297da2ffff5b7b1b62f6da38ea36"
    },
    {
      "name": "LiquidCrystal I2C",
      "version": "1.1.0",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "A library for DFRobot I2C LCD displays.",
      "paragraph": "A library for DFRobot I2C LCD displays. It allows to control DFRobot I2C displays with commands similar to the Arduino LiquidCrystal library.",
      "website": "https://github.com/marcoschwartz/LiquidCrystal_I2C",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/marcoschwartz/LiquidCrystal_I2C-1.1.0.zip",
      "archiveFileName": "LiquidCrystal_I2C-1.1.0.zip",
      "size": 19774,
      "checksum": "SHA-256:98441f660d7e462a2e5f9cc5eee07c5213809977b2a6f3a7563b2419502eed16"
    },
    {
      "name": "LiquidCrystal I2C",
      "version": "1.1.1",
      "author": "Frank de Brabander",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "A library for I2C LCD displays.",
      "paragraph": "The library allows to control I2C displays with functions extremely similar to LiquidCrystal library. THIS LIBRARY MIGHT NOT BE COMPATIBLE WITH EXISTING SKETCHES.",
      "website": "https://github.com/marcoschwartz/LiquidCrystal_I2C",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/marcoschwartz/LiquidCrystal_I2C-1.1.1.zip",
      "archiveFileName": "LiquidCrystal_I2C-1.1.1.zip",
      "size": 19839,
      "checksum": "SHA-256:2126dec28d5e7644edc672674f297ec0e62dacfa32b9fd7d9a0c41cc6f33df7b"
    },
    {
      "name": "LiquidCrystal I2C",
      "version": "1.1.2",
      "author": "Frank de Brabander",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "A library for I2C LCD displays.",
      "paragraph": "The library allows to control I2C displays with functions extremely similar to LiquidCrystal library. THIS LIBRARY MIGHT NOT BE COMPATIBLE WITH EXISTING SKETCHES.",
      "website": "https://github.com/marcoschwartz/LiquidCrystal_I2C",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/marcoschwartz/LiquidCrystal_I2C-1.1.2.zip",
      "archiveFileName": "LiquidCrystal_I2C-1.1.2.zip",
      "size": 19843,
      "checksum": "SHA-256:792a649e47118ce547fd4343d0889a4271f76d7bed0738f7a9ebbec4d24d6753"
    },
    {
      "name": "DMXSerial",
      "version": "1.2.0",
      "author": "Matthias Hertel",
      "maintainer": "Matthias Hertel \u003cwww.mathertel.de\u003e",
      "sentence": "Enables DMX communication using the built-in serial port for Arduino boards UNO, Leonardo, Mega.",
      "paragraph": "This is a library to implement DMX controllers and devices.",
      "website": "http://www.mathertel.de/Arduino/DMXSerial.aspx",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mathertel/DMXSerial-1.2.0.zip",
      "archiveFileName": "DMXSerial-1.2.0.zip",
      "size": 13039,
      "checksum": "SHA-256:89de27e8e54e6ccec5e186f876087733d3aad6197394c89fea8b6faaefefe573"
    },
    {
      "name": "DMXSerial",
      "version": "1.3.0",
      "author": "Matthias Hertel",
      "maintainer": "Matthias Hertel \u003cwww.mathertel.de\u003e",
      "sentence": "Enables DMX communication using the built-in serial port for Arduino boards UNO, Leonardo, Mega.",
      "paragraph": "This is a library for implementing DMX controllers and devices.",
      "website": "http://www.mathertel.de/Arduino/DMXSerial.aspx",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mathertel/DMXSerial-1.3.0.zip",
      "archiveFileName": "DMXSerial-1.3.0.zip",
      "size": 13462,
      "checksum": "SHA-256:092a764c9f1d1cebe9f1d194dca1ca9b38856b907547aa8b718962545e8bd3bc"
    },
    {
      "name": "SPIFlash",
      "version": "1.0.0",
      "author": "Marzogh",
      "maintainer": "Marzogh \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond W25Q80BV SPI flash library for Arduino",
      "paragraph": "Winbond W25Q80BV SPI flash library for Arduino",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Marzogh/SPIFlash-1.0.0.zip",
      "archiveFileName": "SPIFlash-1.0.0.zip",
      "size": 23313,
      "checksum": "SHA-256:640af2ee15865f7f1678622781bd62ad84362c05264428847d9c0a0966bb9a76"
    },
    {
      "name": "SPIFlash",
      "version": "1.0.1",
      "author": "Prajwal Bhattaram",
      "maintainer": "Prajwal Bhattaram \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond W25Q80BV SPI flash library for Arduino.",
      "paragraph": "In its current form the library enables reading and writing bytes from and to various locations, reading and writing pages, sector, block and chip erase, powering down for low power operation and continuous read functions.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Marzogh/SPIFlash-1.0.1.zip",
      "archiveFileName": "SPIFlash-1.0.1.zip",
      "size": 23713,
      "checksum": "SHA-256:c7c245e85a171698914bdcf079f3e0eb22794997e65a36cf820b56dc407db203"
    },
    {
      "name": "SPIFlash",
      "version": "1.2.0",
      "author": "Prajwal Bhattaram",
      "maintainer": "Prajwal Bhattaram \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond W25Q80BV SPI flash library for Arduino.",
      "paragraph": "This library enables reading and writing bytes from and to various locations, reading and writing pages, sector, block and chip erase, powering down for low power operation and continuous read functions. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Marzogh/SPIFlash-1.2.0.zip",
      "archiveFileName": "SPIFlash-1.2.0.zip",
      "size": 25928,
      "checksum": "SHA-256:2b5d0ace0e54b043079066010da74ec146e955f3d9c3a531bdc4d36e2dec09b6"
    },
    {
      "name": "SPIFlash",
      "version": "1.2.1",
      "author": "Prajwal Bhattaram",
      "maintainer": "Prajwal Bhattaram \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond W25Q80BV SPI flash library for Arduino.",
      "paragraph": "This library enables reading and writing bytes from and to various locations, reading and writing pages, sector, block and chip erase, powering down for low power operation and continuous read functions. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Marzogh/SPIFlash-1.2.1.zip",
      "archiveFileName": "SPIFlash-1.2.1.zip",
      "size": 25744,
      "checksum": "SHA-256:8d24ae01336920dd74f04df5e3bff01dd853c59ba38cf9d75af6696035ddb7a5"
    },
    {
      "name": "SPIFlash",
      "version": "1.2.2",
      "author": "Prajwal Bhattaram",
      "maintainer": "Prajwal Bhattaram \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond W25Q80BV SPI flash library for Arduino.",
      "paragraph": "This library enables reading and writing bytes from and to various locations, reading and writing pages, sector, block and chip erase, powering down for low power operation and continuous read functions. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Marzogh/SPIFlash-1.2.2.zip",
      "archiveFileName": "SPIFlash-1.2.2.zip",
      "size": 25745,
      "checksum": "SHA-256:a569366b9b756def83a5f22f944e3d244ba3203f800aadab635164e7b9925142"
    },
    {
      "name": "SPIFlash",
      "version": "1.3.0",
      "author": "Marzogh",
      "maintainer": "Marzogh \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond SPI flash library for Arduino.",
      "paragraph": "This library enables read, write, erase and power functions on the following Winbond NOR Flash chips - W25X05CL, W25X10BV, W25X20BV, W25X40BV, W25Q80BV, W25Q16BV, W25Q32BV, W25Q64BV \u0026 W25Q128BV. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Marzogh/SPIFlash-1.3.0.zip",
      "archiveFileName": "SPIFlash-1.3.0.zip",
      "size": 66504,
      "checksum": "SHA-256:34e159d2e436d0242be0db7fc4252f5dd5a84e0dc4a69f69363f373b1a91077f"
    },
    {
      "name": "SPIFlash",
      "version": "1.3.1",
      "author": "Marzogh",
      "maintainer": "Marzogh \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond SPI flash library for Arduino.",
      "paragraph": "This library enables read, write, erase and power functions on the following Winbond NOR Flash chips - W25X05CL, W25X10BV, W25X20BV, W25X40BV, W25Q80BV, W25Q16BV, W25Q32BV, W25Q64BV \u0026 W25Q128BV. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Marzogh/SPIFlash-1.3.1.zip",
      "archiveFileName": "SPIFlash-1.3.1.zip",
      "size": 68074,
      "checksum": "SHA-256:4e87edb4645c55b718ae6360886194da1ac9fa55ff185275dd6aa0d39a68a84a"
    },
    {
      "name": "SPIFlash",
      "version": "1.3.2",
      "author": "Marzogh",
      "maintainer": "Marzogh \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond SPI flash library for Arduino.",
      "paragraph": "This library enables read, write, erase and power functions on the following Winbond NOR Flash chips - W25X05CL, W25X10BV, W25X20BV, W25X40BV, W25Q80BV, W25Q16BV, W25Q32BV, W25Q64BV \u0026 W25Q128BV. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Marzogh/SPIFlash-1.3.2.zip",
      "archiveFileName": "SPIFlash-1.3.2.zip",
      "size": 70083,
      "checksum": "SHA-256:0c85c588083c6dd4aaf7f2dfa95829cfa91e67d26692dc3a96d16d65e525d038"
    },
    {
      "name": "SPIFlash",
      "version": "2.0.0",
      "author": "Marzogh",
      "maintainer": "Marzogh \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond SPI flash library for Arduino.",
      "paragraph": "This library enables read, write, erase and power functions on the following Winbond NOR Flash chips - W25X05CL, W25X10BV, W25X20BV, W25X40BV, W25Q80BV, W25Q16BV, W25Q32BV, W25Q64BV \u0026 W25Q128BV. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Marzogh/SPIFlash-2.0.0.zip",
      "archiveFileName": "SPIFlash-2.0.0.zip",
      "size": 75351,
      "checksum": "SHA-256:dd0336e97487b868ab500f15b480214c44844c58f8986027d29edfc4d081ee26"
    },
    {
      "name": "SPIFlash",
      "version": "2.1.0",
      "author": "Marzogh",
      "maintainer": "Marzogh \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond SPI flash library for Arduino.",
      "paragraph": "This library enables read, write, erase and power functions on the following Winbond NOR Flash chips - W25X05CL, W25X10BV, W25X20BV, W25X40BV, W25Q80BV, W25Q16BV, W25Q32BV, W25Q64BV \u0026 W25Q128BV. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Marzogh/SPIFlash-2.1.0.zip",
      "archiveFileName": "SPIFlash-2.1.0.zip",
      "size": 76120,
      "checksum": "SHA-256:ba15631a8bda812f9db9c162ed7bf66991b30910733473527a9f89e313628f6f"
    },
    {
      "name": "SPIFlash",
      "version": "2.1.1",
      "author": "Marzogh",
      "maintainer": "Marzogh \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond SPI flash library for Arduino.",
      "paragraph": "This library enables read, write, erase and power functions on the following Winbond NOR Flash chips - W25X05CL, W25X10BV, W25X20BV, W25X40BV, W25Q80BV, W25Q16BV, W25Q32BV, W25Q64BV \u0026 W25Q128BV. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Marzogh/SPIFlash-2.1.1.zip",
      "archiveFileName": "SPIFlash-2.1.1.zip",
      "size": 76303,
      "checksum": "SHA-256:01b049b51937528aa4003dad4c55bf60c4297bffd0dd1d4ce58f98d730125adb"
    },
    {
      "name": "SPIFlash",
      "version": "2.2.0",
      "author": "Prajwal Bhattaram",
      "maintainer": "Prajwal Bhattaram \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond SPI flash library for Arduino.",
      "paragraph": "This library enables read, write, erase and power functions on the following Winbond NOR Flash chips - W25X05CL, W25X10BV, W25X20BV, W25X40BV, W25Q80BV, W25Q16BV, W25Q32BV, W25Q64BV \u0026 W25Q128BV. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Marzogh/SPIFlash-2.2.0.zip",
      "archiveFileName": "SPIFlash-2.2.0.zip",
      "size": 80755,
      "checksum": "SHA-256:5523c4c5b4fb4aec6c139a1abd7627460e7d2735207c63e771311fafb246b375"
    },
    {
      "name": "SPIFlash",
      "version": "2.3.0",
      "author": "Prajwal Bhattaram",
      "maintainer": "Prajwal Bhattaram \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond SPI flash library for Arduino.",
      "paragraph": "This library enables read, write, erase and power functions on the following Winbond NOR Flash chips - W25X05CL, W25X10BV, W25X20BV, W25X40BV, W25Q80BV, W25Q16BV, W25Q32BV, W25Q64BV \u0026 W25Q128BV. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Marzogh/SPIFlash-2.3.0.zip",
      "archiveFileName": "SPIFlash-2.3.0.zip",
      "size": 79800,
      "checksum": "SHA-256:b8931c27e9e22556647ce023c0a16d67a6488364ad2237694f69947b3bf9660a"
    },
    {
      "name": "SPIFlash",
      "version": "2.3.1",
      "author": "Prajwal Bhattaram",
      "maintainer": "Prajwal Bhattaram \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond SPI flash library for Arduino.",
      "paragraph": "This library enables read, write, erase and power functions on the following Winbond NOR Flash chips - W25X05CL, W25X10BV, W25X20BV, W25X40BV, W25Q80BV, W25Q16BV, W25Q32BV, W25Q64BV \u0026 W25Q128BV. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Marzogh/SPIFlash-2.3.1.zip",
      "archiveFileName": "SPIFlash-2.3.1.zip",
      "size": 79630,
      "checksum": "SHA-256:df3efd25ac6900ca9ec1d080f29bf50aceccfbe7d291e53f8fc5f8864843c5b5"
    },
    {
      "name": "SPIFlash",
      "version": "2.4.0",
      "author": "Prajwal Bhattaram",
      "maintainer": "Prajwal Bhattaram \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond SPI flash library for Arduino.",
      "paragraph": "This library enables read, write, erase and power functions on the following Winbond NOR Flash chips - W25X05CL, W25X10BV, W25X20BV, W25X40BV, W25Q80BV, W25Q16BV, W25Q32BV, W25Q64BV \u0026 W25Q128BV. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Marzogh/SPIFlash-2.4.0.zip",
      "archiveFileName": "SPIFlash-2.4.0.zip",
      "size": 81602,
      "checksum": "SHA-256:49d3fc413834053b7dc5ee571e152b51b69083339337bc3d9362cc961c1fb1dc"
    },
    {
      "name": "SPIFlash",
      "version": "2.5.0",
      "author": "Prajwal Bhattaram",
      "maintainer": "Prajwal Bhattaram \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond SPI flash library for Arduino.",
      "paragraph": "This library enables read, write, erase and power functions on the following Winbond NOR Flash chips - W25X05CL, W25X10BV, W25X20BV, W25X40BV, W25Q80BV, W25Q16BV, W25Q32BV, W25Q64BV \u0026 W25Q128BV. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Marzogh/SPIFlash-2.5.0.zip",
      "archiveFileName": "SPIFlash-2.5.0.zip",
      "size": 111815,
      "checksum": "SHA-256:09ec53ca05fd9814b84d868a80fef27da07cb7bc13006f303d6440811452f87f"
    },
    {
      "name": "SPIFlash",
      "version": "2.6.0",
      "author": "Prajwal Bhattaram",
      "maintainer": "Prajwal Bhattaram \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond SPI flash library for Arduino.",
      "paragraph": "This library enables read, write, erase and power functions on the following Winbond NOR Flash chips - W25X05CL, W25X10BV, W25X20BV, W25X40BV, W25Q80BV, W25Q16BV, W25Q32BV, W25Q64BV \u0026 W25Q128BV. All other Winbond flash chips can also be used with this library from v2.6.0 onwards. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "avr",
        "sam",
        "samd",
        "esp8266",
        "esp32",
        "simblee",
        "rtl8195a"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Marzogh/SPIFlash-2.6.0.zip",
      "archiveFileName": "SPIFlash-2.6.0.zip",
      "size": 127032,
      "checksum": "SHA-256:d50bee25a23bd4efefc8562969bf012b3054bcea28238c1431638b25ee1d65ed"
    },
    {
      "name": "DMXSerial2",
      "version": "1.1.0",
      "author": "Matthias Hertel",
      "maintainer": "Matthias Hertel, http://www.mathertel.de",
      "sentence": "Enables building DMX/RDM devices using the built-in serial port for Arduino boards UNO, Leonardo, Mega.",
      "paragraph": "This is a library to implement a DMX devices that also listen and respond to RDM commands to retrieve information from the DMX devices.",
      "website": "http://www.mathertel.de/Arduino/DMXSerial2.aspx",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mathertel/DMXSerial2-1.1.0.zip",
      "archiveFileName": "DMXSerial2-1.1.0.zip",
      "size": 28446,
      "checksum": "SHA-256:b25d360f25504bb63bcf25ce80e3d96ab4c119b736618f254d7bf6e684db2d5b"
    },
    {
      "name": "DMXSerial2",
      "version": "1.2.0",
      "author": "Matthias Hertel",
      "maintainer": "Matthias Hertel, http://www.mathertel.de",
      "sentence": "Enables building DMX/RDM devices using the built-in serial port for Arduino boards UNO, Leonardo, Mega.",
      "paragraph": "This is a library to implement a DMX devices that also listen and respond to RDM commands to retrieve information from the DMX devices.",
      "website": "http://www.mathertel.de/Arduino/DMXSerial2.aspx",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mathertel/DMXSerial2-1.2.0.zip",
      "archiveFileName": "DMXSerial2-1.2.0.zip",
      "size": 28587,
      "checksum": "SHA-256:9ec1f438be44f07c943ad12ad554c8e9304dd3b697e3f0ca22f77c2ac8a7f5eb"
    },
    {
      "name": "Radio",
      "version": "1.0.0",
      "author": "Matthias Hertel",
      "maintainer": "Matthias Hertel, \u003cwww.mathertel.de\u003e",
      "sentence": "Library for controlling FM radio receiver chips.",
      "paragraph": "This library implements the functions to control the FM radio receiver chips TEA5767, RDA5807M, SI4703, SI4705 to build a FM radio receiver. The library unifies the functions for all the chips so they may be swapped on demand.",
      "website": "http://www.mathertel.de/Arduino/RadioLibrary.aspx",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mathertel/Radio-1.0.0.zip",
      "archiveFileName": "Radio-1.0.0.zip",
      "size": 112963,
      "checksum": "SHA-256:6c920609e059326d25b8a2d9a8f34fe24d0b0dda1244e071540e17ddd4767674"
    },
    {
      "name": "ThingSpeak",
      "version": "1.0.1",
      "author": "MathWorks \u003cthingspeak@mathworks.com\u003e",
      "maintainer": "MathWorks \u003cthingspeak@mathworks.com\u003e",
      "sentence": "ThingSpeak Communication Library for Arduino",
      "paragraph": "ThingSpeak ( https://www.thingspeak.com ) is a free IoT service for building systems that collect, analyze, and react to their environments.",
      "website": "https://www.thingspeak.com/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mathworks/ThingSpeak-1.0.1.zip",
      "archiveFileName": "ThingSpeak-1.0.1.zip",
      "size": 146811,
      "checksum": "SHA-256:0f948395f72c609af859bd03288183a42a3bf4357fbd713cad6e17539828ce7c"
    },
    {
      "name": "ThingSpeak",
      "version": "1.1.0",
      "author": "MathWorks \u003cthingspeak@mathworks.com\u003e",
      "maintainer": "MathWorks \u003cthingspeak@mathworks.com\u003e",
      "sentence": "ThingSpeak Communication Library for Arduino \u0026 ESP8266",
      "paragraph": "ThingSpeak ( https://www.thingspeak.com ) is a free IoT service for building systems that collect, analyze, and react to their environments.",
      "website": "https://www.thingspeak.com/",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mathworks/ThingSpeak-1.1.0.zip",
      "archiveFileName": "ThingSpeak-1.1.0.zip",
      "size": 148943,
      "checksum": "SHA-256:e0b4b4a2dd0dd646356ab1336d14a19e4d0d043cd85556f54fb2e2e3c3f3ce9f"
    },
    {
      "name": "ThingSpeak",
      "version": "1.1.1",
      "author": "MathWorks \u003cthingspeak@mathworks.com\u003e",
      "maintainer": "MathWorks \u003cthingspeak@mathworks.com\u003e",
      "sentence": "ThingSpeak Communication Library for Arduino \u0026 ESP8266",
      "paragraph": "ThingSpeak ( https://www.thingspeak.com ) is a free IoT service for building systems that collect, analyze, and react to their environments.",
      "website": "https://www.thingspeak.com/",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mathworks/ThingSpeak-1.1.1.zip",
      "archiveFileName": "ThingSpeak-1.1.1.zip",
      "size": 150130,
      "checksum": "SHA-256:16455151b36a38c5204e382c52d6f52fa067be425311bb7dd07467998a69b798"
    },
    {
      "name": "ThingSpeak",
      "version": "1.2.0",
      "author": "MathWorks \u003csupport@thingspeak.com\u003e",
      "maintainer": "MathWorks \u003csupport@thingspeak.com\u003e",
      "sentence": "ThingSpeak Communication Library for Arduino \u0026 ESP8266",
      "paragraph": "ThingSpeak ( https://www.thingspeak.com ) is an analytic IoT platform service that allows you to aggregate, visualize and analyze live data streams in the cloud.",
      "website": "https://www.thingspeak.com/",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266",
        "samd",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mathworks/ThingSpeak-1.2.0.zip",
      "archiveFileName": "ThingSpeak-1.2.0.zip",
      "size": 150043,
      "checksum": "SHA-256:9ea222495ec85c25e89bf6689d65dda857721063773dcc2dcf6d219f9c6d8330"
    },
    {
      "name": "ThingSpeak",
      "version": "1.2.1",
      "author": "MathWorks \u003csupport@thingspeak.com\u003e",
      "maintainer": "MathWorks \u003csupport@thingspeak.com\u003e",
      "sentence": "ThingSpeak Communication Library for Arduino \u0026 ESP8266",
      "paragraph": "ThingSpeak ( https://www.thingspeak.com ) is an analytic IoT platform service that allows you to aggregate, visualize and analyze live data streams in the cloud.",
      "website": "https://www.thingspeak.com/",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266",
        "sam",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mathworks/ThingSpeak-1.2.1.zip",
      "archiveFileName": "ThingSpeak-1.2.1.zip",
      "size": 147862,
      "checksum": "SHA-256:80a3475c8d9ef1c6549c1e7e1d97635f59823c51e39a16d153950c4f5f1203b9"
    },
    {
      "name": "ThingSpeak",
      "version": "1.3.0",
      "author": "MathWorks \u003csupport@thingspeak.com\u003e",
      "maintainer": "MathWorks \u003csupport@thingspeak.com\u003e",
      "sentence": "ThingSpeak Communication Library for Arduino \u0026 ESP8266",
      "paragraph": "ThingSpeak ( https://www.thingspeak.com ) is an analytic IoT platform service that allows you to aggregate, visualize and analyze live data streams in the cloud.",
      "website": "https://www.thingspeak.com/",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266",
        "sam",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mathworks/ThingSpeak-1.3.0.zip",
      "archiveFileName": "ThingSpeak-1.3.0.zip",
      "size": 157428,
      "checksum": "SHA-256:9d0fff30a5e82fbc27af8a6338600bdf11da61755f81a72e1e71140d14ab68ef"
    },
    {
      "name": "ThingSpeak",
      "version": "1.0.0",
      "author": "MathWorks \u003cthingspeak@mathworks.com\u003e",
      "maintainer": "MathWorks \u003cthingspeak@mathworks.com\u003e",
      "sentence": "ThingSpeak Communication Library for Arduino",
      "paragraph": "ThingSpeak ( https://www.thingspeak.com ) is a free IoT service for building systems that collect, analyze, and react to their environments.",
      "website": "https://www.thingspeak.com/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mathworks/ThingSpeak-1.0.0.zip",
      "archiveFileName": "ThingSpeak-1.0.0.zip",
      "size": 30746,
      "checksum": "SHA-256:01e6be3366b225cffb0401f841549d3e8beb94cfaf4cb9b749306ed24c410e87"
    },
    {
      "name": "DallasTemperature",
      "version": "3.7.2",
      "author": "Miles Burton \u003cmiles@mnetcs.com\u003e, Tim Newsome \u003cnuisance@casualhacker.net\u003e, Guil Barros \u003cgfbarros@bappos.com\u003e, Rob Tillaart \u003crob.tillaart@gmail.com\u003e",
      "maintainer": "Miles Burton \u003cmiles@mnetcs.com\u003e",
      "sentence": "Arduino Library for Dallas Temperature ICs",
      "paragraph": "Supports DS18B20, DS18S20, DS1822, DS1820",
      "website": "https://github.com/milesburton/Arduino-Temperature-Control-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/milesburton/DallasTemperature-3.7.2.zip",
      "archiveFileName": "DallasTemperature-3.7.2.zip",
      "size": 26113,
      "checksum": "SHA-256:d03c355588958ede15822a3ea25ca4387c5a154a44209766212b74636bd9338f"
    },
    {
      "name": "DallasTemperature",
      "version": "3.7.5",
      "author": "Miles Burton \u003cmiles@mnetcs.com\u003e, Tim Newsome \u003cnuisance@casualhacker.net\u003e, Guil Barros \u003cgfbarros@bappos.com\u003e, Rob Tillaart \u003crob.tillaart@gmail.com\u003e",
      "maintainer": "Miles Burton \u003cmiles@mnetcs.com\u003e",
      "sentence": "Arduino Library for Dallas Temperature ICs",
      "paragraph": "Supports DS18B20, DS18S20, DS1822, DS1820",
      "website": "https://github.com/milesburton/Arduino-Temperature-Control-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/milesburton/DallasTemperature-3.7.5.zip",
      "archiveFileName": "DallasTemperature-3.7.5.zip",
      "size": 27284,
      "checksum": "SHA-256:3e4eaa09a9b59dedf4c8ba5a9eba73427951167920f14ca37532c16519183511"
    },
    {
      "name": "DallasTemperature",
      "version": "3.7.6",
      "author": "Miles Burton \u003cmiles@mnetcs.com\u003e, Tim Newsome \u003cnuisance@casualhacker.net\u003e, Guil Barros \u003cgfbarros@bappos.com\u003e, Rob Tillaart \u003crob.tillaart@gmail.com\u003e",
      "maintainer": "Miles Burton \u003cmiles@mnetcs.com\u003e",
      "sentence": "Arduino Library for Dallas Temperature ICs",
      "paragraph": "Supports DS18B20, DS18S20, DS1822, DS1820",
      "website": "https://github.com/milesburton/Arduino-Temperature-Control-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/milesburton/DallasTemperature-3.7.6.zip",
      "archiveFileName": "DallasTemperature-3.7.6.zip",
      "size": 27378,
      "checksum": "SHA-256:a7cf51566120a20f1bd3a6155a52b235eb939dd93c41d5a326d038190682e3ec"
    },
    {
      "name": "MINDSi",
      "version": "2.0.0",
      "author": "MINDSi corp.",
      "maintainer": "MINDSi \u003ccode@mymindsi.com\u003e",
      "sentence": "Code to assist with running MINDSi robots",
      "paragraph": "This library contains code for running all the sensors sold with MINDSi kits, and examples for each chassis",
      "website": "http://mindsieducation.com/programming-resources",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MINDS-i/MINDSi-2.0.0.zip",
      "archiveFileName": "MINDSi-2.0.0.zip",
      "size": 28353,
      "checksum": "SHA-256:84548629785f15ea2dafd804bec963562163d17c72df116e7fc8ece18ddf778d"
    },
    {
      "name": "MINDSi",
      "version": "2.1.0",
      "author": "MINDSi corp.",
      "maintainer": "MINDSi \u003ccode@mymindsi.com\u003e",
      "sentence": "Code to assist with running MINDSi robots",
      "paragraph": "This library contains code for running all the sensors sold with MINDSi kits, and examples for each chassis",
      "website": "http://mindsieducation.com/programming-resources",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MINDS-i/MINDSi-2.1.0.zip",
      "archiveFileName": "MINDSi-2.1.0.zip",
      "size": 28501,
      "checksum": "SHA-256:b5a439af5d81fe8bd7d00a1dfa2d260270857ee7fe85d1c2d6fc458dcdcd62ee"
    },
    {
      "name": "MINDSi",
      "version": "2.2.0",
      "author": "MINDSi corp.",
      "maintainer": "MINDSi \u003ccode@mymindsi.com\u003e",
      "sentence": "Code to assist with running MINDSi robots",
      "paragraph": "This library contains code for running all the sensors sold with MINDSi kits, and examples for each chassis",
      "website": "http://mindsieducation.com/programming-resources",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MINDS-i/MINDSi-2.2.0.zip",
      "archiveFileName": "MINDSi-2.2.0.zip",
      "size": 32754,
      "checksum": "SHA-256:a0e253670f676a81a59c0c5ae2b98e63c1ab23d5282a8cade569d329dcfa2ca6"
    },
    {
      "name": "MINDSi",
      "version": "2.2.1",
      "author": "MINDSi corp.",
      "maintainer": "MINDSi \u003ccode@mymindsi.com\u003e",
      "sentence": "Code to assist with running MINDSi robots",
      "paragraph": "This library contains code for running all the sensors sold with MINDSi kits, and examples for each chassis",
      "website": "http://mindsieducation.com/programming-resources",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MINDS-i/MINDSi-2.2.1.zip",
      "archiveFileName": "MINDSi-2.2.1.zip",
      "size": 32825,
      "checksum": "SHA-256:31533ec5e75922bb988f641ef761737bc1b99a3ed4c930137561c0b4daa4dd33"
    },
    {
      "name": "MINDSi",
      "version": "2.2.2",
      "author": "MINDSi corp.",
      "maintainer": "MINDSi \u003ccode@mymindsi.com\u003e",
      "sentence": "Code to assist with running MINDSi robots",
      "paragraph": "This library contains code for running all the sensors sold with MINDSi kits, and examples for each chassis",
      "website": "http://mindsieducation.com/programming-resources",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MINDS-i/MINDSi-2.2.2.zip",
      "archiveFileName": "MINDSi-2.2.2.zip",
      "size": 32815,
      "checksum": "SHA-256:813f897023ea6faa7a16345d82f4c5e459bddc1021b364aafe0ece5c8b4ffe92"
    },
    {
      "name": "MINDSi",
      "version": "2.2.3",
      "author": "MINDSi corp.",
      "maintainer": "MINDSi \u003ccode@mymindsi.com\u003e",
      "sentence": "Code to assist with running MINDSi robots",
      "paragraph": "This library contains code for running all the sensors sold with MINDSi kits, and examples for each chassis",
      "website": "http://mindsieducation.com/programming-resources",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MINDS-i/MINDSi-2.2.3.zip",
      "archiveFileName": "MINDSi-2.2.3.zip",
      "size": 32816,
      "checksum": "SHA-256:a361aa00fb10772aea99f8cd8c87c8b789d35ed087413bd648e2074270b2e731"
    },
    {
      "name": "MINDSi",
      "version": "3.0.0",
      "author": "MINDSi corp.",
      "maintainer": "MINDSi \u003ccode@mymindsi.com\u003e",
      "sentence": "Code to assist with running MINDSi robots",
      "paragraph": "This library contains code for running all the sensors sold with MINDSi kits, and examples for each chassis",
      "website": "http://mindsieducation.com/programming-resources",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MINDS-i/MINDSi-3.0.0.zip",
      "archiveFileName": "MINDSi-3.0.0.zip",
      "size": 34477,
      "checksum": "SHA-256:eaa7a8a57863aa9d502c5d2da922d6748e6905b5919d7b135cf0ac3b360dd325"
    },
    {
      "name": "MINDSi",
      "version": "3.0.1",
      "author": "MINDSi corp.",
      "maintainer": "MINDSi \u003ccode@mymindsi.com\u003e",
      "sentence": "Code to assist with running MINDSi robots",
      "paragraph": "This library contains code for running all the sensors sold with MINDSi kits, and examples for each chassis",
      "website": "http://mindsieducation.com/programming-resources",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MINDS-i/MINDSi-3.0.1.zip",
      "archiveFileName": "MINDSi-3.0.1.zip",
      "size": 34699,
      "checksum": "SHA-256:c60a646e3a990842fdce6265bfb03e1d2a4c150b937dc4cd7b91c9d60007d888"
    },
    {
      "name": "Mirobot",
      "version": "2.0.0",
      "author": "Ben Pirt \u003cben@pirt.co.uk\u003e",
      "maintainer": "Ben Pirt \u003cben@pirt.co.uk\u003e",
      "sentence": "This is the library that makes Mirobot (http://mirobot.io) work.",
      "paragraph": "Mirobot is an easy to use robotics kit for teaching kids about technology. This library contains the main firmware as well as the routines you need to program it yourself directly.",
      "website": "http://mirobot.io",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mirobot/Mirobot-2.0.0.zip",
      "archiveFileName": "Mirobot-2.0.0.zip",
      "size": 23935,
      "checksum": "SHA-256:b549f4bf22dce4874666c0ccadbc137ff96aee0e611c7d670aac5537e11c3f96"
    },
    {
      "name": "Mirobot",
      "version": "2.0.1",
      "author": "Ben Pirt \u003cben@pirt.co.uk\u003e",
      "maintainer": "Ben Pirt \u003cben@pirt.co.uk\u003e",
      "sentence": "This is the library that makes Mirobot (http://mirobot.io) work.",
      "paragraph": "Mirobot is an easy to use robotics kit for teaching kids about technology. This library contains the main firmware as well as the routines you need to program it yourself directly.",
      "website": "http://mirobot.io",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mirobot/Mirobot-2.0.1.zip",
      "archiveFileName": "Mirobot-2.0.1.zip",
      "size": 24512,
      "checksum": "SHA-256:2d68a873eae242e35140cff55d883c910b49ba6adf730d5b0cb9ce5d6e456d6e"
    },
    {
      "name": "Mirobot",
      "version": "2.0.10",
      "author": "Ben Pirt \u003cben@pirt.co.uk\u003e",
      "maintainer": "Ben Pirt \u003cben@pirt.co.uk\u003e",
      "sentence": "This is the library that makes Mirobot (http://mirobot.io) work.",
      "paragraph": "Mirobot is an easy to use robotics kit for teaching kids about technology. This library contains the main firmware as well as the routines you need to program it yourself directly.",
      "website": "http://mirobot.io",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mirobot/Mirobot-2.0.10.zip",
      "archiveFileName": "Mirobot-2.0.10.zip",
      "size": 113481,
      "checksum": "SHA-256:c34235fb85bafbeaafc84146bf27d921af18b410544c5be5bb2d284bf0a96bb2"
    },
    {
      "name": "Mirobot",
      "version": "2.0.2",
      "author": "Ben Pirt \u003cben@pirt.co.uk\u003e",
      "maintainer": "Ben Pirt \u003cben@pirt.co.uk\u003e",
      "sentence": "This is the library that makes Mirobot (http://mirobot.io) work.",
      "paragraph": "Mirobot is an easy to use robotics kit for teaching kids about technology. This library contains the main firmware as well as the routines you need to program it yourself directly.",
      "website": "http://mirobot.io",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mirobot/Mirobot-2.0.2.zip",
      "archiveFileName": "Mirobot-2.0.2.zip",
      "size": 24346,
      "checksum": "SHA-256:72a7c0eee770b9710b8c70966b77dbc8738968a88ca8487dd716efa5e19509c6"
    },
    {
      "name": "Mirobot",
      "version": "2.0.6",
      "author": "Ben Pirt \u003cben@pirt.co.uk\u003e",
      "maintainer": "Ben Pirt \u003cben@pirt.co.uk\u003e",
      "sentence": "This is the library that makes Mirobot (http://mirobot.io) work.",
      "paragraph": "Mirobot is an easy to use robotics kit for teaching kids about technology. This library contains the main firmware as well as the routines you need to program it yourself directly.",
      "website": "http://mirobot.io",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mirobot/Mirobot-2.0.6.zip",
      "archiveFileName": "Mirobot-2.0.6.zip",
      "size": 25054,
      "checksum": "SHA-256:fb43bb891ad0fb8b8aebbd987e5762d67977a468b8457e039b363a119ef4a6ab"
    },
    {
      "name": "ArduinoUnit",
      "version": "2.1.0",
      "author": "Matthew Murdoch",
      "maintainer": "Matthew Murdoch \u003cmatthew.murdoch.0@gmail.com\u003e",
      "sentence": "Unit test framework for arduino projects.",
      "paragraph": "ArduinoUnit is a unit testing framework for Arduino libraries.",
      "website": "https://github.com/mmurdoch/arduinounit",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mmurdoch/ArduinoUnit-2.1.0.zip",
      "archiveFileName": "ArduinoUnit-2.1.0.zip",
      "size": 296964,
      "checksum": "SHA-256:a9dc6b02558e2217dd931a0e51228af62fc7b687254c8e04241871fc5ca8ad0d"
    },
    {
      "name": "ArduinoUnit",
      "version": "2.2.0",
      "author": "Matthew Murdoch",
      "maintainer": "Matthew Murdoch \u003cmatthew.murdoch.0@gmail.com\u003e",
      "sentence": "Unit test framework for arduino projects.",
      "paragraph": "ArduinoUnit is a unit testing framework for Arduino libraries.",
      "website": "https://github.com/mmurdoch/arduinounit",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mmurdoch/ArduinoUnit-2.2.0.zip",
      "archiveFileName": "ArduinoUnit-2.2.0.zip",
      "size": 302437,
      "checksum": "SHA-256:9786ae2c0d2f6a969f3dba657d9b9d3fdc7e7b3a5c3dc8d21058dfcf95c14492"
    },
    {
      "name": "JTAG",
      "version": "1.0.1",
      "author": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "maintainer": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "sentence": "A library to perform JTAG operations and play XSVF.",
      "paragraph": "This library is an API to perform JTAG operations and play XSVF files.",
      "website": "https://github.com/mrjimenez/JTAG",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrjimenez/JTAG-1.0.1.zip",
      "archiveFileName": "JTAG-1.0.1.zip",
      "size": 51948,
      "checksum": "SHA-256:3f2b95b047421435d2179e31c14e5a77b1b28ad2b81cd0f672de7c2219ce9e6f"
    },
    {
      "name": "JTAG",
      "version": "1.0.10",
      "author": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "maintainer": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "sentence": "A library to perform JTAG operations and play XSVF.",
      "paragraph": "This library is an API to perform JTAG operations and play XSVF files.",
      "website": "https://github.com/mrjimenez/JTAG",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrjimenez/JTAG-1.0.10.zip",
      "archiveFileName": "JTAG-1.0.10.zip",
      "size": 76934,
      "checksum": "SHA-256:e1db565ef553f359b97622936f6cf6cca1ad8f6aeddd49dee475ec5c97d60cd2"
    },
    {
      "name": "JTAG",
      "version": "1.0.11",
      "author": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "maintainer": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "sentence": "A library to perform JTAG operations and play XSVF.",
      "paragraph": "This library is an API to perform JTAG operations and play XSVF files.",
      "website": "https://github.com/mrjimenez/JTAG",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrjimenez/JTAG-1.0.11.zip",
      "archiveFileName": "JTAG-1.0.11.zip",
      "size": 79286,
      "checksum": "SHA-256:573b1c13b86aa697b189e90e07f7da3eb2fb0443f8c4a492805f2aef0b6a3194"
    },
    {
      "name": "JTAG",
      "version": "1.0.12",
      "author": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "maintainer": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "sentence": "A library to perform JTAG operations and play XSVF.",
      "paragraph": "This library is an API to perform JTAG operations and play XSVF files.",
      "website": "https://github.com/mrjimenez/JTAG",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrjimenez/JTAG-1.0.12.zip",
      "archiveFileName": "JTAG-1.0.12.zip",
      "size": 79415,
      "checksum": "SHA-256:b91d227045f3319c561bf1158418f7072d3dc2924a77799f62fa459e376543e6"
    },
    {
      "name": "JTAG",
      "version": "1.0.13",
      "author": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "maintainer": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "sentence": "A library to perform JTAG operations and play XSVF.",
      "paragraph": "This library is an API to perform JTAG operations and play XSVF files.",
      "website": "https://github.com/mrjimenez/JTAG",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrjimenez/JTAG-1.0.13.zip",
      "archiveFileName": "JTAG-1.0.13.zip",
      "size": 79453,
      "checksum": "SHA-256:9be762bb5c0b17257f49aebc2fa6c8157475781b6965bf62cf21ba174a2a2033"
    },
    {
      "name": "JTAG",
      "version": "1.0.14",
      "author": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "maintainer": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "sentence": "A library to perform JTAG operations and play XSVF.",
      "paragraph": "This library is an API to perform JTAG operations and play XSVF files.",
      "website": "https://github.com/mrjimenez/JTAG",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrjimenez/JTAG-1.0.14.zip",
      "archiveFileName": "JTAG-1.0.14.zip",
      "size": 79518,
      "checksum": "SHA-256:f58a549da737035a4f7f75c96a9c4de4288c3dc0b2605cd0334480ae6f10fbc5"
    },
    {
      "name": "JTAG",
      "version": "1.0.3",
      "author": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "maintainer": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "sentence": "A library to perform JTAG operations and play XSVF.",
      "paragraph": "This library is an API to perform JTAG operations and play XSVF files.",
      "website": "https://github.com/mrjimenez/JTAG",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrjimenez/JTAG-1.0.3.zip",
      "archiveFileName": "JTAG-1.0.3.zip",
      "size": 59878,
      "checksum": "SHA-256:4da86ba160160e70137f7c754c44477f401a60a631ea9e1b6a3aba5dce8d9b55"
    },
    {
      "name": "JTAG",
      "version": "1.0.5",
      "author": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "maintainer": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "sentence": "A library to perform JTAG operations and play XSVF.",
      "paragraph": "This library is an API to perform JTAG operations and play XSVF files.",
      "website": "https://github.com/mrjimenez/JTAG",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrjimenez/JTAG-1.0.5.zip",
      "archiveFileName": "JTAG-1.0.5.zip",
      "size": 66836,
      "checksum": "SHA-256:9e5720a5e1ea410218edd5b0346034b2aad33ebb759c4c027db33c18fb2f8cdd"
    },
    {
      "name": "JTAG",
      "version": "1.0.6",
      "author": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "maintainer": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "sentence": "A library to perform JTAG operations and play XSVF.",
      "paragraph": "This library is an API to perform JTAG operations and play XSVF files.",
      "website": "https://github.com/mrjimenez/JTAG",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrjimenez/JTAG-1.0.6.zip",
      "archiveFileName": "JTAG-1.0.6.zip",
      "size": 67119,
      "checksum": "SHA-256:0fb1d9608a644d936f9d7562aa9008b3337ed1130b956077099bcc3589de6afc"
    },
    {
      "name": "JTAG",
      "version": "1.0.7",
      "author": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "maintainer": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "sentence": "A library to perform JTAG operations and play XSVF.",
      "paragraph": "This library is an API to perform JTAG operations and play XSVF files.",
      "website": "https://github.com/mrjimenez/JTAG",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrjimenez/JTAG-1.0.7.zip",
      "archiveFileName": "JTAG-1.0.7.zip",
      "size": 67119,
      "checksum": "SHA-256:b80f6c0b6d29321be1e86329b62eda87cca592216415a4aa7106b90e69b3999a"
    },
    {
      "name": "JTAG",
      "version": "1.0.8",
      "author": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "maintainer": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "sentence": "A library to perform JTAG operations and play XSVF.",
      "paragraph": "This library is an API to perform JTAG operations and play XSVF files.",
      "website": "https://github.com/mrjimenez/JTAG",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrjimenez/JTAG-1.0.8.zip",
      "archiveFileName": "JTAG-1.0.8.zip",
      "size": 67100,
      "checksum": "SHA-256:35b4fdc9851bdbe6278386a35d470272f1117b22a131c4492cf94ccda6e85511"
    },
    {
      "name": "JTAG",
      "version": "1.0.9",
      "author": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "maintainer": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "sentence": "A library to perform JTAG operations and play XSVF.",
      "paragraph": "This library is an API to perform JTAG operations and play XSVF files.",
      "website": "https://github.com/mrjimenez/JTAG",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrjimenez/JTAG-1.0.9.zip",
      "archiveFileName": "JTAG-1.0.9.zip",
      "size": 75059,
      "checksum": "SHA-256:82a4faa32d2e72a1d36f9839bf44a6e937c491271394c1b4f395213ad1bc8189"
    },
    {
      "name": "AtTouch",
      "version": "1.0.4",
      "author": "Noah Shibley, Michael Grant",
      "maintainer": "Noah Shibley",
      "sentence": "Arduino Library for the Atmel AT42QT1070 QTouch 7-channel Sensor IC via i2c.",
      "paragraph": "Supports Wire or I2c libraries.",
      "website": "https://github.com/nullboundary/AtTouch",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nullboundary/AtTouch-1.0.4.zip",
      "archiveFileName": "AtTouch-1.0.4.zip",
      "size": 6376,
      "checksum": "SHA-256:7ed26e2ee81c3effac22f9ce9f25a2a3b7920bca469a9c9baa3739b2fc0558c1"
    },
    {
      "name": "SST25VF",
      "version": "0.1.0",
      "author": "Noah Shibley",
      "maintainer": "Noah Shibley",
      "sentence": "Arduino Library for controlling the SST Nor Serial Flash SST25VF family.",
      "paragraph": "Much of the code in the library is Based on SST code from: (Rugged Circuits and Wusik) Should work for SST25VF004, SST25VF016, SST25VF064, etc.",
      "website": "https://github.com/nullboundary/SST25VF",
      "category": "Data Storage",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nullboundary/SST25VF-0.1.0.zip",
      "archiveFileName": "SST25VF-0.1.0.zip",
      "size": 4114,
      "checksum": "SHA-256:dca6ef2ce37856a595a11069cf34ffc1b805d14944d3d2d00a46ba14297ce7a3"
    },
    {
      "name": "Comp6DOF_n0m1",
      "version": "0.1.1",
      "author": "Noah Shibley, Michael Grant",
      "maintainer": "Noah Shibley",
      "sentence": "An Arduino Library for compass tilt compensation and hard iron offset",
      "paragraph": "Arduino Library for compass tilt compensation and hard iron offset. Part of this code was ported to C from the Freescale appnote AN4248. http://www.freescale.com/files/sensors/doc/app_note/AN4248.pdf The sine function comes from Dave Dribin's TrigInt lib. https://bitbucket.org/ddribin/trigint",
      "website": "https://github.com/n0m1/Comp6DOF_n0m1",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/n0m1/Comp6DOF_n0m1-0.1.1.zip",
      "archiveFileName": "Comp6DOF_n0m1-0.1.1.zip",
      "size": 15615,
      "checksum": "SHA-256:0501160f4523e13d74b9d48f1efdfdd54318b707ad31f3985bb9baec273a7062"
    },
    {
      "name": "MMA8453_n0m1",
      "version": "1.0.1",
      "author": "Noah Shibley, Michael Grant",
      "maintainer": "Noah Shibley",
      "sentence": "an Arduino Library for the Freescale MMA8453Q \u0026 MMA8452Q accelerometer.",
      "paragraph": "This library has been tested with the Freescale MMA8453Q and MMA8452Q Accelerometer chips. MMA8451 has 14bits digital resolution and it is not implemented in this version.",
      "website": "https://github.com/n0m1/MMA8453_n0m1",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/n0m1/MMA8453_n0m1-1.0.1.zip",
      "archiveFileName": "MMA8453_n0m1-1.0.1.zip",
      "size": 12519,
      "checksum": "SHA-256:32d6303af81ea51ed93a2a63c95c6af2959e084ee3c5f12437bb8815b6d404da"
    },
    {
      "name": "Sleep_n0m1",
      "version": "1.0.0",
      "author": "Noah Shibley, Michael Grant",
      "maintainer": "Noah Shibley",
      "sentence": "A library that sets the Arduino into sleep mode for a specified length of time, or until an interrupt",
      "paragraph": "An Arduino library to place the arduino into sleep mode for a specific length of time, or a specific number of sleep cycles.",
      "website": "https://github.com/n0m1/Sleep_n0m1",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/n0m1/Sleep_n0m1-1.0.0.zip",
      "archiveFileName": "Sleep_n0m1-1.0.0.zip",
      "size": 8470,
      "checksum": "SHA-256:36dff77550b81bd578a8c7dfb89dfbd014044d38825df42d116ea78f2a44b2a2"
    },
    {
      "name": "Sleep_n0m1",
      "version": "1.1.1",
      "author": "Noah Shibley, Michael Grant",
      "maintainer": "Noah Shibley",
      "sentence": "A library that sets the Arduino into sleep mode for a specified length of time, or until an interrupt",
      "paragraph": "An Arduino library to place the arduino into sleep mode for a specific length of time, or a specific number of sleep cycles.",
      "website": "https://github.com/n0m1/Sleep_n0m1",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/n0m1/Sleep_n0m1-1.1.1.zip",
      "archiveFileName": "Sleep_n0m1-1.1.1.zip",
      "size": 8865,
      "checksum": "SHA-256:2ff3200aa75ca3a56d608927ad4069acf4ba3508169030797a722401645bfa43"
    },
    {
      "name": "AnalogTouch",
      "version": "1.0.0",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "AnalogTouch library for Arduino",
      "paragraph": "Measures the capacitive touch of an analog Arduino pin.",
      "website": "https://github.com/NicoHood/AnalogTouch",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NicoHood/AnalogTouch-1.0.0.zip",
      "archiveFileName": "AnalogTouch-1.0.0.zip",
      "size": 5250,
      "checksum": "SHA-256:624fb872795ba6f763837a81cbb06c773a3a446083b288a2cd7ed9cae7de2069"
    },
    {
      "name": "Nintendo",
      "version": "1.2.1",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "Connect all your favourite Nintendo Controllers to your Arduino.",
      "paragraph": "Currently supported: Gamecube, N64. Carefully read the wiki pages to know how to setup the controller connection.",
      "website": "https://github.com/NicoHood/Nintendo",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NicoHood/Nintendo-1.2.1.zip",
      "archiveFileName": "Nintendo-1.2.1.zip",
      "size": 234945,
      "checksum": "SHA-256:c21733488643c231114143fdbdca560d9a3171eb3a0c6a035ddfff5e167be7e2"
    },
    {
      "name": "PinChangeInterrupt",
      "version": "1.2.0",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "A simple \u0026 compact PinChangeInterrupt library for Arduino.",
      "paragraph": "PinChangeInterrupt library with a resource friendly implementation (API and LowLevel). PinChangeInterrupts are different than normal Interrupts. See readme for more information.",
      "website": "https://github.com/NicoHood/PinChangeInterrupt",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NicoHood/PinChangeInterrupt-1.2.0.zip",
      "archiveFileName": "PinChangeInterrupt-1.2.0.zip",
      "size": 54025,
      "checksum": "SHA-256:f058b6ca3caf9658722b2889dbe7291e70eba529930e80c649e00b1db02b0a61"
    },
    {
      "name": "PinChangeInterrupt",
      "version": "1.2.1",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "A simple \u0026 compact PinChangeInterrupt library for Arduino.",
      "paragraph": "PinChangeInterrupt library with a resource friendly implementation (API and LowLevel). PinChangeInterrupts are different than normal Interrupts. See readme for more information.",
      "website": "https://github.com/NicoHood/PinChangeInterrupt",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NicoHood/PinChangeInterrupt-1.2.1.zip",
      "archiveFileName": "PinChangeInterrupt-1.2.1.zip",
      "size": 54613,
      "checksum": "SHA-256:d4a22bc0ce1b367106e3bcfedd99f8ca8ac866e40f4d94adff1e04cecbf7a023"
    },
    {
      "name": "PinChangeInterrupt",
      "version": "1.2.2",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "A simple \u0026 compact PinChangeInterrupt library for Arduino.",
      "paragraph": "PinChangeInterrupt library with a resource friendly implementation (API and LowLevel). PinChangeInterrupts are different than normal Interrupts. See readme for more information.",
      "website": "https://github.com/NicoHood/PinChangeInterrupt",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NicoHood/PinChangeInterrupt-1.2.2.zip",
      "archiveFileName": "PinChangeInterrupt-1.2.2.zip",
      "size": 55458,
      "checksum": "SHA-256:462aab696eb8891124edfde1d2c2a264322bf877cdb7aed72da372f7e850320e"
    },
    {
      "name": "PinChangeInterrupt",
      "version": "1.2.4",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "A simple \u0026 compact PinChangeInterrupt library for Arduino.",
      "paragraph": "PinChangeInterrupt library with a resource friendly implementation (API and LowLevel). PinChangeInterrupts are different than normal Interrupts. See readme for more information.",
      "website": "https://github.com/NicoHood/PinChangeInterrupt",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NicoHood/PinChangeInterrupt-1.2.4.zip",
      "archiveFileName": "PinChangeInterrupt-1.2.4.zip",
      "size": 56029,
      "checksum": "SHA-256:ede4f9f5122d7a0e0459bc1e0701d784541ed77e8deef7908bef144111026101"
    },
    {
      "name": "MSGEQ7",
      "version": "1.2.0",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "Library for Musicvisualization with MSGEQ7",
      "paragraph": "Reads MSGEQ7 IC with 7 different frequencies: 63Hz, 160Hz, 400Hz, 1kHz, 2.5kHz, 6.25KHz, 16kHz",
      "website": "https://github.com/NicoHood/MSGEQ7",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NicoHood/MSGEQ7-1.2.0.zip",
      "archiveFileName": "MSGEQ7-1.2.0.zip",
      "size": 2062786,
      "checksum": "SHA-256:dce3a23661e652d30286e9fa87eea73928029ee4111a47c3be690f31c784d2e3"
    },
    {
      "name": "MSGEQ7",
      "version": "1.2.1",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "Library for Musicvisualization with MSGEQ7",
      "paragraph": "Reads MSGEQ7 IC with 7 different frequencies: 63Hz, 160Hz, 400Hz, 1kHz, 2.5kHz, 6.25KHz, 16kHz",
      "website": "https://github.com/NicoHood/MSGEQ7",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NicoHood/MSGEQ7-1.2.1.zip",
      "archiveFileName": "MSGEQ7-1.2.1.zip",
      "size": 2584626,
      "checksum": "SHA-256:53e3aac6a40032f8bc1f718e5bff96c4c9b9611526b09829e9c39dcccfea868d"
    },
    {
      "name": "MSGEQ7",
      "version": "1.2.2",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "Library for Musicvisualization with MSGEQ7",
      "paragraph": "Reads MSGEQ7 IC with 7 different frequencies: 63Hz, 160Hz, 400Hz, 1kHz, 2.5kHz, 6.25KHz, 16kHz",
      "website": "https://github.com/NicoHood/MSGEQ7",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NicoHood/MSGEQ7-1.2.2.zip",
      "archiveFileName": "MSGEQ7-1.2.2.zip",
      "size": 2584683,
      "checksum": "SHA-256:6254e36b69b18bd64c269aaebd834cba798e504a3ed9e7c9d774b1f57debcfab"
    },
    {
      "name": "THERMISTOR",
      "version": "1.0.0",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "NTC thermistor library",
      "paragraph": "Simple thermistor library for NTC's. Steinhart–Hart equation approach.",
      "website": "https://github.com/panStamp/thermistor.git",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/panStamp/THERMISTOR-1.0.0.zip",
      "archiveFileName": "THERMISTOR-1.0.0.zip",
      "size": 7437,
      "checksum": "SHA-256:01fdac1700a17a4029dbbe3b07f0ba060e6ef5add27a4ba1a7b7435e7b7b4300"
    },
    {
      "name": "THERMISTOR",
      "version": "1.0.1",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "NTC thermistor library",
      "paragraph": "Simple thermistor library for NTC's. Steinhart–Hart equation approach.",
      "website": "https://github.com/panStamp/thermistor.git",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/panStamp/THERMISTOR-1.0.1.zip",
      "archiveFileName": "THERMISTOR-1.0.1.zip",
      "size": 7447,
      "checksum": "SHA-256:a9a83b2e5a7feb90f6bbc2cdd5b2397757fcefbf93f2abec0094445d19dc94cd"
    },
    {
      "name": "THERMISTOR",
      "version": "1.0.2",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "NTC thermistor library",
      "paragraph": "Simple thermistor library for NTC's. Steinhart–Hart equation approach.",
      "website": "https://github.com/panStamp/thermistor.git",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/panStamp/THERMISTOR-1.0.2.zip",
      "archiveFileName": "THERMISTOR-1.0.2.zip",
      "size": 7557,
      "checksum": "SHA-256:19198589375eec9b2a40be6de45961e5f3ab747de4200bbd499f9e182c6ca2aa"
    },
    {
      "name": "U8glib",
      "version": "1.18.0",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "A library for monochrome TFTs and OLEDs",
      "paragraph": "Supported display controller: SSD1306, SSD1309, SSD1322, SSD1325, SSD1327, SH1106, UC1601, UC1610, UC1611, UC1701, ST7565, ST7920, KS0108, LC7981, PCD8544, PCF8812, SBN1661, TLS8204, T6963.",
      "website": "https://github.com/olikraus/u8glib",
      "category": "Display",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/olikraus/U8glib-1.18.0.zip",
      "archiveFileName": "U8glib-1.18.0.zip",
      "size": 1149218,
      "checksum": "SHA-256:32de58d0d4a8cc710fa9e18f666827d33685f9a24fc34fb46661d90379b1f0b3"
    },
    {
      "name": "U8glib",
      "version": "1.19.1",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "A library for monochrome TFTs and OLEDs",
      "paragraph": "Supported display controller: SSD1306, SSD1309, SSD1322, SSD1325, SSD1327, SH1106, UC1601, UC1610, UC1611, UC1701, ST7565, ST7920, KS0108, LC7981, PCD8544, PCF8812, SBN1661, TLS8204, T6963.",
      "website": "https://github.com/olikraus/u8glib",
      "category": "Display",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/olikraus/U8glib-1.19.1.zip",
      "archiveFileName": "U8glib-1.19.1.zip",
      "size": 1153050,
      "checksum": "SHA-256:74bc2d3cb7e99c3847be02bbb775ace12464e693042b76146caa2754b26df19e"
    },
    {
      "name": "MMA8652",
      "version": "1.0.0",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "Library for the Freescale MMA8652 3-axis accelerometer",
      "paragraph": "Library for the Freescale MMA8652 3-axis accelerometer",
      "website": "https://github.com/panStamp/mma8652.git",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/panStamp/MMA8652-1.0.0.zip",
      "archiveFileName": "MMA8652-1.0.0.zip",
      "size": 14186,
      "checksum": "SHA-256:c4504f5c45c8f6c7c4dc91443c7e67b81fd1afbb2f8e48f9d8c9c54bd4806132"
    },
    {
      "name": "MMA8652",
      "version": "1.0.1",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "Library for the Freescale MMA8652 3-axis accelerometer",
      "paragraph": "Library for the Freescale MMA8652 3-axis accelerometer",
      "website": "https://github.com/panStamp/mma8652.git",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/panStamp/MMA8652-1.0.1.zip",
      "archiveFileName": "MMA8652-1.0.1.zip",
      "size": 14184,
      "checksum": "SHA-256:a15f3820f53d08c9aa4c272d573f92bc2007cc179ef33cc9b120b7f6f8686c21"
    },
    {
      "name": "SRAM",
      "version": "1.0.0",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "Simple library for serial SRAM IC's",
      "paragraph": "Simple library for SPI Static RAM IC's like Microchip 23K256",
      "website": "https://github.com/panStamp/sram.git",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/panStamp/SRAM-1.0.0.zip",
      "archiveFileName": "SRAM-1.0.0.zip",
      "size": 6637,
      "checksum": "SHA-256:2ce8328d682310775b8d4029753d04c81848bb2973b348561ec10c50d3cee95d"
    },
    {
      "name": "SRAM",
      "version": "1.0.1",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "Simple library for serial SRAM IC's",
      "paragraph": "Simple library for SPI Static RAM IC's like Microchip 23K256",
      "website": "https://github.com/panStamp/sram.git",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/panStamp/SRAM-1.0.1.zip",
      "archiveFileName": "SRAM-1.0.1.zip",
      "size": 6633,
      "checksum": "SHA-256:ff3949f97abc351203d1b472354f974c54b6304704b1404fa93373237452375a"
    },
    {
      "name": "Ucglib",
      "version": "1.4.0",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "True color TFT and OLED library. Supported display controller: ST7735, ILI9341, PCF8833, SSD1351, LD50T6160, ILI9163.",
      "paragraph": "Features: 18 Bit color depth, many fonts.",
      "website": "https://github.com/olikraus/ucglib",
      "category": "Display",
      "architectures": [
        "all"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/olikraus/Ucglib-1.4.0.zip",
      "archiveFileName": "Ucglib-1.4.0.zip",
      "size": 4197468,
      "checksum": "SHA-256:59fc2e39556553e590d49a3e7c40a6bd6e0e64e31e49274e27d7ba5a9a1cae45"
    },
    {
      "name": "Ucglib",
      "version": "1.3.0",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "A library for true color TFTs and OLEDs",
      "paragraph": "Supported display controller: ST7735, ILI9341, PCF8833, SSD1351, LD50T6160, ILI9163, SSD1331, SEPS225. Features: 18 Bit color depth, many fonts.",
      "website": "https://github.com/olikraus/ucglib",
      "category": "Display",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/olikraus/Ucglib-1.3.0.zip",
      "archiveFileName": "Ucglib-1.3.0.zip",
      "size": 4192406,
      "checksum": "SHA-256:043e81c258d6f55332d67648a324dc418594c9b4001da50797d115e577101af7"
    },
    {
      "name": "Ucglib",
      "version": "1.3.3",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "A library for true color TFTs and OLEDs",
      "paragraph": "Supported display controller: ST7735, ILI9341, PCF8833, SSD1351, LD50T6160, ILI9163, SSD1331, SEPS225. Features: 18 Bit color depth, many fonts.",
      "website": "https://github.com/olikraus/ucglib",
      "category": "Display",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/olikraus/Ucglib-1.3.3.zip",
      "archiveFileName": "Ucglib-1.3.3.zip",
      "size": 4203647,
      "checksum": "SHA-256:e8ca776f0d2c3b60dd7a824ed8656b04e6cfdc0eec70334c769d3adf9e7a34b4"
    },
    {
      "name": "SWAP",
      "version": "1.0.0",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "paragraph": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "website": "https://github.com/panStamp/swap.git",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/panStamp/SWAP-1.0.0.zip",
      "archiveFileName": "SWAP-1.0.0.zip",
      "size": 29197,
      "checksum": "SHA-256:f1844c660f4cb767097fecd4443c6df6b283d23b8013969c2688cf37693732b5"
    },
    {
      "name": "SWAP",
      "version": "1.0.1",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "paragraph": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "website": "https://github.com/panStamp/swap.git",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/panStamp/SWAP-1.0.1.zip",
      "archiveFileName": "SWAP-1.0.1.zip",
      "size": 101519,
      "checksum": "SHA-256:81ffcec950e960c1e17f89d4d9ec3199d771b98a53b60cb038b19bb239e88fff"
    },
    {
      "name": "SWAP",
      "version": "1.0.2",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "paragraph": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "website": "https://github.com/panStamp/swap.git",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/panStamp/SWAP-1.0.2.zip",
      "archiveFileName": "SWAP-1.0.2.zip",
      "size": 100384,
      "checksum": "SHA-256:4185ea5894f4e7ef219dc7364518b2799953a73b7bfe7f1ca14ea9c0bd67dd9e"
    },
    {
      "name": "SWAP",
      "version": "1.0.4",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "paragraph": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "website": "https://github.com/panStamp/swap.git",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/panStamp/SWAP-1.0.4.zip",
      "archiveFileName": "SWAP-1.0.4.zip",
      "size": 108902,
      "checksum": "SHA-256:7e68b4052730666822de6c2731df3636c5876021b440780e81af047bd4ef192f"
    },
    {
      "name": "SWAP",
      "version": "1.0.5",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "paragraph": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "website": "https://github.com/panStamp/swap.git",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/panStamp/SWAP-1.0.5.zip",
      "archiveFileName": "SWAP-1.0.5.zip",
      "size": 116449,
      "checksum": "SHA-256:43fc713d3fd1d7701e7318209179360c39922dda5f1655263521ae9be6693f56"
    },
    {
      "name": "SWAP",
      "version": "1.0.6",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "paragraph": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "website": "https://github.com/panStamp/swap.git",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/panStamp/SWAP-1.0.6.zip",
      "archiveFileName": "SWAP-1.0.6.zip",
      "size": 117110,
      "checksum": "SHA-256:0ef051062f71a06e891d78195aa6c6b9233f5ee5f1ce2f471ec19ac9f1d9b376"
    },
    {
      "name": "SWAP",
      "version": "1.0.7",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "paragraph": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "website": "https://github.com/panStamp/swap.git",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/panStamp/SWAP-1.0.7.zip",
      "archiveFileName": "SWAP-1.0.7.zip",
      "size": 121908,
      "checksum": "SHA-256:eea9a3547950bdc99cbf9e9fe0f25c0c45fac0dc55eba8bea0ae56020ef77960"
    },
    {
      "name": "SWAP",
      "version": "1.0.8",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "paragraph": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "website": "https://github.com/panStamp/swap.git",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/panStamp/SWAP-1.0.8.zip",
      "archiveFileName": "SWAP-1.0.8.zip",
      "size": 127170,
      "checksum": "SHA-256:ecb029b18e87f150aff445f1ad34539cdf7f05e5f2761a273f471bbbcc83f7c2"
    },
    {
      "name": "SWAP",
      "version": "1.0.9",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "paragraph": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "website": "https://github.com/panStamp/swap.git",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/panStamp/SWAP-1.0.9.zip",
      "archiveFileName": "SWAP-1.0.9.zip",
      "size": 139748,
      "checksum": "SHA-256:e5d8616a95fe01fbf520eda546ff1edb4127c3eaea5d1c304b6ec1f4141aa536"
    },
    {
      "name": "elapsedMillis",
      "version": "1.0.1",
      "author": "Peter Feerick \u003cpeter.feerick@gmail.com\u003e",
      "maintainer": "Peter Feerick \u003cpeter.feerick@gmail.com\u003e",
      "sentence": "Makes coding responsive sketches easier.",
      "paragraph": "When using delay(), your code can not (easily) respond to user input while the delay is happening (unless you use interrupts or complex timer code). This library makes this easy by allowing you to create variables (objects) that automatically increase as time elapses. It is easy to check if a certain time has elapsed, while your program performs other work or checks for user input.",
      "website": "http://github.com/pfeerick/elapsedMillis/wiki",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pfeerick/elapsedMillis-1.0.1.zip",
      "archiveFileName": "elapsedMillis-1.0.1.zip",
      "size": 8459,
      "checksum": "SHA-256:df54895325b9aec28a02fecd6529f39b050539bd4ec5f58992e9871b4faecfb8"
    },
    {
      "name": "elapsedMillis",
      "version": "1.0.3",
      "author": "Peter Feerick \u003cpeter.feerick@gmail.com\u003e",
      "maintainer": "Peter Feerick \u003cpeter.feerick@gmail.com\u003e",
      "sentence": "Makes coding responsive sketches easier.",
      "paragraph": "When using delay(), your code can not (easily) respond to user input while the delay is happening (unless you use interrupts or complex timer code). This library makes this easy by allowing you to create variables (objects) that automatically increase as time elapses. It is easy to check if a certain time has elapsed, while your program performs other work or checks for user input.",
      "website": "http://github.com/pfeerick/elapsedMillis/wiki",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pfeerick/elapsedMillis-1.0.3.zip",
      "archiveFileName": "elapsedMillis-1.0.3.zip",
      "size": 8500,
      "checksum": "SHA-256:6fb2a06794b30cee4a21b75e096f43154bb2985d4e7ef20700bc061bd1843cc0"
    },
    {
      "name": "elapsedMillis",
      "version": "1.0.4",
      "author": "Paul Stoffregen \u003cpaul@pjrc.com\u003e",
      "maintainer": "Peter Feerick \u003cpeter.feerick@gmail.com\u003e",
      "sentence": "Makes coding responsive sketches easier.",
      "paragraph": "When using delay(), your code can not (easily) respond to user input while the delay is happening (unless you use interrupts or complex timer code). This library makes this easy by allowing you to create variables (objects) that automatically increase as time elapses. It is easy to check if a certain time has elapsed, while your program performs other work or checks for user input.",
      "website": "http://github.com/pfeerick/elapsedMillis/wiki",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pfeerick/elapsedMillis-1.0.4.zip",
      "archiveFileName": "elapsedMillis-1.0.4.zip",
      "size": 8998,
      "checksum": "SHA-256:229ddfc654daa808562b66d102bdbb6c9f6a5675c8d36db74b84811dbc7357a8"
    },
    {
      "name": "AMIS30543",
      "version": "1.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "AMIS-30543 SPI stepper motor driver library",
      "paragraph": "This is a library for the Arduino IDE that helps use the SPI interface of the AMIS-30543 micro-stepping stepper motor driver.",
      "website": "https://github.com/pololu/amis-30543-arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/AMIS30543-1.0.0.zip",
      "archiveFileName": "AMIS30543-1.0.0.zip",
      "size": 17570,
      "checksum": "SHA-256:332549c5ab127580644f813c0d6c20028c6fadd4451af73a0e4a0af0ff232f25"
    },
    {
      "name": "AMIS30543",
      "version": "1.1.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "AMIS-30543 SPI stepper motor driver library",
      "paragraph": "This is a library for the Arduino IDE that helps use the SPI interface of the AMIS-30543 micro-stepping stepper motor driver.",
      "website": "https://github.com/pololu/amis-30543-arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/AMIS30543-1.1.0.zip",
      "archiveFileName": "AMIS30543-1.1.0.zip",
      "size": 18522,
      "checksum": "SHA-256:91fd07db0af88adf19c643fa066b8af729210c2f2ff6b9f57ad7ce2bf49dbd52"
    },
    {
      "name": "APA102",
      "version": "1.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "APA102 LED strip library",
      "paragraph": "This library helps control addressable RGB LED strips based on the APA102/APA102C RGB LED controller IC.  It provides full access to the 24-bit color register and 5-bit brightness register of each APA102 LED.",
      "website": "https://github.com/pololu/apa102-arduino",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/APA102-1.0.0.zip",
      "archiveFileName": "APA102-1.0.0.zip",
      "size": 20361,
      "checksum": "SHA-256:18146d85923d6cdf822a974801e6317d7af90a09a484669a747029153f0b8b13"
    },
    {
      "name": "APA102",
      "version": "1.1.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "APA102 LED strip library",
      "paragraph": "This library helps control addressable RGB LED strips based on the APA102/APA102C RGB LED controller IC.  It provides full access to the 24-bit color register and 5-bit brightness register of each APA102 LED.",
      "website": "https://github.com/pololu/apa102-arduino",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/APA102-1.1.0.zip",
      "archiveFileName": "APA102-1.1.0.zip",
      "size": 25329,
      "checksum": "SHA-256:07463cd67d1decd90ca5ffc7fd9d065fae029e83c8a17380b7a304f323bda092"
    },
    {
      "name": "APA102",
      "version": "1.2.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "APA102 LED strip library",
      "paragraph": "This library helps control addressable RGB LED strips based on the APA102/APA102C RGB LED controller IC.  It provides full access to the 24-bit color register and 5-bit brightness register of each APA102 LED.",
      "website": "https://github.com/pololu/apa102-arduino",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/APA102-1.2.0.zip",
      "archiveFileName": "APA102-1.2.0.zip",
      "size": 25476,
      "checksum": "SHA-256:5c39c0da3f8f89117381ecf58e01defe06522b4ffece435d5540d6e65497b803"
    },
    {
      "name": "APA102",
      "version": "2.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "APA102/SK9822 LED strip library",
      "paragraph": "This library helps control addressable RGB LED strips based on the SK9822/APA102/APA102C RGB LED controller IC.  It provides full access to the 24-bit color register and 5-bit brightness register of each LED.",
      "website": "https://github.com/pololu/apa102-arduino",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/APA102-2.0.0.zip",
      "archiveFileName": "APA102-2.0.0.zip",
      "size": 25694,
      "checksum": "SHA-256:34b604c082ad73023bc1875e9456248b0e666b2fec92e25bccc900b5fee77440"
    },
    {
      "name": "AStar32U4",
      "version": "1.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "A-Star 32U4 Arduino library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with the on-board hardware on Pololu A-Star 32U4 controllers.",
      "website": "https://github.com/pololu/a-star-32u4-arduino-library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/AStar32U4-1.0.0.zip",
      "archiveFileName": "AStar32U4-1.0.0.zip",
      "size": 54802,
      "checksum": "SHA-256:fe12a48521e7f72ec226371d23b4f8893fe40c300db4a97c8a8bfad133ce67d5"
    },
    {
      "name": "AStar32U4",
      "version": "1.0.2",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "A-Star 32U4 Arduino library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with the on-board hardware on Pololu A-Star 32U4 controllers.",
      "website": "https://github.com/pololu/a-star-32u4-arduino-library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/AStar32U4-1.0.2.zip",
      "archiveFileName": "AStar32U4-1.0.2.zip",
      "size": 54985,
      "checksum": "SHA-256:f9b0d6bb543231d7156478186488dbe0045157c448c8a8bb306d857f8d64a20a"
    },
    {
      "name": "AStar32U4",
      "version": "1.0.3",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "A-Star 32U4 Arduino library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with the on-board hardware on Pololu A-Star 32U4 controllers.",
      "website": "https://github.com/pololu/a-star-32u4-arduino-library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/AStar32U4-1.0.3.zip",
      "archiveFileName": "AStar32U4-1.0.3.zip",
      "size": 55030,
      "checksum": "SHA-256:0a1a3d26ca4515857ce4e584dc19839d8e2e0ccf8a1a914b02114ccd7a9dcd35"
    },
    {
      "name": "AStar32U4",
      "version": "1.0.4",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "A-Star 32U4 Arduino library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with the on-board hardware on Pololu A-Star 32U4 controllers.",
      "website": "https://github.com/pololu/a-star-32u4-arduino-library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/AStar32U4-1.0.4.zip",
      "archiveFileName": "AStar32U4-1.0.4.zip",
      "size": 55080,
      "checksum": "SHA-256:2921c928b557e1527049e746e2e03857071f774cba4d3bbe9f0cfc9da78fb57a"
    },
    {
      "name": "AStar32U4",
      "version": "1.0.5",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "A-Star 32U4 Arduino library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with the on-board hardware on Pololu A-Star 32U4 controllers.",
      "website": "https://github.com/pololu/a-star-32u4-arduino-library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/AStar32U4-1.0.5.zip",
      "archiveFileName": "AStar32U4-1.0.5.zip",
      "size": 55152,
      "checksum": "SHA-256:dd8ed4715b017bed42cc2033cdcc5d5562d6e3ad6c7f0927b51279c3ddaa2266"
    },
    {
      "name": "PololuMaestro",
      "version": "1.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Pololu Maestro Servo Controller library for Arduino",
      "paragraph": "This is a library for the Arduino IDE that helps interface with a Maestro Servo Controller. It communicates with Maestros using the Serial Protocol described in the Maestro Servo Controller User's Guide Section 5, \"Serial Interface\".",
      "website": "https://github.com/pololu/maestro-arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/PololuMaestro-1.0.0.zip",
      "archiveFileName": "PololuMaestro-1.0.0.zip",
      "size": 14901,
      "checksum": "SHA-256:1a0133efb8c4d26c82c84a88d6271cfef2e68e02377acb749ca7d3b26f2a14c7"
    },
    {
      "name": "Zumo32U4",
      "version": "1.1.1",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Zumo 32U4 Arduino library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with the on-board hardware on the Pololu Zumo 32U4 robot.",
      "website": "https://github.com/pololu/zumo-32u4-arduino-library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/Zumo32U4-1.1.1.zip",
      "archiveFileName": "Zumo32U4-1.1.1.zip",
      "size": 127792,
      "checksum": "SHA-256:7d110a09239882de17e7ec925bc76dbb6847107863a9b0109deac29fbf2ada7e"
    },
    {
      "name": "Zumo32U4",
      "version": "1.1.2",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Zumo 32U4 Arduino library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with the on-board hardware on the Pololu Zumo 32U4 robot.",
      "website": "https://github.com/pololu/zumo-32u4-arduino-library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/Zumo32U4-1.1.2.zip",
      "archiveFileName": "Zumo32U4-1.1.2.zip",
      "size": 127826,
      "checksum": "SHA-256:d61260ef6790b3ec392f3b572f70d699881b816f0b9f9336b38af2f034f67f9b"
    },
    {
      "name": "Zumo32U4",
      "version": "1.1.3",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Zumo 32U4 Arduino library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with the on-board hardware on the Pololu Zumo 32U4 robot.",
      "website": "https://github.com/pololu/zumo-32u4-arduino-library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/Zumo32U4-1.1.3.zip",
      "archiveFileName": "Zumo32U4-1.1.3.zip",
      "size": 128736,
      "checksum": "SHA-256:d69d71410dc4654cf6cd917a9b1cb7347b5f7ba6a0edee9cbb87ec651518ef1a"
    },
    {
      "name": "Printoo_Library",
      "version": "1.0.0",
      "author": "Luis Magalhaes \u003cluis.magalhaes@ydreams.com\u003e",
      "maintainer": "Luis Magalhaes \u003cluis.magalhaes@ydreams.com\u003e",
      "sentence": "The library for the Printoo modules.",
      "paragraph": "All the functions to control the Printoo modules within the same library ! Awesome !",
      "website": "http://www.printoo.com/",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/printoo/Printoo_Library-1.0.0.zip",
      "archiveFileName": "Printoo_Library-1.0.0.zip",
      "size": 31796,
      "checksum": "SHA-256:587c591ddc0a5ed6b56436725c9c86e56ead7f450c536b6ab65254a07a8fe43f"
    },
    {
      "name": "Printoo_Library",
      "version": "1.0.1",
      "author": "Printoo \u003cenquiries@printoo.pt\u003e",
      "maintainer": "Luis Magalhaes \u003cluis.magalhaes@ydreams.com\u003e",
      "sentence": "The library for the Printoo modules.",
      "paragraph": "All the functions to control the Printoo modules within the same library !",
      "website": "http://www.printoo.pt/",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/printoo/Printoo_Library-1.0.1.zip",
      "archiveFileName": "Printoo_Library-1.0.1.zip",
      "size": 31899,
      "checksum": "SHA-256:741ed8bd4f97434b700556557ea00d35abfddaadecc661bd1146a603ab57497e"
    },
    {
      "name": "Printoo_Library",
      "version": "1.0.2",
      "author": "Printoo \u003cenquiries@printoo.pt\u003e",
      "maintainer": "Luis Magalhaes \u003cluis.magalhaes@ydreams.com\u003e",
      "sentence": "The library for the Printoo modules.",
      "paragraph": "All the functions to control the Printoo modules within the same library !",
      "website": "http://www.printoo.pt/",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/printoo/Printoo_Library-1.0.2.zip",
      "archiveFileName": "Printoo_Library-1.0.2.zip",
      "size": 31900,
      "checksum": "SHA-256:c2fd75694c0339b9a8f73d0331709685e7267bc0bd4ddf241eb194be605a4b50"
    },
    {
      "name": "RBL_nRF8001",
      "version": "1.0.0",
      "author": "Cheong",
      "maintainer": "Cheong \u003ccheong@redbearlab.com\u003e",
      "sentence": "An Arduino library for the nRF8001 products such as the BLE Shield and Blend.",
      "paragraph": "Providing a simple service (TxRx) for exchanging data between nRF8001 and BLE Central (e.g. iPhone 6), this library requires Nordic BLE SDK for Arduino to function, please also install that library.",
      "website": "https://github.com/RedBearLab/nRF8001",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/RedBearLab/RBL_nRF8001-1.0.0.zip",
      "archiveFileName": "RBL_nRF8001-1.0.0.zip",
      "size": 52754,
      "checksum": "SHA-256:f30bbb12047632e8db9898d58c50ce0eca866243f61c1cd5d2f9f840cab452d2"
    },
    {
      "name": "Quirkbot",
      "version": "0.2.2",
      "author": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "Install this library to be able to use the Quirbot API.",
      "website": "http://quirkbot.com/",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-0.2.2.zip",
      "archiveFileName": "Quirkbot-0.2.2.zip",
      "size": 50558,
      "checksum": "SHA-256:6b665622e706c09a64482baa0341ea6a3e7974c5dbd00886395b5e5d2b70cd2b"
    },
    {
      "name": "Quirkbot",
      "version": "0.2.3",
      "author": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "Install this library to be able to use the Quirbot API.",
      "website": "http://quirkbot.com/",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-0.2.3.zip",
      "archiveFileName": "Quirkbot-0.2.3.zip",
      "size": 51328,
      "checksum": "SHA-256:0931a2d392e3e0d8294df8cd317c4c647895fb95d8fc91881eaa3627c64519c4"
    },
    {
      "name": "Quirkbot",
      "version": "0.2.4",
      "author": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "Install this library to be able to use the Quirbot API.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-0.2.4.zip",
      "archiveFileName": "Quirkbot-0.2.4.zip",
      "size": 51343,
      "checksum": "SHA-256:ec8eeb4bf990d99be423c6a466154f0fac2cc0eacf98917f5de034bba8c10ed8"
    },
    {
      "name": "Quirkbot",
      "version": "0.2.5",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "Install this library to be able to use the Quirbot API.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-0.2.5.zip",
      "archiveFileName": "Quirkbot-0.2.5.zip",
      "size": 51343,
      "checksum": "SHA-256:2d6a1669fd9ca981549e5303510be02f95d5acba7e6df59f584345f8a47b0469"
    },
    {
      "name": "Quirkbot",
      "version": "0.2.6",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-0.2.6.zip",
      "archiveFileName": "Quirkbot-0.2.6.zip",
      "size": 51428,
      "checksum": "SHA-256:a10e9a130c133f74d0287f2ed23e404efa49571b3ed9bdf61c677471f5214b42"
    },
    {
      "name": "Quirkbot",
      "version": "0.3.1",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-0.3.1.zip",
      "archiveFileName": "Quirkbot-0.3.1.zip",
      "size": 58907,
      "checksum": "SHA-256:8c2298c4edf8db87fd12d8a8d62a3245ef0a2cf1e3602ab6c8de311e3c0fc3f3"
    },
    {
      "name": "Quirkbot",
      "version": "0.3.2",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-0.3.2.zip",
      "archiveFileName": "Quirkbot-0.3.2.zip",
      "size": 58906,
      "checksum": "SHA-256:c27d37f70249550717e6dc716d66b026e0a6b353ea462cc606c66acdc4ceded2"
    },
    {
      "name": "Quirkbot",
      "version": "0.3.3",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-0.3.3.zip",
      "archiveFileName": "Quirkbot-0.3.3.zip",
      "size": 58995,
      "checksum": "SHA-256:bab1d58d7838d9998c66ee6c9520ce099db6a76a6e4b070d6fdf98b82a25e350"
    },
    {
      "name": "Quirkbot",
      "version": "0.4.1",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-0.4.1.zip",
      "archiveFileName": "Quirkbot-0.4.1.zip",
      "size": 58985,
      "checksum": "SHA-256:a6fbf905e770a49c09765f6863bef471895db24bfb7bfdff33357ae28a609fc3"
    },
    {
      "name": "Quirkbot",
      "version": "0.4.2",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-0.4.2.zip",
      "archiveFileName": "Quirkbot-0.4.2.zip",
      "size": 57476,
      "checksum": "SHA-256:7eb7a8c0d72afde97647b1cadd42cb6e911f305b2919d72a529552ca9d466f9b"
    },
    {
      "name": "Quirkbot",
      "version": "0.4.3",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-0.4.3.zip",
      "archiveFileName": "Quirkbot-0.4.3.zip",
      "size": 58358,
      "checksum": "SHA-256:007e82ab8c634cf2955f20dac29ef04d513436e2e1491e7d0b2f17556e255ee3"
    },
    {
      "name": "Quirkbot",
      "version": "0.4.4",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-0.4.4.zip",
      "archiveFileName": "Quirkbot-0.4.4.zip",
      "size": 58626,
      "checksum": "SHA-256:df3d803dc7c8abd2d8cebb6f87dbeadf8ad61eaf82b5846757fc38d633f4386f"
    },
    {
      "name": "Quirkbot",
      "version": "0.5.0",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-0.5.0.zip",
      "archiveFileName": "Quirkbot-0.5.0.zip",
      "size": 60943,
      "checksum": "SHA-256:c99c3a3d70a92f217865d9ddfbba9c24cc911363a2b870734662d4fc4088434a"
    },
    {
      "name": "Quirkbot",
      "version": "0.5.1",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-0.5.1.zip",
      "archiveFileName": "Quirkbot-0.5.1.zip",
      "size": 61673,
      "checksum": "SHA-256:d2daf6d0b5a408bcaeaf401759e032930e852dd7e59bd6621ac4300d674579e3"
    },
    {
      "name": "Quirkbot",
      "version": "1.1.0",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-1.1.0.zip",
      "archiveFileName": "Quirkbot-1.1.0.zip",
      "size": 47243,
      "checksum": "SHA-256:c26e0b736dc0e261f2e23680e0bff45db97afccc5c5c572e00a8e9229258af6e"
    },
    {
      "name": "Quirkbot",
      "version": "1.1.1",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-1.1.1.zip",
      "archiveFileName": "Quirkbot-1.1.1.zip",
      "size": 48056,
      "checksum": "SHA-256:f1fdf76befbd5967ee48c3366b833c3713fb980348110ac9038445e28d1c7508"
    },
    {
      "name": "Quirkbot",
      "version": "1.2.0",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-1.2.0.zip",
      "archiveFileName": "Quirkbot-1.2.0.zip",
      "size": 50247,
      "checksum": "SHA-256:b88e1e290bceaf2e75dc656de27a3e11efa8d244aae529a3e2637fa8368d1b9f"
    },
    {
      "name": "Quirkbot",
      "version": "2.0.0",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-2.0.0.zip",
      "archiveFileName": "Quirkbot-2.0.0.zip",
      "size": 50197,
      "checksum": "SHA-256:f8f4cc3f34d3bd14b20f3524b5c02bb563d277efc549f8bb530caebc4a4b5bf0"
    },
    {
      "name": "Quirkbot",
      "version": "2.0.1",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-2.0.1.zip",
      "archiveFileName": "Quirkbot-2.0.1.zip",
      "size": 50275,
      "checksum": "SHA-256:ed9a2d489e2b1a226360be183c17dffbd80429b9b2ce887edab7eda4e1ab8475"
    },
    {
      "name": "Quirkbot",
      "version": "2.0.2",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-2.0.2.zip",
      "archiveFileName": "Quirkbot-2.0.2.zip",
      "size": 50284,
      "checksum": "SHA-256:d7ba381206580535d8dbcf827cb5f2b3c8957435d213719e5ade05bdd598b6bf"
    },
    {
      "name": "Quirkbot",
      "version": "2.1.0",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-2.1.0.zip",
      "archiveFileName": "Quirkbot-2.1.0.zip",
      "size": 61714,
      "checksum": "SHA-256:4f5f6ab1e69aaa47052eb71c3ef9f667ef7ccc4054e8dfe6ef929756f1c4eceb"
    },
    {
      "name": "Quirkbot",
      "version": "2.1.1",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-2.1.1.zip",
      "archiveFileName": "Quirkbot-2.1.1.zip",
      "size": 61841,
      "checksum": "SHA-256:af577763711293780ad912e8133fe0bd2d3ab6c9790a41984ee563c09743aaa3"
    },
    {
      "name": "Quirkbot",
      "version": "2.1.3",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-2.1.3.zip",
      "archiveFileName": "Quirkbot-2.1.3.zip",
      "size": 61792,
      "checksum": "SHA-256:a45b66f41f80860b8fee61d844a53b16ee505d53567b6604631d6fd40f1cf02e"
    },
    {
      "name": "Quirkbot",
      "version": "2.2.0",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-2.2.0.zip",
      "archiveFileName": "Quirkbot-2.2.0.zip",
      "size": 61853,
      "checksum": "SHA-256:eb4541fd05be299bf3cec0ffd617e9a6be8bc6d61ac852fea3f7b421ca95a57a"
    },
    {
      "name": "Quirkbot",
      "version": "2.3.0",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-2.3.0.zip",
      "archiveFileName": "Quirkbot-2.3.0.zip",
      "size": 61305,
      "checksum": "SHA-256:cc05b16c773b8e9463fb02462d09b0a66615e7159919780b3ade7a4a8ca59540"
    },
    {
      "name": "Quirkbot",
      "version": "2.3.1",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-2.3.1.zip",
      "archiveFileName": "Quirkbot-2.3.1.zip",
      "size": 61340,
      "checksum": "SHA-256:4b735faa6991a9a132cda7b99e03ab74c44fd6deff90f6ed504f5659f2b141c5"
    },
    {
      "name": "Quirkbot",
      "version": "2.4.0",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-2.4.0.zip",
      "archiveFileName": "Quirkbot-2.4.0.zip",
      "size": 69131,
      "checksum": "SHA-256:e19e0b668a4e5f877ba974a3a3368b108df526c7ddc026d40ebec676b72f6987"
    },
    {
      "name": "Quirkbot",
      "version": "2.4.1",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Quirkbot/Quirkbot-2.4.1.zip",
      "archiveFileName": "Quirkbot-2.4.1.zip",
      "size": 68847,
      "checksum": "SHA-256:58f4b245551932e3a33a66d882c43f615ad3c19ee06657460a54f2408e46b08b"
    },
    {
      "name": "Ospom",
      "version": "0.1.1",
      "author": "Scott Tomko \u003cstaff@ReefPOM.com\u003e, Greg Tomko \u003cstaff@ReefPOM.com\u003e",
      "maintainer": "Scott Tomko \u003cstaff@ReefPOM.com\u003e",
      "sentence": "A library allowing any arduino to connect to the internet without an ethernet or wifi shield.",
      "paragraph": "It works by connecting via USB to an internet conected linux cpu and OSPOM's servers, bypassing annoying router setup.  The linux software necessary is in a seperate repository in ospom's BitBucket.  Pre-loaded o-droids are also available at ReefPOM.com",
      "website": "www.bitbucket.org/reefpom/ospom",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ReefPOM/Ospom-0.1.1.zip",
      "archiveFileName": "Ospom-0.1.1.zip",
      "size": 19857,
      "checksum": "SHA-256:0ec5ad60022095f100407e8df0b1fecf6cf1e64961a03d79278da9eaeff2f7ae"
    },
    {
      "name": "Ospom",
      "version": "0.1.3",
      "author": "Scott Tomko \u003cstaff@ReefPOM.com\u003e, Greg Tomko \u003cstaff@ReefPOM.com\u003e",
      "maintainer": "Scott Tomko \u003cstaff@ReefPOM.com\u003e",
      "sentence": "A library allowing any arduino to be displayed on the internet for free via ospom.com.",
      "paragraph": "It works by connecting via USB to an internet conected linux cpu and OSPOM's servers, bypassing annoying router setup.  The linux software necessary is in a seperate repository in ospom's BitBucket.  Pre-loaded o-droids are also available at ReefPOM.com",
      "website": "https://github.com/ReefPOM/OSPOM",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ReefPOM/Ospom-0.1.3.zip",
      "archiveFileName": "Ospom-0.1.3.zip",
      "size": 13984,
      "checksum": "SHA-256:2c9e22b223b90fa8f6dfcfe2ec11605b4f3185ac45a4eab8d4d9367f3736e374"
    },
    {
      "name": "Ospom",
      "version": "0.1.31",
      "author": "Scott Tomko \u003cstaff@ReefPOM.com\u003e, Greg Tomko \u003cstaff@ReefPOM.com\u003e, Linda Close \u003cstaff@ReefPOM.com\u003e",
      "maintainer": "Scott Tomko \u003cstaff@ReefPOM.com\u003e",
      "sentence": "Ospom is FaceBook for your Arduino.",
      "paragraph": "A library allowing any arduino to be displayed on the internet for free via ospom.com/user. It works by connecting via USB to any internet conected linux cpu and OSPOM's servers, bypassing annoying router setup.  The linux software necessary is in a seperate repository at BitBucket.org/ReefPOM.  Pre-loaded micro-SD cards forRaspberry Pi, Odroid, and pcDuino are also available upon request, and at ReefPOM.com.",
      "website": "https://github.com/ReefPOM/OSPOM",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ReefPOM/Ospom-0.1.31.zip",
      "archiveFileName": "Ospom-0.1.31.zip",
      "size": 16478,
      "checksum": "SHA-256:5607e6e397d1f5475089fd707cade3293f0fb7ec82bfdd3cd37080f07a02436e"
    },
    {
      "name": "MicroDebug",
      "version": "1.1.0",
      "author": "AgileWare",
      "maintainer": "Roberto Lo Giacco \u003crlogiacco@gmail.com\u003e",
      "sentence": "Arduino debugging support library",
      "paragraph": "Arduino debugging support library",
      "website": "https://github.com/rlogiacco/MicroDebug",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/rlogiacco/MicroDebug-1.1.0.zip",
      "archiveFileName": "MicroDebug-1.1.0.zip",
      "size": 15550,
      "checksum": "SHA-256:087864c701ab64fdf1a22827eb106ce41f2cf4b701e82d8544886ed2661f46d6"
    },
    {
      "name": "Analog Buttons",
      "version": "1.1.0",
      "author": "AgileWare",
      "maintainer": "Roberto Lo Giacco \u003crlogiacco@gmail.com\u003e",
      "sentence": "Arduino multi button support library",
      "paragraph": "Arduino multi button support library",
      "website": "https://github.com/rlogiacco/AnalogButtons",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/rlogiacco/Analog_Buttons-1.1.0.zip",
      "archiveFileName": "Analog_Buttons-1.1.0.zip",
      "size": 309531,
      "checksum": "SHA-256:a11958f38224693afe639e0e83474b63c8c7d9e4ed8854f46b551ff559f65279"
    },
    {
      "name": "Analog Buttons",
      "version": "1.1.1",
      "author": "AgileWare",
      "maintainer": "Roberto Lo Giacco \u003crlogiacco@gmail.com\u003e",
      "sentence": "Arduino multi button support library",
      "paragraph": "Arduino multi button support library",
      "website": "https://github.com/rlogiacco/AnalogButtons",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/rlogiacco/Analog_Buttons-1.1.1.zip",
      "archiveFileName": "Analog_Buttons-1.1.1.zip",
      "size": 309538,
      "checksum": "SHA-256:2da21fa0c7fe21fefabbc3651b86c47bc552f3999ef5fd78b435e43c6cac6abe"
    },
    {
      "name": "Analog Buttons",
      "version": "1.2.0",
      "author": "AgileWare",
      "maintainer": "Roberto Lo Giacco \u003crlogiacco@gmail.com\u003e",
      "sentence": "Arduino multi button support library",
      "paragraph": "Arduino multi button support library",
      "website": "https://github.com/rlogiacco/AnalogButtons",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/rlogiacco/Analog_Buttons-1.2.0.zip",
      "archiveFileName": "Analog_Buttons-1.2.0.zip",
      "size": 309873,
      "checksum": "SHA-256:f1caa56328f0963262195ededf79f042eb586b4b972abfb2ab675b08d45ef97f"
    },
    {
      "name": "Voltage Reference",
      "version": "1.2.0",
      "author": "AgileWare",
      "maintainer": "Roberto Lo Giacco \u003crlogiacco@gmail.com\u003e",
      "sentence": "Arduino voltage reference library",
      "paragraph": "Arduino voltage reference library",
      "website": "https://github.com/rlogiacco/VoltageReference",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/rlogiacco/Voltage_Reference-1.2.0.zip",
      "archiveFileName": "Voltage_Reference-1.2.0.zip",
      "size": 180323,
      "checksum": "SHA-256:ca6deff280b073ef9a2884383ba81651aa6d40ad914e0c9af34d0516b91760e6"
    },
    {
      "name": "BobaBlox",
      "version": "2.0.0",
      "author": "Robert Gallup \u003csupport@robertgallup.com\u003e",
      "maintainer": "Robert Gallup \u003csupport@robertgallup.com\u003e",
      "sentence": "A library that makes it easy to code simple hardware interactions with the Arduino.",
      "paragraph": "Buttons, LEDs, knobs (potentiometers), speakers, and photocells are currently supported.",
      "website": "https://github.com/robertgallup/BobaBlox",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/robertgallup/BobaBlox-2.0.0.zip",
      "archiveFileName": "BobaBlox-2.0.0.zip",
      "size": 20375,
      "checksum": "SHA-256:8df8761e07ac96352ea038ea9087c5b3d1c82bbbb865db8a349c0a3d3fbcdd59"
    },
    {
      "name": "BobaBlox",
      "version": "2.0.1",
      "author": "Robert Gallup \u003csupport@robertgallup.com\u003e",
      "maintainer": "Robert Gallup \u003csupport@robertgallup.com\u003e",
      "sentence": "A library that makes it easy to code simple hardware interactions with the Arduino.",
      "paragraph": "Buttons, LEDs, knobs (potentiometers), speakers, and photocells are currently supported.",
      "website": "https://github.com/robertgallup/BobaBlox",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/robertgallup/BobaBlox-2.0.1.zip",
      "archiveFileName": "BobaBlox-2.0.1.zip",
      "size": 20377,
      "checksum": "SHA-256:b62097f8db517420571c4285404a755f30a0d1d6e38d617c1eebbc9cc722f908"
    },
    {
      "name": "RoboCore - Serial Relay",
      "version": "1.0.0",
      "author": "RoboCore Tecnologia (suporte@robocore.net)",
      "maintainer": "RoboCore Tecnologia (suporte@robocore.net)",
      "sentence": "Library for the Serial Relay module (https://www.robocore.net/modules.php?name=GR_LojaVirtual\u0026prod=663)",
      "paragraph": "Control up to 40 relays with only two pins.",
      "website": "https://github.com/RoboCore/SerialRelay",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/RoboCore/RoboCore___Serial_Relay-1.0.0.zip",
      "archiveFileName": "RoboCore___Serial_Relay-1.0.0.zip",
      "size": 9243,
      "checksum": "SHA-256:ec615987c7445d19e8c130f9eac2d0b5ab5c70e462525a8e440ddab2295ce74f"
    },
    {
      "name": "Robopoly PRismino",
      "version": "1.5.0",
      "author": "Karl Kangur, David Perrenoud, Robopoly",
      "maintainer": "Robopoly \u003crobopoly@epfl.ch\u003e",
      "sentence": "This library allows you to use all the functions of the Robopoly PRismino and the Robopoly Shield.",
      "website": "https://github.com/Robopoly/Robopoly_PRismino",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Robopoly/Robopoly_PRismino-1.5.0.zip",
      "archiveFileName": "Robopoly_PRismino-1.5.0.zip",
      "size": 18891,
      "checksum": "SHA-256:051db2d450a00e83b6892b77fb88d2dd3021e85e7a6730a505d85c8f4f80eb16"
    },
    {
      "name": "Robopoly PRismino",
      "version": "1.5.1",
      "author": "Karl Kangur, David Perrenoud, Robopoly",
      "maintainer": "Robopoly \u003crobopoly@epfl.ch\u003e",
      "sentence": "This library allows you to use all the functions of the Robopoly PRismino and the Robopoly Shield.",
      "website": "https://github.com/Robopoly/Robopoly_PRismino",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Robopoly/Robopoly_PRismino-1.5.1.zip",
      "archiveFileName": "Robopoly_PRismino-1.5.1.zip",
      "size": 18984,
      "checksum": "SHA-256:a31eb84fc18526019edac218e65b7aa391b0bcffa5e4c7af4c479bbafd48df68"
    },
    {
      "name": "Robopoly PRismino",
      "version": "1.5.2",
      "author": "Karl Kangur, David Perrenoud, Robopoly",
      "maintainer": "Robopoly \u003crobopoly@epfl.ch\u003e",
      "sentence": "This library allows you to use all the functions of the Robopoly PRismino and the Robopoly Shield.",
      "website": "https://github.com/Robopoly/Robopoly_PRismino",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Robopoly/Robopoly_PRismino-1.5.2.zip",
      "archiveFileName": "Robopoly_PRismino-1.5.2.zip",
      "size": 19018,
      "checksum": "SHA-256:39873e7932def6af29adf275f4eb67dad7a74a9d52c1c0119b162ea254694d7a"
    },
    {
      "name": "Robopoly Linear Camera",
      "version": "0.2.0",
      "author": "Marco Pagnamenta, Karl Kangur, David Perrenoud, Robopoly",
      "maintainer": "Robopoly \u003crobopoly@epfl.ch\u003e",
      "sentence": "This library allows you to get data from the Robopoly Linear Camera.",
      "website": "https://github.com/Robopoly/Robopoly_PRismino",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Robopoly/Robopoly_Linear_Camera-0.2.0.zip",
      "archiveFileName": "Robopoly_Linear_Camera-0.2.0.zip",
      "size": 4991,
      "checksum": "SHA-256:be4c4fe9675cfbd41cd71a50e204b1d301ec2b844e8961297223c2a92e0120da"
    },
    {
      "name": "EasyVR",
      "version": "1.10.0",
      "author": "RoboTech-srl \u003csoftware@robotechsrl.com\u003e",
      "maintainer": "PPEscher \u003cppescher@users.noreply.github.com\u003e",
      "sentence": "A library for the EasyVR line of products.",
      "paragraph": "It implements the EasyVR communication protocol over any Arduino Serial port and a special Bridge mode for direct connection to the EasyVR Commander software running on a PC.",
      "website": "http://robotech-srl.github.io/EasyVR-Arduino/",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/RoboTech-srl/EasyVR-1.10.0.zip",
      "archiveFileName": "EasyVR-1.10.0.zip",
      "size": 177894,
      "checksum": "SHA-256:c13f2067c9a9504b6137dd7bb6bb59f83cc3730c1e7771804883531ada63de29"
    },
    {
      "name": "EasyVR",
      "version": "1.10.1",
      "author": "RoboTech-srl \u003csoftware@robotechsrl.com\u003e",
      "maintainer": "PPEscher \u003cppescher@users.noreply.github.com\u003e",
      "sentence": "A library for the EasyVR line of products.",
      "paragraph": "It implements the EasyVR communication protocol over any Arduino Serial port and a special Bridge mode for direct connection to the EasyVR Commander software running on a PC.",
      "website": "http://robotech-srl.github.io/EasyVR-Arduino/",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/RoboTech-srl/EasyVR-1.10.1.zip",
      "archiveFileName": "EasyVR-1.10.1.zip",
      "size": 178015,
      "checksum": "SHA-256:b59618ec86c4d89f8b0970fb65384574a748e2885e95583fe10bfa8e11d3a0b1"
    },
    {
      "name": "EasyVR",
      "version": "1.7.0",
      "author": "RoboTech-srl \u003csoftware@robotechsrl.com\u003e",
      "maintainer": "PPEscher \u003cppescher@users.noreply.github.com\u003e",
      "sentence": "A library for the EasyVR line of products.",
      "paragraph": "It implements the EasyVR communication protocol over any Arduino Serial port and a special Bridge mode for direct connection to the EasyVR Commander software running on a PC.",
      "website": "http://robotech-srl.github.io/EasyVR-Arduino/",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/RoboTech-srl/EasyVR-1.7.0.zip",
      "archiveFileName": "EasyVR-1.7.0.zip",
      "size": 162333,
      "checksum": "SHA-256:236e42743cef99fe9373c47f5399816fc59bc9c231ef0409386c9fdd72e28741"
    },
    {
      "name": "EasyVR",
      "version": "1.7.1",
      "author": "RoboTech-srl \u003csoftware@robotechsrl.com\u003e",
      "maintainer": "PPEscher \u003cppescher@users.noreply.github.com\u003e",
      "sentence": "A library for the EasyVR line of products.",
      "paragraph": "It implements the EasyVR communication protocol over any Arduino Serial port and a special Bridge mode for direct connection to the EasyVR Commander software running on a PC.",
      "website": "http://robotech-srl.github.io/EasyVR-Arduino/",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/RoboTech-srl/EasyVR-1.7.1.zip",
      "archiveFileName": "EasyVR-1.7.1.zip",
      "size": 162348,
      "checksum": "SHA-256:a400a1d9fd1ee3262a71955318ad20c58806d3d1f66819fb85941e46742fa63e"
    },
    {
      "name": "EasyVR",
      "version": "1.8.0",
      "author": "RoboTech-srl \u003csoftware@robotechsrl.com\u003e",
      "maintainer": "PPEscher \u003cppescher@users.noreply.github.com\u003e",
      "sentence": "A library for the EasyVR line of products.",
      "paragraph": "It implements the EasyVR communication protocol over any Arduino Serial port and a special Bridge mode for direct connection to the EasyVR Commander software running on a PC.",
      "website": "http://robotech-srl.github.io/EasyVR-Arduino/",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/RoboTech-srl/EasyVR-1.8.0.zip",
      "archiveFileName": "EasyVR-1.8.0.zip",
      "size": 164108,
      "checksum": "SHA-256:79242d2833db5ec6ac34e362607570cadc98cd7ee7290be33d3a889e022d1aa1"
    },
    {
      "name": "EasyVR",
      "version": "1.8.1",
      "author": "RoboTech-srl \u003csoftware@robotechsrl.com\u003e",
      "maintainer": "PPEscher \u003cppescher@users.noreply.github.com\u003e",
      "sentence": "A library for the EasyVR line of products.",
      "paragraph": "It implements the EasyVR communication protocol over any Arduino Serial port and a special Bridge mode for direct connection to the EasyVR Commander software running on a PC.",
      "website": "http://robotech-srl.github.io/EasyVR-Arduino/",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/RoboTech-srl/EasyVR-1.8.1.zip",
      "archiveFileName": "EasyVR-1.8.1.zip",
      "size": 164231,
      "checksum": "SHA-256:0cf481e9e55fe69980bac90b04d17676afde9492134c229229a931804f137c57"
    },
    {
      "name": "EasyVR",
      "version": "1.9.1",
      "author": "RoboTech-srl \u003csoftware@robotechsrl.com\u003e",
      "maintainer": "PPEscher \u003cppescher@users.noreply.github.com\u003e",
      "sentence": "A library for the EasyVR line of products.",
      "paragraph": "It implements the EasyVR communication protocol over any Arduino Serial port and a special Bridge mode for direct connection to the EasyVR Commander software running on a PC.",
      "website": "http://robotech-srl.github.io/EasyVR-Arduino/",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/RoboTech-srl/EasyVR-1.9.1.zip",
      "archiveFileName": "EasyVR-1.9.1.zip",
      "size": 176966,
      "checksum": "SHA-256:11d384ad408a8952e5b5e2da9bd6617510f38d9270fd7014007fd28be3245bfa"
    },
    {
      "name": "EasyVR",
      "version": "1.9.2",
      "author": "RoboTech-srl \u003csoftware@robotechsrl.com\u003e",
      "maintainer": "PPEscher \u003cppescher@users.noreply.github.com\u003e",
      "sentence": "A library for the EasyVR line of products.",
      "paragraph": "It implements the EasyVR communication protocol over any Arduino Serial port and a special Bridge mode for direct connection to the EasyVR Commander software running on a PC.",
      "website": "http://robotech-srl.github.io/EasyVR-Arduino/",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/RoboTech-srl/EasyVR-1.9.2.zip",
      "archiveFileName": "EasyVR-1.9.2.zip",
      "size": 177046,
      "checksum": "SHA-256:eadce0ada78c929819209a70d843e824ba9562431c803966b1361c73d4e202d2"
    },
    {
      "name": "LoRa",
      "version": "0.0.0",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for sending and receiving data using LoRa radios.",
      "paragraph": "Supports Semtech SX1276/77/78/79 based boards/shields.",
      "website": "https://github.com/sandeepmistry/arduino-LoRa",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sandeepmistry/LoRa-0.0.0.zip",
      "archiveFileName": "LoRa-0.0.0.zip",
      "size": 6587,
      "checksum": "SHA-256:54c1d350e2564ffd2fb06b90d6e2112b00b81d7aa466ee3930b66eaedb3e534d"
    },
    {
      "name": "LoRa",
      "version": "0.0.1",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for sending and receiving data using LoRa radios.",
      "paragraph": "Supports Semtech SX1276/77/78/79 based boards/shields.",
      "website": "https://github.com/sandeepmistry/arduino-LoRa",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sandeepmistry/LoRa-0.0.1.zip",
      "archiveFileName": "LoRa-0.0.1.zip",
      "size": 6622,
      "checksum": "SHA-256:5eed4094d498418e0c130740080a05689247776e956d50d7105e625780150a81"
    },
    {
      "name": "LoRa",
      "version": "0.1.0",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for sending and receiving data using LoRa radios.",
      "paragraph": "Supports Semtech SX1276/77/78/79 based boards/shields.",
      "website": "https://github.com/sandeepmistry/arduino-LoRa",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sandeepmistry/LoRa-0.1.0.zip",
      "archiveFileName": "LoRa-0.1.0.zip",
      "size": 9676,
      "checksum": "SHA-256:5a62247e5ea133cd0df40ea8196ae87f39d7e8b93128e2398ee75ba26d506914"
    },
    {
      "name": "LoRa",
      "version": "0.2.0",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for sending and receiving data using LoRa radios.",
      "paragraph": "Supports Semtech SX1276/77/78/79 based boards/shields.",
      "website": "https://github.com/sandeepmistry/arduino-LoRa",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sandeepmistry/LoRa-0.2.0.zip",
      "archiveFileName": "LoRa-0.2.0.zip",
      "size": 10089,
      "checksum": "SHA-256:53bafb8f372f78c55d81c4a208e906fdd1fe25e778f53270a571c561b3afeaed"
    },
    {
      "name": "LoRa",
      "version": "0.2.1",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for sending and receiving data using LoRa radios.",
      "paragraph": "Supports Semtech SX1276/77/78/79 based boards/shields.",
      "website": "https://github.com/sandeepmistry/arduino-LoRa",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sandeepmistry/LoRa-0.2.1.zip",
      "archiveFileName": "LoRa-0.2.1.zip",
      "size": 10213,
      "checksum": "SHA-256:15d523106b5ee2a9b61a57cec69d254f4e4f4da3c73fc3657a1a0c842420bcfb"
    },
    {
      "name": "BLEPeripheral",
      "version": "0.1.0",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for creating custom BLE peripherals.",
      "paragraph": "Supports nRF8001 and nRF51822 based boards/shields",
      "website": "https://github.com/sandeepmistry/arduino-BLEPeripheral",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sandeepmistry/BLEPeripheral-0.1.0.zip",
      "archiveFileName": "BLEPeripheral-0.1.0.zip",
      "size": 640431,
      "checksum": "SHA-256:313de743671779ee77ff6ad8367ba29d87bc9c30860671709ad20f884b69da00"
    },
    {
      "name": "BLEPeripheral",
      "version": "0.1.1",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for creating custom BLE peripherals.",
      "paragraph": "Supports nRF8001 and nRF51822 based boards/shields",
      "website": "https://github.com/sandeepmistry/arduino-BLEPeripheral",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sandeepmistry/BLEPeripheral-0.1.1.zip",
      "archiveFileName": "BLEPeripheral-0.1.1.zip",
      "size": 641518,
      "checksum": "SHA-256:0e95d048fa23f504e700f191f7da27523933d330e0ca0713b6578f47f8a38290"
    },
    {
      "name": "BLEPeripheral",
      "version": "0.1.2",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for creating custom BLE peripherals.",
      "paragraph": "Supports nRF8001 and nRF51822 based boards/shields",
      "website": "https://github.com/sandeepmistry/arduino-BLEPeripheral",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sandeepmistry/BLEPeripheral-0.1.2.zip",
      "archiveFileName": "BLEPeripheral-0.1.2.zip",
      "size": 641675,
      "checksum": "SHA-256:e1c6faa31e07348b30d7834be504bfb69d06b0ca5647519692324a96b05b0eed"
    },
    {
      "name": "BLEPeripheral",
      "version": "0.1.3",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for creating custom BLE peripherals.",
      "paragraph": "Supports nRF8001 and nRF51822 based boards/shields",
      "website": "https://github.com/sandeepmistry/arduino-BLEPeripheral",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sandeepmistry/BLEPeripheral-0.1.3.zip",
      "archiveFileName": "BLEPeripheral-0.1.3.zip",
      "size": 642361,
      "checksum": "SHA-256:d709086a372d21f5ab5efaa54754bef7279e7433d4802eccc1a2e48b77c62705"
    },
    {
      "name": "BLEPeripheral",
      "version": "0.1.4",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for creating custom BLE peripherals.",
      "paragraph": "Supports nRF8001 and nRF51822 based boards/shields",
      "website": "https://github.com/sandeepmistry/arduino-BLEPeripheral",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sandeepmistry/BLEPeripheral-0.1.4.zip",
      "archiveFileName": "BLEPeripheral-0.1.4.zip",
      "size": 642489,
      "checksum": "SHA-256:9bae5c1e60a1e8492314c776c17f22e0c2b4e7a7afa22584d5644b30f724a880"
    },
    {
      "name": "BLEPeripheral",
      "version": "0.1.5",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for creating custom BLE peripherals.",
      "paragraph": "Supports nRF8001 and nRF51822 based boards/shields",
      "website": "https://github.com/sandeepmistry/arduino-BLEPeripheral",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sandeepmistry/BLEPeripheral-0.1.5.zip",
      "archiveFileName": "BLEPeripheral-0.1.5.zip",
      "size": 642488,
      "checksum": "SHA-256:713f6c0a350532f39f163d4b46bec26b9ca4c7d10083cfba64590c8b2488353c"
    },
    {
      "name": "BLEPeripheral",
      "version": "0.1.6",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for creating custom BLE peripherals.",
      "paragraph": "Supports nRF8001 and nRF51822 based boards/shields",
      "website": "https://github.com/sandeepmistry/arduino-BLEPeripheral",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sandeepmistry/BLEPeripheral-0.1.6.zip",
      "archiveFileName": "BLEPeripheral-0.1.6.zip",
      "size": 200349,
      "checksum": "SHA-256:88780ba49a5e0b68ea402bea91ee097a7d69b6dcbfa708b6f3c4bd573a168a9b"
    },
    {
      "name": "BLEPeripheral",
      "version": "0.1.7",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for creating custom BLE peripherals.",
      "paragraph": "Supports nRF8001 and nRF51822 based boards/shields",
      "website": "https://github.com/sandeepmistry/arduino-BLEPeripheral",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sandeepmistry/BLEPeripheral-0.1.7.zip",
      "archiveFileName": "BLEPeripheral-0.1.7.zip",
      "size": 200361,
      "checksum": "SHA-256:6842bf7a0c7eb0a165e4717adaa5e2a3774db221d2e9d567583179b9c0b0950f"
    },
    {
      "name": "BLEPeripheral",
      "version": "0.1.8",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for creating custom BLE peripherals.",
      "paragraph": "Supports nRF8001 and nRF51822 based boards/shields",
      "website": "https://github.com/sandeepmistry/arduino-BLEPeripheral",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sandeepmistry/BLEPeripheral-0.1.8.zip",
      "archiveFileName": "BLEPeripheral-0.1.8.zip",
      "size": 200418,
      "checksum": "SHA-256:8dfbf3b7d711a6b11c6416dfe007c37b051095474a2efee28071e74d569dda2d"
    },
    {
      "name": "BLEPeripheral",
      "version": "0.2.0",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for creating custom BLE peripherals.",
      "paragraph": "Supports nRF8001 and nRF51822 based boards/shields",
      "website": "https://github.com/sandeepmistry/arduino-BLEPeripheral",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sandeepmistry/BLEPeripheral-0.2.0.zip",
      "archiveFileName": "BLEPeripheral-0.2.0.zip",
      "size": 189879,
      "checksum": "SHA-256:78f4d018a74e23f4708c5767b23fe4ab2a3fb2d374be7dce826ea95b958bec76"
    },
    {
      "name": "BLEPeripheral",
      "version": "0.3.0",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for creating custom BLE peripherals.",
      "paragraph": "Supports nRF8001 and nRF51822 based boards/shields",
      "website": "https://github.com/sandeepmistry/arduino-BLEPeripheral",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sandeepmistry/BLEPeripheral-0.3.0.zip",
      "archiveFileName": "BLEPeripheral-0.3.0.zip",
      "size": 190503,
      "checksum": "SHA-256:f6a70e1b9f11dfeef1209563e91e721587eb3e27f712b665ad9b0b54ec997623"
    },
    {
      "name": "BLEPeripheral",
      "version": "0.3.1",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for creating custom BLE peripherals.",
      "paragraph": "Supports nRF8001 and nRF51822 based boards/shields",
      "website": "https://github.com/sandeepmistry/arduino-BLEPeripheral",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sandeepmistry/BLEPeripheral-0.3.1.zip",
      "archiveFileName": "BLEPeripheral-0.3.1.zip",
      "size": 224322,
      "checksum": "SHA-256:af2c4f8fb95b338c6a959449380f1def86818f11cd506b54ebdda9745bf12658"
    },
    {
      "name": "BLEPeripheral",
      "version": "0.4.0",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for creating custom BLE peripherals.",
      "paragraph": "Supports nRF8001 and nRF51822 based boards/shields",
      "website": "https://github.com/sandeepmistry/arduino-BLEPeripheral",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sandeepmistry/BLEPeripheral-0.4.0.zip",
      "archiveFileName": "BLEPeripheral-0.4.0.zip",
      "size": 224783,
      "checksum": "SHA-256:e2470142343cfd2c172db33697a798e0128e966e755d760a11d1c550dd63c97a"
    },
    {
      "name": "GPRSbee",
      "version": "1.2.0",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the SODAQ GPRSbee.",
      "paragraph": "It supports sending HTTP GET and POST, send data via FTP, and more.",
      "website": "https://github.com/SodaqMoja/GPRSbee",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/GPRSbee-1.2.0.zip",
      "archiveFileName": "GPRSbee-1.2.0.zip",
      "size": 79778,
      "checksum": "SHA-256:0ef9ba9130f864b37b5bfd3d31cc989eb18e9ae8a3e317070628af1714593aef"
    },
    {
      "name": "GPRSbee",
      "version": "1.3.0",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the SODAQ GPRSbee.",
      "paragraph": "It supports sending HTTP GET and POST, send data via FTP, and more.",
      "website": "https://github.com/SodaqMoja/GPRSbee",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/GPRSbee-1.3.0.zip",
      "archiveFileName": "GPRSbee-1.3.0.zip",
      "size": 80802,
      "checksum": "SHA-256:84dc2c6a677f018674521c089d103620865a8a208648b817ceefd7641f2209a8"
    },
    {
      "name": "GPRSbee",
      "version": "1.9.0",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the SODAQ GPRSbee.",
      "paragraph": "It supports sending HTTP GET and POST, send data via FTP, and more.",
      "website": "https://github.com/SodaqMoja/GPRSbee",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/GPRSbee-1.9.0.zip",
      "archiveFileName": "GPRSbee-1.9.0.zip",
      "size": 88821,
      "checksum": "SHA-256:7e4a98c2f5993774f265926eb806b0201cf58e26d6501f26a65c8743233e7209"
    },
    {
      "name": "GPRSbee",
      "version": "1.9.1",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the SODAQ GPRSbee.",
      "paragraph": "It supports sending HTTP GET and POST, send data via FTP, and more.",
      "website": "https://github.com/SodaqMoja/GPRSbee",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/GPRSbee-1.9.1.zip",
      "archiveFileName": "GPRSbee-1.9.1.zip",
      "size": 89285,
      "checksum": "SHA-256:4733a9fdfa6ac1a128565db7ca97d80cf8d6b0fd645b6cbc6207a399c0d38f6a"
    },
    {
      "name": "GPRSbee",
      "version": "1.9.2",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the SODAQ GPRSbee.",
      "paragraph": "It supports sending HTTP GET and POST, send data via FTP, and more.",
      "website": "https://github.com/SodaqMoja/GPRSbee",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/GPRSbee-1.9.2.zip",
      "archiveFileName": "GPRSbee-1.9.2.zip",
      "size": 89423,
      "checksum": "SHA-256:f69735b33899eb05c2b497e3c5d725a9f65e44892c20b6f6be77fd16c41ac98d"
    },
    {
      "name": "RTCTimer",
      "version": "1.0.0",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library to easily perform scheduled tasks.",
      "paragraph": "from the Arduino main loop.",
      "website": "https://github.com/SodaqMoja/RTCTimer",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/RTCTimer-1.0.0.zip",
      "archiveFileName": "RTCTimer-1.0.0.zip",
      "size": 22404,
      "checksum": "SHA-256:5210f88ca51a07e4bd63a06b6dc1b8639f9fa8c17fb3014acd1dfa79b4132ad7"
    },
    {
      "name": "Sodaq_BMP085",
      "version": "1.2.0",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the BMP085/BMP180 Barometric Pressure + Temp sensor",
      "website": "https://github.com/SodaqMoja/Sodaq_BMP085",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/Sodaq_BMP085-1.2.0.zip",
      "archiveFileName": "Sodaq_BMP085-1.2.0.zip",
      "size": 6726,
      "checksum": "SHA-256:7ede72f5dc0ec031005114a90ec9d3a3a54a318d68f831f182c2a5c3bf9832e2"
    },
    {
      "name": "Sodaq_BMP085",
      "version": "1.2.1",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the BMP085/BMP180 Barometric Pressure + Temp sensor",
      "website": "https://github.com/SodaqMoja/Sodaq_BMP085",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/Sodaq_BMP085-1.2.1.zip",
      "archiveFileName": "Sodaq_BMP085-1.2.1.zip",
      "size": 6733,
      "checksum": "SHA-256:ebebf688adce6d1287ce9a67bb4bad0a94eee984f81c73d14bb5f6b9f1da9663"
    },
    {
      "name": "Sodaq_BMP085",
      "version": "1.3.0",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the BMP085/BMP180 Barometric Pressure + Temp sensor",
      "website": "https://github.com/SodaqMoja/Sodaq_BMP085",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/Sodaq_BMP085-1.3.0.zip",
      "archiveFileName": "Sodaq_BMP085-1.3.0.zip",
      "size": 6718,
      "checksum": "SHA-256:a33fda3186db5ec5af1435c6f70cd3dbb3d109aaf54c6bd357d35fbc85d57acf"
    },
    {
      "name": "Sodaq_BMP085",
      "version": "1.4.0",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the BMP085/BMP180 Barometric Pressure + Temp sensor",
      "website": "https://github.com/SodaqMoja/Sodaq_BMP085",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/Sodaq_BMP085-1.4.0.zip",
      "archiveFileName": "Sodaq_BMP085-1.4.0.zip",
      "size": 6923,
      "checksum": "SHA-256:837092410b6973180f4e48de2934b539de7c04873a4bb20dc7f659ff58b673ac"
    },
    {
      "name": "Sodaq_SHT2x",
      "version": "1.1.0",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the SHT21 / SHT25 humidity and temperature sensors",
      "website": "https://github.com/SodaqMoja/Sodaq_SHT2x",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/Sodaq_SHT2x-1.1.0.zip",
      "archiveFileName": "Sodaq_SHT2x-1.1.0.zip",
      "size": 19040,
      "checksum": "SHA-256:0fbd3478c02030978ded72b3a66998e621cc80c39bab0d3938b16ab43e8247e1"
    },
    {
      "name": "Sodaq_SHT2x",
      "version": "1.2.0",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the SHT21 / SHT25 humidity and temperature sensors",
      "website": "https://github.com/SodaqMoja/Sodaq_SHT2x",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/Sodaq_SHT2x-1.2.0.zip",
      "archiveFileName": "Sodaq_SHT2x-1.2.0.zip",
      "size": 19334,
      "checksum": "SHA-256:043adf07c00e699e15865db48bf4c51414cf565dc60b100758934c1c8786200f"
    },
    {
      "name": "Sodaq_DS3231",
      "version": "1.2.0",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the DS3231 RTC (Real Time Clock).",
      "website": "https://github.com/SodaqMoja/Sodaq_DS3231",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/Sodaq_DS3231-1.2.0.zip",
      "archiveFileName": "Sodaq_DS3231-1.2.0.zip",
      "size": 9807,
      "checksum": "SHA-256:6595f9c3e7ab2154e9fa17a10b4327fd85afc10dc173be90f1a114f4ca7d578b"
    },
    {
      "name": "Sodaq_DS3231",
      "version": "1.2.1",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the DS3231 RTC (Real Time Clock).",
      "website": "https://github.com/SodaqMoja/Sodaq_DS3231",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/Sodaq_DS3231-1.2.1.zip",
      "archiveFileName": "Sodaq_DS3231-1.2.1.zip",
      "size": 9813,
      "checksum": "SHA-256:2927ec647df3b7673227d954856ff69d9e7ef0219bb75fe88198b6376b0b06f7"
    },
    {
      "name": "Sodaq_PcInt",
      "version": "1.2.0",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library to deal with PCINT (Pin Change Interrupts)",
      "website": "https://github.com/SodaqMoja/Sodaq_PcInt",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/Sodaq_PcInt-1.2.0.zip",
      "archiveFileName": "Sodaq_PcInt-1.2.0.zip",
      "size": 4629,
      "checksum": "SHA-256:3ddcf453fe0c5e9e8d420b59184a3beb7206af205fd322128abcb0717513b193"
    },
    {
      "name": "Gamer",
      "version": "2.0.0",
      "author": "Mike Vanis \u003chello@mikevanis.com\u003e, Andy Sheen \u003candymsheen@gmail.com\u003e",
      "maintainer": "Mike Vanis \u003chello@mikevanis.com\u003e",
      "sentence": "A library for the DIY Gamer Kit by Technology Will Save Us.",
      "paragraph": "Makes interfacing with the Gamer's screen, buttons, IR, buzzer and other peripherals a walk in the park!",
      "website": "http://github.com/techwillsaveus/Gamer",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/techwillsaveus/Gamer-2.0.0.zip",
      "archiveFileName": "Gamer-2.0.0.zip",
      "size": 30796,
      "checksum": "SHA-256:9c783c24e1377a6577095adc08063a5efb47a68cabe0f833a60eb84e87d7a710"
    },
    {
      "name": "Gamer",
      "version": "2.1.0",
      "author": "Technology Will Save Us \u003cdevelop@techwillsaveus.com\u003e",
      "maintainer": "Technology Will Save Us \u003csupport@techwillsaveus.com\u003e",
      "sentence": "A library for the DIY Gamer Kit by Technology Will Save Us.",
      "paragraph": "Makes interfacing with the Gamer's screen, buttons, IR, buzzer and other peripherals a walk in the park!",
      "website": "http://github.com/techwillsaveus/Gamer",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/techwillsaveus/Gamer-2.1.0.zip",
      "archiveFileName": "Gamer-2.1.0.zip",
      "size": 31379,
      "checksum": "SHA-256:8eece086438da464b34c5ad6a06af5228f3fa1f313bee35b7a31dfc43b980735"
    },
    {
      "name": "GamerIR",
      "version": "2.0.0",
      "author": "Mike Vanis \u003chello@mikevanis.com\u003e, Andy Sheen \u003candymsheen@gmail.com\u003e",
      "maintainer": "Mike Vanis \u003chello@mikevanis.com\u003e",
      "sentence": "Infrared communication library for the DIY Gamer Kit by Tech Will Save Us",
      "paragraph": "Makes interfacing with the Gamer's infrared transmitter and receiver a walk in the park!",
      "website": "http://github.com/techwillsaveus/GamerIR",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/techwillsaveus/GamerIR-2.0.0.zip",
      "archiveFileName": "GamerIR-2.0.0.zip",
      "size": 3055,
      "checksum": "SHA-256:556bf9eedb888609ef7d99f7cc724dafb0f57d44c852d14066464d72650c93d1"
    },
    {
      "name": "SoftwareWire",
      "version": "1.3.2",
      "author": "Testato, Koepel",
      "maintainer": "Testato \u003cspeednpower@gmail.com\u003e",
      "sentence": "Creates a software I2C/TWI bus on every pins.",
      "paragraph": "The SoftwareWire is only I2C Master mode. More than one software I2C bus can be created. The clock pulse stretching is implemented, so the Slave can be another Arduino board",
      "website": "https://github.com/Testato/SoftwareWire",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Testato/SoftwareWire-1.3.2.zip",
      "archiveFileName": "SoftwareWire-1.3.2.zip",
      "size": 13681,
      "checksum": "SHA-256:4d85529f9b64930211312f50eedef25f0ee5850b5eb71d57059a80cae2d22290"
    },
    {
      "name": "SoftwareWire",
      "version": "1.4.0",
      "author": "Testato, Koepel",
      "maintainer": "Testato \u003cspeednpower@gmail.com\u003e",
      "sentence": "Creates a software I2C/TWI bus on every pins.",
      "paragraph": "The SoftwareWire is only I2C Master mode. More than one software I2C bus can be created. The clock pulse stretching is implemented, so the Slave can be another Arduino board",
      "website": "https://github.com/Testato/SoftwareWire",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Testato/SoftwareWire-1.4.0.zip",
      "archiveFileName": "SoftwareWire-1.4.0.zip",
      "size": 14012,
      "checksum": "SHA-256:24f0a7f2a22d39e561cd943fbc6112fd0b52d408d8136692d7c2f6173159ec66"
    },
    {
      "name": "SoftwareWire",
      "version": "1.4.1",
      "author": "Testato, Koepel",
      "maintainer": "Testato \u003cspeednpower@gmail.com\u003e",
      "sentence": "Creates a software I2C/TWI bus on every pins.",
      "paragraph": "The SoftwareWire is only I2C Master mode. More than one software I2C bus can be created. The clock pulse stretching is implemented, so the Slave can be another Arduino board",
      "website": "https://github.com/Testato/SoftwareWire",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Testato/SoftwareWire-1.4.1.zip",
      "archiveFileName": "SoftwareWire-1.4.1.zip",
      "size": 26237,
      "checksum": "SHA-256:c0c2ea61597bad8a87a74b1aec1968f0c47280fd643b6003fae76d9f64a88e77"
    },
    {
      "name": "souliss",
      "version": "7.0.2",
      "author": "Souliss Team",
      "maintainer": "Souliss Team",
      "sentence": "SmartHome Networking Framework",
      "paragraph": "Build a network of multiple nodes over Ethernet, Wireless and RS485",
      "website": "http://souliss.github.io",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/souliss/souliss-7.0.2.zip",
      "archiveFileName": "souliss-7.0.2.zip",
      "size": 572997,
      "checksum": "SHA-256:0eec94071d69cfff1e0c8d713f00e67bb98788253f9cf26da07b5424dbe803dd"
    },
    {
      "name": "souliss",
      "version": "7.0.3",
      "author": "Souliss Team",
      "maintainer": "Souliss Team",
      "sentence": "SmartHome Networking Framework",
      "paragraph": "Build a network of multiple nodes over Ethernet, Wireless and RS485",
      "website": "http://souliss.github.io",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/souliss/souliss-7.0.3.zip",
      "archiveFileName": "souliss-7.0.3.zip",
      "size": 524686,
      "checksum": "SHA-256:80862d17e4d1f6e1fd315572cd60ccac71ec580e8cd5ddce454c74d82cb3da98"
    },
    {
      "name": "souliss",
      "version": "7.0.4",
      "author": "Souliss Team",
      "maintainer": "Souliss Team",
      "sentence": "SmartHome Networking Framework",
      "paragraph": "Build a network of multiple nodes over Ethernet, Wireless and RS485 for your smart home",
      "website": "http://souliss.github.io",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/souliss/souliss-7.0.4.zip",
      "archiveFileName": "souliss-7.0.4.zip",
      "size": 526958,
      "checksum": "SHA-256:22109c5302fa63a3058715524aafdbfef649109254e1bb20ca78999b9d3a2fd3"
    },
    {
      "name": "souliss",
      "version": "7.0.5",
      "author": "Souliss Team",
      "maintainer": "Souliss Team",
      "sentence": "SmartHome Networking Framework",
      "paragraph": "Build a network of multiple nodes over Ethernet, Wireless and RS485 for your smart home",
      "website": "http://souliss.github.io",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/souliss/souliss-7.0.5.zip",
      "archiveFileName": "souliss-7.0.5.zip",
      "size": 525976,
      "checksum": "SHA-256:78be216300c85c073707a262d934e2de62500f0d166c5e09899748df7180128a"
    },
    {
      "name": "souliss",
      "version": "7.0.6",
      "author": "Souliss Team",
      "maintainer": "Souliss Team",
      "sentence": "SmartHome Networking Framework",
      "paragraph": "Build a network of multiple nodes over Ethernet, Wireless and RS485 for your smart home",
      "website": "http://souliss.github.io",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/souliss/souliss-7.0.6.zip",
      "archiveFileName": "souliss-7.0.6.zip",
      "size": 534741,
      "checksum": "SHA-256:469b88c3816ae668bfa2af1b2a96d0268fd86945e1f7169f08afdcac39f96775"
    },
    {
      "name": "souliss",
      "version": "7.1.0",
      "author": "Souliss Team",
      "maintainer": "Souliss Team",
      "sentence": "SmartHome Networking Framework",
      "paragraph": "Build a network of multiple nodes over Ethernet, Wireless and RS485 for your smart home",
      "website": "http://souliss.github.io",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/souliss/souliss-7.1.0.zip",
      "archiveFileName": "souliss-7.1.0.zip",
      "size": 591250,
      "checksum": "SHA-256:672bec87a2f63c6c345123e3466c1d2f6db963800dcb7c7396866e0ab5b58622"
    },
    {
      "name": "souliss",
      "version": "7.1.1",
      "author": "Souliss Team",
      "maintainer": "Souliss Team",
      "sentence": "SmartHome Networking Framework",
      "paragraph": "Build a network of multiple nodes over WiFi/Ethernet, Wireless and RS485 for your smart home. Runs on AVRs and ESP8266.",
      "website": "http://souliss.github.io",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/souliss/souliss-7.1.1.zip",
      "archiveFileName": "souliss-7.1.1.zip",
      "size": 606540,
      "checksum": "SHA-256:d81cb8488992b8b727f5e5ea8c27295154b96b5d5aebb7bfd9b648a0fddca9d4"
    },
    {
      "name": "souliss",
      "version": "7.2.0",
      "author": "Souliss Team",
      "maintainer": "Souliss Team",
      "sentence": "SmartHome Networking Framework",
      "paragraph": "Build a network of multiple nodes over WiFi/Ethernet, Wireless and RS485 for your smart home. Runs on AVRs and ESP8266.",
      "website": "http://souliss.github.io",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/souliss/souliss-7.2.0.zip",
      "archiveFileName": "souliss-7.2.0.zip",
      "size": 616574,
      "checksum": "SHA-256:4abada15bf29c34cf1e8e774ae3f15d3186d9e345706a1e0392aef8a4aec5de9"
    },
    {
      "name": "souliss",
      "version": "7.2.1",
      "author": "Souliss Team",
      "maintainer": "Souliss Team",
      "sentence": "SmartHome Networking Framework",
      "paragraph": "Build a network of multiple nodes over WiFi/Ethernet, Wireless and RS485 for your smart home. Runs on AVRs and ESP8266.",
      "website": "http://souliss.github.io",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/souliss/souliss-7.2.1.zip",
      "archiveFileName": "souliss-7.2.1.zip",
      "size": 621632,
      "checksum": "SHA-256:c531553a78c73754a3e6dc0c99a45c9f7356fda08126386b0371a0c97756beed"
    },
    {
      "name": "DCF77",
      "version": "1.0.0",
      "author": "Thijs Elenbaas",
      "maintainer": "Thijs Elenbaas",
      "sentence": "Read and decode the atomic time broadcasted by the DCF77 radiostation.",
      "paragraph": "The DCF77 library has been designed to work in conjunction with Arduino Time library and allows a sketch to get the precise CET time and date as a standard C time_t. PLEASE NOTE: samples require Time and TimeZone libraries.",
      "website": "http://playground.arduino.cc/Code/DCF77",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thijse/DCF77-1.0.0.zip",
      "archiveFileName": "DCF77-1.0.0.zip",
      "size": 312337,
      "checksum": "SHA-256:a2000e4b3602c6ef550baf7cc2ef7b048fb36c1e128863986fc489b22f32022b"
    },
    {
      "name": "EEPROMEx",
      "version": "1.0.0",
      "author": "Thijs Elenbaas",
      "maintainer": "Thijs Elenbaas",
      "sentence": "Extension of the standard Arduino EEPROM library.",
      "paragraph": "Extended for reading and writing basic types, structs, strings, arrays and more.",
      "website": "http://playground.arduino.cc/Code/EEPROMex",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thijse/EEPROMEx-1.0.0.zip",
      "archiveFileName": "EEPROMEx-1.0.0.zip",
      "size": 87008,
      "checksum": "SHA-256:4215cd5e6dc68b550b17e7e5f92baba44919881197a9a1153edec9f5bdde1cca"
    },
    {
      "name": "thinger.io",
      "version": "1.0.0",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Library for connecting to the thinger.io IoT platform.",
      "paragraph": "Enable easy remote control of your things.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thinger-io/thinger_io-1.0.0.zip",
      "archiveFileName": "thinger_io-1.0.0.zip",
      "size": 29203,
      "checksum": "SHA-256:b064981c5f2b26dd89a651a14c2e4a07a4f6bb5e449dce56f9d3fc4b26eecb54"
    },
    {
      "name": "thinger.io",
      "version": "1.1.0",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the thinger.io IoT platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow easily connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, Arduino Ethernet, Arduino Wifi, Arduino Yun, Adafruit CC3000, Texax Instruments CC3200.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thinger-io/thinger_io-1.1.0.zip",
      "archiveFileName": "thinger_io-1.1.0.zip",
      "size": 31923,
      "checksum": "SHA-256:61872827dd1f81ba5cf07b5bd91b63cf744d115f632f3a4b018cdb9859ca59b4"
    },
    {
      "name": "thinger.io",
      "version": "1.1.1",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the thinger.io IoT platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow easily connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, Arduino Ethernet, Arduino Wifi, Arduino Yun, Adafruit CC3000, Texas Instruments CC3200.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thinger-io/thinger_io-1.1.1.zip",
      "archiveFileName": "thinger_io-1.1.1.zip",
      "size": 32862,
      "checksum": "SHA-256:d8cbc5919b4dbf2765c06335a4baa61970295b1c9c11bbfd37ed37b0381d552c"
    },
    {
      "name": "thinger.io",
      "version": "2.5.5",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the Thinger.io Internet of Things Platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, Arduino Ethernet, Arduino Wifi, Arduino MKR1000, Arduino Yun, Adafruit CC3000, Texas Instruments CC3200, ENC28J60, LinkIt ONE.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thinger-io/thinger_io-2.5.5.zip",
      "archiveFileName": "thinger_io-2.5.5.zip",
      "size": 51715,
      "checksum": "SHA-256:646d72d356ab994a920723bcca437533db152dc9d96c536c4536ab875953f9a0"
    },
    {
      "name": "thinger.io",
      "version": "2.0.0",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the thinger.io IoT platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, Arduino Ethernet, Arduino Wifi, Arduino Yun, Adafruit CC3000, Texas Instruments CC3200.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thinger-io/thinger_io-2.0.0.zip",
      "archiveFileName": "thinger_io-2.0.0.zip",
      "size": 34370,
      "checksum": "SHA-256:a9c62a76388c0ec18f7d7700196fab11d1fce37357a4b4973134ab6f6cadfed8"
    },
    {
      "name": "thinger.io",
      "version": "2.1.0",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the thinger.io IoT platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, Arduino Ethernet, Arduino Wifi, Arduino Yun, Adafruit CC3000, Texas Instruments CC3200.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thinger-io/thinger_io-2.1.0.zip",
      "archiveFileName": "thinger_io-2.1.0.zip",
      "size": 35987,
      "checksum": "SHA-256:c9201176fe3a497fecfa350c02b79f68d91923b1ca37e9e519dd005762061211"
    },
    {
      "name": "thinger.io",
      "version": "2.2.0",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the thinger.io IoT platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, Arduino Ethernet, Arduino Wifi, Arduino Yun, Adafruit CC3000, Texas Instruments CC3200, ENC28J60, LinkIt ONE.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thinger-io/thinger_io-2.2.0.zip",
      "archiveFileName": "thinger_io-2.2.0.zip",
      "size": 42643,
      "checksum": "SHA-256:bef0172661c56f609aa8b506e285a787229b54957e7e8a6e7da9157dba305bcf"
    },
    {
      "name": "thinger.io",
      "version": "2.3.0",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the thinger.io IoT platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, Arduino Ethernet, Arduino Wifi, Arduino Yun, Adafruit CC3000, Texas Instruments CC3200, ENC28J60, LinkIt ONE.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thinger-io/thinger_io-2.3.0.zip",
      "archiveFileName": "thinger_io-2.3.0.zip",
      "size": 44829,
      "checksum": "SHA-256:59a4d3a636b849fc1fbab3201fa67dafcecd0e8177a7c376372c1d3fb0a26c5f"
    },
    {
      "name": "thinger.io",
      "version": "2.3.1",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the thinger.io IoT platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, Arduino Ethernet, Arduino Wifi, Arduino Yun, Adafruit CC3000, Texas Instruments CC3200, ENC28J60, LinkIt ONE.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thinger-io/thinger_io-2.3.1.zip",
      "archiveFileName": "thinger_io-2.3.1.zip",
      "size": 44829,
      "checksum": "SHA-256:55926523c74ebdef10587fc560f55ce92219002fe9239a3b8ea501429c1ca906"
    },
    {
      "name": "thinger.io",
      "version": "2.4.0",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the thinger.io IoT platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, Arduino Ethernet, Arduino Wifi, Arduino MKR1000, Arduino Yun, Adafruit CC3000, Texas Instruments CC3200, ENC28J60, LinkIt ONE.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thinger-io/thinger_io-2.4.0.zip",
      "archiveFileName": "thinger_io-2.4.0.zip",
      "size": 45788,
      "checksum": "SHA-256:beb24ed68b1b83cbf7dea423a73f3e37ea139db44298ce3a1498753f8b7950b8"
    },
    {
      "name": "thinger.io",
      "version": "2.4.1",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the Thinger.io Internet of Things Platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, Arduino Ethernet, Arduino Wifi, Arduino MKR1000, Arduino Yun, Adafruit CC3000, Texas Instruments CC3200, ENC28J60, LinkIt ONE.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thinger-io/thinger_io-2.4.1.zip",
      "archiveFileName": "thinger_io-2.4.1.zip",
      "size": 47091,
      "checksum": "SHA-256:7296099a7c95b81c62d76053fa7f2cc1fbfeb31a2f4c84db9f4d9b42421394a6"
    },
    {
      "name": "thinger.io",
      "version": "2.4.2",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the Thinger.io Internet of Things Platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, Arduino Ethernet, Arduino Wifi, Arduino MKR1000, Arduino Yun, Adafruit CC3000, Texas Instruments CC3200, ENC28J60, LinkIt ONE.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thinger-io/thinger_io-2.4.2.zip",
      "archiveFileName": "thinger_io-2.4.2.zip",
      "size": 47369,
      "checksum": "SHA-256:d9df87533ccfaf5c897d61e3a0777a0a9b03ba6427a0c60656417ab641c81b9f"
    },
    {
      "name": "thinger.io",
      "version": "2.4.3",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the Thinger.io Internet of Things Platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, Arduino Ethernet, Arduino Wifi, Arduino MKR1000, Arduino Yun, Adafruit CC3000, Texas Instruments CC3200, ENC28J60, LinkIt ONE.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thinger-io/thinger_io-2.4.3.zip",
      "archiveFileName": "thinger_io-2.4.3.zip",
      "size": 47460,
      "checksum": "SHA-256:57397c33eb6ba45ff30ab5c16ae147764c4ef2ba57ebfa2e06ac1136f41776db"
    },
    {
      "name": "thinger.io",
      "version": "2.5.0",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the Thinger.io Internet of Things Platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, Arduino Ethernet, Arduino Wifi, Arduino MKR1000, Arduino Yun, Adafruit CC3000, Texas Instruments CC3200, ENC28J60, LinkIt ONE.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thinger-io/thinger_io-2.5.0.zip",
      "archiveFileName": "thinger_io-2.5.0.zip",
      "size": 49486,
      "checksum": "SHA-256:2483562a33c0360cc66c9dcb457c32eaef654d1aa3e082389d1dca1b30693340"
    },
    {
      "name": "thinger.io",
      "version": "2.5.1",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the Thinger.io Internet of Things Platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, Arduino Ethernet, Arduino Wifi, Arduino MKR1000, Arduino Yun, Adafruit CC3000, Texas Instruments CC3200, ENC28J60, LinkIt ONE.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thinger-io/thinger_io-2.5.1.zip",
      "archiveFileName": "thinger_io-2.5.1.zip",
      "size": 49675,
      "checksum": "SHA-256:48b3c007ec8aeb1ec3351a2978c38591b9347e4d4c39f7ba3fc7b50b5536a86e"
    },
    {
      "name": "thinger.io",
      "version": "2.5.2",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the Thinger.io Internet of Things Platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, Arduino Ethernet, Arduino Wifi, Arduino MKR1000, Arduino Yun, Adafruit CC3000, Texas Instruments CC3200, ENC28J60, LinkIt ONE.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thinger-io/thinger_io-2.5.2.zip",
      "archiveFileName": "thinger_io-2.5.2.zip",
      "size": 49693,
      "checksum": "SHA-256:c236bcab01dab9491e3a78daaa0e03c7416d60c95a504ef2541833a4471ce5ba"
    },
    {
      "name": "thinger.io",
      "version": "2.5.6",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the Thinger.io Internet of Things Platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, Arduino Ethernet, Arduino Wifi, Arduino MKR1000, Arduino Yun, Adafruit CC3000, Texas Instruments CC3200, ENC28J60, LinkIt ONE.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thinger-io/thinger_io-2.5.6.zip",
      "archiveFileName": "thinger_io-2.5.6.zip",
      "size": 51836,
      "checksum": "SHA-256:be88aec089ca6f36f8b9e63e56fe29159d2fb154f93c497a6cab427b3aeadac4"
    },
    {
      "name": "thinger.io",
      "version": "2.5.8",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the Thinger.io Internet of Things Platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, ESP32, Arduino Ethernet, Arduino Wifi, Arduino MKR1000, Arduino Yun, Adafruit CC3000, Texas Instruments CC3200, ENC28J60, LinkIt ONE.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thinger-io/thinger_io-2.5.8.zip",
      "archiveFileName": "thinger_io-2.5.8.zip",
      "size": 54017,
      "checksum": "SHA-256:4e65b6919e6b0b9c47a5bdaa4ec4f6fde2e838af1533d4dccc17a806fa3ec07f"
    },
    {
      "name": "thinger.io",
      "version": "2.5.9",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the Thinger.io Internet of Things Platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, ESP32, Arduino Ethernet, Arduino Wifi, Arduino MKR1000, Arduino Yun, Adafruit CC3000, Texas Instruments CC3200, ENC28J60, LinkIt ONE.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thinger-io/thinger_io-2.5.9.zip",
      "archiveFileName": "thinger_io-2.5.9.zip",
      "size": 54042,
      "checksum": "SHA-256:5ab8630fee78b6b85048c36d3d90559cfb5cfe96965ec1dd0ab7edba377994cf"
    },
    {
      "name": "thinger.io",
      "version": "2.6.0",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the Thinger.io Internet of Things Platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, ESP32, Arduino Ethernet, Arduino Wifi, Arduino MKR1000, Arduino Yun, Adafruit CC3000, Arduino + GPRS Modules, Texas Instruments CC3200, ENC28J60, LinkIt ONE.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thinger-io/thinger_io-2.6.0.zip",
      "archiveFileName": "thinger_io-2.6.0.zip",
      "size": 56371,
      "checksum": "SHA-256:2a6919d098ca15f979c1a6438457eabef0cb19cfe87eddf672d5e039803dee30"
    },
    {
      "name": "thinger.io",
      "version": "2.6.1",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the Thinger.io Internet of Things Platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, ESP32, Arduino Ethernet, Arduino Wifi, Arduino MKR1000, Arduino Yun, Adafruit CC3000, Arduino + GPRS Modules, Texas Instruments CC3200, ENC28J60, LinkIt ONE.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thinger-io/thinger_io-2.6.1.zip",
      "archiveFileName": "thinger_io-2.6.1.zip",
      "size": 56488,
      "checksum": "SHA-256:5e7d5305c20075a56e9dcf7f7d5451e59c964b11fb20a0c1a47b56ee5ad9ed2a"
    },
    {
      "name": "thinger.io",
      "version": "2.7.1",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the Thinger.io Internet of Things Platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, ESP32, Arduino Ethernet, Arduino Wifi, Arduino MKR1000, Arduino Yun, Adafruit CC3000, Arduino + GPRS Modules, Texas Instruments CC3200, ENC28J60, LinkIt ONE.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thinger-io/thinger_io-2.7.1.zip",
      "archiveFileName": "thinger_io-2.7.1.zip",
      "size": 56554,
      "checksum": "SHA-256:fb1a7bbe812df8e5c32b90f30c101c1f7f1498cc0e55c730f63dca0388ccb188"
    },
    {
      "name": "thinger.io",
      "version": "2.7.2",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the Thinger.io Internet of Things Platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, ESP32, Arduino Ethernet, Arduino Wifi, Arduino MKR1000, Arduino Yun, Adafruit CC3000, Arduino + GPRS Modules, Texas Instruments CC3200, ENC28J60, LinkIt ONE.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thinger-io/thinger_io-2.7.2.zip",
      "archiveFileName": "thinger_io-2.7.2.zip",
      "size": 56557,
      "checksum": "SHA-256:5ba78de1c214043b39e882566a78d2aa19215d5ad4c9198f2ab5fec8c881f0e5"
    },
    {
      "name": "Bounce2",
      "version": "2.1.0",
      "author": "Thomas O Fredericks \u003ctof@t-o-f.info\u003e with contributions fromEric Lowry, Jim Schimpf and Tom Harkaway",
      "maintainer": "Thomas O Fredericks \u003ctof@t-o-f.info\u003e",
      "sentence": "Debouncing library for Arduino and Wiring.",
      "paragraph": "Deboucing switches and toggles is important.",
      "website": "https://github.com/thomasfredericks/Bounce2",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thomasfredericks/Bounce2-2.1.0.zip",
      "archiveFileName": "Bounce2-2.1.0.zip",
      "size": 83882,
      "checksum": "SHA-256:30fc749568cb841b4fca462d5520fee8429c9d441e9b39db44192126bf508d6b"
    },
    {
      "name": "Bounce2",
      "version": "2.2.0",
      "author": "Thomas O Fredericks \u003ctof@t-o-f.info\u003e with contributions fromEric Lowry, Jim Schimpf and Tom Harkaway",
      "maintainer": "Thomas O Fredericks \u003ctof@t-o-f.info\u003e",
      "sentence": "Debouncing library for Arduino and Wiring.",
      "paragraph": "Deboucing switches and toggles is important.",
      "website": "https://github.com/thomasfredericks/Bounce2",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thomasfredericks/Bounce2-2.2.0.zip",
      "archiveFileName": "Bounce2-2.2.0.zip",
      "size": 84767,
      "checksum": "SHA-256:de29708054e1305890129e914eff8cd219f18210c63ae00c39e8ad57efa7b1e7"
    },
    {
      "name": "CmdMessenger",
      "version": "4.0.0",
      "author": "Thijs Elenbaas, Valeriy Kucherenko",
      "maintainer": "Thijs Elenbaas",
      "sentence": "A serial messaging library for the Arduino and .NET/Mono platform.",
      "paragraph": "It uses serial port and Bluetooth as transport layer. To use CmdMessenger, we define a list of command identifiers, then attach callback / handler functions for received messages. PLEASE NOTE: samples requires PID and optionally Adafruit_MAX31855 libraries.",
      "website": "http://playground.arduino.cc/Code/CmdMessenger",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thijse/CmdMessenger-4.0.0.zip",
      "archiveFileName": "CmdMessenger-4.0.0.zip",
      "size": 1413696,
      "checksum": "SHA-256:bde80aef9390a70808742c110e933f45a6942f6450d09e7c47a58e9af97092e8"
    },
    {
      "name": "Chrono",
      "version": "1.0.0",
      "author": "Thomas O Fredericks \u003ctof@t-o-f.info\u003e and Sofian Audry",
      "maintainer": "Thomas O Fredericks \u003ctof@t-o-f.info\u003e and Sofian Audry",
      "sentence": "Chronometer/stopwatch library that counts the time passed since started.",
      "paragraph": "Works with Arduino and Wiring.",
      "website": "https://github.com/thomasfredericks/Chrono/",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thomasfredericks/Chrono-1.0.0.zip",
      "archiveFileName": "Chrono-1.0.0.zip",
      "size": 131123,
      "checksum": "SHA-256:8a0d52ffcfbdd6739f1a5f9de3e43e405e268ec335cc2c51beecdee2723f4a79"
    },
    {
      "name": "Kalman Filter Library",
      "version": "1.0.1",
      "author": "Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e",
      "maintainer": "Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e",
      "sentence": "Kalman Filter Library.",
      "paragraph": "Kalman filter used to calculate the angle, rate and bias from from the input of an accelerometer/magnetometer and a gyroscope.",
      "website": "https://github.com/TKJElectronics/KalmanFilter",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TKJElectronics/Kalman_Filter_Library-1.0.1.zip",
      "archiveFileName": "Kalman_Filter_Library-1.0.1.zip",
      "size": 18911,
      "checksum": "SHA-256:44f6570233e6cb22932aa0eff4840e15c0b2536dbcc02fff7c3cdca2782e8683"
    },
    {
      "name": "Kalman Filter Library",
      "version": "1.0.2",
      "author": "Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e",
      "maintainer": "Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e",
      "sentence": "Kalman Filter Library.",
      "paragraph": "Kalman filter used to calculate the angle, rate and bias from from the input of an accelerometer/magnetometer and a gyroscope.",
      "website": "https://github.com/TKJElectronics/KalmanFilter",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TKJElectronics/Kalman_Filter_Library-1.0.2.zip",
      "archiveFileName": "Kalman_Filter_Library-1.0.2.zip",
      "size": 18998,
      "checksum": "SHA-256:d5a216d84f59fc99c7274e6373cd13e169f22c9ef9cd916597ca3088fbf13620"
    },
    {
      "name": "LedControl",
      "version": "1.0.6",
      "author": "Eberhard Fahle \u003ce.fahle@wayoda.org\u003e",
      "maintainer": "Eberhard Fahle \u003ce.fahle@wayoda.org\u003e",
      "sentence": "A library for the MAX7219 and the MAX7221 Led display drivers.",
      "paragraph": "The library supports multiple daisychained drivers and supports Led-Matrix displays as well as 7-Segment displays.",
      "website": "http://wayoda.github.io/LedControl/",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/wayoda/LedControl-1.0.6.zip",
      "archiveFileName": "LedControl-1.0.6.zip",
      "size": 9755,
      "checksum": "SHA-256:643c799d2f05223048cf7b474dcea8e23a58486a72a58783234ae5989e21da9e"
    },
    {
      "name": "RCReceiver",
      "version": "1.3.0",
      "author": "Wilfried Klaas",
      "maintainer": "Wilfried Klaas",
      "sentence": "A library to add support for rc receivers.",
      "paragraph": "This library can read and decode PPM signals from simple RC receivers.",
      "website": "https://github.com/willie68/RCReceiver.git",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/willie68/RCReceiver-1.3.0.zip",
      "archiveFileName": "RCReceiver-1.3.0.zip",
      "size": 9675,
      "checksum": "SHA-256:126e80acf50e1bb6f0082b0231974ea82bd896163d395df243c523c06822cc29"
    },
    {
      "name": "RCReceiver",
      "version": "1.4.0",
      "author": "Wilfried Klaas \u003cw.klaas@gmx.de\u003e",
      "maintainer": "Wilfried Klaas \u003cw.klaas@gmx.de\u003e",
      "sentence": "A library to add support for rc receivers.",
      "paragraph": "This library can read and decode PPM signals from simple RC receivers. On Arduino Uno there are 2 channels supported, on others like leonardo or mega, 4 channels.",
      "website": "https://github.com/willie68/RCReceiver.git",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/willie68/RCReceiver-1.4.0.zip",
      "archiveFileName": "RCReceiver-1.4.0.zip",
      "size": 9832,
      "checksum": "SHA-256:4425c0ea205fc327bd80859743a64331aaac6ff027ce1e780d690a5f1b727b79"
    },
    {
      "name": "RCReceiver",
      "version": "1.2.0",
      "author": "Wilfried Klaas",
      "maintainer": "Wilfried Klaas",
      "sentence": "A library to add support for rc receivers.",
      "paragraph": "This library can read and decode PPM signals from simple RC receivers.",
      "website": "https://github.com/willie68/RCReceiver.git",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/willie68/RCReceiver-1.2.0.zip",
      "archiveFileName": "RCReceiver-1.2.0.zip",
      "size": 8009,
      "checksum": "SHA-256:99f06e837eba7afc4fe70dc07d01c23eb13b6140efba2b934066136711c6f9ae"
    },
    {
      "name": "EnergyBoard",
      "version": "1.0.1",
      "author": "Gunce Akkoyun \u003cgunce.akkoyun@lvx.com.tr\u003e, Alp Erkan Savli \u003calp.erkan@lvx.com.tr\u003e",
      "maintainer": "LVX \u003cinfo@lvx.com.tr\u003e",
      "sentence": "Enables reading polyphase energy-monitor parameters of MAX78630 (X2Bus EnergyBoard)",
      "paragraph": "The EnergyBoard is an energy measurement module for polyphase power-monitoring systems. It is designed for real-time monitoring for a variety of typical three-phase configurations in industrial applications. The EnergyBoard provides up to six analog inputs for interfacing to voltage and current sensors. Scaled voltages from the sensors are fed to the single converter front-end using a high-resolution delta-sigma converter. Supported current sensors include current transformers (CTs), Rogowski coils, and resistive shunts.",
      "website": "http://www.lvx.com.tr",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/x2bus/EnergyBoard-1.0.1.zip",
      "archiveFileName": "EnergyBoard-1.0.1.zip",
      "size": 6851,
      "checksum": "SHA-256:a4fa6b83a6b04a1298dadb9d8bd1b799ae4c60817d34a628f4a6295663883d89"
    },
    {
      "name": "EnergyBoard",
      "version": "1.1.0",
      "author": "Gunce Akkoyun \u003cgunce.akkoyun@lvx.com.tr\u003e, Alp Erkan Savli \u003calp.erkan@lvx.com.tr\u003e",
      "maintainer": "LVX \u003cinfo@lvx.com.tr\u003e",
      "sentence": "Enables reading polyphase energy-monitor parameters of MAX78630 (X2Bus EnergyBoard)",
      "paragraph": "The EnergyBoard is an energy measurement module for polyphase power-monitoring systems. It is designed for real-time monitoring for a variety of typical three-phase configurations in industrial applications. The EnergyBoard provides up to six analog inputs for interfacing to voltage and current sensors. Scaled voltages from the sensors are fed to the single converter front-end using a high-resolution delta-sigma converter. Supported current sensors include current transformers (CTs), Rogowski coils, and resistive shunts.",
      "website": "http://www.lvx.com.tr",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/x2bus/EnergyBoard-1.1.0.zip",
      "archiveFileName": "EnergyBoard-1.1.0.zip",
      "size": 68384,
      "checksum": "SHA-256:0aa297d2057e5f6f1bf0a0a1b801cd4e47a8b2f22f39053683b47684704fef07"
    },
    {
      "name": "EnergyBoard",
      "version": "1.2.0",
      "author": "Gunce Akkoyun \u003cgunce.akkoyun@lvx.com.tr\u003e, Alp Erkan Savli \u003calp.erkan@lvx.com.tr\u003e",
      "maintainer": "LVX \u003cinfo@lvx.com.tr\u003e",
      "sentence": "Enables reading polyphase energy-monitor parameters of MAX78630 (X2Bus EnergyBoard)",
      "paragraph": "The EnergyBoard is an energy measurement module for polyphase power-monitoring systems. It is designed for real-time monitoring for a variety of typical three-phase configurations in industrial applications. The EnergyBoard provides up to six analog inputs for interfacing to voltage and current sensors. Scaled voltages from the sensors are fed to the single converter front-end using a high-resolution delta-sigma converter. Supported current sensors include current transformers (CTs), Rogowski coils, and resistive shunts.",
      "website": "http://www.lvx.com.tr",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/x2bus/EnergyBoard-1.2.0.zip",
      "archiveFileName": "EnergyBoard-1.2.0.zip",
      "size": 68384,
      "checksum": "SHA-256:632228242de1a66894d5657a6d41b2ca3f6a8f4a95c52d974602a439c0cc8ce3"
    },
    {
      "name": "EnergyBoard",
      "version": "2.0.0",
      "author": "Gunce Akkoyun \u003cgunce.akkoyun@lvx.com.tr\u003e, Alp Erkan Savli \u003calp.erkan@lvx.com.tr\u003e",
      "maintainer": "LVX \u003cinfo@lvx.com.tr\u003e",
      "sentence": "Enables reading polyphase energy-monitor parameters of MAX78630 (X2Bus EnergyBoard)",
      "paragraph": "The EnergyBoard is an energy measurement module for polyphase power-monitoring systems. It is designed for real-time monitoring for a variety of typical three-phase configurations in industrial applications. The EnergyBoard provides up to six analog inputs for interfacing to voltage and current sensors. Scaled voltages from the sensors are fed to the single converter front-end using a high-resolution delta-sigma converter. Supported current sensors include current transformers (CTs), Rogowski coils, and resistive shunts.",
      "website": "http://www.lvx.com.tr",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/x2bus/EnergyBoard-2.0.0.zip",
      "archiveFileName": "EnergyBoard-2.0.0.zip",
      "size": 611991,
      "checksum": "SHA-256:a5a775a337e1e8f8ba3fece1485ed168e410445ef907570af1b9ab47120e6304"
    },
    {
      "name": "EnergyBoard",
      "version": "2.0.2",
      "author": "Gunce Akkoyun \u003cgunce.akkoyun@lvx.com.tr\u003e, Alp Erkan Savli \u003calp.erkan@lvx.com.tr\u003e",
      "maintainer": "LVX \u003cinfo@lvx.com.tr\u003e",
      "sentence": "Enables reading polyphase energy-monitor parameters of MAX78630 (X2Bus EnergyBoard)",
      "paragraph": "The EnergyBoard is an energy measurement module for polyphase power-monitoring systems. It is designed for real-time monitoring for a variety of typical three-phase configurations in industrial applications. The EnergyBoard provides up to six analog inputs for interfacing to voltage and current sensors. Scaled voltages from the sensors are fed to the single converter front-end using a high-resolution delta-sigma converter. Supported current sensors include current transformers (CTs), Rogowski coils, and resistive shunts.",
      "website": "http://www.lvx.com.tr",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/x2bus/EnergyBoard-2.0.2.zip",
      "archiveFileName": "EnergyBoard-2.0.2.zip",
      "size": 611832,
      "checksum": "SHA-256:021cb8a8626a3b15ceb074e90625cf2e3591cfc2aae9568f85979dd243c4fb4d"
    },
    {
      "name": "EnergyBoard",
      "version": "2.2.0",
      "author": "Gunce Akkoyun \u003cgunce.akkoyun@lvx.com.tr\u003e, Alp Erkan Savli \u003calp.erkan@lvx.com.tr\u003e",
      "maintainer": "LVX \u003cinfo@lvx.com.tr\u003e",
      "sentence": "Enables reading polyphase energy-monitor parameters of LVX EnergyBoard",
      "paragraph": "The EnergyBoard is an energy measurement module for polyphase power-monitoring systems. It is designed for real-time monitoring for a variety of typical three-phase configurations in industrial applications. The EnergyBoard provides up to six analog inputs for interfacing to voltage and current sensors. Scaled voltages from the sensors are fed to the single converter front-end using a high-resolution delta-sigma converter. Supported current sensors include current transformers (CTs), Rogowski coils, and resistive shunts.",
      "website": "http://www.lvx.com.tr",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/x2bus/EnergyBoard-2.2.0.zip",
      "archiveFileName": "EnergyBoard-2.2.0.zip",
      "size": 2411669,
      "checksum": "SHA-256:ae3c17180149fbdd64405ee2a66d6a01823f5daaf98e3a9d69221bf32d2ff2b4"
    },
    {
      "name": "EnergyBoard",
      "version": "3.0.1",
      "author": "Gunce Akkoyun \u003cgunce.akkoyun@lvx.com.tr\u003e",
      "maintainer": "LVX \u003cinfo@lvx.com.tr\u003e",
      "sentence": "Enables reading polyphase energy-monitor parameters of LVX EnergyBoard",
      "paragraph": "The EnergyBoard is an energy measurement module for polyphase power-monitoring systems. It is designed for real-time monitoring for a variety of typical three-phase configurations in industrial applications. The EnergyBoard provides up to six analog inputs for interfacing to voltage and current sensors. Scaled voltages from the sensors are fed to the single converter front-end using a high-resolution delta-sigma converter. Supported current sensors include current transformers (CTs), Rogowski coils, and resistive shunts.",
      "website": "http://www.lvx.com.tr",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/x2bus/EnergyBoard-3.0.1.zip",
      "archiveFileName": "EnergyBoard-3.0.1.zip",
      "size": 2411275,
      "checksum": "SHA-256:eed00fcbd9c3a73dd3133f620b85e5c333bea813630e4f1e679622cdcf68c535"
    },
    {
      "name": "PubSubClient",
      "version": "2.4.0",
      "author": "Nick O'Leary \u003cnick.oleary@gmail.com\u003e",
      "maintainer": "Nick O'Leary \u003cnick.oleary@gmail.com\u003e",
      "sentence": "A client library for MQTT messaging.",
      "paragraph": "MQTT is a lightweight messaging protocol ideal for small devices. This library allows you to send and receive MQTT messages. It supports the latest MQTT 3.1.1 protocol and can be configured to use the older MQTT 3.1 if needed. It supports all Arduino Ethernet Client compatible hardware, including the Intel Galileo/Edison, ESP8266 and TI CC3000.",
      "website": "http://pubsubclient.knolleary.net",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/knolleary/PubSubClient-2.4.0.zip",
      "archiveFileName": "PubSubClient-2.4.0.zip",
      "size": 34391,
      "checksum": "SHA-256:f5fea77e94d9395b947a69ec9af5c3791def0a5545c462d2f05ff9a1d8aee902"
    },
    {
      "name": "PubSubClient",
      "version": "2.2.0",
      "author": "Nick O'Leary \u003cnick.oleary@gmail.com\u003e",
      "maintainer": "Nick O'Leary \u003cnick.oleary@gmail.com\u003e",
      "sentence": "A client library for MQTT messaging.",
      "paragraph": "MQTT is a lightweight messaging protocol ideal for small devices. This library allows you to send and receive MQTT messages from a remote server. It supports the latest MQTT 3.1.1 protocol and can be configured to use the older MQTT 3.1 if needed. It supports all Arduino Ethernet Client compatible hardware, including the Intel Galileo/Edison and ESP8266.",
      "website": "http://knolleary.github.io/pubsubclient/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/knolleary/PubSubClient-2.2.0.zip",
      "archiveFileName": "PubSubClient-2.2.0.zip",
      "size": 32195,
      "checksum": "SHA-256:1ec498cf1d7e05f38d567ac88806da6e71caca838900d760c8997284a2d65d15"
    },
    {
      "name": "PubSubClient",
      "version": "2.3.0",
      "author": "Nick O'Leary \u003cnick.oleary@gmail.com\u003e",
      "maintainer": "Nick O'Leary \u003cnick.oleary@gmail.com\u003e",
      "sentence": "A client library for MQTT messaging.",
      "paragraph": "MQTT is a lightweight messaging protocol ideal for small devices. This library allows you to send and receive MQTT messages. It supports the latest MQTT 3.1.1 protocol and can be configured to use the older MQTT 3.1 if needed. It supports all Arduino Ethernet Client compatible hardware, including the Intel Galileo/Edison, ESP8266 and TI CC3000.",
      "website": "http://pubsubclient.knolleary.net",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/knolleary/PubSubClient-2.3.0.zip",
      "archiveFileName": "PubSubClient-2.3.0.zip",
      "size": 34069,
      "checksum": "SHA-256:5576907fb5250d4cee6f5423521f675e9e16330d8fa4290103e12033e2fa81e5"
    },
    {
      "name": "PubSubClient",
      "version": "2.5.0",
      "author": "Nick O'Leary \u003cnick.oleary@gmail.com\u003e",
      "maintainer": "Nick O'Leary \u003cnick.oleary@gmail.com\u003e",
      "sentence": "A client library for MQTT messaging.",
      "paragraph": "MQTT is a lightweight messaging protocol ideal for small devices. This library allows you to send and receive MQTT messages. It supports the latest MQTT 3.1.1 protocol and can be configured to use the older MQTT 3.1 if needed. It supports all Arduino Ethernet Client compatible hardware, including the Intel Galileo/Edison, ESP8266 and TI CC3000.",
      "website": "http://pubsubclient.knolleary.net",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/knolleary/PubSubClient-2.5.0.zip",
      "archiveFileName": "PubSubClient-2.5.0.zip",
      "size": 35038,
      "checksum": "SHA-256:4b21f2779a9a49ef427535feb4420ca35a27433073f6aaa00f28d3cd4abd8bcf"
    },
    {
      "name": "PubSubClient",
      "version": "2.6.0",
      "author": "Nick O'Leary \u003cnick.oleary@gmail.com\u003e",
      "maintainer": "Nick O'Leary \u003cnick.oleary@gmail.com\u003e",
      "sentence": "A client library for MQTT messaging.",
      "paragraph": "MQTT is a lightweight messaging protocol ideal for small devices. This library allows you to send and receive MQTT messages. It supports the latest MQTT 3.1.1 protocol and can be configured to use the older MQTT 3.1 if needed. It supports all Arduino Ethernet Client compatible hardware, including the Intel Galileo/Edison, ESP8266 and TI CC3000.",
      "website": "http://pubsubclient.knolleary.net",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/knolleary/PubSubClient-2.6.0.zip",
      "archiveFileName": "PubSubClient-2.6.0.zip",
      "size": 35036,
      "checksum": "SHA-256:0683418778dd78c61cb8f98236ca7c2af49daa2725fc23269f61620150e92c0d"
    },
    {
      "name": "Dynamixel_Servo",
      "version": "2.1.0",
      "author": "Michael Krzyzaniak\u003cmkrzyzan@asu.edu\u003e",
      "maintainer": "Michael Krzyzaniak\u003cmkrzyzan@asu.edu\u003e",
      "sentence": "Dynamixel_Servo is an Arduino compatible library for controlling Dynamixel MX and RX series servos.",
      "paragraph": "This module presents a high-level interface and a low-level interface for manipulating the servo's registers. The high-level interface looks up the width (one or two bytes) of the specified value and manipulates all relevant registers (low byte and high byte) as a single value. The high-level interface also performs automatic conversions between the raw values defined in the servo's datasheet, and physical values such as radians, radians-per-second, Amperes, Volts, baud, microseconds, degrees-Celcius, percent (of the motor's maximum torque) etc... as appropriate to the value. The down-side is that the high-level interface hogs several kilobytes of code space, as the result of using floating-point math and having some large-ish lookup tables. Therefore a low-level interface is provided that allows more straightforward access to the servo's registers using raw values, which may optionally be converted to and from physical values using the provided functions. Using the low-level interface and raw values may save several kilobytes of code space (The compiler won't compile functions that aren't used). The low-level interface also provides the capability to access several of the servo's values in a single command using the xxx_raw_page functions.",
      "website": "https://github.com/michaelkrzyzaniak/Dynamixel_Servo",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/michaelkrzyzaniak/Dynamixel_Servo-2.1.0.zip",
      "archiveFileName": "Dynamixel_Servo-2.1.0.zip",
      "size": 34775,
      "checksum": "SHA-256:7c65bed98e7ccf655943a6e5c6a8c209f1abeb9a480c126c29c363217671ed0c"
    },
    {
      "name": "Universal Inputs",
      "version": "2.0.2",
      "author": "Dan Nixon",
      "maintainer": "Dan Nixon \u003cdan@dan-nixon.com\u003e",
      "sentence": "Arduino library for reading multiple input devices of different types.",
      "paragraph": "Arduino library for reading multiple input devices of different types.",
      "website": "https://github.com/DanNixon/ArduinoUniversalInput",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DanNixon/Universal_Inputs-2.0.2.zip",
      "archiveFileName": "Universal_Inputs-2.0.2.zip",
      "size": 17196,
      "checksum": "SHA-256:1aa2b5e5c7f45f4ba01d396e3870ad741d1bd665c99e5144f0c07fa785579f8a"
    },
    {
      "name": "Universal Inputs",
      "version": "2.0.3",
      "author": "Dan Nixon",
      "maintainer": "Dan Nixon \u003cdan@dan-nixon.com\u003e",
      "sentence": "Arduino library for reading multiple input devices of different types.",
      "paragraph": "Arduino library for reading multiple input devices of different types.",
      "website": "https://github.com/DanNixon/ArduinoUniversalInput",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DanNixon/Universal_Inputs-2.0.3.zip",
      "archiveFileName": "Universal_Inputs-2.0.3.zip",
      "size": 17186,
      "checksum": "SHA-256:b18e5c87a47dd678a9285e8f477829f2c4165ec4de76ab6325d077ace8afb24a"
    },
    {
      "name": "Universal Inputs",
      "version": "2.0.4",
      "author": "Dan Nixon",
      "maintainer": "Dan Nixon \u003cdan@dan-nixon.com\u003e",
      "sentence": "Arduino library for reading multiple input devices of different types.",
      "paragraph": "Arduino library for reading multiple input devices of different types.",
      "website": "https://github.com/DanNixon/ArduinoUniversalInput",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DanNixon/Universal_Inputs-2.0.4.zip",
      "archiveFileName": "Universal_Inputs-2.0.4.zip",
      "size": 17178,
      "checksum": "SHA-256:9922d980b54a9a3e67967c12126814b0051adcbcf710ca3c9f66a9ad8904c6b6"
    },
    {
      "name": "Universal Inputs",
      "version": "2.1.0",
      "author": "Dan Nixon",
      "maintainer": "Dan Nixon \u003cdan@dan-nixon.com\u003e",
      "sentence": "Arduino library for reading multiple input devices of different types.",
      "paragraph": "Arduino library for reading multiple input devices of different types.",
      "website": "https://github.com/DanNixon/ArduinoUniversalInput",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DanNixon/Universal_Inputs-2.1.0.zip",
      "archiveFileName": "Universal_Inputs-2.1.0.zip",
      "size": 18882,
      "checksum": "SHA-256:9a365605062395139d477e83392a2eb60d3cb6da533660a6eeaa623b92bd1158"
    },
    {
      "name": "DW1000",
      "version": "0.4.0",
      "author": "Thomas Trojer \u003cthomas@trojer.net\u003e",
      "maintainer": "Thomas Trojer \u003cthomas@trojer.net\u003e",
      "sentence": "A library that offers functionality to use Decawave's DW1000 chips/modules.",
      "paragraph": "Supports transmission of messages, timestamp handling (for ranging and location sensing applications) and implements the different operation modes the DW1000 has to offer. The library design is intended to offer an easy-to-use interface to the otherwise complex and configuration intense handling of the DW1000.",
      "website": "https://github.com/thotro/arduino-dw1000",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thotro/DW1000-0.4.0.zip",
      "archiveFileName": "DW1000-0.4.0.zip",
      "size": 8876371,
      "checksum": "SHA-256:d984704ea5025a68a4578ec47a92521a0d80ec92c13e2632658e866db7824e5b"
    },
    {
      "name": "DW1000",
      "version": "0.5.0",
      "author": "Thomas Trojer \u003cthomas@trojer.net\u003e",
      "maintainer": "Thomas Trojer \u003cthomas@trojer.net\u003e",
      "sentence": "A library that offers functionality to use Decawave's DW1000 chips/modules.",
      "paragraph": "Supports transmission of messages, timestamp handling (for ranging and location sensing applications) and implements the different operation modes the DW1000 has to offer. The library design is intended to offer an easy-to-use interface to the otherwise complex and configuration intense handling of the DW1000.",
      "website": "https://github.com/thotro/arduino-dw1000",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thotro/DW1000-0.5.0.zip",
      "archiveFileName": "DW1000-0.5.0.zip",
      "size": 8916570,
      "checksum": "SHA-256:f70e37db442d4a116c5f778583120a92cd48dbdaf386e9f232f42f22a21ad33a"
    },
    {
      "name": "XBee-Arduino library",
      "version": "0.6.0",
      "author": "Andrew Rapp",
      "maintainer": "Andrew Rapp \u003candrew.rapp@gmail.com\u003e",
      "sentence": "Library for talking to to various wireless XBee modules from Digi.",
      "paragraph": "This supports various devices, configured to use the more advanced \"API\" mode.",
      "website": "https://github.com/andrewrapp/xbee-arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/andrewrapp/XBee_Arduino_library-0.6.0.zip",
      "archiveFileName": "XBee_Arduino_library-0.6.0.zip",
      "size": 427942,
      "checksum": "SHA-256:1a51440edcce646ae1e7a969aba594a8fcefd75a42ff1f11d2213d25f73408d0"
    },
    {
      "name": "NeoNextion",
      "version": "1.0.0",
      "author": "Dan Nixon",
      "maintainer": "Dan Nixon \u003cdan@dan-nixon.com\u003e",
      "sentence": "Arduino library for controlling Nextion displays",
      "paragraph": "Arduino library for controlling Nextion displays",
      "website": "https://github.com/DanNixon/NeoNextion",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DanNixon/NeoNextion-1.0.0.zip",
      "archiveFileName": "NeoNextion-1.0.0.zip",
      "size": 49936,
      "checksum": "SHA-256:52941596df866bc973155ae525d53ff1fa17fca84cad21d5b317451b15689a2f"
    },
    {
      "name": "NeoNextion",
      "version": "1.0.1",
      "author": "Dan Nixon",
      "maintainer": "Dan Nixon \u003cdan@dan-nixon.com\u003e",
      "sentence": "Arduino library for controlling Nextion displays",
      "paragraph": "Arduino library for controlling Nextion displays",
      "website": "https://github.com/DanNixon/NeoNextion",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DanNixon/NeoNextion-1.0.1.zip",
      "archiveFileName": "NeoNextion-1.0.1.zip",
      "size": 49931,
      "checksum": "SHA-256:41c6991c8b28366ebcbd8c33ef5def05ef2523da1f3747e4e7d83054af11554f"
    },
    {
      "name": "NeoNextion",
      "version": "1.1.0",
      "author": "Dan Nixon",
      "maintainer": "Dan Nixon \u003cdan@dan-nixon.com\u003e",
      "sentence": "Arduino library for controlling Nextion displays",
      "paragraph": "Arduino library for controlling Nextion displays",
      "website": "https://github.com/DanNixon/NeoNextion",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DanNixon/NeoNextion-1.1.0.zip",
      "archiveFileName": "NeoNextion-1.1.0.zip",
      "size": 62282,
      "checksum": "SHA-256:4e2467b223ee96aa7627386fdd7df6dae3260bc48f9ddc20727aca64601a137a"
    },
    {
      "name": "NeoNextion",
      "version": "1.1.1",
      "author": "Dan Nixon",
      "maintainer": "Dan Nixon \u003cdan@dan-nixon.com\u003e",
      "sentence": "Arduino library for controlling Nextion displays",
      "paragraph": "Arduino library for controlling Nextion displays",
      "website": "https://github.com/DanNixon/NeoNextion",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DanNixon/NeoNextion-1.1.1.zip",
      "archiveFileName": "NeoNextion-1.1.1.zip",
      "size": 62299,
      "checksum": "SHA-256:4713d7971841185db186eadf7e928083fde0758cf3072edac069623b5603aad6"
    },
    {
      "name": "NeoNextion",
      "version": "1.2.0",
      "author": "Dan Nixon",
      "maintainer": "Dan Nixon \u003cdan@dan-nixon.com\u003e",
      "sentence": "Arduino library for controlling Nextion displays",
      "paragraph": "Arduino library for controlling Nextion displays",
      "website": "https://github.com/DanNixon/NeoNextion",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DanNixon/NeoNextion-1.2.0.zip",
      "archiveFileName": "NeoNextion-1.2.0.zip",
      "size": 62132,
      "checksum": "SHA-256:c5230d60b71a8adf140986c40adb05f92d0bd65b5cbd94fa5026e0058c06b754"
    },
    {
      "name": "NeoNextion",
      "version": "2.0.0",
      "author": "Dan Nixon",
      "maintainer": "Dan Nixon \u003cdan@dan-nixon.com\u003e",
      "sentence": "Arduino library for controlling Nextion displays",
      "paragraph": "Arduino library for controlling Nextion displays",
      "website": "https://github.com/DanNixon/NeoNextion",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DanNixon/NeoNextion-2.0.0.zip",
      "archiveFileName": "NeoNextion-2.0.0.zip",
      "size": 66044,
      "checksum": "SHA-256:905b5df34483fd80cf4f1d6c761c84b8232fdefea6c164d5cc7e6805eaaadf69"
    },
    {
      "name": "NeoNextion",
      "version": "2.1.0",
      "author": "Dan Nixon",
      "maintainer": "Dan Nixon \u003cdan@dan-nixon.com\u003e",
      "sentence": "Arduino library for controlling Nextion displays",
      "paragraph": "Arduino library for controlling Nextion displays",
      "website": "https://github.com/DanNixon/NeoNextion",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DanNixon/NeoNextion-2.1.0.zip",
      "archiveFileName": "NeoNextion-2.1.0.zip",
      "size": 67776,
      "checksum": "SHA-256:90a63e9ea3e2eebd83615742723e80a7d94b01096bc402ba7730a02bfd1484a1"
    },
    {
      "name": "NeoNextion",
      "version": "2.2.0",
      "author": "Dan Nixon",
      "maintainer": "Dan Nixon \u003cdan@dan-nixon.com\u003e",
      "sentence": "Arduino library for controlling Nextion displays",
      "paragraph": "Arduino library for controlling Nextion displays",
      "website": "https://dannixon.github.io/NeoNextion",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DanNixon/NeoNextion-2.2.0.zip",
      "archiveFileName": "NeoNextion-2.2.0.zip",
      "size": 102406,
      "checksum": "SHA-256:10dfc8f35afa6dd55193a8332110549b7b8f6a832a6211e7b872cced7b6a4ac7"
    },
    {
      "name": "ArdOSC",
      "version": "2.2.0",
      "author": "recotana http://recotana.com",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "Open Sound Control(OSC) Library for Arduino.",
      "paragraph": "Updated for library manager",
      "website": "https://github.com/Chris--A/ArdOSC",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Chris--A/ArdOSC-2.2.0.zip",
      "archiveFileName": "ArdOSC-2.2.0.zip",
      "size": 23181,
      "checksum": "SHA-256:90cd18d61b509e3effcde4636d7bcc709875baa420772b48400e52f007a0c5ad"
    },
    {
      "name": "OPC",
      "version": "1.0.0",
      "author": "Ildefonso Martinez \u003ci.martinez@st4makers.com\u003e",
      "maintainer": "Ildefonso Martinez \u003ci.martinez@st4makers.com\u003e",
      "sentence": "A library for Arduino OPC Server support.",
      "paragraph": "This library that can be used for OPC support or used stand alone for monitoring.",
      "website": "http://www.st4makers.com/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SoftwareTools4Makers/OPC-1.0.0.zip",
      "archiveFileName": "OPC-1.0.0.zip",
      "size": 16923,
      "checksum": "SHA-256:4cf8d92428aff5c537fde704de75560a01ef4f23946dc25a7430ba080b0d24ab"
    },
    {
      "name": "OPC",
      "version": "1.7.0",
      "author": "Ildefonso Martinez \u003ci.martinez@st4makers.com\u003e",
      "maintainer": "Ildefonso Martinez \u003ci.martinez@st4makers.com\u003e",
      "sentence": "A library for Arduino OPC Server support.",
      "paragraph": "This library that can be used for OPC support or used stand alone for monitoring.",
      "website": "http://www.st4makers.com/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SoftwareTools4Makers/OPC-1.7.0.zip",
      "archiveFileName": "OPC-1.7.0.zip",
      "size": 16260,
      "checksum": "SHA-256:befdacd2bba7cbc73cca50c3a17b71bf43558698221983708a4a5a57444f1c43"
    },
    {
      "name": "PJON",
      "version": "1.0.0",
      "author": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "maintainer": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "sentence": "PJON is a device communications bus system that connects up to 255 arduino boards over a single wire",
      "paragraph": "Provides up to 5KB/s data communication with acknowledge, collision detection, CRC and encpryption all done with micros() and delayMicroseconds(), without using interrupt or timers.",
      "website": "https://github.com/gioblu/PJON",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gioblu/PJON-1.0.0.zip",
      "archiveFileName": "PJON-1.0.0.zip",
      "size": 15676,
      "checksum": "SHA-256:66e9c046fd36376a694b331055dc61cad9d83990cbcbfc8987125d1a324e8aa8"
    },
    {
      "name": "PJON",
      "version": "1.1.0",
      "author": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "maintainer": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "sentence": "PJON is a device communications bus system that connects up to 255 arduino boards over a single wire",
      "paragraph": "Provides up to 5KB/s data communication with acknowledge, collision detection, CRC and encpryption all done with micros() and delayMicroseconds(), without using interrupt or timers.",
      "website": "https://github.com/gioblu/PJON",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gioblu/PJON-1.1.0.zip",
      "archiveFileName": "PJON-1.1.0.zip",
      "size": 23186,
      "checksum": "SHA-256:3bafc0139e33cb999b4a23bc3686e9ad6522ef10c30cd5558f42fa095126666c"
    },
    {
      "name": "PJON",
      "version": "2.0.0",
      "author": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "maintainer": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "sentence": "PJON is a multimaster device communication bus system Standard that connects up to 255 arduino boards over a single wire",
      "paragraph": "Provides up to 5KB/s data communication with acknowledge, collision and error detection all done with micros() and delayMicroseconds(), without using interrupt or timers.",
      "website": "https://github.com/gioblu/PJON",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266",
        "sam",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gioblu/PJON-2.0.0.zip",
      "archiveFileName": "PJON-2.0.0.zip",
      "size": 24939,
      "checksum": "SHA-256:f69237e7fda46926dc7253bce47bcb6b888dcf1a18b5f3868ba225ae653e84dc"
    },
    {
      "name": "PJON",
      "version": "3.0.0",
      "author": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "maintainer": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "sentence": "PJON is an open-source, multi-master, mult-media device communications bus system framework",
      "paragraph": "It is a valid, open-source alternative to i2c, 1-Wire, Serial and other Arduino compatible protocols.",
      "website": "https://github.com/gioblu/PJON",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266",
        "sam",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gioblu/PJON-3.0.0.zip",
      "archiveFileName": "PJON-3.0.0.zip",
      "size": 47328,
      "checksum": "SHA-256:ce6ac9c8a102ea57f9c2705c7316dc4cdec81563810b76df4269083f0a4d53a1"
    },
    {
      "name": "PJON",
      "version": "4.0.0",
      "author": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "maintainer": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "sentence": "PJON is an open-source, multi-master, mult-media device communications bus system framework",
      "paragraph": "It is a valid, open-source alternative to i2c, 1-Wire, Serial and other Arduino compatible protocols.",
      "website": "https://github.com/gioblu/PJON",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266",
        "sam",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gioblu/PJON-4.0.0.zip",
      "archiveFileName": "PJON-4.0.0.zip",
      "size": 52234,
      "checksum": "SHA-256:7e897c198367ae03fe92027f1720444607b3c76eff5b441fb20271c8aac0e800"
    },
    {
      "name": "PJON",
      "version": "4.1.0",
      "author": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "maintainer": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "sentence": "PJON is an open-source, multi-master, mult-media device communications bus system framework",
      "paragraph": "It is a valid, open-source alternative to i2c, 1-Wire, Serial and other Arduino compatible protocols.",
      "website": "https://github.com/gioblu/PJON",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266",
        "sam",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gioblu/PJON-4.1.0.zip",
      "archiveFileName": "PJON-4.1.0.zip",
      "size": 54830,
      "checksum": "SHA-256:ba56528e93eb4ba5ac65eb6395bafaeb55b743f71fdc2cfb3af8f255b125bd3c"
    },
    {
      "name": "PJON",
      "version": "4.2.0",
      "author": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "maintainer": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "sentence": "PJON is an open-source, multi-master, mult-media device communications bus system framework",
      "paragraph": "It is a valid, open-source alternative to i2c, 1-Wire, Serial and other Arduino compatible protocols.",
      "website": "https://github.com/gioblu/PJON",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266",
        "sam",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gioblu/PJON-4.2.0.zip",
      "archiveFileName": "PJON-4.2.0.zip",
      "size": 54939,
      "checksum": "SHA-256:4553dc17659999a9c6054fefdd763b45c4d43db79d7d82e8eeee3743ab99c116"
    },
    {
      "name": "PJON",
      "version": "4.3.0",
      "author": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "maintainer": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "sentence": "PJON is an open-source, multi-master, mult-media device communications bus system framework",
      "paragraph": "It is a valid, open-source alternative to i2c, 1-Wire, Serial and other Arduino compatible protocols.",
      "website": "https://github.com/gioblu/PJON",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266",
        "sam",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gioblu/PJON-4.3.0.zip",
      "archiveFileName": "PJON-4.3.0.zip",
      "size": 54892,
      "checksum": "SHA-256:767576014311191ed5d2f0d24ccc9b60aec45794390ee14270e68e8e3169b9f4"
    },
    {
      "name": "PJON",
      "version": "5.0.0",
      "author": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "maintainer": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "sentence": "PJON is an open-source, multi-master, mult-media device communications bus system framework",
      "paragraph": "It is a valid alternative to i2c, 1-Wire, Serial and other Arduino compatible protocols.",
      "website": "https://github.com/gioblu/PJON",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266",
        "sam",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gioblu/PJON-5.0.0.zip",
      "archiveFileName": "PJON-5.0.0.zip",
      "size": 67848,
      "checksum": "SHA-256:a6ef419166599754a13abc2fd8e95ca487ed5630a39de14cfee01c7ab61737b7"
    },
    {
      "name": "PJON",
      "version": "5.1.0",
      "author": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "maintainer": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "sentence": "PJON is an open-source, multi-master, mult-media device communications bus system framework",
      "paragraph": "It is a valid alternative to i2c, 1-Wire, Serial and other Arduino compatible protocols.",
      "website": "https://github.com/gioblu/PJON",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266",
        "sam",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gioblu/PJON-5.1.0.zip",
      "archiveFileName": "PJON-5.1.0.zip",
      "size": 70475,
      "checksum": "SHA-256:8124b1c8aa4534059bf36edd9e399af3fb56e7e0abc7329110df7c4785b89c3b"
    },
    {
      "name": "PJON",
      "version": "5.2.0",
      "author": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "maintainer": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "sentence": "PJON is an open-source, multi-master, mult-media device communications bus system framework",
      "paragraph": "It is a valid alternative to i2c, 1-Wire, Serial and other Arduino compatible protocols.",
      "website": "https://github.com/gioblu/PJON",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266",
        "sam",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gioblu/PJON-5.2.0.zip",
      "archiveFileName": "PJON-5.2.0.zip",
      "size": 100150,
      "checksum": "SHA-256:187d24bbe61cf82d6223a616b80504325079a4c0df00f0b40a83f9e521ea7a11"
    },
    {
      "name": "PJON",
      "version": "6.0.0",
      "author": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "maintainer": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "sentence": "PJON is an open-source, multi-master, mult-media device communications bus system framework",
      "paragraph": "It is a valid alternative to i2c, 1-Wire, Serial and other Arduino compatible protocols.",
      "website": "https://github.com/gioblu/PJON",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266",
        "sam",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gioblu/PJON-6.0.0.zip",
      "archiveFileName": "PJON-6.0.0.zip",
      "size": 204084,
      "checksum": "SHA-256:d7db2d9ade0fe0b78be5cd38425631195dd41f99d8a59f805119b5aa5a8ac8b3"
    },
    {
      "name": "PJON",
      "version": "6.1.0",
      "author": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "maintainer": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "sentence": "PJON is an open-source, multi-master, mult-media device communications bus system framework",
      "paragraph": "It is a valid alternative to i2c, 1-Wire, Serial and other Arduino compatible protocols.",
      "website": "https://github.com/gioblu/PJON",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266",
        "sam",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gioblu/PJON-6.1.0.zip",
      "archiveFileName": "PJON-6.1.0.zip",
      "size": 207672,
      "checksum": "SHA-256:81681dd352a14ad8e07eb657b9a4de0f0bcc9a01140c051f78832bb94102a6c9"
    },
    {
      "name": "PJON",
      "version": "6.2.0",
      "author": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "maintainer": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "sentence": "PJON is an open-source, multi-master, mult-media device communications bus system framework",
      "paragraph": "It is a valid alternative to i2c, 1-Wire, Serial and other Arduino compatible protocols.",
      "website": "https://github.com/gioblu/PJON",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266",
        "sam",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gioblu/PJON-6.2.0.zip",
      "archiveFileName": "PJON-6.2.0.zip",
      "size": 209129,
      "checksum": "SHA-256:c69a2d0cba1d3357a82cbe62360a281fd57df5ca6309d3c69b963f67406cb32d"
    },
    {
      "name": "PJON",
      "version": "7.0.0",
      "author": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "maintainer": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "sentence": "PJON is an open-source, multi-master, mult-media device communications bus system framework",
      "paragraph": "It is a valid alternative to i2c, 1-Wire, Serial and other Arduino compatible protocols.",
      "website": "https://github.com/gioblu/PJON",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266",
        "sam",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gioblu/PJON-7.0.0.zip",
      "archiveFileName": "PJON-7.0.0.zip",
      "size": 232037,
      "checksum": "SHA-256:24d827acf1817d7a752caf1fad36a30fb24ea5aab4ca55dbd39012e5746f2307"
    },
    {
      "name": "PJON",
      "version": "7.1.0",
      "author": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "maintainer": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "sentence": "PJON is an open-source, multi-master, mult-media device communications bus system framework",
      "paragraph": "It is a valid alternative to i2c, 1-Wire, Serial and other Arduino compatible protocols.",
      "website": "https://github.com/gioblu/PJON",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266",
        "sam",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gioblu/PJON-7.1.0.zip",
      "archiveFileName": "PJON-7.1.0.zip",
      "size": 231530,
      "checksum": "SHA-256:716491325be040ed4d346790554bdf9688973617f71c10cf4bc6716587ad1be1"
    },
    {
      "name": "PJON",
      "version": "8.0.0",
      "author": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "maintainer": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "sentence": "PJON is an open-source, multi-master, mult-media device communications bus system framework",
      "paragraph": "It is a valid alternative to i2c, 1-Wire, Serial and other Arduino compatible protocols.",
      "website": "https://github.com/gioblu/PJON",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266",
        "sam",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gioblu/PJON-8.0.0.zip",
      "archiveFileName": "PJON-8.0.0.zip",
      "size": 250619,
      "checksum": "SHA-256:f452ba0fa45bcfa41558b19f04352450e89f762a6cc5db5e3743fd1fb76fd246"
    },
    {
      "name": "VL6180X",
      "version": "1.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "VL6180X distance and ambient light sensor library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with ST's VL6180X distance and ambient light sensor.",
      "website": "https://github.com/pololu/vl6180x-arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/VL6180X-1.0.0.zip",
      "archiveFileName": "VL6180X-1.0.0.zip",
      "size": 10313,
      "checksum": "SHA-256:636bf46a5a2ab21914b74a11e6219aac281ca98d5768de5fdef00258ddadb9a2"
    },
    {
      "name": "VL6180X",
      "version": "1.0.1",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "VL6180X distance and ambient light sensor library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with ST's VL6180X distance and ambient light sensor.",
      "website": "https://github.com/pololu/vl6180x-arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/VL6180X-1.0.1.zip",
      "archiveFileName": "VL6180X-1.0.1.zip",
      "size": 10475,
      "checksum": "SHA-256:faed28a401c108231581b546ff5f8a90487e33474b012537c1c57f3981fe5217"
    },
    {
      "name": "VL6180X",
      "version": "1.1.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "VL6180X distance and ambient light sensor library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with ST's VL6180X distance and ambient light sensor.",
      "website": "https://github.com/pololu/vl6180x-arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/VL6180X-1.1.0.zip",
      "archiveFileName": "VL6180X-1.1.0.zip",
      "size": 12485,
      "checksum": "SHA-256:f606557a59a74798ba9d08ae17ca570b7dd28da73d76aaf82d492f5edaf9bb8c"
    },
    {
      "name": "VL6180X",
      "version": "1.2.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "VL6180X distance and ambient light sensor library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with ST's VL6180X distance and ambient light sensor.",
      "website": "https://github.com/pololu/vl6180x-arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/VL6180X-1.2.0.zip",
      "archiveFileName": "VL6180X-1.2.0.zip",
      "size": 12596,
      "checksum": "SHA-256:8e6ca7047def0167e6130a098489a4d39097befc9366f3e560f88cf3b6afa470"
    },
    {
      "name": "ardyno",
      "version": "0.3.0",
      "author": "Adrien Descamps \u003cadrien.descamps@gmail.com\u003e",
      "maintainer": "Adrien Descamps \u003cadrien.descamps@gmail.com\u003e",
      "sentence": "A library to control dynamixel motors",
      "paragraph": "This library allows you to control the Robotis servo motors that use a custom half-duplex serial protocol. You can control TTL models directly from Arduino, without any additional hardware, using hardware or software UART. Communication speed up to 1 MBd is supported with hardware serial. The most useful functions (speed, position, wheel/joint mode) are provided via a very simple high level interface (see test_motor example), but other operations can be done using the generic read/write functions (see test_led example).",
      "website": "https://github.com/descampsa/ardyno",
      "category": "Device Control",
      "architectures": [
        ""
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/descampsa/ardyno-0.3.0.zip",
      "archiveFileName": "ardyno-0.3.0.zip",
      "size": 61015,
      "checksum": "SHA-256:4ea557f4ec84d328ebeec1de427222b422e098e17d8fff7b85d6c69b1d55d736"
    },
    {
      "name": "ardyno",
      "version": "0.5.0",
      "author": "Adrien Descamps \u003cadrien.descamps@gmail.com\u003e",
      "maintainer": "Adrien Descamps \u003cadrien.descamps@gmail.com\u003e",
      "sentence": "A library to control dynamixel motors",
      "paragraph": "This library allows you to control the Robotis servo motors that use a custom half-duplex serial protocol. You can control TTL models directly from Arduino, without any additional hardware, using hardware or software UART. Communication speed up to 1 MBd is supported with hardware serial. The most useful functions (speed, position, wheel/joint mode) are provided via a very simple high level interface (see test_motor example), but other operations can be done using the generic read/write functions (see test_led example).",
      "website": "https://github.com/descampsa/ardyno",
      "category": "Device Control",
      "architectures": [
        ""
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/descampsa/ardyno-0.5.0.zip",
      "archiveFileName": "ardyno-0.5.0.zip",
      "size": 62498,
      "checksum": "SHA-256:018d08c217b14a1e10df55d097737643acfc790411f8c55dae7a7f2c9d413b9f"
    },
    {
      "name": "ardyno",
      "version": "0.6.0",
      "author": "Adrien Descamps \u003cadrien.descamps@gmail.com\u003e",
      "maintainer": "Adrien Descamps \u003cadrien.descamps@gmail.com\u003e",
      "sentence": "A library to control dynamixel motors",
      "paragraph": "This library allows you to control the Robotis servo motors that use a custom half-duplex serial protocol. You can control TTL models directly from Arduino, without any additional hardware, using hardware or software UART. Communication speed up to 1 MBd is supported with hardware serial. The most useful functions (speed, position, wheel/joint mode) are provided via a very simple high level interface (see test_motor example), but other operations can be done using the generic read/write functions (see test_led example).",
      "website": "https://github.com/descampsa/ardyno",
      "category": "Device Control",
      "architectures": [
        ""
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/descampsa/ardyno-0.6.0.zip",
      "archiveFileName": "ardyno-0.6.0.zip",
      "size": 111784,
      "checksum": "SHA-256:591d95d470130d50449291fc965358d1263833e52fc1d61bc87a25c752b11027"
    },
    {
      "name": "ardyno",
      "version": "0.7.0",
      "author": "Adrien Descamps \u003cadrien.descamps@gmail.com\u003e",
      "maintainer": "Adrien Descamps \u003cadrien.descamps@gmail.com\u003e",
      "sentence": "A library to control dynamixel motors",
      "paragraph": "This library allows you to control the Robotis servo motors that use a custom half-duplex serial protocol. You can control TTL models directly from Arduino, without any additional hardware, using hardware or software UART. Communication speed up to 1 MBd is supported with hardware serial. The most useful functions (speed, position, wheel/joint mode) are provided via a very simple high level interface (see test_motor example), but other operations can be done using the generic read/write functions (see test_led example).",
      "website": "https://github.com/descampsa/ardyno",
      "category": "Device Control",
      "architectures": [
        ""
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/descampsa/ardyno-0.7.0.zip",
      "archiveFileName": "ardyno-0.7.0.zip",
      "size": 112320,
      "checksum": "SHA-256:258dbd583e0e9d04d9b8a0f01c5660d2e58eaa09ac712da584be0d10bbffca34"
    },
    {
      "name": "ardyno",
      "version": "0.8.0",
      "author": "Adrien Descamps \u003cadrien.descamps@gmail.com\u003e",
      "maintainer": "Adrien Descamps \u003cadrien.descamps@gmail.com\u003e",
      "sentence": "A library to control dynamixel motors",
      "paragraph": "This library allows you to control the Robotis servo motors that use a custom half-duplex serial protocol. You can control TTL models directly from Arduino, without any additional hardware, using hardware or software UART. Communication speed up to 1 MBd is supported with hardware serial. The most useful functions (speed, position, wheel/joint mode) are provided via a very simple high level interface (see test_motor example), but other operations can be done using the generic read/write functions (see test_led example).",
      "website": "https://github.com/descampsa/ardyno",
      "category": "Device Control",
      "architectures": [
        ""
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/descampsa/ardyno-0.8.0.zip",
      "archiveFileName": "ardyno-0.8.0.zip",
      "size": 113979,
      "checksum": "SHA-256:3646d08ed3a0a5bf5327e34266962766b1ea20d348b0e873f7a4aa93b2cef1e8"
    },
    {
      "name": "RF24Mesh",
      "version": "1.0.0",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices mesh.",
      "paragraph": "Provides a simple and seamless 'mesh' layer for sensor networks, allowing automatic and dynamic configuration that can be customized to suit many scenarios. It is currently designed to interface directly with with the RF24Network Development library, an OSI Network Layer using nRF24L01(+) radios driven by the newly optimized RF24 library fork.",
      "website": "http://tmrh20.github.io/RF24Mesh/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24Mesh-1.0.0.zip",
      "archiveFileName": "RF24Mesh-1.0.0.zip",
      "size": 28572,
      "checksum": "SHA-256:0dcb6b19d9d8fcb8c2e9e78e45b0b3d16470cbdeefb7c246debd0e6edd40919e"
    },
    {
      "name": "RF24Mesh",
      "version": "1.0.1",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices mesh.",
      "paragraph": "Provides a simple and seamless 'mesh' layer for sensor networks, allowing automatic and dynamic configuration that can be customized to suit many scenarios. It is currently designed to interface directly with with the RF24Network Development library, an OSI Network Layer using nRF24L01(+) radios driven by the newly optimized RF24 library fork.",
      "website": "http://tmrh20.github.io/RF24Mesh/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24Mesh-1.0.1.zip",
      "archiveFileName": "RF24Mesh-1.0.1.zip",
      "size": 28689,
      "checksum": "SHA-256:773c58ed07670b006653c59c650721b460a3bd0d6e739c155b2b4f0fa8994bf3"
    },
    {
      "name": "RF24Mesh",
      "version": "1.0.2",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices mesh.",
      "paragraph": "Provides a simple and seamless 'mesh' layer for sensor networks, allowing automatic and dynamic configuration that can be customized to suit many scenarios. It is currently designed to interface directly with with the RF24Network Development library, an OSI Network Layer using nRF24L01(+) radios driven by the newly optimized RF24 library fork.",
      "website": "http://tmrh20.github.io/RF24Mesh/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24Mesh-1.0.2.zip",
      "archiveFileName": "RF24Mesh-1.0.2.zip",
      "size": 28824,
      "checksum": "SHA-256:8d62252deeda6b880ae738f183479654b03c565b1f7aa9476e6f7e109e4b1b29"
    },
    {
      "name": "RF24Mesh",
      "version": "1.0.3",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices mesh.",
      "paragraph": "Provides a simple and seamless 'mesh' layer for sensor networks, allowing automatic and dynamic configuration that can be customized to suit many scenarios. It is currently designed to interface directly with with the RF24Network Development library, an OSI Network Layer using nRF24L01(+) radios driven by the newly optimized RF24 library fork.",
      "website": "http://tmrh20.github.io/RF24Mesh/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24Mesh-1.0.3.zip",
      "archiveFileName": "RF24Mesh-1.0.3.zip",
      "size": 30090,
      "checksum": "SHA-256:89b4d2020a31641c24ee37d0b1365d5829dd9453e16be6f940337cfc6932eb16"
    },
    {
      "name": "RF24Mesh",
      "version": "1.0.4",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices mesh.",
      "paragraph": "Provides a simple and seamless 'mesh' layer for sensor networks, allowing automatic and dynamic configuration that can be customized to suit many scenarios. It is currently designed to interface directly with with the RF24Network Development library, an OSI Network Layer using nRF24L01(+) radios driven by the newly optimized RF24 library fork.",
      "website": "http://tmrh20.github.io/RF24Mesh/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24Mesh-1.0.4.zip",
      "archiveFileName": "RF24Mesh-1.0.4.zip",
      "size": 30468,
      "checksum": "SHA-256:3bd615885f77368d7d1e1d307fb029a326e271e7fd4767fdba84e1073b1f94d4"
    },
    {
      "name": "RF24Mesh",
      "version": "1.0.5",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices mesh.",
      "paragraph": "Provides a simple and seamless 'mesh' layer for sensor networks, allowing automatic and dynamic configuration that can be customized to suit many scenarios. It is currently designed to interface directly with with the RF24Network Development library, an OSI Network Layer using nRF24L01(+) radios driven by the newly optimized RF24 library fork.",
      "website": "http://tmrh20.github.io/RF24Mesh/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24Mesh-1.0.5.zip",
      "archiveFileName": "RF24Mesh-1.0.5.zip",
      "size": 31318,
      "checksum": "SHA-256:f6a28d142ae1ad6acfe5d43c5888ddc8c0c5430b45cedf84137d048e486d5ef9"
    },
    {
      "name": "RF24Mesh",
      "version": "1.0.51",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices mesh.",
      "paragraph": "Provides a simple and seamless 'mesh' layer for sensor networks, allowing automatic and dynamic configuration that can be customized to suit many scenarios. It is currently designed to interface directly with with the RF24Network Development library, an OSI Network Layer using nRF24L01(+) radios driven by the newly optimized RF24 library fork.",
      "website": "http://tmrh20.github.io/RF24Mesh/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24Mesh-1.0.51.zip",
      "archiveFileName": "RF24Mesh-1.0.51.zip",
      "size": 31356,
      "checksum": "SHA-256:01ceb15c1475d6d982974a3e27d03675c563bc63de7ab4423e76fd351b9495fb"
    },
    {
      "name": "RF24Network",
      "version": "1.0.0",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices network.",
      "paragraph": "Provides a simple and seamless netowork layer for sensor networks.",
      "website": "http://tmrh20.github.io/RF24Network/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24Network-1.0.0.zip",
      "archiveFileName": "RF24Network-1.0.0.zip",
      "size": 113947,
      "checksum": "SHA-256:3e1ac3136fd3ce03c3f6305c3b1280c5a713dd08d573b5dd9ddeaa7da3960843"
    },
    {
      "name": "RF24Network",
      "version": "1.0.1",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices network.",
      "paragraph": "Provides a simple and seamless netowork layer for sensor networks.",
      "website": "http://tmrh20.github.io/RF24Network/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24Network-1.0.1.zip",
      "archiveFileName": "RF24Network-1.0.1.zip",
      "size": 113933,
      "checksum": "SHA-256:7f55d28da2575c6ebeedecd434c1f35c08a90d9ee7f4687fad539cf24ace4e35"
    },
    {
      "name": "RF24Network",
      "version": "1.0.2",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices network.",
      "paragraph": "Provides a simple and seamless netowork layer for sensor networks.",
      "website": "http://tmrh20.github.io/RF24Network/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24Network-1.0.2.zip",
      "archiveFileName": "RF24Network-1.0.2.zip",
      "size": 113305,
      "checksum": "SHA-256:2e163970cdaa1be855dce1d876e3dc9b66e4567026e920795be4dc616856dc63"
    },
    {
      "name": "RF24Network",
      "version": "1.0.3",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices network.",
      "paragraph": "Provides a simple and seamless netowork layer for sensor networks.",
      "website": "http://tmrh20.github.io/RF24Network/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24Network-1.0.3.zip",
      "archiveFileName": "RF24Network-1.0.3.zip",
      "size": 113726,
      "checksum": "SHA-256:16905a6ab19cf1943adbfe480cbaa759a28f365878c55a96ae053b604baabbf6"
    },
    {
      "name": "RF24Network",
      "version": "1.0.4",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices network.",
      "paragraph": "Provides a simple and seamless netowork layer for sensor networks.",
      "website": "http://tmrh20.github.io/RF24Network/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24Network-1.0.4.zip",
      "archiveFileName": "RF24Network-1.0.4.zip",
      "size": 113744,
      "checksum": "SHA-256:25a3b0481bdf421484007c415511a7ab617aea2488f268253f7103b5013609a1"
    },
    {
      "name": "RF24Network",
      "version": "1.0.5",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices network.",
      "paragraph": "Provides a simple and seamless netowork layer for sensor networks.",
      "website": "http://tmrh20.github.io/RF24Network/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24Network-1.0.5.zip",
      "archiveFileName": "RF24Network-1.0.5.zip",
      "size": 112318,
      "checksum": "SHA-256:ef0454cb8c411ec295667dddaa01f6d3d841cb27bc67f7722756e5692e0f7dbf"
    },
    {
      "name": "RF24Network",
      "version": "1.0.6",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices network.",
      "paragraph": "Provides a simple and seamless netowork layer for sensor networks.",
      "website": "http://tmrh20.github.io/RF24Network/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24Network-1.0.6.zip",
      "archiveFileName": "RF24Network-1.0.6.zip",
      "size": 112350,
      "checksum": "SHA-256:59c35d8ee8c19108c01449aaf46b7738126c0c9276e0658042a27732c68f275c"
    },
    {
      "name": "RF24Network",
      "version": "1.0.7",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices network.",
      "paragraph": "Provides a simple and seamless netowork layer for sensor networks.",
      "website": "http://tmrh20.github.io/RF24Network/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24Network-1.0.7.zip",
      "archiveFileName": "RF24Network-1.0.7.zip",
      "size": 112394,
      "checksum": "SHA-256:b78369e24c69b1e82cf7f9ec55c2931b05ba0f96a3a3e9337b7268f0803ed160"
    },
    {
      "name": "RF24Network",
      "version": "1.0.8",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices network.",
      "paragraph": "Provides a simple and seamless netowork layer for sensor networks.",
      "website": "http://tmrh20.github.io/RF24Network/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24Network-1.0.8.zip",
      "archiveFileName": "RF24Network-1.0.8.zip",
      "size": 112888,
      "checksum": "SHA-256:e78e551c81ed3d512efa8f5e38bfa5db109e61fef14a798e2fa05b8b46d22d2c"
    },
    {
      "name": "Automaton",
      "version": "0.1.0",
      "author": "Tinkerspy \u003ctinkerspy@myown.mailcan.com\u003e",
      "maintainer": "Tinkerspy \u003ctinkerspy@myown.mailcan.com\u003e",
      "sentence": "A multi tasking table driven finite state machine library",
      "paragraph": "An event driven framework that allows you to create Arduino applications that consist entirely of concurrently running state machines interacting with each other. Use the bundled machines or roll your own.",
      "website": "https://github.com/tinkerspy/Automaton/wiki",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/tinkerspy/Automaton-0.1.0.zip",
      "archiveFileName": "Automaton-0.1.0.zip",
      "size": 23324,
      "checksum": "SHA-256:010e7383a3ab13e47b7410e872f4b8fc1d705dab599e770d3d5a30a3e0a79ff6"
    },
    {
      "name": "Automaton",
      "version": "0.1.1",
      "author": "Tinkerspy \u003ctinkerspy@myown.mailcan.com\u003e",
      "maintainer": "Tinkerspy \u003ctinkerspy@myown.mailcan.com\u003e",
      "sentence": "A multi tasking table driven finite state machine library",
      "paragraph": "An event driven framework that allows you to create Arduino applications that consist of concurrently running state machines interacting with each other. Use the bundled machines or create your own following the tutorial. Contains reusable bundled machines for handling leds (fade \u0026 blink), buttons, serial commands, analog input (with moving average), pulses and timers.",
      "website": "https://github.com/tinkerspy/Automaton/wiki",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/tinkerspy/Automaton-0.1.1.zip",
      "archiveFileName": "Automaton-0.1.1.zip",
      "size": 23362,
      "checksum": "SHA-256:c10b3b34c557754a1ed012da81942ea5ced23b70d95e9939d06ea8a9d3c16f0b"
    },
    {
      "name": "Automaton",
      "version": "0.1.2",
      "author": "Tinkerspy \u003ctinkerspy@myown.mailcan.com\u003e",
      "maintainer": "Tinkerspy \u003ctinkerspy@myown.mailcan.com\u003e",
      "sentence": "A multi tasking table driven finite state machine framework",
      "paragraph": "An event driven framework that allows you to create Arduino applications that consist of concurrently running state machines interacting with each other. Use the bundled machines or create your own following the tutorial. Contains reusable bundled machines for handling leds (fade \u0026 blink), buttons, serial commands, analog input (with moving average), pulses and timers.",
      "website": "https://github.com/tinkerspy/Automaton/wiki",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/tinkerspy/Automaton-0.1.2.zip",
      "archiveFileName": "Automaton-0.1.2.zip",
      "size": 24538,
      "checksum": "SHA-256:95490937a69471acfe305f08ea23d7443b314df649e3c11446a7aee0ee87ff10"
    },
    {
      "name": "Automaton",
      "version": "1.0.0",
      "author": "Tinkerspy \u003ctinkerspy@myown.mailcan.com\u003e",
      "maintainer": "Tinkerspy \u003ctinkerspy@myown.mailcan.com\u003e",
      "sentence": "A multi tasking table driven finite state machine framework",
      "paragraph": "An event driven framework that allows you to create Arduino applications that consist of concurrently running state machines interacting with each other. Use the bundled machines or create your own following the tutorial. Contains reusable bundled machines for handling leds (fade \u0026 blink), buttons, serial commands, analog input (with moving average), pulses and timers and more.",
      "website": "https://github.com/tinkerspy/Automaton/wiki",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/tinkerspy/Automaton-1.0.0.zip",
      "archiveFileName": "Automaton-1.0.0.zip",
      "size": 50926,
      "checksum": "SHA-256:a23fe1fa237cb363eb7f30f77c548c646a6b7c78b63a173537b004f7ae00f7b4"
    },
    {
      "name": "Automaton",
      "version": "1.0.1",
      "author": "Tinkerspy \u003ctinkerspy@myown.mailcan.com\u003e",
      "maintainer": "Tinkerspy \u003ctinkerspy@myown.mailcan.com\u003e",
      "sentence": "A multi tasking table driven finite state machine framework",
      "paragraph": "An event driven framework that allows you to create Arduino applications that consist of concurrently running state machines interacting with each other. Use the bundled machines or create your own following the tutorial. Contains reusable bundled machines for handling leds (fade \u0026 blink), buttons, serial commands, analog input (with moving average), pulses and timers and more.",
      "website": "https://github.com/tinkerspy/Automaton/wiki",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/tinkerspy/Automaton-1.0.1.zip",
      "archiveFileName": "Automaton-1.0.1.zip",
      "size": 51031,
      "checksum": "SHA-256:41cee86f347952d12a0337429fc59db9283e224b3fff3e7d9dfeed815f10f7c8"
    },
    {
      "name": "RF24",
      "version": "1.2.0",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) communication.",
      "paragraph": "Optimized library for nRF24L01(+) that is simple to use for beginners, but yet offers a lot for advanced users. It also has a lot of good examples how to use the library.",
      "website": "http://tmrh20.github.io/RF24/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24-1.2.0.zip",
      "archiveFileName": "RF24-1.2.0.zip",
      "size": 339917,
      "checksum": "SHA-256:7db5f207e8edf661f665c8d9c0de0184c36c1c97f25dabccdcd126bbc3d3b0bb"
    },
    {
      "name": "RF24",
      "version": "1.0.0",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) communication.",
      "paragraph": "Optimized library for nRF24L01(+) that is simple to use for beginners, but yet offers a lot for advanced users. It also has a lot of good examples how to use the library.",
      "website": "http://tmrh20.github.io/RF24/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24-1.0.0.zip",
      "archiveFileName": "RF24-1.0.0.zip",
      "size": 302208,
      "checksum": "SHA-256:b01e2357e4b1ba15c654b2dfe83a81bc8ca63564c13d3efa0885751b060e0aa5"
    },
    {
      "name": "RF24",
      "version": "1.0.1",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) communication.",
      "paragraph": "Optimized library for nRF24L01(+) that is simple to use for beginners, but yet offers a lot for advanced users. It also has a lot of good examples how to use the library.",
      "website": "http://tmrh20.github.io/RF24/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24-1.0.1.zip",
      "archiveFileName": "RF24-1.0.1.zip",
      "size": 302209,
      "checksum": "SHA-256:1f461000015ebb145410316c14a41c01b85db4b54473ed62c7ff4a485f73bda5"
    },
    {
      "name": "RF24",
      "version": "1.1.1",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) communication.",
      "paragraph": "Optimized library for nRF24L01(+) that is simple to use for beginners, but yet offers a lot for advanced users. It also has a lot of good examples how to use the library.",
      "website": "http://tmrh20.github.io/RF24/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24-1.1.1.zip",
      "archiveFileName": "RF24-1.1.1.zip",
      "size": 302209,
      "checksum": "SHA-256:d4ec249a17d6decdf31a71942210fb0aae2d6c841c0db349179b6508ab02a992"
    },
    {
      "name": "RF24",
      "version": "1.1.2",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) communication.",
      "paragraph": "Optimized library for nRF24L01(+) that is simple to use for beginners, but yet offers a lot for advanced users. It also has a lot of good examples how to use the library.",
      "website": "http://tmrh20.github.io/RF24/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24-1.1.2.zip",
      "archiveFileName": "RF24-1.1.2.zip",
      "size": 305360,
      "checksum": "SHA-256:c59cdc4a451ecfd6d88461c4d19e4da689c146587464e2caebe804e6ab9b9b89"
    },
    {
      "name": "RF24",
      "version": "1.1.3",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) communication.",
      "paragraph": "Optimized library for nRF24L01(+) that is simple to use for beginners, but yet offers a lot for advanced users. It also has a lot of good examples how to use the library.",
      "website": "http://tmrh20.github.io/RF24/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24-1.1.3.zip",
      "archiveFileName": "RF24-1.1.3.zip",
      "size": 305853,
      "checksum": "SHA-256:66bbd07a827383c137ce33120444c7b2176ac2d582cae67f6d21da6facaf2474"
    },
    {
      "name": "RF24",
      "version": "1.1.4",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) communication.",
      "paragraph": "Optimized library for nRF24L01(+) that is simple to use for beginners, but yet offers a lot for advanced users. It also has a lot of good examples how to use the library.",
      "website": "http://tmrh20.github.io/RF24/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24-1.1.4.zip",
      "archiveFileName": "RF24-1.1.4.zip",
      "size": 306399,
      "checksum": "SHA-256:c744f2b28f2cc9170192eb7cd2dd90955e662bc2edf137f96aa6afb2d574ba11"
    },
    {
      "name": "RF24",
      "version": "1.1.5",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) communication.",
      "paragraph": "Optimized library for nRF24L01(+) that is simple to use for beginners, but yet offers a lot for advanced users. It also has a lot of good examples how to use the library.",
      "website": "http://tmrh20.github.io/RF24/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24-1.1.5.zip",
      "archiveFileName": "RF24-1.1.5.zip",
      "size": 320945,
      "checksum": "SHA-256:01c4133c9265421552edc060ea447861d505ca253db5fde839f12da9d22a81ac"
    },
    {
      "name": "RF24",
      "version": "1.1.6",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) communication.",
      "paragraph": "Optimized library for nRF24L01(+) that is simple to use for beginners, but yet offers a lot for advanced users. It also has a lot of good examples how to use the library.",
      "website": "http://tmrh20.github.io/RF24/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24-1.1.6.zip",
      "archiveFileName": "RF24-1.1.6.zip",
      "size": 321795,
      "checksum": "SHA-256:8c994cee39a55eeb51539ee4c0bc862d07ef3a609ff8208aba67efa180aa63f8"
    },
    {
      "name": "RF24",
      "version": "1.1.7",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) communication.",
      "paragraph": "Optimized library for nRF24L01(+) that is simple to use for beginners, but yet offers a lot for advanced users. It also has a lot of good examples how to use the library.",
      "website": "http://tmrh20.github.io/RF24/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24-1.1.7.zip",
      "archiveFileName": "RF24-1.1.7.zip",
      "size": 339621,
      "checksum": "SHA-256:d33469c43eafd14d070a7b9041f59d163a2117f20b1cfac31e808f1cc88d7dfc"
    },
    {
      "name": "TMRpcm",
      "version": "1.0.0",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "PCM/WAV Audio playback",
      "paragraph": "Play WAV audio files from SD card using AVR (UNO,Nano,etc) based devices.",
      "website": "https://github.com/TMRh20/TMRpcm/wiki",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/TMRpcm-1.0.0.zip",
      "archiveFileName": "TMRpcm-1.0.0.zip",
      "size": 31598,
      "checksum": "SHA-256:06aed9cee42e65bab0ffe7e1f0c2cf2f3a1e71b90838c4b1df4f779003799815"
    },
    {
      "name": "TaskScheduler",
      "version": "1.8.0",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "A light-weight cooperative multitasking library for arduino microcontrollers.",
      "paragraph": "Enables developers to achieve pseudo multi-tasking. The library is NOT pre-emptive, and as such requires cooperative programming to be used; does NOT use any of the timers therefore does not affect PWM pins. Includes support for status request objects, allowing tasks to wait on and signal event completion between each other.",
      "website": "https://github.com/arkhipenko/TaskScheduler.git",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arkhipenko/TaskScheduler-1.8.0.zip",
      "archiveFileName": "TaskScheduler-1.8.0.zip",
      "size": 120274,
      "checksum": "SHA-256:4606545aae11157f85bc0692d0e483b93473e35ea0b914bc661c9110472d18d4"
    },
    {
      "name": "TaskScheduler",
      "version": "1.8.1",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "A light-weight cooperative multitasking library for arduino microcontrollers.",
      "paragraph": "Enables developers to achieve pseudo multi-tasking. The library is NOT pre-emptive, and as such requires cooperative programming to be used; does NOT use any of the timers therefore does not affect PWM pins. Includes support for status request objects, allowing tasks to wait on and signal event completion between each other.",
      "website": "https://github.com/arkhipenko/TaskScheduler.git",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arkhipenko/TaskScheduler-1.8.1.zip",
      "archiveFileName": "TaskScheduler-1.8.1.zip",
      "size": 126684,
      "checksum": "SHA-256:d016d0dc32c7dc3581fd2ce49bdb17f94a28b89bb53b44381ee8a4af6deef720"
    },
    {
      "name": "TaskScheduler",
      "version": "1.8.2",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "A light-weight cooperative multitasking library for arduino microcontrollers.",
      "paragraph": "Supports: periodic task execution (with dynamic execution period in milliseconds – frequency of execution), number of iterations (limited or infinite number of iterations), execution of tasks in predefined sequence, dynamic change of task execution parameters (frequency, number of iterations, callback methods), power saving via entering IDLE sleep mode when tasks are not scheduled to run, support for event-driven task invocation via Status Request object, support for task IDs and Control Points for error handling and watchdog timer, support for Local Task Storage pointer (allowing use of same callback code for multiple tasks)",
      "website": "https://github.com/arkhipenko/TaskScheduler.git",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arkhipenko/TaskScheduler-1.8.2.zip",
      "archiveFileName": "TaskScheduler-1.8.2.zip",
      "size": 130490,
      "checksum": "SHA-256:c46f3d0f0831fd59542723fed50a0c44d1baf8e29c5890772b7f7a362e290e2e"
    },
    {
      "name": "TaskScheduler",
      "version": "1.8.3",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "A light-weight cooperative multitasking library for arduino microcontrollers.",
      "paragraph": "Supports: periodic task execution (with dynamic execution period in milliseconds – frequency of execution), number of iterations (limited or infinite number of iterations), execution of tasks in predefined sequence, dynamic change of task execution parameters (frequency, number of iterations, callback methods), power saving via entering IDLE sleep mode when tasks are not scheduled to run, support for event-driven task invocation via Status Request object, support for task IDs and Control Points for error handling and watchdog timer, support for Local Task Storage pointer (allowing use of same callback code for multiple tasks)",
      "website": "https://github.com/arkhipenko/TaskScheduler.git",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arkhipenko/TaskScheduler-1.8.3.zip",
      "archiveFileName": "TaskScheduler-1.8.3.zip",
      "size": 134094,
      "checksum": "SHA-256:421cbe44351dc65360a2300adcfc474decfbc5c5dbb51f03f637f4208e638f56"
    },
    {
      "name": "TaskScheduler",
      "version": "1.8.4",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "A light-weight cooperative multitasking library for arduino microcontrollers.",
      "paragraph": "Supports: periodic task execution (with dynamic execution period in milliseconds – frequency of execution), number of iterations (limited or infinite number of iterations), execution of tasks in predefined sequence, dynamic change of task execution parameters (frequency, number of iterations, callback methods), power saving via entering IDLE sleep mode when tasks are not scheduled to run, support for event-driven task invocation via Status Request object, support for task IDs and Control Points for error handling and watchdog timer, support for Local Task Storage pointer (allowing use of same callback code for multiple tasks)",
      "website": "https://github.com/arkhipenko/TaskScheduler.git",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arkhipenko/TaskScheduler-1.8.4.zip",
      "archiveFileName": "TaskScheduler-1.8.4.zip",
      "size": 141693,
      "checksum": "SHA-256:f920cb0a9486080156dfc9d07f71d8da78a3e6b02879d364112e2d31f00efb41"
    },
    {
      "name": "TaskScheduler",
      "version": "1.8.5",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "A light-weight cooperative multitasking library for arduino microcontrollers.",
      "paragraph": "Supports: periodic task execution (with dynamic execution period in milliseconds – frequency of execution), number of iterations (limited or infinite number of iterations), execution of tasks in predefined sequence, dynamic change of task execution parameters (frequency, number of iterations, callback methods), power saving via entering IDLE sleep mode when tasks are not scheduled to run, support for event-driven task invocation via Status Request object, support for task IDs and Control Points for error handling and watchdog timer, support for Local Task Storage pointer (allowing use of same callback code for multiple tasks)",
      "website": "https://github.com/arkhipenko/TaskScheduler.git",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arkhipenko/TaskScheduler-1.8.5.zip",
      "archiveFileName": "TaskScheduler-1.8.5.zip",
      "size": 144192,
      "checksum": "SHA-256:3e91ec1bde8a692aa399dc104967875a6d6be7edd6a9c3cb92e6a859c076c86c"
    },
    {
      "name": "TaskScheduler",
      "version": "1.9.0",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "A light-weight cooperative multitasking library for arduino microcontrollers.",
      "paragraph": "Supports: periodic task execution (with dynamic execution period in milliseconds – frequency of execution), number of iterations (limited or infinite number of iterations), execution of tasks in predefined sequence, dynamic change of task execution parameters (frequency, number of iterations, callback methods), power saving via entering IDLE sleep mode when tasks are not scheduled to run, support for event-driven task invocation via Status Request object, support for task IDs and Control Points for error handling and watchdog timer, support for Local Task Storage pointer (allowing use of same callback code for multiple tasks)",
      "website": "https://github.com/arkhipenko/TaskScheduler.git",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arkhipenko/TaskScheduler-1.9.0.zip",
      "archiveFileName": "TaskScheduler-1.9.0.zip",
      "size": 144421,
      "checksum": "SHA-256:804137236575e7c3145106e94391d50467f7cc26b0007506483e31c72920f35c"
    },
    {
      "name": "TaskScheduler",
      "version": "2.0.0",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "A light-weight cooperative multitasking library for arduino microcontrollers.",
      "paragraph": "Supports: periodic task execution (with dynamic execution period in milliseconds – frequency of execution), number of iterations (limited or infinite number of iterations), execution of tasks in predefined sequence, dynamic change of task execution parameters (frequency, number of iterations, callback methods), power saving via entering IDLE sleep mode when tasks are not scheduled to run, event-driven task invocation via Status Request object, task IDs and Control Points for error handling and watchdog timer, Local Task Storage pointer (allowing use of same callback code for multiple tasks), layered task prioritization.",
      "website": "https://github.com/arkhipenko/TaskScheduler.git",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arkhipenko/TaskScheduler-2.0.0.zip",
      "archiveFileName": "TaskScheduler-2.0.0.zip",
      "size": 158983,
      "checksum": "SHA-256:72400afc6403ff0ccafc2243e34ea9aa5d513df43898b4f85ecdd68741b8ad9a"
    },
    {
      "name": "TaskScheduler",
      "version": "2.0.1",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "A light-weight cooperative multitasking library for arduino microcontrollers.",
      "paragraph": "Supports: periodic task execution (with dynamic execution period in milliseconds – frequency of execution), number of iterations (limited or infinite number of iterations), execution of tasks in predefined sequence, dynamic change of task execution parameters (frequency, number of iterations, callback methods), power saving via entering IDLE sleep mode when tasks are not scheduled to run, event-driven task invocation via Status Request object, task IDs and Control Points for error handling and watchdog timer, Local Task Storage pointer (allowing use of same callback code for multiple tasks), layered task prioritization.",
      "website": "https://github.com/arkhipenko/TaskScheduler.git",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arkhipenko/TaskScheduler-2.0.1.zip",
      "archiveFileName": "TaskScheduler-2.0.1.zip",
      "size": 159153,
      "checksum": "SHA-256:d902625dd3e837b7066b259939dee61027bd701a13a9b9d28b1b83db1b959c43"
    },
    {
      "name": "TaskScheduler",
      "version": "2.1.0",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "A light-weight cooperative multitasking library for arduino microcontrollers.",
      "paragraph": "Supports: periodic task execution (with dynamic execution period in milliseconds or microseconds – frequency of execution), number of iterations (limited or infinite number of iterations), execution of tasks in predefined sequence, dynamic change of task execution parameters (frequency, number of iterations, callback methods), power saving via entering IDLE sleep mode when tasks are not scheduled to run, event-driven task invocation via Status Request object, task IDs and Control Points for error handling and watchdog timer, Local Task Storage pointer (allowing use of same callback code for multiple tasks), layered task prioritization.",
      "website": "https://github.com/arkhipenko/TaskScheduler.git",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arkhipenko/TaskScheduler-2.1.0.zip",
      "archiveFileName": "TaskScheduler-2.1.0.zip",
      "size": 216737,
      "checksum": "SHA-256:717e8311b67a12f1882793a6f07b63e6f7af404e4f97d0293eb550b3b40e244a"
    },
    {
      "name": "TaskScheduler",
      "version": "2.2.0",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "A light-weight cooperative multitasking library for arduino microcontrollers.",
      "paragraph": "Supports: periodic task execution (with dynamic execution period in milliseconds or microseconds – frequency of execution), number of iterations (limited or infinite number of iterations), execution of tasks in predefined sequence, dynamic change of task execution parameters (frequency, number of iterations, callback methods), power saving via entering IDLE sleep mode when tasks are not scheduled to run, event-driven task invocation via Status Request object, task IDs and Control Points for error handling and watchdog timer, Local Task Storage pointer (allowing use of same callback code for multiple tasks), layered task prioritization.",
      "website": "https://github.com/arkhipenko/TaskScheduler.git",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arkhipenko/TaskScheduler-2.2.0.zip",
      "archiveFileName": "TaskScheduler-2.2.0.zip",
      "size": 217437,
      "checksum": "SHA-256:395f8944c649e08fa56d958c09c54642b466358a3bd3c9ba32336e14941c2de2"
    },
    {
      "name": "TaskScheduler",
      "version": "2.2.1",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "A light-weight cooperative multitasking library for arduino microcontrollers.",
      "paragraph": "Supports: periodic task execution (with dynamic execution period in milliseconds or microseconds – frequency of execution), number of iterations (limited or infinite number of iterations), execution of tasks in predefined sequence, dynamic change of task execution parameters (frequency, number of iterations, callback methods), power saving via entering IDLE sleep mode when tasks are not scheduled to run, event-driven task invocation via Status Request object, task IDs and Control Points for error handling and watchdog timer, Local Task Storage pointer (allowing use of same callback code for multiple tasks), layered task prioritization.",
      "website": "https://github.com/arkhipenko/TaskScheduler.git",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arkhipenko/TaskScheduler-2.2.1.zip",
      "archiveFileName": "TaskScheduler-2.2.1.zip",
      "size": 226063,
      "checksum": "SHA-256:6c55e8513ce307d6676d66d4eb52d2bb5ac7b91d08ef87307c11ee2a8d95fe6c"
    },
    {
      "name": "TaskScheduler",
      "version": "2.3.0",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "A light-weight cooperative multitasking library for arduino and esp8266 microcontrollers.",
      "paragraph": "Supports: periodic task execution (with dynamic execution period in milliseconds or microseconds – frequency of execution), number of iterations (limited or infinite number of iterations), execution of tasks in predefined sequence, dynamic change of task execution parameters (frequency, number of iterations, callback methods), power saving via entering IDLE sleep mode when tasks are not scheduled to run, event-driven task invocation via Status Request object, task IDs and Control Points for error handling and watchdog timer, Local Task Storage pointer (allowing use of same callback code for multiple tasks), layered task prioritization.",
      "website": "https://github.com/arkhipenko/TaskScheduler.git",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arkhipenko/TaskScheduler-2.3.0.zip",
      "archiveFileName": "TaskScheduler-2.3.0.zip",
      "size": 446469,
      "checksum": "SHA-256:c163bd450474630c32d98e4466bb842538866a5ef4e54d29a637eea2a11725e7"
    },
    {
      "name": "FastLED",
      "version": "3.1.0",
      "author": "Daniel Garcia",
      "maintainer": "Daniel Garcia \u003cdgarcia@fastled.io\u003e",
      "sentence": "Multi-platform library for controlling dozens of different types of LEDs along with optimized math, effect, and noise functions.",
      "paragraph": "Multi-platform library for controlling dozens of different types of LEDs along with optimized math, effect, and noise functions.",
      "website": "https://github.com/FastLED/FastLED",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/FastLED/FastLED-3.1.0.zip",
      "archiveFileName": "FastLED-3.1.0.zip",
      "size": 270287,
      "checksum": "SHA-256:50131a8c021e742c70902445a0326b6967f7f1a494f5fc45b83ae5ee217306d0"
    },
    {
      "name": "FastLED",
      "version": "3.1.3",
      "author": "Daniel Garcia",
      "maintainer": "Daniel Garcia \u003cdgarcia@fastled.io\u003e",
      "sentence": "Multi-platform library for controlling dozens of different types of LEDs along with optimized math, effect, and noise functions.",
      "paragraph": "Multi-platform library for controlling dozens of different types of LEDs along with optimized math, effect, and noise functions.",
      "website": "https://github.com/FastLED/FastLED",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/FastLED/FastLED-3.1.3.zip",
      "archiveFileName": "FastLED-3.1.3.zip",
      "size": 250769,
      "checksum": "SHA-256:37a318b58300ef796ea5cc5a40d49efdee3cdb7470c1f37a7812c87c31f32c10"
    },
    {
      "name": "Sodaq_RN2483",
      "version": "1.0.0",
      "author": "Alex Tsamakos,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the Microchip RN2483.",
      "paragraph": "It supports sending and receiving payloads as a Class A LoRaWAN device.",
      "website": "https://github.com/SodaqMoja/Sodaq_RN2483",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/Sodaq_RN2483-1.0.0.zip",
      "archiveFileName": "Sodaq_RN2483-1.0.0.zip",
      "size": 16022,
      "checksum": "SHA-256:7d543e24e004fe3d0eca9bf386774840c1bc74a51a3bc752fba66d310b32b431"
    },
    {
      "name": "Sodaq_RN2483",
      "version": "1.0.1",
      "author": "Alex Tsamakos,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the Microchip RN2483.",
      "paragraph": "It supports sending and receiving payloads as a Class A LoRaWAN device.",
      "website": "https://github.com/SodaqMoja/Sodaq_RN2483",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/Sodaq_RN2483-1.0.1.zip",
      "archiveFileName": "Sodaq_RN2483-1.0.1.zip",
      "size": 16686,
      "checksum": "SHA-256:5a591051fba35e6ca8036e4491217894276a066e05091d87730ac6598c9a395e"
    },
    {
      "name": "Sodaq_RN2483",
      "version": "1.0.2",
      "author": "Alex Tsamakos,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the Microchip RN2483.",
      "paragraph": "It supports sending and receiving payloads as a Class A LoRaWAN device.",
      "website": "https://github.com/SodaqMoja/Sodaq_RN2483",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/Sodaq_RN2483-1.0.2.zip",
      "archiveFileName": "Sodaq_RN2483-1.0.2.zip",
      "size": 16818,
      "checksum": "SHA-256:081d8fd5d03fc30695619a8d67cd841625129a6a14c0effac567baef7f567e42"
    },
    {
      "name": "Sodaq_RN2483",
      "version": "1.0.4",
      "author": "Alex Tsamakos,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the Microchip RN2483.",
      "paragraph": "It supports sending and receiving payloads as a Class A LoRaWAN device.",
      "website": "https://github.com/SodaqMoja/Sodaq_RN2483",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/Sodaq_RN2483-1.0.4.zip",
      "archiveFileName": "Sodaq_RN2483-1.0.4.zip",
      "size": 20953,
      "checksum": "SHA-256:5957a9145c9630102305646a86d7871072b3a3eec995e94637407aaed21418c9"
    },
    {
      "name": "Sodaq_RN2483",
      "version": "1.0.5",
      "author": "Alex Tsamakos,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the Microchip RN2483.",
      "paragraph": "It supports sending and receiving payloads as a Class A LoRaWAN device.",
      "website": "https://github.com/SodaqMoja/Sodaq_RN2483",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/Sodaq_RN2483-1.0.5.zip",
      "archiveFileName": "Sodaq_RN2483-1.0.5.zip",
      "size": 21830,
      "checksum": "SHA-256:93ffdbd654a1586700718cf7950f46e37d87e89af002dd738c8d3a64b12c6603"
    },
    {
      "name": "Sodaq_RN2483",
      "version": "1.0.6",
      "author": "Alex Tsamakos,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the Microchip RN2483.",
      "paragraph": "It supports sending and receiving payloads as a Class A LoRaWAN device.",
      "website": "https://github.com/SodaqMoja/Sodaq_RN2483",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/Sodaq_RN2483-1.0.6.zip",
      "archiveFileName": "Sodaq_RN2483-1.0.6.zip",
      "size": 22766,
      "checksum": "SHA-256:92dac69253de50879b2b6ee64d4fa76a65564e43744e06175324230c4016f5fb"
    },
    {
      "name": "Sodaq_RN2483",
      "version": "1.0.7",
      "author": "Alex Tsamakos,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the Microchip RN2483.",
      "paragraph": "It supports sending and receiving payloads as a Class A LoRaWAN device.",
      "website": "https://github.com/SodaqMoja/Sodaq_RN2483",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/Sodaq_RN2483-1.0.7.zip",
      "archiveFileName": "Sodaq_RN2483-1.0.7.zip",
      "size": 22754,
      "checksum": "SHA-256:7c8eabecb0e8b2b31219093b75aec88acf85210362261e5d9b0f42a45fda72bd"
    },
    {
      "name": "Sodaq_RN2483",
      "version": "1.0.8",
      "author": "Alex Tsamakos,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the Microchip RN2483.",
      "paragraph": "It supports sending and receiving payloads as a Class A LoRaWAN device.",
      "website": "https://github.com/SodaqMoja/Sodaq_RN2483",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/Sodaq_RN2483-1.0.8.zip",
      "archiveFileName": "Sodaq_RN2483-1.0.8.zip",
      "size": 19343,
      "checksum": "SHA-256:2efcf6289e229b0183b5a702c416b2447b5e8a3b43e07f0b6957480d5be1a6c4"
    },
    {
      "name": "AsyncDelay",
      "version": "1.0.0",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Simple abstraction library implementing delays and timeouts.",
      "paragraph": "Implements delays and timeouts. Uses millis() and micros(), taking care of any rollovers should they occur. GNU LGPL v2.1",
      "website": "https://github.com/stevemarple/AsyncDelay",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/AsyncDelay-1.0.0.zip",
      "archiveFileName": "AsyncDelay-1.0.0.zip",
      "size": 10875,
      "checksum": "SHA-256:96a4f88edf13ae103721a377c82a31eda6233786f469f8ebcd7a13f3e23667b6"
    },
    {
      "name": "AsyncDelay",
      "version": "1.0.1",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Simple abstraction library implementing delays and timeouts.",
      "paragraph": "Implements delays and timeouts. Uses millis() and micros(), taking care of any rollovers should they occur. GNU LGPL v2.1",
      "website": "https://github.com/stevemarple/AsyncDelay",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/AsyncDelay-1.0.1.zip",
      "archiveFileName": "AsyncDelay-1.0.1.zip",
      "size": 11212,
      "checksum": "SHA-256:500b465fd907fbde6e12568ca9c087f7d406c2e65bcc2916b21e8b2288c8cee4"
    },
    {
      "name": "AsyncDelay",
      "version": "1.0.2",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Simple abstraction library implementing delays and timeouts.",
      "paragraph": "Implements delays and timeouts. Uses millis() and micros(), taking care of any rollovers should they occur. GNU LGPL v2.1",
      "website": "https://github.com/stevemarple/AsyncDelay",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/AsyncDelay-1.0.2.zip",
      "archiveFileName": "AsyncDelay-1.0.2.zip",
      "size": 11214,
      "checksum": "SHA-256:2e964e78b39f605d57935f2f9daaacbd5acc9161adf1e6e42a4ec967e09daee3"
    },
    {
      "name": "SoftWire",
      "version": "1.0.0",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Software I2C library.",
      "paragraph": "SoftWire is a software I2C implementation for Arduino and other Wiring-type environments. It utilises the pinMode(), digitalWrite() and digitalRead() functions. The pins to be used for the serial data (SDA) and serial clock (SCL) control lines can be defined at run-time. Alternatively it is possible to pass references to functions which read and control the SDA and SCL lines, thereby allowing direct port manipulation to be used if preferred. Multiple objects (for multiple software I2C buses) and clock-stretching by slave devices are supported. A timeout feature is included to prevent lockups by faulty or missing hardware. The microcontroller must function as the master device, multiple masters are not supported.",
      "website": "https://github.com/stevemarple/SoftWire",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/SoftWire-1.0.0.zip",
      "archiveFileName": "SoftWire-1.0.0.zip",
      "size": 15379,
      "checksum": "SHA-256:bdf3e6d648f83edfa711bbb7733a8901db5c06c2f42cc7d598a2e35c9f17b01d"
    },
    {
      "name": "SoftWire",
      "version": "1.0.1",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Software I2C library.",
      "paragraph": "SoftWire is a software I2C implementation for Arduino and other Wiring-type environments. It utilises the pinMode(), digitalWrite() and digitalRead() functions. The pins to be used for the serial data (SDA) and serial clock (SCL) control lines can be defined at run-time. Alternatively it is possible to pass references to functions which read and control the SDA and SCL lines, thereby allowing direct port manipulation to be used if preferred. Multiple objects (for multiple software I2C buses) and clock-stretching by slave devices are supported. A timeout feature is included to prevent lockups by faulty or missing hardware. The microcontroller must function as the master device, multiple masters are not supported.",
      "website": "https://github.com/stevemarple/SoftWire",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/SoftWire-1.0.1.zip",
      "archiveFileName": "SoftWire-1.0.1.zip",
      "size": 15373,
      "checksum": "SHA-256:7e7ed34d21705ca082d1ff7619950b3abb94bb3baaa6ed13baf87a1e4523e620"
    },
    {
      "name": "SoftWire",
      "version": "1.0.2",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Software I2C library.",
      "paragraph": "SoftWire is a software I2C implementation for Arduino and other Wiring-type environments. It utilises the pinMode(), digitalWrite() and digitalRead() functions. The pins to be used for the serial data (SDA) and serial clock (SCL) control lines can be defined at run-time. Alternatively it is possible to pass references to functions which read and control the SDA and SCL lines, thereby allowing direct port manipulation to be used if preferred. Multiple objects (for multiple software I2C buses) and clock-stretching by slave devices are supported. A timeout feature is included to prevent lockups by faulty or missing hardware. The microcontroller must function as the master device, multiple masters are not supported. GNU LGPL v2.1.",
      "website": "https://github.com/stevemarple/SoftWire",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/SoftWire-1.0.2.zip",
      "archiveFileName": "SoftWire-1.0.2.zip",
      "size": 15388,
      "checksum": "SHA-256:4abf2632f9942dcfd4d85f5f7432a77f5a57abd117449344261e9f4d61efdebd"
    },
    {
      "name": "SoftWire",
      "version": "1.0.3",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Software I2C library.",
      "paragraph": "SoftWire is a software I2C implementation for Arduino and other Wiring-type environments. It utilises the pinMode(), digitalWrite() and digitalRead() functions. The pins to be used for the serial data (SDA) and serial clock (SCL) control lines can be defined at run-time. Alternatively it is possible to pass references to functions which read and control the SDA and SCL lines, thereby allowing direct port manipulation to be used if preferred. Multiple objects (for multiple software I2C buses) and clock-stretching by slave devices are supported. A timeout feature is included to prevent lockups by faulty or missing hardware. The microcontroller must function as the master device, multiple masters are not supported. GNU LGPL v2.1.",
      "website": "https://github.com/stevemarple/SoftWire",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/SoftWire-1.0.3.zip",
      "archiveFileName": "SoftWire-1.0.3.zip",
      "size": 15386,
      "checksum": "SHA-256:7e43cd0e9a4d399df0033d287d5a3adb3073a6252237a6309fdbbdcea1ffd40b"
    },
    {
      "name": "RTCx",
      "version": "1.0.0",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to access DS1307, DS1337, DS1338 and MCP7941x real-time clocks.",
      "paragraph": "Read, set and configure DS1307 and similar real-time clocks. Time/date is available as a standard tm struct. Unix timestamps (seconds since 1970) can also be computed. Can autoprobe to find device address on the I2C bus.",
      "website": "https://github.com/stevemarple/AsyncDelay",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/RTCx-1.0.0.zip",
      "archiveFileName": "RTCx-1.0.0.zip",
      "size": 17436,
      "checksum": "SHA-256:6e3f7027434b1d41072eb5306a26f123d9bdf803ac882b48d035b42c22ae91a0"
    },
    {
      "name": "RTCx",
      "version": "1.0.1",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to access DS1307, DS1337, DS1338 and MCP7941x real-time clocks.",
      "paragraph": "Read, set and configure DS1307 and similar real-time clocks. Time/date is available as a standard tm struct. Unix timestamps (seconds since 1970) can also be computed. Can autoprobe to find device address on the I2C bus. GNU LGPL v2.1.",
      "website": "https://github.com/stevemarple/RTCx",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/RTCx-1.0.1.zip",
      "archiveFileName": "RTCx-1.0.1.zip",
      "size": 17443,
      "checksum": "SHA-256:d0c4acc77eb050de82cf49b04aede50235d6427c046a66aca5ef4add4942eb51"
    },
    {
      "name": "RTCx",
      "version": "1.0.2",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to access DS1307, DS1337, DS1338 and MCP7941x real-time clocks.",
      "paragraph": "Read, set and configure DS1307 and similar real-time clocks. Time/date is available as a standard tm struct. Unix timestamps (seconds since 1970) can also be computed. Can autoprobe to find device address on the I2C bus. GNU LGPL v2.1.",
      "website": "https://github.com/stevemarple/RTCx",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/RTCx-1.0.2.zip",
      "archiveFileName": "RTCx-1.0.2.zip",
      "size": 17525,
      "checksum": "SHA-256:d2f34e25fc5ca48c0ac430761289abd6aaa4524ae10175967f491514d0252f3c"
    },
    {
      "name": "RTCx",
      "version": "1.0.3",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to access DS1307, DS1337, DS1338 and MCP7941x real-time clocks.",
      "paragraph": "Read, set and configure DS1307 and similar real-time clocks. Time/date is available as a standard tm struct. Unix timestamps (seconds since 1970) can also be computed. Can autoprobe to find device address on the I2C bus. GNU LGPL v2.1.",
      "website": "https://github.com/stevemarple/RTCx",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/RTCx-1.0.3.zip",
      "archiveFileName": "RTCx-1.0.3.zip",
      "size": 17522,
      "checksum": "SHA-256:8d8757eb5dba5b8a1eb581b1e31d05aeb1f61671e61fb997ee2bf1946bc577cf"
    },
    {
      "name": "MCP342x",
      "version": "1.0.0",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to support Microchip ADC342x analogue to digital converters.",
      "paragraph": "Supports Microchip MCP3422/MCP3423/MCP3424/MCP3426/MCP3427/MCP3428 analogue to digital converters. Can autoprobe to find device address on the I2C bus. The library can use the I2C GeneralCallConversion command to instruct multiple devices to sample simultaneously.",
      "website": "https://github.com/stevemarple/AsyncDelay",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/MCP342x-1.0.0.zip",
      "archiveFileName": "MCP342x-1.0.0.zip",
      "size": 18017,
      "checksum": "SHA-256:91ce88ba3a579f645ed75f9b8c8a334cec8f4d73fa928eacfe94cf2534b9af2a"
    },
    {
      "name": "MCP342x",
      "version": "1.0.1",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to support Microchip ADC342x analogue to digital converters.",
      "paragraph": "Supports Microchip MCP3422/MCP3423/MCP3424/MCP3426/MCP3427/MCP3428 analogue to digital converters. Can autoprobe to find device address on the I2C bus. The library can use the I2C GeneralCallConversion command to instruct multiple devices to sample simultaneously.",
      "website": "https://github.com/stevemarple/MCP342x",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/MCP342x-1.0.1.zip",
      "archiveFileName": "MCP342x-1.0.1.zip",
      "size": 18011,
      "checksum": "SHA-256:2e2cf9749064da6c1fadd17ecf9f9d3ac01e5503f0d899273596296bdc8699d3"
    },
    {
      "name": "MCP342x",
      "version": "1.0.2",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to support Microchip ADC342x analogue to digital converters.",
      "paragraph": "Supports Microchip MCP3422/MCP3423/MCP3424/MCP3426/MCP3427/MCP3428 analogue to digital converters. Can autoprobe to find device address on the I2C bus. The library can use the I2C GeneralCallConversion command to instruct multiple devices to sample simultaneously. GNU LGPL v2.1.",
      "website": "https://github.com/stevemarple/MCP342x",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/MCP342x-1.0.2.zip",
      "archiveFileName": "MCP342x-1.0.2.zip",
      "size": 18024,
      "checksum": "SHA-256:1af22d803f34e2fd81378870e2135b59ac434fbd196c2c19d1383b3a124af107"
    },
    {
      "name": "MicroNMEA",
      "version": "1.0.0",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Compact Arduino library to parse NMEA sentences.",
      "paragraph": "MicroNMEA is a compact Arduino library to parse a subset of NMEA sentences, which can originate from either GPS or GNSS receivers. Only two types of messages are parsed, $GPGGA (and its GNSS versions $GNGGA, $GLGGA, and $GAGGA) and $GPRMC (and its GNSS versions $GNRMC, $GLRMC, and $GARMC). From these two NMEA sentences MicroNMEA can output date, time, latitude, longitude, altitude, number of satellites used, horizontal dilution of precision (HDOP), course and speed. When other NMEA sentences are detected they can be passed to an optional callback function for decoding or logging. Checksum failures can be indicated with another optional callback function.",
      "website": "https://github.com/stevemarple/MicroNMEA",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/MicroNMEA-1.0.0.zip",
      "archiveFileName": "MicroNMEA-1.0.0.zip",
      "size": 22265,
      "checksum": "SHA-256:4687951146103ea561b832bc04056802e1e5337adc1e414d2bdaeecb241b2a07"
    },
    {
      "name": "MicroNMEA",
      "version": "1.0.1",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Compact Arduino library to parse NMEA sentences.",
      "paragraph": "MicroNMEA is a compact Arduino library to parse a subset of NMEA sentences, which can originate from either GPS or GNSS receivers. Only two types of messages are parsed, $GPGGA (and its GNSS versions $GNGGA, $GLGGA, and $GAGGA) and $GPRMC (and its GNSS versions $GNRMC, $GLRMC, and $GARMC). From these two NMEA sentences MicroNMEA can output date, time, latitude, longitude, altitude, number of satellites used, horizontal dilution of precision (HDOP), course and speed. When other NMEA sentences are detected they can be passed to an optional callback function for decoding or logging. Checksum failures can be indicated with another optional callback function. GNU LGPL v2.1.",
      "website": "https://github.com/stevemarple/MicroNMEA",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/MicroNMEA-1.0.1.zip",
      "archiveFileName": "MicroNMEA-1.0.1.zip",
      "size": 22280,
      "checksum": "SHA-256:5462bdba98e56af452aee0a19595e9f16a93b2692c00d3e7582270b51e910645"
    },
    {
      "name": "MicroNMEA",
      "version": "1.0.2",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Compact Arduino library to parse NMEA sentences.",
      "paragraph": "MicroNMEA is a compact Arduino library to parse a subset of NMEA sentences, which can originate from either GPS or GNSS receivers. Only two types of messages are parsed, $GPGGA (and its GNSS versions $GNGGA, $GLGGA, and $GAGGA) and $GPRMC (and its GNSS versions $GNRMC, $GLRMC, and $GARMC). From these two NMEA sentences MicroNMEA can output date, time, latitude, longitude, altitude, number of satellites used, horizontal dilution of precision (HDOP), course and speed. When other NMEA sentences are detected they can be passed to an optional callback function for decoding or logging. Checksum failures can be indicated with another optional callback function. GNU LGPL v2.1.",
      "website": "https://github.com/stevemarple/MicroNMEA",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/MicroNMEA-1.0.2.zip",
      "archiveFileName": "MicroNMEA-1.0.2.zip",
      "size": 22531,
      "checksum": "SHA-256:b0fea7ff7d85b6a1d135574fc67648be0f2339ca968cc61102014013926296f7"
    },
    {
      "name": "HIH61xx",
      "version": "1.0.0",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to access Honeywell HIH61xx humidity and tmperature sensors.",
      "paragraph": "HIH61xx is a library for accessing the humidity and temperature data from the I2C range of Honeywell HIH61xx humidity sensors (HIH6120-021, HIH6121-021, HIH6130-021 and HIH6131-021). Software I2C is used to allow this sensor to be connected to any two digital pins. An optional power pin can be used to control power to the device. A state machine ensures the relevant timing constraints are observed.",
      "website": "https://github.com/stevemarple/HIH61xx",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/HIH61xx-1.0.0.zip",
      "archiveFileName": "HIH61xx-1.0.0.zip",
      "size": 12554,
      "checksum": "SHA-256:d3f9b1c0ac6efe3ccd4a33ce88a1358271f2c530a0c61cda32d39529c6fcdd6f"
    },
    {
      "name": "HIH61xx",
      "version": "1.0.1",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to access Honeywell HIH61xx humidity and temperature sensors.",
      "paragraph": "HIH61xx is a library for accessing the humidity and temperature data from the I2C range of Honeywell HIH61xx humidity sensors (HIH6120-021, HIH6121-021, HIH6130-021 and HIH6131-021). Software I2C is used to allow this sensor to be connected to any two digital pins. An optional power pin can be used to control power to the device. A state machine ensures the relevant timing constraints are observed. GNU LGPL v2.1.",
      "website": "https://github.com/stevemarple/HIH61xx",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/HIH61xx-1.0.1.zip",
      "archiveFileName": "HIH61xx-1.0.1.zip",
      "size": 12566,
      "checksum": "SHA-256:ffd104af7e76676fc504dbb4f617fbde6f485d55ef7752fe7856f64b5db1dad1"
    },
    {
      "name": "MLX90614",
      "version": "0.1.1",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to support Melexis MLX90614 infrared thermometer",
      "paragraph": "Arduino library to support Austrian Microsystems AS3935 lightning sensor using the I2C interface. For I2C support the SoftWire software bit-banging Arduino library is used. GNU LGPL v2.1.",
      "website": "https://github.com/stevemarple/AS3935",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/MLX90614-0.1.1.zip",
      "archiveFileName": "MLX90614-0.1.1.zip",
      "size": 13251,
      "checksum": "SHA-256:7e20654cee08f29335d587702b9f84ea58ba8a6f2d32f28b48adc9101bde8438"
    },
    {
      "name": "MLX90614",
      "version": "0.1.2",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to support Melexis MLX90614 infrared thermometer",
      "paragraph": "Arduino library to support Austrian Microsystems AS3935 lightning sensor using the I2C interface. For I2C support the SoftWire software bit-banging Arduino library is used. GNU LGPL v2.1.",
      "website": "https://github.com/stevemarple/MLX90614",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/MLX90614-0.1.2.zip",
      "archiveFileName": "MLX90614-0.1.2.zip",
      "size": 13252,
      "checksum": "SHA-256:b699f1332fa09ce09e289b63a2557ddb153e0537f16df37a27890489f2c0d619"
    },
    {
      "name": "AS3935",
      "version": "1.0.0",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to support Austrian Microsystems AS3935 lightning sensor.",
      "paragraph": "Arduino library to support Austrian Microsystems AS3935 lightning sensor using the I2C interface. For I2C support the SoftWire software bit-banging Arduino library is used. GNU LGPL v2.1",
      "website": "https://github.com/stevemarple/AS3935",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/AS3935-1.0.0.zip",
      "archiveFileName": "AS3935-1.0.0.zip",
      "size": 16704,
      "checksum": "SHA-256:b2f2252936b9a8715d4bceae279a707bc5dda8de6f4f7481d12ca52bee8c497f"
    },
    {
      "name": "AS3935",
      "version": "1.0.1",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to support Austrian Microsystems AS3935 lightning sensor.",
      "paragraph": "Arduino library to support Austrian Microsystems AS3935 lightning sensor using the I2C interface. For I2C support the SoftWire software bit-banging Arduino library is used. GNU LGPL v2.1",
      "website": "https://github.com/stevemarple/AS3935",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/AS3935-1.0.1.zip",
      "archiveFileName": "AS3935-1.0.1.zip",
      "size": 16697,
      "checksum": "SHA-256:b2cef7c08b3c7d975b002e9b52bba7b2f9e37d0c6f000bd5354be8219696a185"
    },
    {
      "name": "RBD_Capacitance",
      "version": "1.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Detect changes in capacitance.",
      "paragraph": "Determine change in relative capacitance to detect human presence or water level.",
      "website": "https://github.com/alextaujenis/RBD_Capacitance",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Capacitance-1.0.0.zip",
      "archiveFileName": "RBD_Capacitance-1.0.0.zip",
      "size": 12471,
      "checksum": "SHA-256:63402347fbc6f158d67a86ab563c1436e8b3f562cedf38b00f71e58e150a3e84"
    },
    {
      "name": "RBD_Capacitance",
      "version": "1.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Measure change in capacitance.",
      "paragraph": "Measure change in capacitance without delay to detect human presence or water level.",
      "website": "https://github.com/alextaujenis/RBD_Capacitance",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Capacitance-1.0.1.zip",
      "archiveFileName": "RBD_Capacitance-1.0.1.zip",
      "size": 8306,
      "checksum": "SHA-256:ece072473bd5022e193208702da6b2c0cc5111f720bf0748f3a6cab245ce1d57"
    },
    {
      "name": "RBD_Capacitance",
      "version": "1.0.2",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Measure change in capacitance.",
      "paragraph": "Measure change in capacitance without delay to detect human presence or water level.",
      "website": "https://github.com/alextaujenis/RBD_Capacitance",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Capacitance-1.0.2.zip",
      "archiveFileName": "RBD_Capacitance-1.0.2.zip",
      "size": 8216,
      "checksum": "SHA-256:82ea1f74f64e54ce59067cde8c155f7a5c0babd0f35ded3a0e1abb7dcdc7e20a"
    },
    {
      "name": "RBD_Capacitance",
      "version": "1.0.3",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Measure change in capacitance.",
      "paragraph": "Detect human presence and touch from behind several millimeters of material, or detect change in water levels from the outside of a plastic container. This library is meant to help determine change in relative capacitance for the reasons above, and not for calculating exact capacitance. Relative capacitance is found by measuring how long it takes for an Arduino send-pin to charge a receive-pin to HIGH (in microseconds).",
      "website": "https://github.com/alextaujenis/RBD_Capacitance",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Capacitance-1.0.3.zip",
      "archiveFileName": "RBD_Capacitance-1.0.3.zip",
      "size": 8856,
      "checksum": "SHA-256:c6d06388a89435dac2082257771dbc20df60e86c646b173826913b66c0770983"
    },
    {
      "name": "RBD_Capacitance",
      "version": "1.0.4",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Measure change in capacitance.",
      "paragraph": "Detect human presence and touch from behind several millimeters of material, or detect change in water levels from the outside of a plastic container. This library is meant to help determine change in relative capacitance for the reasons above, and not for calculating exact capacitance. Relative capacitance is found by measuring how long it takes for an Arduino send-pin to charge a receive-pin to HIGH (in microseconds).",
      "website": "https://github.com/alextaujenis/RBD_Capacitance",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Capacitance-1.0.4.zip",
      "archiveFileName": "RBD_Capacitance-1.0.4.zip",
      "size": 8714,
      "checksum": "SHA-256:e0af9210a9b06d733f62de88135d231f7360206058520931d7c42a2476a38837"
    },
    {
      "name": "PciManager",
      "version": "2.0.0",
      "author": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "maintainer": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "sentence": "This library helps you manage Pin Change Interrupts: subscribe and receive change events.",
      "paragraph": "With PciManager Arduino library you can manage the Pin Change Interrupt of the microcontroller. You can register listeners in the PciManager for a change of a pin. The manager handles the interrupt and calls the listeners.",
      "website": "https://github.com/prampec/arduino-pcimanager",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/prampec/PciManager-2.0.0.zip",
      "archiveFileName": "PciManager-2.0.0.zip",
      "size": 19804,
      "checksum": "SHA-256:2e7cbd0a0ef3dc3b10b6136fe651d40cbdd5dfd4f8ec15768347cec7cb81337f"
    },
    {
      "name": "PciManager",
      "version": "2.1.0",
      "author": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "maintainer": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "sentence": "This library helps you manage Pin Change Interrupts: subscribe and receive change events.",
      "paragraph": "With PciManager Arduino library you can manage the Pin Change Interrupt of the microcontroller. You can register listeners in the PciManager for a change of a pin. The manager handles the interrupt and calls the listeners.",
      "website": "https://github.com/prampec/arduino-pcimanager",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/prampec/PciManager-2.1.0.zip",
      "archiveFileName": "PciManager-2.1.0.zip",
      "size": 22814,
      "checksum": "SHA-256:460fd3399c5f5b25f1ce15ec9004b838e64e816bc6dd9e3b20297aed35523e04"
    },
    {
      "name": "PciManager",
      "version": "2.1.3",
      "author": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "maintainer": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "sentence": "This library helps you manage Pin Change Interrupts: subscribe and receive change events.",
      "paragraph": "With PciManager Arduino library you can manage the Pin Change Interrupt of the microcontroller. You can register listeners in the PciManager for a change of a pin. The manager handles the interrupt and calls the listeners.",
      "website": "https://github.com/prampec/arduino-pcimanager",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/prampec/PciManager-2.1.3.zip",
      "archiveFileName": "PciManager-2.1.3.zip",
      "size": 23061,
      "checksum": "SHA-256:aefc90ae28de5833642fe1031ba5129adbbc5f81208710eea84fbe1599d10e03"
    },
    {
      "name": "CMMC WiFi Connector",
      "version": "2.0.1",
      "author": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "sentence": "A WiFi Connect Helper (formerly known as WiFi Connector)",
      "paragraph": "An opensource library that makes coding with wifi easier and more happy. Made with love by CMMC",
      "website": "https://github.com/cmmakerclub/WiFiConnector",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/cmmakerclub/CMMC_WiFi_Connector-2.0.1.zip",
      "archiveFileName": "CMMC_WiFi_Connector-2.0.1.zip",
      "size": 336069,
      "checksum": "SHA-256:429506116b712a8cd66f09247755c0459c2d703c8208b1a2c5781fb5503c51bf"
    },
    {
      "name": "CMMC WiFi Connector",
      "version": "2.0.2",
      "author": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "sentence": "A WiFi Connect Helper (formerly known as WiFi Connector)",
      "paragraph": "An opensource library that makes coding with wifi easier and more happy. Made with love by CMMC",
      "website": "https://github.com/cmmakerclub/WiFiConnector",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/cmmakerclub/CMMC_WiFi_Connector-2.0.2.zip",
      "archiveFileName": "CMMC_WiFi_Connector-2.0.2.zip",
      "size": 335403,
      "checksum": "SHA-256:43916493c6e99efa4eacb8b5dbba22510b79c75f3ec6343e9c5babfd005a64f4"
    },
    {
      "name": "CMMC WiFi Connector",
      "version": "2.0.3",
      "author": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "sentence": "WiFiConnector is a event-based library that helps you to connect to a wifi network",
      "paragraph": "WiFiConnector is an event-based library that helps you online in a second and auto reconnect when wifi is disconnected.",
      "website": "https://github.com/cmmakerclub/WiFiConnector",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/cmmakerclub/CMMC_WiFi_Connector-2.0.3.zip",
      "archiveFileName": "CMMC_WiFi_Connector-2.0.3.zip",
      "size": 335839,
      "checksum": "SHA-256:788346ba6ee39d23cd7fb29df46eac1aa10266ab2d92e2818cc8d83b969ca5ca"
    },
    {
      "name": "CMMC WiFi Connector",
      "version": "3.0.3",
      "author": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "sentence": "WiFiConnector by CMMC",
      "paragraph": "WiFiConnector is an event-based wifi management library.",
      "website": "https://github.com/cmmakerclub/WiFiConnector",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/cmmakerclub/CMMC_WiFi_Connector-3.0.3.zip",
      "archiveFileName": "CMMC_WiFi_Connector-3.0.3.zip",
      "size": 159446,
      "checksum": "SHA-256:8013a1bea3b14e56c0bcd6735a99113574f6844094f6d3a42e480e173c1972c0"
    },
    {
      "name": "CMMC WiFi Connector",
      "version": "3.0.5",
      "author": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "sentence": "WiFiConnector by CMMC",
      "paragraph": "WiFiConnector is an event-based wifi management library.",
      "website": "https://github.com/cmmakerclub/WiFiConnector",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/cmmakerclub/CMMC_WiFi_Connector-3.0.5.zip",
      "archiveFileName": "CMMC_WiFi_Connector-3.0.5.zip",
      "size": 160341,
      "checksum": "SHA-256:9d66aa31fb40ecd9848eb0e4aee932fbed865a97dbf212d5ec3e5f07cb53dc1f"
    },
    {
      "name": "CMMC WiFi Connector",
      "version": "3.0.6",
      "author": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "sentence": "WiFiConnector by CMMC",
      "paragraph": "WiFiConnector is an event-based wifi management library.",
      "website": "https://github.com/cmmakerclub/WiFiConnector",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/cmmakerclub/CMMC_WiFi_Connector-3.0.6.zip",
      "archiveFileName": "CMMC_WiFi_Connector-3.0.6.zip",
      "size": 161993,
      "checksum": "SHA-256:08795fb9d4e678e59d3ad2c882b844ac13e8afb765aee83986de01c4115910b5"
    },
    {
      "name": "CMMC WiFi Connector",
      "version": "3.0.7",
      "author": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "sentence": "WiFiConnector by CMMC",
      "paragraph": "WiFiConnector is an event-based wifi management library.",
      "website": "https://github.com/cmmakerclub/WiFiConnector",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/cmmakerclub/CMMC_WiFi_Connector-3.0.7.zip",
      "archiveFileName": "CMMC_WiFi_Connector-3.0.7.zip",
      "size": 163757,
      "checksum": "SHA-256:7d7a52576ff3bae6b71a4823e6c975e9d89b401d3f496d2bb71e9492c5e763ae"
    },
    {
      "name": "CMMC WiFi Connector",
      "version": "3.0.8",
      "author": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "sentence": "WiFiConnector by CMMC",
      "paragraph": "WiFiConnector is an event-based wifi management library.",
      "website": "https://github.com/cmmakerclub/WiFiConnector",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/cmmakerclub/CMMC_WiFi_Connector-3.0.8.zip",
      "archiveFileName": "CMMC_WiFi_Connector-3.0.8.zip",
      "size": 163779,
      "checksum": "SHA-256:1feb23f612affe64c3995e273d6a1df108f1fba09e01d387b536741d63892f02"
    },
    {
      "name": "RBD_HumanSensor",
      "version": "1.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Detect human proximity, touch, and pickup events in real-time.",
      "paragraph": "Determine change in relative capacitance to detect human presence, touch, and pickup events in real-time with no delay.",
      "website": "https://github.com/alextaujenis/RBD_HumanSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_HumanSensor-1.0.0.zip",
      "archiveFileName": "RBD_HumanSensor-1.0.0.zip",
      "size": 13149,
      "checksum": "SHA-256:02430d6127ef659ebef332afc5485fcf212dd8f2d1774aa2ce12d70866cc5c4c"
    },
    {
      "name": "RBD_HumanSensor",
      "version": "1.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Detect human presence, touch, and pickup events.",
      "paragraph": "Measure change in capacitance to detect human presence, touch, and pickup events without delay.",
      "website": "https://github.com/alextaujenis/RBD_HumanSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_HumanSensor-1.0.1.zip",
      "archiveFileName": "RBD_HumanSensor-1.0.1.zip",
      "size": 8513,
      "checksum": "SHA-256:e1a82bea6d64e994f471b8ceadf077304ad3c4d6fec11a14308b188566661ab7"
    },
    {
      "name": "RBD_HumanSensor",
      "version": "1.0.2",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Detect human presence, touch, and pickup events.",
      "paragraph": "Measure change in capacitance to detect human presence, touch, and pickup events without delay.",
      "website": "https://github.com/alextaujenis/RBD_HumanSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_HumanSensor-1.0.2.zip",
      "archiveFileName": "RBD_HumanSensor-1.0.2.zip",
      "size": 8339,
      "checksum": "SHA-256:2785fccafd677bd579e4aeb8bebab1392b45d2f9ff522f8d1acf672a358063f3"
    },
    {
      "name": "RBD_HumanSensor",
      "version": "1.0.3",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Detect human presence, touch, and pickup events.",
      "paragraph": "Measure change in capacitance to detect human presence, touch, and pickup events without delay or interrupts.",
      "website": "https://github.com/alextaujenis/RBD_HumanSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_HumanSensor-1.0.3.zip",
      "archiveFileName": "RBD_HumanSensor-1.0.3.zip",
      "size": 8336,
      "checksum": "SHA-256:f48f696841d218b75225948a3d5278b91efad111915fcb893fc155e3763e7338"
    },
    {
      "name": "RBD_HumanSensor",
      "version": "1.0.4",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Detect human presence, touch, and pickup events.",
      "paragraph": "Measure change in capacitance to detect human presence, touch, and pickup events without delay or interrupts.",
      "website": "https://github.com/alextaujenis/RBD_HumanSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_HumanSensor-1.0.4.zip",
      "archiveFileName": "RBD_HumanSensor-1.0.4.zip",
      "size": 3838,
      "checksum": "SHA-256:d7eb8c3bdca65d5d0acf6cdfd105b87e41907aef425429b595b822cfe8d7fc39"
    },
    {
      "name": "CMMC MQTT Connector",
      "version": "0.95.0",
      "author": "Nat Weerawan\u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan\u003cnat.wrw@gmail.com\u003e",
      "sentence": "MQTT Connector library",
      "paragraph": "An ESP8266 MQTT Connector library.",
      "website": "https://www.cmmakerclub.com",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/cmmakerclub/CMMC_MQTT_Connector-0.95.0.zip",
      "archiveFileName": "CMMC_MQTT_Connector-0.95.0.zip",
      "size": 28730,
      "checksum": "SHA-256:eda4fce74d24b8d803b2dd441a9a00cb2eb515f5546a07410a77d3b5980667b6"
    },
    {
      "name": "CMMC MQTT Connector",
      "version": "0.96.0",
      "author": "Nat Weerawan\u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan\u003cnat.wrw@gmail.com\u003e",
      "sentence": "MQTT Connector library",
      "paragraph": "An ESP8266 MQTT Connector library.",
      "website": "https://www.cmmakerclub.com",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/cmmakerclub/CMMC_MQTT_Connector-0.96.0.zip",
      "archiveFileName": "CMMC_MQTT_Connector-0.96.0.zip",
      "size": 34806,
      "checksum": "SHA-256:83cf1e72846c4f9045049278d68bab44eea6f713c12fd8687b0b63a8ae43d729"
    },
    {
      "name": "TOTP library",
      "version": "1.0.0",
      "author": "Luca Dentella \u003cluca@dentella.it\u003e",
      "maintainer": "Luca Dentella \u003cluca@dentella.it\u003e",
      "sentence": "Library to generate Time-based One-Time Passwords",
      "paragraph": "Implements the Time-based One-Time Password algorithm specified in RFC 6238. Supports different time steps and it's compatible with tokens that uses the same standard (including software ones, like the Google Authenticator app).",
      "website": "https://github.com/lucadentella/TOTP-Arduino",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/lucadentella/TOTP_library-1.0.0.zip",
      "archiveFileName": "TOTP_library-1.0.0.zip",
      "size": 3979,
      "checksum": "SHA-256:bcd60a6c3abf16b981fe50c82732c88bb95831116cc1d1c5b27351f9c48db678"
    },
    {
      "name": "TOTP library",
      "version": "1.0.1",
      "author": "Luca Dentella \u003cluca@dentella.it\u003e",
      "maintainer": "Luca Dentella \u003cluca@dentella.it\u003e",
      "sentence": "Library to generate Time-based One-Time Passwords",
      "paragraph": "Implements the Time-based One-Time Password algorithm specified in RFC 6238. Supports different time steps and it's compatible with tokens that uses the same standard (including software ones, like the Google Authenticator app).",
      "website": "https://github.com/lucadentella/TOTP-Arduino",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/lucadentella/TOTP_library-1.0.1.zip",
      "archiveFileName": "TOTP_library-1.0.1.zip",
      "size": 6118,
      "checksum": "SHA-256:dbcf03c0686a4388bf203789ba3913332405c9abd0e72711700ac6e652006f3c"
    },
    {
      "name": "InputDebounce",
      "version": "1.0.0",
      "author": "Mario Ban \u003cmario.ban@bluewin.ch\u003e",
      "maintainer": "Mario Ban \u003cmario.ban@bluewin.ch\u003e",
      "sentence": "Simple polling input debounce Arduino library.",
      "paragraph": "Used for push-button like switches. Delivers input value (state) after it has been stable (not flickering) for longer than the debounce period, and delivers pressed-on time [ms].",
      "website": "https://github.com/Mokolea/InputDebounce",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Mokolea/InputDebounce-1.0.0.zip",
      "archiveFileName": "InputDebounce-1.0.0.zip",
      "size": 10886,
      "checksum": "SHA-256:9d66b338f542139b9f12628cc743ca7e0907d109bec27414e3327988ae133c6e"
    },
    {
      "name": "InputDebounce",
      "version": "1.1.0",
      "author": "Mario Ban \u003cmario.ban@bluewin.ch\u003e",
      "maintainer": "Mario Ban \u003cmario.ban@bluewin.ch\u003e",
      "sentence": "Simple polling input debounce Arduino library.",
      "paragraph": "Used for push-button like switches. Delivers input value (state) after it has been stable (not flickering) for longer than the debounce period, and delivers continuous pressed-on time duration [ms].",
      "website": "https://github.com/Mokolea/InputDebounce",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Mokolea/InputDebounce-1.1.0.zip",
      "archiveFileName": "InputDebounce-1.1.0.zip",
      "size": 14264,
      "checksum": "SHA-256:dd2e2919d4f3a577ef17f67f0d498f18cfd2120832b7280f76309620cc3bb2e6"
    },
    {
      "name": "RBD_Light",
      "version": "1.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Blink and and fade many lights in real time with no delay.",
      "paragraph": "Control many lights in real-time and blink without delay using commands such as on(), off(), blink(), and fade(). Lights must be connected to PWM enabled Arduino pins to work with this library.",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Light-1.0.0.zip",
      "archiveFileName": "RBD_Light-1.0.0.zip",
      "size": 10740,
      "checksum": "SHA-256:c656d5ab714b51ccb49e08aefd53287a29ae1bb1b0f55b296a293ceb1ada4112"
    },
    {
      "name": "RBD_Light",
      "version": "1.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Blink and fade many lights in real time with no delay.",
      "paragraph": "Control many lights in real-time and blink without delay using commands such as on(), off(), blink(), and fade(). Lights must be connected to PWM enabled Arduino pins to work with this library.",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Light-1.0.1.zip",
      "archiveFileName": "RBD_Light-1.0.1.zip",
      "size": 10738,
      "checksum": "SHA-256:85f5bcca2002019a595043128b9cf984de3ffce30e4b7d24a42546619187d998"
    },
    {
      "name": "RBD_Light",
      "version": "1.0.2",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights and blink without delay using commands such as on(), off(), blink(), and fade().",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Light-1.0.2.zip",
      "archiveFileName": "RBD_Light-1.0.2.zip",
      "size": 8381,
      "checksum": "SHA-256:b645d68e2526a0adb479a22feb9e27278c6a2b01db9d796c33b3e8119da9febb"
    },
    {
      "name": "RBD_Light",
      "version": "1.0.3",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights and blink without delay using commands such as on(), off(), blink(), and fade().",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Light-1.0.3.zip",
      "archiveFileName": "RBD_Light-1.0.3.zip",
      "size": 8539,
      "checksum": "SHA-256:bdf1d932a674f9512fd52fb834fa4a60fa83febac42ea3ac439566337aa4858a"
    },
    {
      "name": "RBD_Light",
      "version": "1.0.4",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights and blink without delay using commands such as on(), off(), blink(), and fade().",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Light-1.0.4.zip",
      "archiveFileName": "RBD_Light-1.0.4.zip",
      "size": 8659,
      "checksum": "SHA-256:7b01b17e8cd0be2dae090c8016c0161bb33af0a45b207fca8218e5fa182ba8f7"
    },
    {
      "name": "RBD_Light",
      "version": "1.0.5",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights and blink without delay using commands such as on(), off(), blink(), and fade().",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Light-1.0.5.zip",
      "archiveFileName": "RBD_Light-1.0.5.zip",
      "size": 8657,
      "checksum": "SHA-256:b493543609fa1f48a55f57be847c8a4ce74f33b0c96904387aeb75643b3407c5"
    },
    {
      "name": "RBD_Light",
      "version": "2.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights / LEDs and blink without delay or interrupts using commands such as on(), off(), blink(), and fade(). Lights must be connected to PWM enabled pins to work with this library.",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Light-2.0.0.zip",
      "archiveFileName": "RBD_Light-2.0.0.zip",
      "size": 8676,
      "checksum": "SHA-256:d803d61b437b86132018329d47a58b09584c1386ace20d4a4103fb9f8a56d257"
    },
    {
      "name": "RBD_Light",
      "version": "2.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights / LEDs and blink without delay or interrupts using commands such as on(), off(), blink(), and fade(). Lights must be connected to PWM enabled pins to work with this library.",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Light-2.0.1.zip",
      "archiveFileName": "RBD_Light-2.0.1.zip",
      "size": 8923,
      "checksum": "SHA-256:e024f3d86b0fb743e7758a3ee6afea66a33d2f3f003cfa63a8077bfdc4863ec8"
    },
    {
      "name": "RBD_Light",
      "version": "2.1.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights / LEDs and blink without delay or interrupts using commands such as on(), off(), blink(), and fade(). Lights must be connected to PWM enabled pins to work with this library.",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Light-2.1.0.zip",
      "archiveFileName": "RBD_Light-2.1.0.zip",
      "size": 9094,
      "checksum": "SHA-256:91d037b617201c17b8b87303941e13f8d3c6ab8c02ad39f4abee49848d578bea"
    },
    {
      "name": "RBD_Light",
      "version": "2.1.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights / LEDs and blink without delay or interrupts using commands such as on(), off(), blink(), and fade(). Lights must be connected to PWM enabled pins to work with this library.",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Light-2.1.1.zip",
      "archiveFileName": "RBD_Light-2.1.1.zip",
      "size": 4316,
      "checksum": "SHA-256:dfdaeda8009c1e77d4022dfa0e5ec90ad7184664cf06fd163c4a5ebf44bacab5"
    },
    {
      "name": "RBD_Light",
      "version": "2.1.2",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights / LEDs and blink without delay or interrupts using commands such as on(), off(), blink(), and fade(). Lights must be connected to PWM enabled pins to work with this library.",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Light-2.1.2.zip",
      "archiveFileName": "RBD_Light-2.1.2.zip",
      "size": 4286,
      "checksum": "SHA-256:7d049fb2dda2baf7d61d2619b00e387eda031032d1931f2896c5b1e172c9541a"
    },
    {
      "name": "RBD_Light",
      "version": "2.1.3",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights / LEDs and blink without delay or interrupts using commands such as on(), off(), blink(), and fade(). Lights must be connected to PWM enabled pins to work with this library.",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Light-2.1.3.zip",
      "archiveFileName": "RBD_Light-2.1.3.zip",
      "size": 6368,
      "checksum": "SHA-256:1cfb4fce19f615517c180232397ff2506aff8b4fcb37322636120b6c0810c772"
    },
    {
      "name": "RBD_Light",
      "version": "2.1.4",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights / LEDs and blink without delay or interrupts using commands such as on(), off(), blink(), and fade(). Lights can be connected to PWM or Digital Arduino pins to work with this library.",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Light-2.1.4.zip",
      "archiveFileName": "RBD_Light-2.1.4.zip",
      "size": 6852,
      "checksum": "SHA-256:154d419fd55309d59ad89d07cabfbdb4ae37b2bcaa4ef62156d90e226b42bb6e"
    },
    {
      "name": "RBD_Light",
      "version": "2.1.5",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights / LEDs and blink without delay or interrupts using commands such as on(), off(), blink(), and fade(). Lights can be connected to PWM or Digital Arduino pins to work with this library.",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Light-2.1.5.zip",
      "archiveFileName": "RBD_Light-2.1.5.zip",
      "size": 6887,
      "checksum": "SHA-256:0a0c1e6911b9f68abeefe3212756f56c3332e02d76a3336bd96b5a6ff949fd29"
    },
    {
      "name": "RBD_Light",
      "version": "2.1.6",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights / LEDs and blink without delay or interrupts using commands such as on(), off(), blink(), and fade(). Lights can be connected to PWM or Digital Arduino pins to work with this library.",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Light-2.1.6.zip",
      "archiveFileName": "RBD_Light-2.1.6.zip",
      "size": 6962,
      "checksum": "SHA-256:eb3191bfaf19367c6b02037c31ed5ecc88687311b439721305709b15f7e3803c"
    },
    {
      "name": "RBD_Light",
      "version": "2.1.7",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights / LEDs and blink without delay or interrupts using commands such as on(), off(), blink(), and fade(). Lights can be connected to PWM or Digital Arduino pins to work with this library.",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Light-2.1.7.zip",
      "archiveFileName": "RBD_Light-2.1.7.zip",
      "size": 7015,
      "checksum": "SHA-256:d25ef42a81dbb92ef742b3cc20e65ac43894fdcb12af749090611db14ba14624"
    },
    {
      "name": "RBD_LightSensor",
      "version": "1.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Read and calibrate photoresistors.",
      "paragraph": "Read and calibrate photoresistors.",
      "website": "https://github.com/alextaujenis/RBD_LightSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_LightSensor-1.0.0.zip",
      "archiveFileName": "RBD_LightSensor-1.0.0.zip",
      "size": 7182,
      "checksum": "SHA-256:8d6b8ad973a693fa4d2d817800e13cd98b45fb276d883d04693f037d8f5eed78"
    },
    {
      "name": "RBD_LightSensor",
      "version": "1.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Read and calibrate photoresistors.",
      "paragraph": "Read and calibrate photoresistors.",
      "website": "https://github.com/alextaujenis/RBD_LightSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_LightSensor-1.0.1.zip",
      "archiveFileName": "RBD_LightSensor-1.0.1.zip",
      "size": 5653,
      "checksum": "SHA-256:9d999ed3ece262e5ec22e8b66eddfc38826025d009d5faf2bb839e59237f483c"
    },
    {
      "name": "RBD_LightSensor",
      "version": "1.0.2",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Read and calibrate photoresistors.",
      "paragraph": "Read and calibrate photoresistors.",
      "website": "https://github.com/alextaujenis/RBD_LightSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_LightSensor-1.0.2.zip",
      "archiveFileName": "RBD_LightSensor-1.0.2.zip",
      "size": 5795,
      "checksum": "SHA-256:31108ae21a0b2b3e60418f41a2929a54ddcdc5d230721091c0b10963d9565b00"
    },
    {
      "name": "RBD_LightSensor",
      "version": "1.0.3",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Read and calibrate photoresistors.",
      "paragraph": "Read and calibrate photoresistors.",
      "website": "https://github.com/alextaujenis/RBD_LightSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_LightSensor-1.0.3.zip",
      "archiveFileName": "RBD_LightSensor-1.0.3.zip",
      "size": 5932,
      "checksum": "SHA-256:d002fc614fca4b303e93aac3af8e2428708f69fee832cdc510b0449d2350f408"
    },
    {
      "name": "RBD_Timer",
      "version": "1.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Manage many timed events.",
      "paragraph": "The Arduino real-time loop stops advancing when you write delay() or use interrupts in your sketch. You can keep the real-time loop moving by using millis() to track time and create delay, but it's more complicated and soon becomes messy to manage. This lightweight library manages time the same way you would by setting a waypoint and calculating elapsed millis(). It is a simple replacement to manage your timed events with english instead of math.",
      "website": "https://github.com/alextaujenis/RBD_Timer",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Timer-1.0.0.zip",
      "archiveFileName": "RBD_Timer-1.0.0.zip",
      "size": 10519,
      "checksum": "SHA-256:b1266793ec56fada538ca829adf0840cacf1223abd1abe9820ab27a2b17fed67"
    },
    {
      "name": "RBD_Timer",
      "version": "1.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Manage many timed events.",
      "paragraph": "The Arduino real-time loop stops advancing when you write delay() or use interrupts in your sketch. You can keep the real-time loop moving by using millis() to track time and create delay, but it's more complicated and soon becomes messy to manage. This lightweight library manages time the same way you would by setting a waypoint and calculating elapsed millis(). It is a simple replacement to manage your timed events with english instead of math.",
      "website": "https://github.com/alextaujenis/RBD_Timer",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Timer-1.0.1.zip",
      "archiveFileName": "RBD_Timer-1.0.1.zip",
      "size": 7272,
      "checksum": "SHA-256:fe717a9a693c9cffc1f26962aabe717b419c2c70f3d3e5b49d3a832e8704da2c"
    },
    {
      "name": "RBD_Timer",
      "version": "1.0.2",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Manage many timed events.",
      "paragraph": "The Arduino real-time loop stops advancing when you write delay() or use interrupts in your sketch. You can keep the real-time loop moving by using millis() to track time and create delay, but it's more complicated and soon becomes messy to manage. This lightweight library manages time the same way you would by setting a waypoint and calculating elapsed millis(). It is a simple replacement to manage your timed events with english instead of math.",
      "website": "https://github.com/alextaujenis/RBD_Timer",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Timer-1.0.2.zip",
      "archiveFileName": "RBD_Timer-1.0.2.zip",
      "size": 7263,
      "checksum": "SHA-256:19b59a8ad91b055eb397f54231434cbdc26da0168e87c269f6bea18781a13923"
    },
    {
      "name": "RBD_Timer",
      "version": "1.0.3",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Manage many timed events.",
      "paragraph": "The Arduino real-time loop stops advancing when you write delay() or use interrupts in your sketch. You can keep the real-time loop moving by using millis() to track time and create delay, but it's more complicated and soon becomes messy to manage. This lightweight library manages time the same way you would by setting a waypoint and calculating elapsed millis(). It is a simple replacement to manage your timed events with english instead of math.",
      "website": "https://github.com/alextaujenis/RBD_Timer",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Timer-1.0.3.zip",
      "archiveFileName": "RBD_Timer-1.0.3.zip",
      "size": 8617,
      "checksum": "SHA-256:bbfb6a173b7462e4aa60702ca5f3d448dcbe2596cc884c49ae0f0a040701b58c"
    },
    {
      "name": "RBD_Timer",
      "version": "1.0.4",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Manage many timed events.",
      "paragraph": "The Arduino real-time loop stops advancing when you write delay() or use interrupts in your sketch. You can keep the real-time loop moving by using millis() to track time and create delay, but it's more complicated and soon becomes messy to manage. This lightweight library manages time the same way you would by setting a waypoint and calculating elapsed millis(). It is a simple replacement to manage your timed events with english instead of math.",
      "website": "https://github.com/alextaujenis/RBD_Timer",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Timer-1.0.4.zip",
      "archiveFileName": "RBD_Timer-1.0.4.zip",
      "size": 8579,
      "checksum": "SHA-256:b848fc88acd483ba8dc6104088848d35491a0ed3a89bff81d865603272f8ef34"
    },
    {
      "name": "RBD_Timer",
      "version": "1.0.5",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Manage many timed events.",
      "paragraph": "The Arduino real-time loop stops advancing when you write delay() or use interrupts in your sketch. You can keep the real-time loop moving by using millis() to track time and create delay, but it's more complicated and soon becomes messy to manage. This lightweight library manages time the same way you would by setting a waypoint and calculating elapsed millis(). It is a simple replacement to manage your timed events with english instead of math.",
      "website": "https://github.com/alextaujenis/RBD_Timer",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Timer-1.0.5.zip",
      "archiveFileName": "RBD_Timer-1.0.5.zip",
      "size": 8838,
      "checksum": "SHA-256:3eb21307218620ca1f38bfd852b1a1fb23f248efec00ec0ce17bb5aa06fdd506"
    },
    {
      "name": "RBD_Timer",
      "version": "1.1.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Manage many timed events.",
      "paragraph": "The Arduino real-time loop stops advancing when you write delay() or use interrupts in your sketch. You can keep the real-time loop moving by using millis() to track time and create delay, but it's more complicated and soon becomes messy to manage. This lightweight library manages time the same way you would by setting a waypoint and calculating elapsed millis(). It is a simple replacement to manage your timed events with english instead of math.",
      "website": "https://github.com/alextaujenis/RBD_Timer",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Timer-1.1.0.zip",
      "archiveFileName": "RBD_Timer-1.1.0.zip",
      "size": 8702,
      "checksum": "SHA-256:b786074b12522d9ce83c426d3757eee35d64c3e296275a188db2a7255ccffd14"
    },
    {
      "name": "RBD_Timer",
      "version": "1.1.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Manage many timed events.",
      "paragraph": "The Arduino real-time loop stops advancing when you write delay() or use interrupts in your sketch. You can keep the real-time loop moving by using millis() to track time and create delay, but it's more complicated and soon becomes messy to manage. This lightweight library manages time the same way you would by setting a waypoint and calculating elapsed millis(). It is a simple replacement to manage your timed events with english instead of math.",
      "website": "https://github.com/alextaujenis/RBD_Timer",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Timer-1.1.1.zip",
      "archiveFileName": "RBD_Timer-1.1.1.zip",
      "size": 9039,
      "checksum": "SHA-256:4c260a28d226d2198f4a54424465818a84f9d255241d03074cfd0f6a255d9bbf"
    },
    {
      "name": "RBD_Timer",
      "version": "1.1.2",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Manage many timed events.",
      "paragraph": "The Arduino real-time loop stops advancing when you write delay() or use interrupts in your sketch. You can keep the real-time loop moving by using millis() to track time and create delay, but it's more complicated and soon becomes messy to manage. This lightweight library manages time the same way you would by setting a waypoint and calculating elapsed millis(). It is a simple replacement to manage your timed events with english instead of math.",
      "website": "https://github.com/alextaujenis/RBD_Timer",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Timer-1.1.2.zip",
      "archiveFileName": "RBD_Timer-1.1.2.zip",
      "size": 5063,
      "checksum": "SHA-256:4fc7faf27d8a0875613a5aa7a89208e97eceeb23d719a24809f2b7420bcc3e22"
    },
    {
      "name": "RBD_Timer",
      "version": "1.2.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Manage many timed events.",
      "paragraph": "The Arduino real-time loop stops advancing when you write delay() or use interrupts in your sketch. You can keep the real-time loop moving by using millis() to track time and create delay, but it's more complicated and soon becomes messy to manage. This lightweight library manages time the same way you would by setting a waypoint and calculating elapsed millis(). It is a simple replacement to manage your timed events with english instead of math.",
      "website": "https://github.com/alextaujenis/RBD_Timer",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Timer-1.2.0.zip",
      "archiveFileName": "RBD_Timer-1.2.0.zip",
      "size": 5290,
      "checksum": "SHA-256:b28479a0798d7e25d034c37681ce8e18a8dc31f200af946d80c25ee3b31140d4"
    },
    {
      "name": "RBD_Timer",
      "version": "1.3.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Manage many timed events.",
      "paragraph": "The Arduino real-time loop stops advancing when you write delay() or use interrupts in your sketch. You can keep the real-time loop moving by using millis() to track time and create delay, but it's more complicated and soon becomes messy to manage. This lightweight library manages time the same way you would by setting a waypoint and calculating elapsed millis(). It is a simple replacement to manage your timed events with english instead of math.",
      "website": "https://github.com/alextaujenis/RBD_Timer",
      "category": "Timing",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Timer-1.3.0.zip",
      "archiveFileName": "RBD_Timer-1.3.0.zip",
      "size": 5499,
      "checksum": "SHA-256:5a12e3f5307acf85db34fece305a18cc0bd9fb936fba640863a97f52163edaee"
    },
    {
      "name": "RBD_Motor",
      "version": "1.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many motors in real-time without delay.",
      "paragraph": "Control many motors in real-time without delay using commands like on(), off(), timedOn(), and ramp(). Fire custom events when the motor has reached the target speed with onTargetSpeed().",
      "website": "https://github.com/alextaujenis/RBD_Motor",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Motor-1.0.0.zip",
      "archiveFileName": "RBD_Motor-1.0.0.zip",
      "size": 9935,
      "checksum": "SHA-256:fc2048e8cd43e32ef4a4d921ce6c0f0ca9bddc1411f023cb73a2f40a74bfad37"
    },
    {
      "name": "RBD_Motor",
      "version": "1.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many motors in real-time without delay.",
      "paragraph": "Control many motors in real-time without delay using commands like on(), off(), timedOn(), and ramp(). Fire custom events when the motor has reached the target speed with onTargetSpeed().",
      "website": "https://github.com/alextaujenis/RBD_Motor",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Motor-1.0.1.zip",
      "archiveFileName": "RBD_Motor-1.0.1.zip",
      "size": 9937,
      "checksum": "SHA-256:38d74ebf8b50fab4ad4446604ce7ee902d776e670fcd5aaeed598fa0f52f438a"
    },
    {
      "name": "RBD_Motor",
      "version": "1.0.3",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many motors without delay.",
      "paragraph": "Control many motors without delay using commands like on(), off(), timedOn(), and ramp(). Fire custom events when the motor has reached the target speed with onTargetSpeed().",
      "website": "https://github.com/alextaujenis/RBD_Motor",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Motor-1.0.3.zip",
      "archiveFileName": "RBD_Motor-1.0.3.zip",
      "size": 7210,
      "checksum": "SHA-256:9be7b6420301890a6185a1b77ddf216cbc0331f51892d86a6a4b0013205104bd"
    },
    {
      "name": "RBD_Motor",
      "version": "1.0.4",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many motors without delay.",
      "paragraph": "Control many motors without delay using commands like on(), off(), timedOn(), and ramp(). Fire custom events when the motor has reached the target speed with onTargetSpeed().",
      "website": "https://github.com/alextaujenis/RBD_Motor",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Motor-1.0.4.zip",
      "archiveFileName": "RBD_Motor-1.0.4.zip",
      "size": 7136,
      "checksum": "SHA-256:e1aa6c7715070603fae700e9cb44ca960d5a2a39c2daa51d85b3e9739cbc7f49"
    },
    {
      "name": "RBD_Motor",
      "version": "1.1.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many motors without delay.",
      "paragraph": "Control many motors without delay using commands like on(), off(), forward(), reverse(), and ramp(). Fire custom events when the motor has reached the target speed with onTargetSpeed(), or when it has changed direction with the onForward() and onReverse() events. Motors can be wired to move in a single direction, or can be driven in both directions with the help of a motor-shield or H bridge and this library.",
      "website": "https://github.com/alextaujenis/RBD_Motor",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Motor-1.1.0.zip",
      "archiveFileName": "RBD_Motor-1.1.0.zip",
      "size": 9424,
      "checksum": "SHA-256:739404231a30ca01ba19565d3e7641e4bb5ab08b937f5eb548f45d2b73adfbe2"
    },
    {
      "name": "RBD_Motor",
      "version": "1.1.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many motors without delay.",
      "paragraph": "Control many motors without delay using commands like on(), off(), forward(), reverse(), and ramp(). Fire custom events when the motor has reached the target speed with onTargetSpeed(), or when it has changed direction with the onForward() and onReverse() events. Motors can be wired to move in a single direction, or can be driven in both directions with the help of a motor-shield or H bridge and this library.",
      "website": "https://github.com/alextaujenis/RBD_Motor",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Motor-1.1.1.zip",
      "archiveFileName": "RBD_Motor-1.1.1.zip",
      "size": 9425,
      "checksum": "SHA-256:384e1252800a54948c7096f30ba6bd5d89c6244499f3050dfafb11443d47ba75"
    },
    {
      "name": "RBD_Motor",
      "version": "2.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many motors without delay.",
      "paragraph": "Control many motors without delay using commands like on(), off(), forward(), reverse(), and ramp(). Fire custom events when the motor has reached the target speed with onTargetSpeed(), or when it has changed direction with the onForward() and onReverse() events. Motors can be wired to move in a single direction, or can be driven in both directions with the help of a motor-shield or H bridge and this library.",
      "website": "https://github.com/alextaujenis/RBD_Motor",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Motor-2.0.0.zip",
      "archiveFileName": "RBD_Motor-2.0.0.zip",
      "size": 9273,
      "checksum": "SHA-256:75957f98b54aa4d95b466493e02fb265d6863eb4f38277ed9bd05a1f775b3f1f"
    },
    {
      "name": "RBD_Motor",
      "version": "2.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many motors without delay.",
      "paragraph": "Control many motors without delay using commands like on(), off(), forward(), reverse(), and ramp(). Fire custom events when the motor has reached the target speed with onTargetSpeed(), or when it has changed direction with the onForward() and onReverse() events. Motors can be wired to move in a single direction, or can be driven in both directions with the help of a motor-shield or H bridge and this library.",
      "website": "https://github.com/alextaujenis/RBD_Motor",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Motor-2.0.1.zip",
      "archiveFileName": "RBD_Motor-2.0.1.zip",
      "size": 9433,
      "checksum": "SHA-256:1e366d2e41b006c8e6467c0e51c2107366e8d2b5913483b12ecb89f0d4995e45"
    },
    {
      "name": "RBD_Motor",
      "version": "2.1.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many motors without delay.",
      "paragraph": "Control many motors without delay using commands like on(), off(), forward(), reverse(), and ramp(). Fire custom events when the motor has reached the target speed with onTargetSpeed(), or when it has changed direction with the onForward() and onReverse() events. Motors can be wired to move in a single direction, or can be driven in both directions with the help of a motor-shield or H bridge and this library.",
      "website": "https://github.com/alextaujenis/RBD_Motor",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Motor-2.1.0.zip",
      "archiveFileName": "RBD_Motor-2.1.0.zip",
      "size": 9692,
      "checksum": "SHA-256:d4a62d35a1925219128742b41fab59168b845d958a7d783b88043f146b251265"
    },
    {
      "name": "RBD_Motor",
      "version": "2.1.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many motors without delay.",
      "paragraph": "Control many motors without delay using commands like on(), off(), forward(), reverse(), and ramp(). Fire custom events when the motor has reached the target speed with onTargetSpeed(), or when it has changed direction with the onForward() and onReverse() events. Motors can be wired to move in a single direction, or can be driven in both directions with the help of a motor-shield or H bridge and this library.",
      "website": "https://github.com/alextaujenis/RBD_Motor",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Motor-2.1.1.zip",
      "archiveFileName": "RBD_Motor-2.1.1.zip",
      "size": 4574,
      "checksum": "SHA-256:2863902c655868e6513ee9de7c79f65b5385af049e69985c43dc8c8f7c10aae4"
    },
    {
      "name": "RBD_Threshold",
      "version": "1.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Set and check numeric quantile scales.",
      "paragraph": "Quickly set and check an arbitrary number of thresholds. Provide an input domain and this library will convert it to a numeric quantile output range. It is different from the Arduino map() function because this library can handle a non-uniform input range.",
      "website": "https://github.com/alextaujenis/RBD_Threshold",
      "category": "Data Processing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Threshold-1.0.0.zip",
      "archiveFileName": "RBD_Threshold-1.0.0.zip",
      "size": 9080,
      "checksum": "SHA-256:fc56cdad2cec86a6c94e04b29996186d25b464e44408f68a641771bff3aade26"
    },
    {
      "name": "RBD_Threshold",
      "version": "1.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Set and check numeric quantile scales.",
      "paragraph": "Set and check numeric quantile scales. Provide an input domain and this library will convert it to a numeric quantile output range. It is different from the Arduino map() function because this library can handle a non-uniform input range.",
      "website": "https://github.com/alextaujenis/RBD_Threshold",
      "category": "Data Processing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Threshold-1.0.1.zip",
      "archiveFileName": "RBD_Threshold-1.0.1.zip",
      "size": 7001,
      "checksum": "SHA-256:e9e6399b8f3fc007531b6b188cff70ccbff431e7590fb508b06af0b9b69777ff"
    },
    {
      "name": "RBD_Threshold",
      "version": "1.0.2",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Set and check numeric quantile scales.",
      "paragraph": "Set and check numeric quantile scales. Provide an input domain and this library will convert it to a numeric quantile output range. It is different from the Arduino map() function because this library can handle a non-uniform input range.",
      "website": "https://github.com/alextaujenis/RBD_Threshold",
      "category": "Data Processing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Threshold-1.0.2.zip",
      "archiveFileName": "RBD_Threshold-1.0.2.zip",
      "size": 6961,
      "checksum": "SHA-256:fefbd8a3be794d3b1bc9ab6fb0bf21c677e78fdfdc47cbc4eb43d94117c1a422"
    },
    {
      "name": "LcdBarGraphX",
      "version": "2.0.0",
      "author": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "maintainer": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "sentence": "Visualizing alanalog values on an LCD with the LiquidCrystal_I2C library.",
      "paragraph": "LcdBarGraph is an Arduino library to draw bar graph on a Liquid Chrystal display. This LcdBarGraphX is a fork of the original project to be driven by the \"F. Malpartida\" version LCD lib (aka. LiquidCrystal_I2C) instead of the bound one.",
      "website": "https://github.com/prampec/LcdBarGraphX",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/prampec/LcdBarGraphX-2.0.0.zip",
      "archiveFileName": "LcdBarGraphX-2.0.0.zip",
      "size": 102216,
      "checksum": "SHA-256:acda4fe55f6bdc2538efadb3cc4b5e4a83b8d76581ea25dd0a8aaf729241970f"
    },
    {
      "name": "LcdBarGraph",
      "version": "2.0.0",
      "author": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "maintainer": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "sentence": "This library is to display analog values in an LCD display.",
      "paragraph": "Using the bouned LiquidChrystal library, bar-graph can be displayed in the screen. See demo: http://youtu.be/noXtsvPRwQk",
      "website": "https://github.com/prampec/LcdBarGraph",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/prampec/LcdBarGraph-2.0.0.zip",
      "archiveFileName": "LcdBarGraph-2.0.0.zip",
      "size": 101094,
      "checksum": "SHA-256:07b096d17ce06288b2c617e2dbe84a759397f2f79c33a3d7dc98ff432ef3559e"
    },
    {
      "name": "SoftTimer",
      "version": "3.0.0",
      "author": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "maintainer": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "sentence": "SoftTimer is a lightweight pseudo multitasking solution for Arduino.",
      "paragraph": "SoftTimer enable a higher level Arduino programing, jet easy to use, and lightweight. You often face with the problem that you need to do multiply tasks in the same time. In SoftTimer manner programmer creates Tasks that runs periodically. This library comes with a collection of handy tools like blinker, pwm, debouncer.",
      "website": "https://github.com/prampec/arduino-softtimer",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/prampec/SoftTimer-3.0.0.zip",
      "archiveFileName": "SoftTimer-3.0.0.zip",
      "size": 46059,
      "checksum": "SHA-256:175af74d2ff773ae9276d01c532c09bd667e61f3e89b59bd30bd77dae2dac4a3"
    },
    {
      "name": "SoftTimer",
      "version": "3.1.0",
      "author": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "maintainer": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "sentence": "SoftTimer is a lightweight pseudo multitasking solution for Arduino.",
      "paragraph": "SoftTimer enable a higher level Arduino programing, jet easy to use, and lightweight. You often face with the problem that you need to do multiply tasks in the same time. In SoftTimer manner programmer creates Tasks that runs periodically. This library comes with a collection of handy tools like blinker, pwm, debouncer.",
      "website": "https://github.com/prampec/arduino-softtimer",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/prampec/SoftTimer-3.1.0.zip",
      "archiveFileName": "SoftTimer-3.1.0.zip",
      "size": 49225,
      "checksum": "SHA-256:64c8050a4ddbbb9bb7da82561d15427789d5f2630c9323c87ed07bd340067d51"
    },
    {
      "name": "SoftTimer",
      "version": "3.1.1",
      "author": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "maintainer": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "sentence": "SoftTimer is a lightweight pseudo multitasking solution for Arduino.",
      "paragraph": "SoftTimer enables higher level Arduino programing, yet easy to use, and lightweight. You are often faced with the problem that you need to do multiple tasks at the same time. In SoftTimer, the programmer creates Tasks that runs periodically. This library comes with a collection of handy tools like blinker, pwm, debouncer.",
      "website": "https://github.com/prampec/arduino-softtimer",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/prampec/SoftTimer-3.1.1.zip",
      "archiveFileName": "SoftTimer-3.1.1.zip",
      "size": 49678,
      "checksum": "SHA-256:113ed74fc6c0d520f4bd637e7219ff2e770b8a744710ccfd32508ff642693e63"
    },
    {
      "name": "RBD_WaterSensor",
      "version": "1.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Measure and calibrate capacitance water sensors.",
      "paragraph": "Measure and calibrate capacitance sensors to detect change in water levels from the outside of a plastic container. The example uses a piece of aluminum foil, but you can attach the wire to anything conductive and calibrate the sensor accordingly.",
      "website": "https://github.com/alextaujenis/RBD_WaterSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_WaterSensor-1.0.0.zip",
      "archiveFileName": "RBD_WaterSensor-1.0.0.zip",
      "size": 11818,
      "checksum": "SHA-256:ffd8365ec0593804e32ed3f1496eeb44838b289ff59e678d5594b9249cf4594b"
    },
    {
      "name": "RBD_WaterSensor",
      "version": "1.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Measure and calibrate capacitance water sensors.",
      "paragraph": "Measure and calibrate capacitance sensors to detect change in water levels from the outside of a plastic container.",
      "website": "https://github.com/alextaujenis/RBD_WaterSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_WaterSensor-1.0.1.zip",
      "archiveFileName": "RBD_WaterSensor-1.0.1.zip",
      "size": 7245,
      "checksum": "SHA-256:4db325b5868beb47a2f6c956c6976e9eab7c95d2be36751f743797489698022f"
    },
    {
      "name": "RBD_WaterSensor",
      "version": "1.0.2",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Measure and calibrate water level sensors.",
      "paragraph": "Measure and calibrate capacitance sensors to detect change in water levels from the outside of a plastic container.",
      "website": "https://github.com/alextaujenis/RBD_WaterSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_WaterSensor-1.0.2.zip",
      "archiveFileName": "RBD_WaterSensor-1.0.2.zip",
      "size": 7235,
      "checksum": "SHA-256:5b58d43580cc23f9cef0903c10a5552a347b86e56ab32f72f1df6913e27d7e1b"
    },
    {
      "name": "RBD_WaterSensor",
      "version": "1.0.3",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Measure and calibrate water level sensors.",
      "paragraph": "Measure and calibrate capacitance sensors to detect change in water levels from the outside of a plastic container.",
      "website": "https://github.com/alextaujenis/RBD_WaterSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_WaterSensor-1.0.3.zip",
      "archiveFileName": "RBD_WaterSensor-1.0.3.zip",
      "size": 7159,
      "checksum": "SHA-256:2c56af6efe7271449b73e5733f6f6e2902fea9b5763bdea0932d36c792046d22"
    },
    {
      "name": "RBD_WaterSensor",
      "version": "2.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Measure and calibrate water level sensors.",
      "paragraph": "Measure and calibrate capacitance sensors to detect change in water levels from the outside of a plastic container.",
      "website": "https://github.com/alextaujenis/RBD_WaterSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_WaterSensor-2.0.0.zip",
      "archiveFileName": "RBD_WaterSensor-2.0.0.zip",
      "size": 7307,
      "checksum": "SHA-256:77f470933df351cc35510fc3e21352965134b167c2536c449ace4f48821c0d5f"
    },
    {
      "name": "TM1650",
      "version": "1.0.2",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "7 segment display driver for JY-MCU module based on TM1650 chip.",
      "paragraph": "Allows control of JY-MCU 7 segment display modules based on TM1650 chip.",
      "website": "https://github.com/arkhipenko/TM1650.git",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arkhipenko/TM1650-1.0.2.zip",
      "archiveFileName": "TM1650-1.0.2.zip",
      "size": 5984,
      "checksum": "SHA-256:fd4d5278c7c4097cc6b099f1833c4df73bfa17a09a24c5519b7bb64195098003"
    },
    {
      "name": "TM1650",
      "version": "1.1.0",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "7 segment display driver for JY-MCU module based on TM1650 chip.",
      "paragraph": "Allows control of JY-MCU 7 segment display modules based on TM1650 chip.",
      "website": "https://github.com/arkhipenko/TM1650.git",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arkhipenko/TM1650-1.1.0.zip",
      "archiveFileName": "TM1650-1.1.0.zip",
      "size": 5325,
      "checksum": "SHA-256:8e53e50d38251e54ec8752b347cbdd849fa480f7fb2818fc2f1b8442538c7853"
    },
    {
      "name": "extEEPROM",
      "version": "3.3.1",
      "author": "Jack Christensen",
      "maintainer": "Paolo Paolucci",
      "sentence": "Arduino library to support external I2C EEPROMs.",
      "paragraph": "This library will work with most I2C serial EEPROM chips between 2k bits and 2048k bits (2M bits) in size. Multiple EEPROMs on the bus are supported as a single address space.",
      "website": "https://github.com/PaoloP74/extEEPROM",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaoloP74/extEEPROM-3.3.1.zip",
      "archiveFileName": "extEEPROM-3.3.1.zip",
      "size": 11496,
      "checksum": "SHA-256:ab79b47134485242c0d4e11f6da8bd97453b7a9580eec4d056e490ecf2168e38"
    },
    {
      "name": "extEEPROM",
      "version": "3.1.0",
      "author": "Jack Christensen",
      "maintainer": "Paolo Paolucci",
      "sentence": "Arduino library to support external I2C EEPROMs.",
      "paragraph": "This library will work with most I2C serial EEPROM chips between 2k bits and 2048k bits (2M bits) in size. Multiple EEPROMs on the bus are supported as a single address space.",
      "website": "https://github.com/PaoloP74/extEEPROM",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaoloP74/extEEPROM-3.1.0.zip",
      "archiveFileName": "extEEPROM-3.1.0.zip",
      "size": 11316,
      "checksum": "SHA-256:880f0b91b4f5331e78816645fb135e3a52dca618e48d8dc70fd0f3fa8f7b4d0a"
    },
    {
      "name": "extEEPROM",
      "version": "3.2.0",
      "author": "Jack Christensen",
      "maintainer": "Paolo Paolucci",
      "sentence": "Arduino library to support external I2C EEPROMs.",
      "paragraph": "This library will work with most I2C serial EEPROM chips between 2k bits and 2048k bits (2M bits) in size. Multiple EEPROMs on the bus are supported as a single address space.",
      "website": "https://github.com/PaoloP74/extEEPROM",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaoloP74/extEEPROM-3.2.0.zip",
      "archiveFileName": "extEEPROM-3.2.0.zip",
      "size": 11475,
      "checksum": "SHA-256:f1ee576dcf0fa008823b559464918529f26f630edfb128ffe5971e11554ae5e0"
    },
    {
      "name": "extEEPROM",
      "version": "3.3.0",
      "author": "Jack Christensen",
      "maintainer": "Paolo Paolucci",
      "sentence": "Arduino library to support external I2C EEPROMs.",
      "paragraph": "This library will work with most I2C serial EEPROM chips between 2k bits and 2048k bits (2M bits) in size. Multiple EEPROMs on the bus are supported as a single address space.",
      "website": "https://github.com/PaoloP74/extEEPROM",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaoloP74/extEEPROM-3.3.0.zip",
      "archiveFileName": "extEEPROM-3.3.0.zip",
      "size": 11488,
      "checksum": "SHA-256:ebffc5c11c7477c5c04644242d0bafc6dbb0f49328a5a99c295e7b55c8c08862"
    },
    {
      "name": "extEEPROM",
      "version": "3.3.2",
      "author": "Jack Christensen",
      "maintainer": "Paolo Paolucci",
      "sentence": "Arduino library to support external I2C EEPROMs.",
      "paragraph": "This library will work with most I2C serial EEPROM chips between 2k bits and 2048k bits (2M bits) in size. Multiple EEPROMs on the bus are supported as a single address space.",
      "website": "https://github.com/PaoloP74/extEEPROM",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaoloP74/extEEPROM-3.3.2.zip",
      "archiveFileName": "extEEPROM-3.3.2.zip",
      "size": 11495,
      "checksum": "SHA-256:aeda329dea7b3545ab7fdb76fa4601fcfdc8cfc9213392238e914158fc7276a0"
    },
    {
      "name": "Json Streaming Parser",
      "version": "1.0.0",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A very memory efficient library to parse (large) JSON objects on small devices",
      "paragraph": "A very memory efficient library to parse (large) JSON objects on small devices",
      "website": "https://github.com/squix78/json-streaming-parser",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/Json_Streaming_Parser-1.0.0.zip",
      "archiveFileName": "Json_Streaming_Parser-1.0.0.zip",
      "size": 11276,
      "checksum": "SHA-256:ba1595e35a5267fd765687cd214db57a8eadebe5b4ae49f3a5e9198479982888"
    },
    {
      "name": "Json Streaming Parser",
      "version": "1.0.2",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A very memory efficient library to parse (large) JSON objects on small devices",
      "paragraph": "A very memory efficient library to parse (large) JSON objects on small devices",
      "website": "https://github.com/squix78/json-streaming-parser",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/Json_Streaming_Parser-1.0.2.zip",
      "archiveFileName": "Json_Streaming_Parser-1.0.2.zip",
      "size": 11286,
      "checksum": "SHA-256:5b95abf86f494e3e91d71373d283132c6b70a8a48752e29c9d997a3dcb5dd8d0"
    },
    {
      "name": "Json Streaming Parser",
      "version": "1.0.3",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A very memory efficient library to parse (large) JSON objects on small devices",
      "paragraph": "A very memory efficient library to parse (large) JSON objects on small devices",
      "website": "https://github.com/squix78/json-streaming-parser.git",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/Json_Streaming_Parser-1.0.3.zip",
      "archiveFileName": "Json_Streaming_Parser-1.0.3.zip",
      "size": 11953,
      "checksum": "SHA-256:d24519b0b1df1ce734ca8bf741c2864520df7cd9b2dc207c6805a5206435cabb"
    },
    {
      "name": "Json Streaming Parser",
      "version": "1.0.4",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A very memory efficient library to parse (large) JSON objects on small devices",
      "paragraph": "A very memory efficient library to parse (large) JSON objects on small devices",
      "website": "https://github.com/squix78/json-streaming-parser.git",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/Json_Streaming_Parser-1.0.4.zip",
      "archiveFileName": "Json_Streaming_Parser-1.0.4.zip",
      "size": 11966,
      "checksum": "SHA-256:e787498e592f9371310cc73e2a0657de5042ce9c0ecc4a23293a8301d9f31a45"
    },
    {
      "name": "EEWrap",
      "version": "1.0.0",
      "author": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "A convenient library allowing one to use the EEPROM just like RAM.",
      "website": "https://github.com/Chris--A/EEWrap#eewrap-library-for-avr-and-arduino-boards",
      "category": "Data Storage",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Chris--A/EEWrap-1.0.0.zip",
      "archiveFileName": "EEWrap-1.0.0.zip",
      "size": 5788,
      "checksum": "SHA-256:4b49e0084d508c0bf982bb1916f046f16610bc3dfd452690699325b81dd905ea"
    },
    {
      "name": "RBD_Button",
      "version": "1.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Read and debounce buttons and switches.",
      "paragraph": "Read and debounce buttons and switches without delay. React to button events with the onPressed() and onReleased() commands. Control debounce time with setDebounceTimeout(). This library sets each button up as input_pullup by default, allowing you to wire the button to any digital input and ground. Input_pullup can be disabled by passing an optional flag to the constructor() and wiring the button with your own resistor.",
      "website": "https://github.com/alextaujenis/RBD_Button",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Button-1.0.0.zip",
      "archiveFileName": "RBD_Button-1.0.0.zip",
      "size": 8024,
      "checksum": "SHA-256:4b6d52689d90bcd70d4dc9481703d032102b76301004593cbe84ea6cb1b2cf90"
    },
    {
      "name": "RBD_Button",
      "version": "1.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Read and debounce buttons and switches.",
      "paragraph": "Read and debounce buttons and switches without delay or interrupts. React to button events with the onPressed() and onReleased() commands. Control debounce time with setDebounceTimeout(). This library sets each button up as input_pullup by default, allowing you to wire the button to any digital input and ground.",
      "website": "https://github.com/alextaujenis/RBD_Button",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Button-1.0.1.zip",
      "archiveFileName": "RBD_Button-1.0.1.zip",
      "size": 7843,
      "checksum": "SHA-256:8a7908d58f4af79a2e3271811b19602f3b10bb6be271cb286028fd5d8a8537ee"
    },
    {
      "name": "RBD_Button",
      "version": "2.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Read and debounce buttons and switches.",
      "paragraph": "Read and debounce buttons and switches without delay or interrupts. React to button events with the onPressed() and onReleased() commands. Control debounce time with setDebounceTimeout(). This library sets each button up as input_pullup by default, allowing you to wire the button to any digital input and ground.",
      "website": "https://github.com/alextaujenis/RBD_Button",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Button-2.0.0.zip",
      "archiveFileName": "RBD_Button-2.0.0.zip",
      "size": 3853,
      "checksum": "SHA-256:2d456a6c9ba8358bfa5b25e0c45b1a08536781ad957de2ea75f926ce0ca31c41"
    },
    {
      "name": "RBD_Button",
      "version": "2.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Read and debounce buttons and switches.",
      "paragraph": "Read and debounce buttons and switches without delay or interrupts. React to button events with the onPressed() and onReleased() commands. Control debounce time with setDebounceTimeout(). This library sets each button up as input_pullup by default, allowing you to wire the button to any digital input and ground.",
      "website": "https://github.com/alextaujenis/RBD_Button",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Button-2.0.1.zip",
      "archiveFileName": "RBD_Button-2.0.1.zip",
      "size": 3843,
      "checksum": "SHA-256:5cbe838acb1d0f504e979b0b687a67e98da79069cb43b29b352dfedd1a1778f7"
    },
    {
      "name": "RBD_Button",
      "version": "2.0.2",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Read and debounce buttons and switches.",
      "paragraph": "Read and debounce buttons and switches without delay or interrupts. React to button events with the onPressed() and onReleased() commands. Control debounce time with setDebounceTimeout(). This library sets each button up as input_pullup by default, allowing you to wire the button to any digital input and ground.",
      "website": "https://github.com/alextaujenis/RBD_Button",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Button-2.0.2.zip",
      "archiveFileName": "RBD_Button-2.0.2.zip",
      "size": 5406,
      "checksum": "SHA-256:1928f6bf88b93c65a80ee2f53f8e6fe79db3da698ec9d0d6c7944069293c5a81"
    },
    {
      "name": "RBD_Button",
      "version": "2.1.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Read and debounce buttons and switches.",
      "paragraph": "Read and debounce buttons and switches without delay or interrupts. React to button events with the onPressed() and onReleased() commands. Control debounce time with setDebounceTimeout(). This library sets each button up as input_pullup by default, allowing you to wire the button to any digital input and ground.",
      "website": "https://github.com/alextaujenis/RBD_Button",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Button-2.1.0.zip",
      "archiveFileName": "RBD_Button-2.1.0.zip",
      "size": 5387,
      "checksum": "SHA-256:f422d0ceb8241a31865a950e042d589cf633ad520ad3807209c0e7e6103bace6"
    },
    {
      "name": "RBD_Button",
      "version": "2.1.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Read and debounce buttons and switches.",
      "paragraph": "Read and debounce buttons and switches without delay or interrupts. React to button events with the onPressed() and onReleased() commands. Control debounce time with setDebounceTimeout(). This library sets each button up as input_pullup by default, allowing you to wire the button to any digital input and ground.",
      "website": "https://github.com/alextaujenis/RBD_Button",
      "category": "Signal Input/Output",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Button-2.1.1.zip",
      "archiveFileName": "RBD_Button-2.1.1.zip",
      "size": 5408,
      "checksum": "SHA-256:9fc18beb6be52a3ed259cd75e9d58846041750d32d1f7e941d5d78ce6c26bc67"
    },
    {
      "name": "PGMWrap",
      "version": "1.0.0",
      "author": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "A convenient library allowing structures and variables stored in PROGMEM to be read directly.",
      "paragraph": "This allevieates the need to use helpers like pgm_read_byte() to access data.",
      "website": "https://github.com/Chris--A/PGMWrap",
      "category": "Data Storage",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Chris--A/PGMWrap-1.0.0.zip",
      "archiveFileName": "PGMWrap-1.0.0.zip",
      "size": 2772,
      "checksum": "SHA-256:edf43fbead849b11abc8a7736e8673855c7705b4d85b1cceb30bd3e2acda20a6"
    },
    {
      "name": "SmartMatrix3",
      "version": "3.0.0",
      "author": "Louis Beaudoin \u003clouis@pixelmatix.com\u003e",
      "maintainer": "Louis Beaudoin \u003clouis@pixelmatix.com\u003e",
      "sentence": "Drive multiplexed RGB matrix panels from your Teensy 3.1",
      "website": "http://docs.pixelmatix.com/SmartMatrix",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pixelmatix/SmartMatrix3-3.0.0.zip",
      "archiveFileName": "SmartMatrix3-3.0.0.zip",
      "size": 2031228,
      "checksum": "SHA-256:307c2c1e90e22559a76dc71d3627cf867fecacbd49249569b5db2c1c14679a13"
    },
    {
      "name": "SmartMatrix3",
      "version": "3.0.1",
      "author": "Louis Beaudoin \u003clouis@pixelmatix.com\u003e",
      "maintainer": "Louis Beaudoin \u003clouis@pixelmatix.com\u003e",
      "sentence": "Drive multiplexed RGB matrix panels from your Teensy 3.2/3.1",
      "website": "http://docs.pixelmatix.com/SmartMatrix",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pixelmatix/SmartMatrix3-3.0.1.zip",
      "archiveFileName": "SmartMatrix3-3.0.1.zip",
      "size": 2196162,
      "checksum": "SHA-256:dc7b74c1a9f81a4edbe6e241adea6095c6ade763150b055f467567782675e284"
    },
    {
      "name": "SmartMatrix3",
      "version": "3.0.2",
      "author": "Louis Beaudoin \u003clouis@pixelmatix.com\u003e",
      "maintainer": "Louis Beaudoin \u003clouis@pixelmatix.com\u003e",
      "sentence": "Drive multiplexed RGB matrix panels from your Teensy 3.2 or 3.1",
      "website": "http://docs.pixelmatix.com/SmartMatrix",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pixelmatix/SmartMatrix3-3.0.2.zip",
      "archiveFileName": "SmartMatrix3-3.0.2.zip",
      "size": 2196184,
      "checksum": "SHA-256:6dea04a6dd02e268304bfa067642db0fc8cc5c2741d6b0dbd6fda99400bb1815"
    },
    {
      "name": "Modulo",
      "version": "0.10.0",
      "author": "Erin Tomson \u003cerin@modulo.co\u003e",
      "maintainer": "Erin Tomson \u003cerin@modulo.co\u003e",
      "sentence": "A library that provides support for Modulo hardware.",
      "website": "http://modulo.co/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/modulolabs/Modulo-0.10.0.zip",
      "archiveFileName": "Modulo-0.10.0.zip",
      "size": 72857,
      "checksum": "SHA-256:7591f6364eda0dc1d12ac67be7510bcc5dfccc6ffc0fd624dc107c637ac5eeb4"
    },
    {
      "name": "Modulo",
      "version": "0.5.0",
      "author": "Erin Tomson \u003cerin@modulo.co\u003e",
      "maintainer": "Erin Tomson \u003cerin@modulo.co\u003e",
      "sentence": "A library that provides support for Modulo hardware.",
      "website": "http://modulo.co/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/modulolabs/Modulo-0.5.0.zip",
      "archiveFileName": "Modulo-0.5.0.zip",
      "size": 82596,
      "checksum": "SHA-256:4c4525833158c7463d9070c10b43e02970f0c3255a194bc909d369012438d59b"
    },
    {
      "name": "Modulo",
      "version": "0.6.0",
      "author": "Erin Tomson \u003cerin@modulo.co\u003e",
      "maintainer": "Erin Tomson \u003cerin@modulo.co\u003e",
      "sentence": "A library that provides support for Modulo hardware.",
      "website": "http://modulo.co/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/modulolabs/Modulo-0.6.0.zip",
      "archiveFileName": "Modulo-0.6.0.zip",
      "size": 90691,
      "checksum": "SHA-256:cc7dbcef9c7d35eb677c4bb9e18afa97f70334a7918f3511ecc9a20598015006"
    },
    {
      "name": "Modulo",
      "version": "0.7.0",
      "author": "Erin Tomson \u003cerin@modulo.co\u003e",
      "maintainer": "Erin Tomson \u003cerin@modulo.co\u003e",
      "sentence": "A library that provides support for Modulo hardware.",
      "website": "http://modulo.co/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/modulolabs/Modulo-0.7.0.zip",
      "archiveFileName": "Modulo-0.7.0.zip",
      "size": 73191,
      "checksum": "SHA-256:f3b1905f1631b471a1ce303f6e3f8174ce1f7a94448f86a71bbdca5f2b494d60"
    },
    {
      "name": "Modulo",
      "version": "0.9.0",
      "author": "Erin Tomson \u003cerin@modulo.co\u003e",
      "maintainer": "Erin Tomson \u003cerin@modulo.co\u003e",
      "sentence": "A library that provides support for Modulo hardware.",
      "website": "http://modulo.co/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/modulolabs/Modulo-0.9.0.zip",
      "archiveFileName": "Modulo-0.9.0.zip",
      "size": 73191,
      "checksum": "SHA-256:edae8c11cbc48ba922f6134597386b7997a1f241dcde76588ee151680fdca784"
    },
    {
      "name": "Modulo",
      "version": "1.0.0",
      "author": "Erin Tomson \u003cerin@modulo.co\u003e",
      "maintainer": "Erin Tomson \u003cerin@modulo.co\u003e",
      "sentence": "A library that provides support for Modulo hardware.",
      "website": "http://modulo.co/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/modulolabs/Modulo-1.0.0.zip",
      "archiveFileName": "Modulo-1.0.0.zip",
      "size": 56917,
      "checksum": "SHA-256:070fecf7b721f25a45b392e993826b338a5178a6dd29b5c92b67446ff1e06469"
    },
    {
      "name": "RBD_Servo",
      "version": "1.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many servos without delay.",
      "paragraph": "Control many servos without delay or interrupts while applying rotation adjustments with PWM/PPM. Quickly calibrate each servo and make real-time adjustments to the rotation with moveToDegrees(). Connect as many servos as the number of digital pins available on your Arduino. This library is very fast and has a small, lightweight code footprint.",
      "website": "https://github.com/alextaujenis/RBD_Servo",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Servo-1.0.0.zip",
      "archiveFileName": "RBD_Servo-1.0.0.zip",
      "size": 7774,
      "checksum": "SHA-256:172b8d789eb0b589971ee5c7eacb028c84b79be8f727eb3ba0df4fc67889beab"
    },
    {
      "name": "RBD_Servo",
      "version": "1.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many servos without delay.",
      "paragraph": "Control many servos without delay or interrupts while applying rotation adjustments with PWM/PPM. Quickly calibrate each servo and make real-time adjustments to the rotation with moveToDegrees(). Connect as many servos as the number of digital pins available on your Arduino. This library is very fast and has a small, lightweight code footprint.",
      "website": "https://github.com/alextaujenis/RBD_Servo",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_Servo-1.0.1.zip",
      "archiveFileName": "RBD_Servo-1.0.1.zip",
      "size": 7783,
      "checksum": "SHA-256:bf83bb77c0cec8640b3322bd20c2d2f21f2488d81398cc3bc31ce0f288d7fb83"
    },
    {
      "name": "HardwareSerial_RS485",
      "version": "2.0.0",
      "author": "Michael Jonker",
      "maintainer": "Michael Jonker \u003cmichael.j.jonker@gmail.com\u003e",
      "sentence": "Concurrent multi-drop (i.e. multi-master, multi-slave) RS485 communication library",
      "paragraph": "This library supports an RS485 transceiver connected to the USART (Tx/Rx) pins of the Arduino in a half-duplex, concurrent multi-drop environment. It provides message addressing and filtering as well as collision detection and avoidance.",
      "website": "https://github.com/MichaelJonker/Arduino_HardwareSerial_RS485/tree/master/libraries/HardwareSerial_RS485",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MichaelJonker/HardwareSerial_RS485-2.0.0.zip",
      "archiveFileName": "HardwareSerial_RS485-2.0.0.zip",
      "size": 867713,
      "checksum": "SHA-256:facb5ca73292d8db7529e9a7cf4180c273cc3f00e38ea04d5b5b7b2ff79a7ab7"
    },
    {
      "name": "HardwareSerial_RS485",
      "version": "2.0.1",
      "author": "Michael Jonker",
      "maintainer": "Michael Jonker \u003cmichael.j.jonker@gmail.com\u003e",
      "sentence": "Concurrent multi-drop (i.e. multi-master, multi-slave) RS485 communication library",
      "paragraph": "This library supports an RS485 transceiver connected to the USART (Tx/Rx) pins of the Arduino in a half-duplex, concurrent multi-drop environment. It provides message addressing and filtering as well as collision detection and avoidance.",
      "website": "https://github.com/MichaelJonker/HardwareSerialRS485",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MichaelJonker/HardwareSerial_RS485-2.0.1.zip",
      "archiveFileName": "HardwareSerial_RS485-2.0.1.zip",
      "size": 867698,
      "checksum": "SHA-256:4e395162ea7cc1312c5f4b3c884a52aa2c9126114b0b9972b7c2628e440740d4"
    },
    {
      "name": "HardwareSerial_RS485",
      "version": "2.1.0",
      "author": "Michael Jonker",
      "maintainer": "Michael Jonker \u003cmichael.j.jonker@gmail.com\u003e",
      "sentence": "Concurrent multi-drop (i.e. multi-master, multi-slave) RS485 communication library",
      "paragraph": "This library supports an RS485 transceiver connected to the USART (Tx/Rx) pins of the Arduino in a half-duplex, concurrent multi-drop environment. It provides message addressing and filtering as well as collision detection and avoidance.",
      "website": "https://github.com/MichaelJonker/HardwareSerialRS485",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MichaelJonker/HardwareSerial_RS485-2.1.0.zip",
      "archiveFileName": "HardwareSerial_RS485-2.1.0.zip",
      "size": 123416,
      "checksum": "SHA-256:bd1949e1d571d10641aeda921183ab0cdbaa6f74df515e68e0c2651af6f075e0"
    },
    {
      "name": "HardwareSerial_RS485",
      "version": "2.2.0",
      "author": "Michael Jonker",
      "maintainer": "Michael Jonker \u003cmichael.j.jonker@gmail.com\u003e",
      "sentence": "Concurrent multi-drop (i.e. multi-master, multi-slave) RS485 communication library",
      "paragraph": "This library supports an RS485 transceiver connected to the USART (Tx/Rx) pins of the Arduino in a half-duplex, concurrent multi-drop environment. It provides message addressing and filtering as well as collision detection and avoidance.",
      "website": "https://github.com/MichaelJonker/HardwareSerialRS485/wiki",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MichaelJonker/HardwareSerial_RS485-2.2.0.zip",
      "archiveFileName": "HardwareSerial_RS485-2.2.0.zip",
      "size": 125975,
      "checksum": "SHA-256:65787735d5ef1aca66a4fa5d15c24ebfa5e8d6c26e611c76dcb0e3c4186f8573"
    },
    {
      "name": "HID-Project",
      "version": "2.4.1",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "Extended HID Functions for Arduino",
      "paragraph": "Includes BootKeyboard/Mouse, Consumer, System, Gamepad, RawHID and more features. Also compatible with Arduino Uno/Mega via HoodLoader2.",
      "website": "https://github.com/NicoHood/HID",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NicoHood/HID_Project-2.4.1.zip",
      "archiveFileName": "HID_Project-2.4.1.zip",
      "size": 276692,
      "checksum": "SHA-256:55261598145b2a13b23d83bd9268af4b797674d29f1103b0baef36202431360e"
    },
    {
      "name": "HID-Project",
      "version": "2.4.2",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "Extended HID Functions for Arduino",
      "paragraph": "Includes BootKeyboard/Mouse, Consumer, System, Gamepad, RawHID and more features. Also compatible with Arduino Uno/Mega via HoodLoader2.",
      "website": "https://github.com/NicoHood/HID",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NicoHood/HID_Project-2.4.2.zip",
      "archiveFileName": "HID_Project-2.4.2.zip",
      "size": 276736,
      "checksum": "SHA-256:ef22ad2474637333f872a76571958d9c5213e58d99dd1e2e067f89d3da7ded98"
    },
    {
      "name": "HID-Project",
      "version": "2.4.3",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "Extended HID Functions for Arduino",
      "paragraph": "Includes BootKeyboard/Mouse, Consumer, System, Gamepad, RawHID and more features. Also compatible with Arduino Uno/Mega via HoodLoader2.",
      "website": "https://github.com/NicoHood/HID",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NicoHood/HID_Project-2.4.3.zip",
      "archiveFileName": "HID_Project-2.4.3.zip",
      "size": 276755,
      "checksum": "SHA-256:6c99a15568267b9ea45c81c4462a0174156f3a1b16b1d8dd04936729c1330f8f"
    },
    {
      "name": "HID-Project",
      "version": "2.4.4",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "Extended HID Functions for Arduino",
      "paragraph": "Includes BootKeyboard/Mouse, Consumer, System, Gamepad, RawHID and more features. Also compatible with Arduino Uno/Mega via HoodLoader2.",
      "website": "https://github.com/NicoHood/HID",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NicoHood/HID_Project-2.4.4.zip",
      "archiveFileName": "HID_Project-2.4.4.zip",
      "size": 276782,
      "checksum": "SHA-256:e4e6d1aa27764c68c2757d7d7d708a9c82d520006ecce414dd6b0c8d0ef357c2"
    },
    {
      "name": "IRremote",
      "version": "1.0.0",
      "author": "shirriff",
      "maintainer": "shirriff",
      "sentence": "Send and receive infrared signals with multiple protocols",
      "paragraph": "Send and receive infrared signals with multiple protocols",
      "website": "https://github.com/shirriff/Arduino-IRremote.git",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/z3t0/IRremote-1.0.0.zip",
      "archiveFileName": "IRremote-1.0.0.zip",
      "size": 59369,
      "checksum": "SHA-256:23d4d10c06b8e47232e9ba182bee42162918e97bfb9990874a1069e67031a181"
    },
    {
      "name": "IRremote",
      "version": "2.0.1",
      "author": "shirriff",
      "maintainer": "shirriff",
      "sentence": "Send and receive infrared signals with multiple protocols",
      "paragraph": "Send and receive infrared signals with multiple protocols",
      "website": "https://github.com/shirriff/Arduino-IRremote.git",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/z3t0/IRremote-2.0.1.zip",
      "archiveFileName": "IRremote-2.0.1.zip",
      "size": 69130,
      "checksum": "SHA-256:e0f2f91a7da95f62772be1c9f9031a816acd7ceffab8915459c0e647a91cab2b"
    },
    {
      "name": "Etherkit Si5351",
      "version": "1.0.0",
      "author": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "maintainer": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "sentence": "A full-featured library for the Si5351 series of clock generator ICs from Silicon Labs",
      "paragraph": "It will allow you to control all features of the Si5351, without depending on the proprietary ClockBuilder software from Silicon Labs.",
      "website": "https://github.com/etherkit/Si5351Arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/etherkit/Etherkit_Si5351-1.0.0.zip",
      "archiveFileName": "Etherkit_Si5351-1.0.0.zip",
      "size": 35434,
      "checksum": "SHA-256:b1273efa2e4b494f7ec34bc6055f849415c5f0280a7404138f30ea8edd05f45a"
    },
    {
      "name": "Etherkit Si5351",
      "version": "1.1.0",
      "author": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "maintainer": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "sentence": "A full-featured library for the Si5351 series of clock generator ICs from Silicon Labs",
      "paragraph": "This library will allow you to control all features of the Si5351, without depending on the proprietary ClockBuilder software from Silicon Labs.",
      "website": "https://github.com/etherkit/Si5351Arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/etherkit/Etherkit_Si5351-1.1.0.zip",
      "archiveFileName": "Etherkit_Si5351-1.1.0.zip",
      "size": 36051,
      "checksum": "SHA-256:b8b10fcb909cfae1c661b34c8025acb7c6a72ef4865d7a7c3d945790eb31cba8"
    },
    {
      "name": "Etherkit Si5351",
      "version": "1.1.1",
      "author": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "maintainer": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "sentence": "A full-featured library for the Si5351 series of clock generator ICs from Silicon Labs",
      "paragraph": "This library will allow you to control all features of the Si5351, without depending on the proprietary ClockBuilder software from Silicon Labs.",
      "website": "https://github.com/etherkit/Si5351Arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/etherkit/Etherkit_Si5351-1.1.1.zip",
      "archiveFileName": "Etherkit_Si5351-1.1.1.zip",
      "size": 36367,
      "checksum": "SHA-256:85fe60793242978cea9f82fca49d3f6b489811914d8f5124b153acb1772bade3"
    },
    {
      "name": "Etherkit Si5351",
      "version": "1.1.2",
      "author": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "maintainer": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "sentence": "A full-featured library for the Si5351 series of clock generator ICs from Silicon Labs",
      "paragraph": "This library will allow you to control all features of the Si5351, without depending on the proprietary ClockBuilder software from Silicon Labs.",
      "website": "https://github.com/etherkit/Si5351Arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/etherkit/Etherkit_Si5351-1.1.2.zip",
      "archiveFileName": "Etherkit_Si5351-1.1.2.zip",
      "size": 36489,
      "checksum": "SHA-256:9f2d864e4dcbf48d4cd125a0ada49a2318fea145ef3be8e0637c229f3b4fb6d0"
    },
    {
      "name": "Etherkit Si5351",
      "version": "2.0.0",
      "author": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "maintainer": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "sentence": "A full-featured library for the Si5351 series of clock generator ICs from Silicon Labs",
      "paragraph": "This library will allow you to control nearly all features of the Si5351, without depending on the proprietary ClockBuilder software from Silicon Labs.",
      "website": "https://github.com/etherkit/Si5351Arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/etherkit/Etherkit_Si5351-2.0.0.zip",
      "archiveFileName": "Etherkit_Si5351-2.0.0.zip",
      "size": 47066,
      "checksum": "SHA-256:f52b443c10578be54f21673f1fa7dcb4d46cd6588215a2403190748fa47e87b3"
    },
    {
      "name": "Etherkit Si5351",
      "version": "2.0.1",
      "author": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "maintainer": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "sentence": "A full-featured library for the Si5351 series of clock generator ICs from Silicon Labs",
      "paragraph": "This library will allow you to control nearly all features of the Si5351, without depending on the proprietary ClockBuilder software from Silicon Labs.",
      "website": "https://github.com/etherkit/Si5351Arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/etherkit/Etherkit_Si5351-2.0.1.zip",
      "archiveFileName": "Etherkit_Si5351-2.0.1.zip",
      "size": 47151,
      "checksum": "SHA-256:a34b97a9bba0674bc8a6c97012ef6527e19cf263018862f0cb11819805568ead"
    },
    {
      "name": "Etherkit Si5351",
      "version": "2.0.2",
      "author": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "maintainer": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "sentence": "A full-featured library for the Si5351 series of clock generator ICs from Silicon Labs",
      "paragraph": "This library will allow you to control nearly all features of the Si5351, without depending on the proprietary ClockBuilder software from Silicon Labs.",
      "website": "https://github.com/etherkit/Si5351Arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/etherkit/Etherkit_Si5351-2.0.2.zip",
      "archiveFileName": "Etherkit_Si5351-2.0.2.zip",
      "size": 47189,
      "checksum": "SHA-256:1710c7d735fd125efd57cf8b6e21a02e0a8344727f4037ab6c348af3a26ab239"
    },
    {
      "name": "Etherkit Si5351",
      "version": "2.0.3",
      "author": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "maintainer": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "sentence": "A full-featured library for the Si5351 series of clock generator ICs from Silicon Labs",
      "paragraph": "This library will allow you to control nearly all features of the Si5351, without depending on the proprietary ClockBuilder software from Silicon Labs.",
      "website": "https://github.com/etherkit/Si5351Arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/etherkit/Etherkit_Si5351-2.0.3.zip",
      "archiveFileName": "Etherkit_Si5351-2.0.3.zip",
      "size": 47232,
      "checksum": "SHA-256:283d927c449a2f0a558070dd805d7d6579985a5a153abbd7215a0d8b76e04ca9"
    },
    {
      "name": "Etherkit Si5351",
      "version": "2.0.4",
      "author": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "maintainer": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "sentence": "A full-featured library for the Si5351 series of clock generator ICs from Silicon Labs",
      "paragraph": "This library will allow you to control nearly all features of the Si5351, without depending on the proprietary ClockBuilder software from Silicon Labs.",
      "website": "https://github.com/etherkit/Si5351Arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/etherkit/Etherkit_Si5351-2.0.4.zip",
      "archiveFileName": "Etherkit_Si5351-2.0.4.zip",
      "size": 47261,
      "checksum": "SHA-256:ca979989d1862d9c275726f3101855b4ad99a7e0b7e450be23380bde9c399280"
    },
    {
      "name": "I2CSoilMoistureSensor",
      "version": "1.0.0",
      "author": "Ingo Fischer \u003cingo@fischer-ka.de\u003e",
      "maintainer": "Ingo Fischer \u003cingo@fischer-ka.de\u003e",
      "sentence": "Provide access to all functions of the I2C Soil Moisture Sensor from Catnip Electronics.",
      "website": "https://github.com/Apollon77/I2CSoilMoistureSensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Apollon77/I2CSoilMoistureSensor-1.0.0.zip",
      "archiveFileName": "I2CSoilMoistureSensor-1.0.0.zip",
      "size": 7381,
      "checksum": "SHA-256:dfd32a18a0279c328641de7dd9fa9d60e2a06024da09b29fa3e655c83b3f3a43"
    },
    {
      "name": "I2CSoilMoistureSensor",
      "version": "1.1.0",
      "author": "Ingo Fischer \u003cingo@fischer-ka.de\u003e",
      "maintainer": "Ingo Fischer \u003cingo@fischer-ka.de\u003e",
      "sentence": "Provide access to all functions of the I2C Soil Moisture Sensor from Catnip Electronics.",
      "website": "https://github.com/Apollon77/I2CSoilMoistureSensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Apollon77/I2CSoilMoistureSensor-1.1.0.zip",
      "archiveFileName": "I2CSoilMoistureSensor-1.1.0.zip",
      "size": 8582,
      "checksum": "SHA-256:03d99a57154b444311e17411fb6152b1d3000f12d8eccf371a00e2fbbfd07e67"
    },
    {
      "name": "I2CSoilMoistureSensor",
      "version": "1.1.1",
      "author": "Ingo Fischer \u003cingo@fischer-ka.de\u003e",
      "maintainer": "Ingo Fischer \u003cingo@fischer-ka.de\u003e",
      "sentence": "Provide access to all functions of the I2C Soil Moisture Sensor from Catnip Electronics.",
      "website": "https://github.com/Apollon77/I2CSoilMoistureSensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Apollon77/I2CSoilMoistureSensor-1.1.1.zip",
      "archiveFileName": "I2CSoilMoistureSensor-1.1.1.zip",
      "size": 8578,
      "checksum": "SHA-256:2d78ac3209fdff89e36db6cdd7042918c9196dc084f2e53f429b2064f7f4cf41"
    },
    {
      "name": "I2CSoilMoistureSensor",
      "version": "1.1.2",
      "author": "Ingo Fischer \u003cingo@fischer-ka.de\u003e",
      "maintainer": "Ingo Fischer \u003cingo@fischer-ka.de\u003e",
      "sentence": "Provide access to all functions of the I2C Soil Moisture Sensor from Catnip Electronics.",
      "website": "https://github.com/Apollon77/I2CSoilMoistureSensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Apollon77/I2CSoilMoistureSensor-1.1.2.zip",
      "archiveFileName": "I2CSoilMoistureSensor-1.1.2.zip",
      "size": 8670,
      "checksum": "SHA-256:f683eb16317aef6c8f7250b017bcb8be0fd643efb1cf74c2fe95e7f77f84c57c"
    },
    {
      "name": "ESP8266 Oled Driver for SSD1306 display",
      "version": "1.0.0",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A display driver for SSD1306 oled displays connected to an ESP8266",
      "paragraph": "A display driver for SSD1306 oled displays connected to an ESP8266",
      "website": "https://github.com/squix78/esp8266-oled-ssd1306",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Oled_Driver_for_SSD1306_display-1.0.0.zip",
      "archiveFileName": "ESP8266_Oled_Driver_for_SSD1306_display-1.0.0.zip",
      "size": 19045,
      "checksum": "SHA-256:55604faef5a2c691684e75b3a3ac95d6f907fb8fcebc5ed8e314073065a67aa4"
    },
    {
      "name": "ESP8266 Oled Driver for SSD1306 display",
      "version": "1.0.1",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A display driver for SSD1306 oled displays connected to an ESP8266",
      "paragraph": "A display driver for SSD1306 oled displays connected to an ESP8266",
      "website": "https://github.com/squix78/esp8266-oled-ssd1306",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Oled_Driver_for_SSD1306_display-1.0.1.zip",
      "archiveFileName": "ESP8266_Oled_Driver_for_SSD1306_display-1.0.1.zip",
      "size": 110373,
      "checksum": "SHA-256:0a20ca71cdb01aebefee5c5316c411e1f380224acb4f9aaa84b12f4fcde87c3b"
    },
    {
      "name": "ESP8266 Oled Driver for SSD1306 display",
      "version": "1.0.2",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A display driver for SSD1306 oled displays connected to an ESP8266",
      "paragraph": "A display driver for SSD1306 oled displays connected to an ESP8266",
      "website": "https://github.com/squix78/esp8266-oled-ssd1306",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Oled_Driver_for_SSD1306_display-1.0.2.zip",
      "archiveFileName": "ESP8266_Oled_Driver_for_SSD1306_display-1.0.2.zip",
      "size": 110859,
      "checksum": "SHA-256:a159aa13e26cae589df5b4ac64e7881abf428f4c266434150e70528374da0663"
    },
    {
      "name": "ESP8266 Oled Driver for SSD1306 display",
      "version": "2.0.0",
      "author": "Daniel Eichhorn, Fabrice Weinberg",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A display driver for SSD1306 oled displays connected to an ESP8266",
      "paragraph": "A display driver for SSD1306 oled displays connected to an ESP8266",
      "website": "https://github.com/squix78/esp8266-oled-ssd1306",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Oled_Driver_for_SSD1306_display-2.0.0.zip",
      "archiveFileName": "ESP8266_Oled_Driver_for_SSD1306_display-2.0.0.zip",
      "size": 128237,
      "checksum": "SHA-256:24578472a15f85ba5bac8570201cfbd3c3ac43b264b80db1abefec2a78abda65"
    },
    {
      "name": "ESP8266 Oled Driver for SSD1306 display",
      "version": "2.0.2",
      "author": "Daniel Eichhorn, Fabrice Weinberg",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A display driver for SSD1306 oled displays connected to an ESP8266",
      "paragraph": "A display driver for SSD1306 oled displays connected to an ESP8266",
      "website": "https://github.com/squix78/esp8266-oled-ssd1306",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Oled_Driver_for_SSD1306_display-2.0.2.zip",
      "archiveFileName": "ESP8266_Oled_Driver_for_SSD1306_display-2.0.2.zip",
      "size": 149752,
      "checksum": "SHA-256:693fecafe32c696f4de1e0074fc26ca9d5881f20323fa034183056c63a8c028d"
    },
    {
      "name": "ESP8266 Oled Driver for SSD1306 display",
      "version": "3.0.0",
      "author": "Daniel Eichhorn, Fabrice Weinberg",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A I2C display driver for SSD1306 oled displays connected to an ESP8266",
      "paragraph": "A I2C display driver for SSD1306 oled displays connected to an ESP8266",
      "website": "https://github.com/squix78/esp8266-oled-ssd1306",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Oled_Driver_for_SSD1306_display-3.0.0.zip",
      "archiveFileName": "ESP8266_Oled_Driver_for_SSD1306_display-3.0.0.zip",
      "size": 215288,
      "checksum": "SHA-256:0faf1fb32c4083e99e56e43eb27228ed062418ff1069c22f03c3033bc3ea651d"
    },
    {
      "name": "ESP8266 Oled Driver for SSD1306 display",
      "version": "3.1.0",
      "author": "Daniel Eichhorn, Fabrice Weinberg",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A I2C display driver for SSD1306 oled displays connected to an ESP8266",
      "paragraph": "A I2C display driver for SSD1306 oled displays connected to an ESP8266",
      "website": "https://github.com/squix78/esp8266-oled-ssd1306",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Oled_Driver_for_SSD1306_display-3.1.0.zip",
      "archiveFileName": "ESP8266_Oled_Driver_for_SSD1306_display-3.1.0.zip",
      "size": 215607,
      "checksum": "SHA-256:a255d5165ab21cad1c456dd98f6ee7c93a576e4db1c3282486005012f605aa75"
    },
    {
      "name": "ESP8266 Oled Driver for SSD1306 display",
      "version": "3.2.0",
      "author": "Daniel Eichhorn, Fabrice Weinberg",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A I2C display driver for SSD1306 oled displays connected to an ESP8266",
      "paragraph": "A I2C display driver for SSD1306 oled displays connected to an ESP8266",
      "website": "https://github.com/squix78/esp8266-oled-ssd1306",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Oled_Driver_for_SSD1306_display-3.2.0.zip",
      "archiveFileName": "ESP8266_Oled_Driver_for_SSD1306_display-3.2.0.zip",
      "size": 220362,
      "checksum": "SHA-256:e6ea2364ce509fd7d9520ee6261a53514ac2a8352bf5d7c425c32c4992b79729"
    },
    {
      "name": "ESP8266 Oled Driver for SSD1306 display",
      "version": "3.2.1",
      "author": "Daniel Eichhorn, Fabrice Weinberg",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A I2C display driver for SSD1306 oled displays connected to an ESP8266",
      "paragraph": "A I2C display driver for SSD1306 oled displays connected to an ESP8266",
      "website": "https://github.com/squix78/esp8266-oled-ssd1306",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Oled_Driver_for_SSD1306_display-3.2.1.zip",
      "archiveFileName": "ESP8266_Oled_Driver_for_SSD1306_display-3.2.1.zip",
      "size": 220359,
      "checksum": "SHA-256:ef9003036bd35f0924ead3521019155cf21c9c894bbe3d151e7f9fa88a6784c3"
    },
    {
      "name": "ESP8266 Oled Driver for SSD1306 display",
      "version": "3.2.2",
      "author": "Daniel Eichhorn, Fabrice Weinberg",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A I2C display driver for SSD1306 oled displays connected to an ESP8266",
      "paragraph": "A I2C display driver for SSD1306 oled displays connected to an ESP8266",
      "website": "https://github.com/squix78/esp8266-oled-ssd1306",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Oled_Driver_for_SSD1306_display-3.2.2.zip",
      "archiveFileName": "ESP8266_Oled_Driver_for_SSD1306_display-3.2.2.zip",
      "size": 220359,
      "checksum": "SHA-256:04c658a2dfadac724c5fbb882824969e31d9955e1b5a3a6dde4eaacb66aec1b5"
    },
    {
      "name": "ESP8266 Oled Driver for SSD1306 display",
      "version": "3.2.3",
      "author": "Daniel Eichhorn, Fabrice Weinberg",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A I2C display driver for SSD1306 oled displays connected to an ESP8266",
      "paragraph": "A I2C display driver for SSD1306 oled displays connected to an ESP8266",
      "website": "https://github.com/squix78/esp8266-oled-ssd1306",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Oled_Driver_for_SSD1306_display-3.2.3.zip",
      "archiveFileName": "ESP8266_Oled_Driver_for_SSD1306_display-3.2.3.zip",
      "size": 220464,
      "checksum": "SHA-256:4a5556c16872e3a509e69b727afdff38d02f87f7cc92c706d45e3510c25eeb25"
    },
    {
      "name": "ESP8266 Oled Driver for SSD1306 display",
      "version": "3.2.4",
      "author": "Daniel Eichhorn, Fabrice Weinberg",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A I2C display driver for SSD1306 oled displays connected to an ESP8266",
      "paragraph": "A I2C display driver for SSD1306 oled displays connected to an ESP8266",
      "website": "https://github.com/squix78/esp8266-oled-ssd1306",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Oled_Driver_for_SSD1306_display-3.2.4.zip",
      "archiveFileName": "ESP8266_Oled_Driver_for_SSD1306_display-3.2.4.zip",
      "size": 227131,
      "checksum": "SHA-256:1f8836e963c2f20453424b5704aae3470fc1b5362b9d892bf39f1bd6d6945899"
    },
    {
      "name": "ESP8266 Oled Driver for SSD1306 display",
      "version": "3.2.5",
      "author": "Daniel Eichhorn, Fabrice Weinberg",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A I2C display driver for SSD1306 oled displays connected to an ESP8266",
      "paragraph": "A I2C display driver for SSD1306 oled displays connected to an ESP8266",
      "website": "https://github.com/squix78/esp8266-oled-ssd1306",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Oled_Driver_for_SSD1306_display-3.2.5.zip",
      "archiveFileName": "ESP8266_Oled_Driver_for_SSD1306_display-3.2.5.zip",
      "size": 227128,
      "checksum": "SHA-256:0e1972406dcd6b49886fa849997f9471d614b3ee3d1a7dce737fa896fbaf6002"
    },
    {
      "name": "ESP8266 Oled Driver for SSD1306 display",
      "version": "3.2.6",
      "author": "Daniel Eichhorn, Fabrice Weinberg",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A I2C display driver for SSD1306 oled displays connected to an ESP8266 or ESP32",
      "paragraph": "A I2C display driver for SSD1306 oled displays connected to an ESP8266 or ESP32",
      "website": "https://github.com/squix78/esp8266-oled-ssd1306",
      "category": "Display",
      "architectures": [
        "esp8266",
        "esp32"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Oled_Driver_for_SSD1306_display-3.2.6.zip",
      "archiveFileName": "ESP8266_Oled_Driver_for_SSD1306_display-3.2.6.zip",
      "size": 227148,
      "checksum": "SHA-256:fa28c9b911e952d0171a3c2765c7201f64d8faf12390476f0bed54c8d0bb80d1"
    },
    {
      "name": "ESP8266 Oled Driver for SSD1306 display",
      "version": "3.2.7",
      "author": "Daniel Eichhorn, Fabrice Weinberg",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A I2C display driver for SSD1306 oled displays connected to an ESP8266 or ESP32",
      "paragraph": "A I2C display driver for SSD1306 oled displays connected to an ESP8266 or ESP32",
      "website": "https://github.com/squix78/esp8266-oled-ssd1306",
      "category": "Display",
      "architectures": [
        "esp8266",
        "esp32"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Oled_Driver_for_SSD1306_display-3.2.7.zip",
      "archiveFileName": "ESP8266_Oled_Driver_for_SSD1306_display-3.2.7.zip",
      "size": 227162,
      "checksum": "SHA-256:dbf5359202adb28ff27a99f9336c75e24aaecf64c31aa8735ffb95a5227f1079"
    },
    {
      "name": "due_can",
      "version": "2.0.0",
      "author": "Collin Kidder \u003ckidderc@gmail.com\u003e, Thibaut Viard, Wilfredo Molina",
      "maintainer": "Collin Kidder \u003ckidderc@gmail.com\u003e",
      "sentence": "Allows for CAN bus communications with the Arduino Due",
      "paragraph": "Implements interrupt driven communication and supports both object oriented and non-OOP callbacks",
      "website": "https://github.com/collin80/due_can",
      "category": "Communication",
      "architectures": [
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/collin80/due_can-2.0.0.zip",
      "archiveFileName": "due_can-2.0.0.zip",
      "size": 29786,
      "checksum": "SHA-256:48a17b51b79efdec51eaa0b27c4c4f6f6756b951f4dfcb10865680193c572943"
    },
    {
      "name": "due_can",
      "version": "2.0.1",
      "author": "Collin Kidder \u003ckidderc@gmail.com\u003e, Thibaut Viard, Wilfredo Molina",
      "maintainer": "Collin Kidder \u003ckidderc@gmail.com\u003e",
      "sentence": "Allows for CAN bus communications with the Arduino Due",
      "paragraph": "Implements interrupt driven communication and supports both object oriented and non-OOP callbacks",
      "website": "https://github.com/collin80/due_can",
      "category": "Communication",
      "architectures": [
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/collin80/due_can-2.0.1.zip",
      "archiveFileName": "due_can-2.0.1.zip",
      "size": 29779,
      "checksum": "SHA-256:dfeaafc7db3f88ea2f12c77918917eca0038e88894dfc02829f40ccaeb8f5e76"
    },
    {
      "name": "RBD_SerialManager",
      "version": "1.0.0-alpha.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "A simple interface for serial communication.",
      "paragraph": "A simple interface for serial communication.",
      "website": "https://github.com/alextaujenis/RBD_SerialManager",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_SerialManager-1.0.0-alpha.1.zip",
      "archiveFileName": "RBD_SerialManager-1.0.0-alpha.1.zip",
      "size": 9035,
      "checksum": "SHA-256:e849ca8b92449122f2bc57422d3a1d2f5bd7bb10bbcb08be6bda801abe9623f5"
    },
    {
      "name": "RBD_SerialManager",
      "version": "1.0.0-alpha.2",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "A simple interface for serial communication.",
      "paragraph": "A simple interface for serial communication.",
      "website": "https://github.com/alextaujenis/RBD_SerialManager",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_SerialManager-1.0.0-alpha.2.zip",
      "archiveFileName": "RBD_SerialManager-1.0.0-alpha.2.zip",
      "size": 4564,
      "checksum": "SHA-256:7636f9393f1353dca77b3f677f6436a2f61ac7a6ef11853166130294c9d7ca57"
    },
    {
      "name": "RBD_SerialManager",
      "version": "1.0.0-alpha.3",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "A simple interface for serial communication.",
      "paragraph": "A simple interface for serial communication.",
      "website": "https://github.com/alextaujenis/RBD_SerialManager",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/alextaujenis/RBD_SerialManager-1.0.0-alpha.3.zip",
      "archiveFileName": "RBD_SerialManager-1.0.0-alpha.3.zip",
      "size": 4749,
      "checksum": "SHA-256:ff908c14e66226ee5b956e9ba7ffce2f5869bad99d9a183adad8819e50f85e0c"
    },
    {
      "name": "FreeRTOS",
      "version": "8.2.3-18",
      "author": "Richard Berry \u003cinfo@freertos.org\u003e",
      "maintainer": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "sentence": "Real Time Operating System implemented for AVR (Uno, Leonardo, Mega).",
      "paragraph": "The primary design goals are: Easy to use, Small footprint, Robust. Uses Watchdog Timer for 15ms resolution. Slow blink = stack overflow. Fast blink = heap malloc() failure.",
      "website": "https://github.com/feilipu/Arduino_FreeRTOS_Library",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/feilipu/FreeRTOS-8.2.3-18.zip",
      "archiveFileName": "FreeRTOS-8.2.3-18.zip",
      "size": 232695,
      "checksum": "SHA-256:d6b3bdd2b457847fc47239e53e202d93eab6ad8ccea1767533c7f86ec6d482ff"
    },
    {
      "name": "FreeRTOS",
      "version": "9.0.0-1",
      "author": "Richard Berry \u003cinfo@freertos.org\u003e",
      "maintainer": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "sentence": "Real Time Operating System implemented for AVR (Uno, Leonardo, Mega).",
      "paragraph": "The primary design goals are: Easy to use, Small footprint, Robust. Uses Watchdog Timer for 15ms resolution. Slow blink = stack overflow. Fast blink = heap malloc() failure.",
      "website": "https://github.com/feilipu/Arduino_FreeRTOS_Library",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/feilipu/FreeRTOS-9.0.0-1.zip",
      "archiveFileName": "FreeRTOS-9.0.0-1.zip",
      "size": 248886,
      "checksum": "SHA-256:81b95321e5e0cae992e4f08e0dbf2339eae245becea31d63a3958f3f6dc6c403"
    },
    {
      "name": "RF24Ethernet",
      "version": "1.6.0",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "Open TCP/IP wireless/radio IoT mesh networks for Arduino",
      "paragraph": "Self-sustaining wireless sensor networks that seamlessly link together using standard protocols \u0026 networking, based on low-power nrf24l01+ radio modules. An experiment in networking, protocols and devices. See http://github.io/RF24Ethernet",
      "website": "http://tmrh20.github.io/RF24Ethernet/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24Ethernet-1.6.0.zip",
      "archiveFileName": "RF24Ethernet-1.6.0.zip",
      "size": 189935,
      "checksum": "SHA-256:de7d0857687faae7ac5ba13a43040d42a4fb8cc155098f69be27e1825dc45255"
    },
    {
      "name": "RF24Ethernet",
      "version": "1.6.1",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "Open TCP/IP wireless/radio IoT mesh networks for Arduino",
      "paragraph": "Self-sustaining wireless sensor networks that seamlessly link together using standard protocols \u0026 networking, based on low-power nrf24l01+ radio modules. An experiment in networking, protocols and devices. See http://github.io/RF24Ethernet",
      "website": "http://tmrh20.github.io/RF24Ethernet/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/RF24Ethernet-1.6.1.zip",
      "archiveFileName": "RF24Ethernet-1.6.1.zip",
      "size": 190888,
      "checksum": "SHA-256:fdf12097f2a4f817d5fecf22ab93c226856a5434636cb375f0ec6947feff163b"
    },
    {
      "name": "ConfigurableFirmata",
      "version": "2.8.0",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/ConfigurableFirmata",
      "sentence": "This library implements the Firmata protocol as a set of plugins that can be used to create applications to remotely interface with an Arduino board.",
      "paragraph": "ConfigurableFirmata is an implementation of the Firmata protocol that breaks features such as Digital Input, Digital Output, Analog Input, Analog Output, I2C, etc into individual classes making it easier to mix and match standard features with custom features.",
      "website": "https://github.com/firmata/ConfigurableFirmata",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/firmata/ConfigurableFirmata-2.8.0.zip",
      "archiveFileName": "ConfigurableFirmata-2.8.0.zip",
      "size": 84532,
      "checksum": "SHA-256:718f95e804b93391eb412d31dbe5213de06636084a0bb73812080200ad3c3d0a"
    },
    {
      "name": "ConfigurableFirmata",
      "version": "2.8.1",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/ConfigurableFirmata",
      "sentence": "This library implements the Firmata protocol as a set of plugins that can be used to create applications to remotely interface with an Arduino board.",
      "paragraph": "ConfigurableFirmata is an implementation of the Firmata protocol that breaks features such as Digital Input, Digital Output, Analog Input, Analog Output, I2C, etc into individual classes making it easier to mix and match standard features with custom features.",
      "website": "https://github.com/firmata/ConfigurableFirmata",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/firmata/ConfigurableFirmata-2.8.1.zip",
      "archiveFileName": "ConfigurableFirmata-2.8.1.zip",
      "size": 99437,
      "checksum": "SHA-256:6cee44b6a11e4ae99441c8f8d8aaab6563af7deadbbc8666868f6ba340d869e1"
    },
    {
      "name": "ConfigurableFirmata",
      "version": "2.8.2",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/ConfigurableFirmata",
      "sentence": "This library implements the Firmata protocol as a set of plugins that can be used to create applications to remotely interface with an Arduino board.",
      "paragraph": "ConfigurableFirmata is an implementation of the Firmata protocol that breaks features such as Digital Input, Digital Output, Analog Input, Analog Output, I2C, etc into individual classes making it easier to mix and match standard features with custom features.",
      "website": "https://github.com/firmata/ConfigurableFirmata",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/firmata/ConfigurableFirmata-2.8.2.zip",
      "archiveFileName": "ConfigurableFirmata-2.8.2.zip",
      "size": 99416,
      "checksum": "SHA-256:f3bfe8f012c6d1669cc764a93d2328bbf9385e50c6df0d74d34f73ec29a71280"
    },
    {
      "name": "ConfigurableFirmata",
      "version": "2.9.0",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/ConfigurableFirmata",
      "sentence": "This library implements the Firmata protocol as a set of plugins that can be used to create applications to remotely interface with an Arduino board.",
      "paragraph": "ConfigurableFirmata is an implementation of the Firmata protocol that breaks features such as Digital Input, Digital Output, Analog Input, Analog Output, I2C, etc into individual classes making it easier to mix and match standard features with custom features.",
      "website": "https://github.com/firmata/ConfigurableFirmata",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/firmata/ConfigurableFirmata-2.9.0.zip",
      "archiveFileName": "ConfigurableFirmata-2.9.0.zip",
      "size": 101839,
      "checksum": "SHA-256:9193664e55e9fe04093b87896381e7bbf6ad9ac72ff0e84123a689743c63a6be"
    },
    {
      "name": "ConfigurableFirmata",
      "version": "2.9.1",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/ConfigurableFirmata",
      "sentence": "This library implements the Firmata protocol as a set of plugins that can be used to create applications to remotely interface with an Arduino board.",
      "paragraph": "ConfigurableFirmata is an implementation of the Firmata protocol that breaks features such as Digital Input, Digital Output, Analog Input, Analog Output, I2C, etc into individual classes making it easier to mix and match standard features with custom features.",
      "website": "https://github.com/firmata/ConfigurableFirmata",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/firmata/ConfigurableFirmata-2.9.1.zip",
      "archiveFileName": "ConfigurableFirmata-2.9.1.zip",
      "size": 101837,
      "checksum": "SHA-256:07137335884939bcac9f9359b6fe7def14cb6ac3b161d77decbb5b5b084756b8"
    },
    {
      "name": "ConfigurableFirmata",
      "version": "2.9.2",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/ConfigurableFirmata",
      "sentence": "This library implements the Firmata protocol as a set of plugins that can be used to create applications to remotely interface with an Arduino board.",
      "paragraph": "ConfigurableFirmata is an implementation of the Firmata protocol that breaks features such as Digital Input, Digital Output, Analog Input, Analog Output, I2C, etc into individual classes making it easier to mix and match standard features with custom features.",
      "website": "https://github.com/firmata/ConfigurableFirmata",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/firmata/ConfigurableFirmata-2.9.2.zip",
      "archiveFileName": "ConfigurableFirmata-2.9.2.zip",
      "size": 101879,
      "checksum": "SHA-256:24b394b5df68c7a7f61a9e1847482dc9b3a43d30170d36c62390afb394027d5e"
    },
    {
      "name": "RapifireMqttClient",
      "version": "1.0.0",
      "author": "Rapifire",
      "maintainer": "Rapifire \u003csupport@rapifire.com\u003e",
      "sentence": "Rapifire MQTT Library.",
      "paragraph": "The library is a mqtt client of the rapifire.com platform.",
      "website": "https://github.com/rapifireio/rapifire-arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/rapifireio/RapifireMqttClient-1.0.0.zip",
      "archiveFileName": "RapifireMqttClient-1.0.0.zip",
      "size": 5873,
      "checksum": "SHA-256:adc652e0482d65e481277cc65155646b857dce9e5259433e0ba90a8b2cf1c969"
    },
    {
      "name": "RapifireMqttClient",
      "version": "1.1.0",
      "author": "Rapifire",
      "maintainer": "Rapifire \u003csupport@rapifire.com\u003e",
      "sentence": "Rapifire MQTT Library.",
      "paragraph": "The library is a mqtt client of the rapifire.com platform.",
      "website": "https://github.com/rapifireio/rapifire-arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/rapifireio/RapifireMqttClient-1.1.0.zip",
      "archiveFileName": "RapifireMqttClient-1.1.0.zip",
      "size": 6309,
      "checksum": "SHA-256:0b91efeed5a77592a1dec646b32f9f94653d86653b127990bbcf9928450adcb9"
    },
    {
      "name": "RapifireMqttClient",
      "version": "1.2.0",
      "author": "Rapifire",
      "maintainer": "Rapifire \u003csupport@rapifire.com\u003e",
      "sentence": "Enables the communication between Arduino and RAPIFIRE platform.",
      "paragraph": "The library is a mqtt client that allows you to easily integrate your Arduino projects with RAPIFIRE platform.",
      "website": "https://github.com/rapifireio/rapifire-arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/rapifireio/RapifireMqttClient-1.2.0.zip",
      "archiveFileName": "RapifireMqttClient-1.2.0.zip",
      "size": 6550,
      "checksum": "SHA-256:948bc1b812965db7ddeaba36caac42b33b4418e3fc750d31088b57d613c8df4a"
    },
    {
      "name": "RapifireMqttClient",
      "version": "1.3.0",
      "author": "RAPIFIRE",
      "maintainer": "Rapifire \u003csupport@rapifire.com\u003e",
      "sentence": "Enables the communication between Arduino and RAPIFIRE platform.",
      "paragraph": "The library is a mqtt client that allows you to easily integrate your Arduino projects with RAPIFIRE platform.",
      "website": "https://github.com/rapifireio/rapifire-arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/rapifireio/RapifireMqttClient-1.3.0.zip",
      "archiveFileName": "RapifireMqttClient-1.3.0.zip",
      "size": 12758,
      "checksum": "SHA-256:b2ec52749275e8b5befd3fa741cc11a5e6bc45f19c7e36e269450029a5aa91b5"
    },
    {
      "name": "RapifireMqttClient",
      "version": "1.3.1",
      "author": "RAPIFIRE",
      "maintainer": "Rapifire \u003csupport@rapifire.com\u003e",
      "sentence": "Enables the communication between Arduino and RAPIFIRE platform.",
      "paragraph": "The library is a mqtt client that allows you to easily integrate your Arduino projects with RAPIFIRE platform.",
      "website": "https://github.com/rapifireio/rapifire-arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/rapifireio/RapifireMqttClient-1.3.1.zip",
      "archiveFileName": "RapifireMqttClient-1.3.1.zip",
      "size": 12745,
      "checksum": "SHA-256:31a3d03d4e6373e5d0f979dedbd8dba01da90f47643e70f7ea79d292573f86fe"
    },
    {
      "name": "asip",
      "version": "0.1.0",
      "author": "Michael Margolis \u003cm.margolis@mdx.ac.uk\u003e, Franco Raimondi\u003cf.raimondi@mdx.ac.uk\u003e",
      "maintainer": "Michael Margolis \u003cm.margolis@mdx.ac.uk\u003e, Franco Raimondi\u003cf.raimondi@mdx.ac.uk\u003e",
      "sentence": "A library to control a board using a stream (e.g., serial)",
      "paragraph": "This library implements the core ASIP protocol for I/O pins and some additional simple services",
      "website": "https://bitbucket.org/mdxmase/asip",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mdxmase/asip-0.1.0.zip",
      "archiveFileName": "asip-0.1.0.zip",
      "size": 23714,
      "checksum": "SHA-256:ab6ebe6efd618f4c1cb20462972502e255df8879032158d3472b8bee17167ef8"
    },
    {
      "name": "asip-services",
      "version": "0.1.0",
      "author": "Michael Margolis \u003cm.margolis@mdx.ac.uk\u003e, Franco Raimondi\u003cf.raimondi@mdx.ac.uk\u003e",
      "maintainer": "Michael Margolis \u003cm.margolis@mdx.ac.uk\u003e, Franco Raimondi\u003cf.raimondi@mdx.ac.uk\u003e",
      "sentence": "A library to extend the core Asip library with additional services",
      "paragraph": "This library includes additional services for Asip that do not require external libraries: servo motors, sonar distance sensors and tones.",
      "website": "https://bitbucket.org/mdxmase/asip-services",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mdxmase/asip_services-0.1.0.zip",
      "archiveFileName": "asip_services-0.1.0.zip",
      "size": 11728,
      "checksum": "SHA-256:6c47f5eba10713831f362c68075d309a4ff19ca0bbcab0fb86606b918a61b71c"
    },
    {
      "name": "HDC1000",
      "version": "1.0.0",
      "author": "Yuichi Tateno",
      "maintainer": "Yuichi Tateno",
      "sentence": "A temperature and humidity sensor library for HDC1000",
      "paragraph": "A temperature and humidity sensor library for HDC1000",
      "website": "https://github.com/hotchpotch/Arduino-HDC1000.git",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/hotchpotch/HDC1000-1.0.0.zip",
      "archiveFileName": "HDC1000-1.0.0.zip",
      "size": 4107,
      "checksum": "SHA-256:e3585054981300f3e82830c71706ddae12869123d6326529e62f45bd2b1ecd57"
    },
    {
      "name": "RESTClient",
      "version": "1.0.0",
      "author": "Robert Cuthbertson",
      "maintainer": "Robbie \u003crobbie@robbie-remote.com\u003e",
      "sentence": "Enables sending REST messages using Arduino Ethernet. For all boards.",
      "paragraph": "With this library you can use Arduino Ethernet (shield or board) to send your sensor data via HTTP query args as Internet Of Things (IOT) messages. The library provides 'REST' Client functionality. This library uses the Ethernet library to connect to local networks and/or the Internet with DHCP and DNS.",
      "website": "https://www.github.com/robbie-remote/RESTClient",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/robbie-remote/RESTClient-1.0.0.zip",
      "archiveFileName": "RESTClient-1.0.0.zip",
      "size": 6118,
      "checksum": "SHA-256:c1964c5235872fc3ce59f9dd501cd70a149662e690a7ac49599705753852c199"
    },
    {
      "name": "Smartcar shield",
      "version": "1.0.0",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "Arduino library for controlling the Smartcar platform",
      "website": "https://github.com/platisd/smartcar-shield",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/platisd/Smartcar_shield-1.0.0.zip",
      "archiveFileName": "Smartcar_shield-1.0.0.zip",
      "size": 104038,
      "checksum": "SHA-256:f98b11305e073b2bea94edc939bc067adf1b4e7af8b2e98a5ab6301d36ac7884"
    },
    {
      "name": "Smartcar shield",
      "version": "1.1.0",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "Arduino library for controlling the Smartcar platform",
      "website": "https://github.com/platisd/smartcar_shield",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/platisd/Smartcar_shield-1.1.0.zip",
      "archiveFileName": "Smartcar_shield-1.1.0.zip",
      "size": 104503,
      "checksum": "SHA-256:dbe1af3d86bb6741cb124f9f94c4884c029eb57cfcf4712627ba9c909dcc86e3"
    },
    {
      "name": "Smartcar shield",
      "version": "1.1.1",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "Arduino library for controlling the Smartcar platform",
      "website": "https://github.com/platisd/smartcar_shield",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/platisd/Smartcar_shield-1.1.1.zip",
      "archiveFileName": "Smartcar_shield-1.1.1.zip",
      "size": 104509,
      "checksum": "SHA-256:eda233cb6dc74d2673da99cdf5c2cecda9332037c1805ed488569d8855d85f79"
    },
    {
      "name": "Smartcar shield",
      "version": "1.1.2",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for the Smartcar Arduino shield, that includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/platisd/Smartcar_shield-1.1.2.zip",
      "archiveFileName": "Smartcar_shield-1.1.2.zip",
      "size": 108248,
      "checksum": "SHA-256:7b23b87850e12cde07e3c96190ee24b188403714ad0ba208e8358c78fb184704"
    },
    {
      "name": "Smartcar shield",
      "version": "2.0.0",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for the Smartcar Arduino shield, that includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/platisd/Smartcar_shield-2.0.0.zip",
      "archiveFileName": "Smartcar_shield-2.0.0.zip",
      "size": 108552,
      "checksum": "SHA-256:75292e45fb724d37f36ace52a189724ba48c3084c1adabcf8b26fd17bb5eb41a"
    },
    {
      "name": "Smartcar shield",
      "version": "2.0.1",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for the Smartcar Arduino shield, that includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/platisd/Smartcar_shield-2.0.1.zip",
      "archiveFileName": "Smartcar_shield-2.0.1.zip",
      "size": 108548,
      "checksum": "SHA-256:37a1378eb12ad70d8324ef263a11a8816f4bba02a10aa8247a1db8675330a226"
    },
    {
      "name": "Smartcar shield",
      "version": "3.0.0",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for the Smartcar Arduino shield, that includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/platisd/Smartcar_shield-3.0.0.zip",
      "archiveFileName": "Smartcar_shield-3.0.0.zip",
      "size": 114224,
      "checksum": "SHA-256:65734039a3d5ce831a68225da5be9c6a7416804da455692aa285b255b8737487"
    },
    {
      "name": "Smartcar shield",
      "version": "3.0.1",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for the Smartcar Arduino shield, that includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/platisd/Smartcar_shield-3.0.1.zip",
      "archiveFileName": "Smartcar_shield-3.0.1.zip",
      "size": 159929,
      "checksum": "SHA-256:2bf4ab75890fe31bad9f47037ba5da56cf3efc15e562d0beff3497989e85501d"
    },
    {
      "name": "Smartcar shield",
      "version": "3.0.2",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for the Smartcar Arduino shield, that includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/platisd/Smartcar_shield-3.0.2.zip",
      "archiveFileName": "Smartcar_shield-3.0.2.zip",
      "size": 160443,
      "checksum": "SHA-256:19755a243aab575527330808100cfe1611602747e8be1c33876bb4b9d71f4f74"
    },
    {
      "name": "Smartcar shield",
      "version": "3.0.4",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for the Smartcar Arduino shield, that includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/platisd/Smartcar_shield-3.0.4.zip",
      "archiveFileName": "Smartcar_shield-3.0.4.zip",
      "size": 159193,
      "checksum": "SHA-256:923e715d09707013bc11a5c3e1f7d68604a64f0531fe5285f8977511d684c1ad"
    },
    {
      "name": "Smartcar shield",
      "version": "3.1.0",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for the Smartcar Arduino shield, that includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/platisd/Smartcar_shield-3.1.0.zip",
      "archiveFileName": "Smartcar_shield-3.1.0.zip",
      "size": 160173,
      "checksum": "SHA-256:3625f37bcba83fd873b875253450e48789155ab2865218c2d55b605c1c4b6293"
    },
    {
      "name": "Smartcar shield",
      "version": "3.1.3",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for, but not limited to, the Smartcar Arduino shield, which includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/platisd/Smartcar_shield-3.1.3.zip",
      "archiveFileName": "Smartcar_shield-3.1.3.zip",
      "size": 161153,
      "checksum": "SHA-256:3c3961c14ba98611a6f93c6ac8eb69d549e702ca7e1877661a3f6d96d47208c5"
    },
    {
      "name": "Smartcar shield",
      "version": "3.1.4",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for, but not limited to, the Smartcar Arduino shield, which includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/platisd/Smartcar_shield-3.1.4.zip",
      "archiveFileName": "Smartcar_shield-3.1.4.zip",
      "size": 165716,
      "checksum": "SHA-256:9a058fee62856e2b7acf8ab6f82dcda7a6d93bad86a9f45aadeaae7d3d2437a8"
    },
    {
      "name": "Smartcar shield",
      "version": "3.1.6",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for, but not limited to, the Smartcar Arduino shield, which includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/platisd/Smartcar_shield-3.1.6.zip",
      "archiveFileName": "Smartcar_shield-3.1.6.zip",
      "size": 165619,
      "checksum": "SHA-256:93b5e56aa73d16a13187cce9429bc1dd92619c57815dfd52bab6f6eac8c3b103"
    },
    {
      "name": "Smartcar shield",
      "version": "3.1.7",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for, but not limited to, the Smartcar Arduino shield, which includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/platisd/Smartcar_shield-3.1.7.zip",
      "archiveFileName": "Smartcar_shield-3.1.7.zip",
      "size": 165680,
      "checksum": "SHA-256:ea1df8933ef0672627651862ba201cd2918ca2055f4c6f0310bc733e2573c63a"
    },
    {
      "name": "Smartcar shield",
      "version": "3.2.0",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for, but not limited to, the Smartcar Arduino shield, which includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/platisd/Smartcar_shield-3.2.0.zip",
      "archiveFileName": "Smartcar_shield-3.2.0.zip",
      "size": 167646,
      "checksum": "SHA-256:d34d60ef76d19439c474442c332badd1d38834682438074966e6c2d1c1c791b3"
    },
    {
      "name": "Smartcar shield",
      "version": "3.2.1",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for, but not limited to, the Smartcar Arduino shield, which includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/platisd/Smartcar_shield-3.2.1.zip",
      "archiveFileName": "Smartcar_shield-3.2.1.zip",
      "size": 167681,
      "checksum": "SHA-256:e9e281c5d1366b56187ec3272c24b11e23b1ff5fe58eae370ec8b8bc30e4b7ab"
    },
    {
      "name": "Smartcar shield",
      "version": "3.2.2",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for, but not limited to, the Smartcar Arduino shield, which includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/platisd/Smartcar_shield-3.2.2.zip",
      "archiveFileName": "Smartcar_shield-3.2.2.zip",
      "size": 169408,
      "checksum": "SHA-256:e9f3dadcd1bfefaf4952bbba4ea44ee738121315bf2492af53e9bea482de9762"
    },
    {
      "name": "Smartcar shield",
      "version": "4.0.0",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for, but not limited to, the Smartcar Arduino shield, which includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/platisd/Smartcar_shield-4.0.0.zip",
      "archiveFileName": "Smartcar_shield-4.0.0.zip",
      "size": 170456,
      "checksum": "SHA-256:23476b2a13ccbaa1bf13be3462d7f08df231ace8ae6e9cb1824fd1f0da92b36f"
    },
    {
      "name": "Smartcar shield",
      "version": "4.0.1",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for, but not limited to, the Smartcar Arduino shield, which includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/platisd/Smartcar_shield-4.0.1.zip",
      "archiveFileName": "Smartcar_shield-4.0.1.zip",
      "size": 170817,
      "checksum": "SHA-256:2a67eb26b4cc4789ba0d1b961df8b757ce4d95a5909bf68d2dd6904f4103f55a"
    },
    {
      "name": "Smartcar shield",
      "version": "4.1.0",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for, but not limited to, the Smartcar Arduino shield, which includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/platisd/Smartcar_shield-4.1.0.zip",
      "archiveFileName": "Smartcar_shield-4.1.0.zip",
      "size": 171653,
      "checksum": "SHA-256:2dbad6a75597820fcb8b994aef8a76720bab3581ff6e7671c8f9e9bdf8392481"
    },
    {
      "name": "Smartcar shield",
      "version": "3.1.5",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for, but not limited to, the Smartcar Arduino shield, which includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/platisd/Smartcar_shield-3.1.5.zip",
      "archiveFileName": "Smartcar_shield-3.1.5.zip",
      "size": 165624,
      "checksum": "SHA-256:1fa4ab21ab6472bd845f7f2946a8fb76db3df1812cfeb9934664b00be7e85dba"
    },
    {
      "name": "WiFiEsp",
      "version": "1.6.0",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino WiFi library for ESP8266",
      "paragraph": "Arduino WiFi library for ESP8266. Works only with SDK version 1.1.1 and above (AT version 0.25 and above).",
      "website": "https://github.com/bportaluri/WiFiEsp",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bportaluri/WiFiEsp-1.6.0.zip",
      "archiveFileName": "WiFiEsp-1.6.0.zip",
      "size": 55920,
      "checksum": "SHA-256:3ee91ade8407945ba2ea4a9b9d9214791ce5ec9f71c7f99a6691b012c0840bc5"
    },
    {
      "name": "WiFiEsp",
      "version": "2.1.0",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino WiFi library for ESP8266",
      "paragraph": "Arduino WiFi library for ESP8266. Works only with SDK version 1.1.1 and above (AT version 0.25 and above).",
      "website": "https://github.com/bportaluri/WiFiEsp",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bportaluri/WiFiEsp-2.1.0.zip",
      "archiveFileName": "WiFiEsp-2.1.0.zip",
      "size": 58785,
      "checksum": "SHA-256:9885dee3ec596b5074b340e769c8d9b9e606b8fc9b1a8c054ac4d0d5ddfdf01a"
    },
    {
      "name": "WiFiEsp",
      "version": "2.1.1",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino WiFi library for ESP8266",
      "paragraph": "Arduino WiFi library for ESP8266. Works only with SDK version 1.1.1 and above (AT version 0.25 and above).",
      "website": "https://github.com/bportaluri/WiFiEsp",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bportaluri/WiFiEsp-2.1.1.zip",
      "archiveFileName": "WiFiEsp-2.1.1.zip",
      "size": 59042,
      "checksum": "SHA-256:5bbbea9ee1dc99eebc4636deb618ede28d1a300e84e37d2b89acf8b56a34d859"
    },
    {
      "name": "WiFiEsp",
      "version": "2.1.2",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino WiFi library for ESP8266",
      "paragraph": "Arduino WiFi library for ESP8266. Works only with SDK version 1.1.1 and above (AT version 0.25 and above).",
      "website": "https://github.com/bportaluri/WiFiEsp",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bportaluri/WiFiEsp-2.1.2.zip",
      "archiveFileName": "WiFiEsp-2.1.2.zip",
      "size": 59143,
      "checksum": "SHA-256:2f7289db3416c912deaf6c7d6772831ae0822b2793ad59109e86107e47a905a7"
    },
    {
      "name": "WiFiEsp",
      "version": "2.2.1",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino WiFi library for ESP8266",
      "paragraph": "Arduino WiFi library for ESP8266. Works only with SDK version 1.1.1 and above (AT version 0.25 and above).",
      "website": "https://github.com/bportaluri/WiFiEsp",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bportaluri/WiFiEsp-2.2.1.zip",
      "archiveFileName": "WiFiEsp-2.2.1.zip",
      "size": 59641,
      "checksum": "SHA-256:5ea8e92050b9bba5593855916defc38956663404b019f44e76b4e425d816904e"
    },
    {
      "name": "IBot",
      "version": "1.0.0",
      "author": "Robot Club KMITL Thailand",
      "maintainer": "Phanuphong Thanatkha \u003cmonoblos_gconsole@hotmail.com\u003e, Somsin Thongkrairat \u003csomsin.to@hotmail.com\u003e",
      "sentence": "Arduino library for I-Bot camp.",
      "paragraph": "Sensor library was removed.",
      "website": "http://robot.kmitl.net/",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/somsinchai/IBot-1.0.0.zip",
      "archiveFileName": "IBot-1.0.0.zip",
      "size": 4431,
      "checksum": "SHA-256:3d27985f737d68bcc36df1f2ea346e9058b659164b2042aa530e46e84e4f944e"
    },
    {
      "name": "IBot",
      "version": "1.2.0",
      "author": "Robot Club KMITL Thailand",
      "maintainer": "Phanuphong Thanatkha \u003cmonoblos_gconsole@hotmail.com\u003e, Somsin Thongkrairat \u003csomsin.to@hotmail.com\u003e",
      "sentence": "Arduino library for I-Bot camp.",
      "paragraph": "Sensor library was removed.",
      "website": "http://robot.kmitl.net/",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/somsinchai/IBot-1.2.0.zip",
      "archiveFileName": "IBot-1.2.0.zip",
      "size": 4426,
      "checksum": "SHA-256:89c8195cf95b14e8dece4f70c3bdb5161582016d2de6fb1165cd23d3d63db583"
    },
    {
      "name": "IBot",
      "version": "1.3.0",
      "author": "Robot Club KMITL Thailand",
      "maintainer": "Phanuphong Thanatkha \u003cmonoblos_gconsole@hotmail.com\u003e, Somsin Thongkrairat \u003csomsin.to@hotmail.com\u003e",
      "sentence": "Arduino library for I-Bot camp.",
      "paragraph": "Sensor library was removed.",
      "website": "http://robot.kmitl.net/",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/somsinchai/IBot-1.3.0.zip",
      "archiveFileName": "IBot-1.3.0.zip",
      "size": 8289,
      "checksum": "SHA-256:58c4d8ac1995d4bb80a1bcc5c64bff84da2ebe3250dbd27113cfb6a8b8adab51"
    },
    {
      "name": "SwissHandmade MiniPirate",
      "version": "1.0.0",
      "author": "SwissHandmade",
      "maintainer": "Oli \u003colivier.chatelain@gmail.com\u003e",
      "sentence": "Commandline for GPIO, I2C and CPU manipulations",
      "paragraph": "To scan I2C, read/write GPIO, read/write EEPROM and read CPU informations from any Serial terminal. Ideal for exploring new devices without any code writing.",
      "website": "https://github.com/chatelao/MiniPirate",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/chatelao/SwissHandmade_MiniPirate-1.0.0.zip",
      "archiveFileName": "SwissHandmade_MiniPirate-1.0.0.zip",
      "size": 36312,
      "checksum": "SHA-256:3da03a8ee24c6ad1aa7587f3a5c2a62b138a1de6692d79333e4675c9be454fb8"
    },
    {
      "name": "SwissHandmade MiniPirate",
      "version": "1.1.0",
      "author": "SwissHandmade",
      "maintainer": "Oli \u003colivier.chatelain@gmail.com\u003e",
      "sentence": "Commandline for GPIO, I2C and CPU manipulations",
      "paragraph": "To scan I2C, read/write GPIO, read/write EEPROM and read CPU informations from any Serial terminal. Ideal for exploring new devices without any code writing.",
      "website": "https://github.com/chatelao/MiniPirate",
      "category": "Device Control",
      "architectures": [
        "avr",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/chatelao/SwissHandmade_MiniPirate-1.1.0.zip",
      "archiveFileName": "SwissHandmade_MiniPirate-1.1.0.zip",
      "size": 36215,
      "checksum": "SHA-256:285397aabc295e7423c1a579c81f0c634174854605f24199eb040af377ea8ba6"
    },
    {
      "name": "BLESerial",
      "version": "1.0.0",
      "author": "Shrikant Patnaik \u003cme@shrikantpatnaik.com\u003e",
      "maintainer": "Shrikant Patnaik \u003cme@shrikantpatnaik.com\u003e",
      "sentence": "A library to communicate with BLE Serial Modules",
      "paragraph": "Supports most Serial BLE modules, customizable.",
      "website": "http://github.com/5pIO/BLESerial",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/5pIO/BLESerial-1.0.0.zip",
      "archiveFileName": "BLESerial-1.0.0.zip",
      "size": 2936,
      "checksum": "SHA-256:dfd1572125287e585315b29c9cf5a0fd95953cc0ea32b734e3e8469b450fa980"
    },
    {
      "name": "BLESerial",
      "version": "1.1.0",
      "author": "Shrikant Patnaik \u003cme@shrikantpatnaik.com\u003e",
      "maintainer": "Shrikant Patnaik \u003cme@shrikantpatnaik.com\u003e",
      "sentence": "A library to communicate with BLE Serial Modules",
      "paragraph": "Supports most Serial BLE modules, customizable.",
      "website": "http://github.com/5pIO/BLESerial",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/5pIO/BLESerial-1.1.0.zip",
      "archiveFileName": "BLESerial-1.1.0.zip",
      "size": 3718,
      "checksum": "SHA-256:b2db140e67c34f26c620b5ce7fb30c3e2ae90fcb83cc77a9b0fd9c230de80051"
    },
    {
      "name": "ESP8266 Weather Station",
      "version": "0.0.9",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "ESP8266 based internet connected Weather Station",
      "paragraph": "ESP8266 based internet connected Weather Station",
      "website": "https://github.com/squix78/esp8266-weather-station",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Weather_Station-0.0.9.zip",
      "archiveFileName": "ESP8266_Weather_Station-0.0.9.zip",
      "size": 24970,
      "checksum": "SHA-256:1f761b20974319e1f0c7e021267b65fcc1e6b27061f716ebc62c4c7201126ae9"
    },
    {
      "name": "ESP8266 Weather Station",
      "version": "1.0.1",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "ESP8266 based internet connected Weather Station",
      "paragraph": "ESP8266 based internet connected Weather Station",
      "website": "https://github.com/squix78/esp8266-weather-station",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Weather_Station-1.0.1.zip",
      "archiveFileName": "ESP8266_Weather_Station-1.0.1.zip",
      "size": 29081,
      "checksum": "SHA-256:91de6387ed8fee2d49928b7d18d824f6b1eeab0dd1f69f49d05727db70c8a1c8"
    },
    {
      "name": "ESP8266 Weather Station",
      "version": "1.0.2",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "ESP8266 based internet connected Weather Station",
      "paragraph": "ESP8266 based internet connected Weather Station",
      "website": "https://github.com/squix78/esp8266-weather-station",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Weather_Station-1.0.2.zip",
      "archiveFileName": "ESP8266_Weather_Station-1.0.2.zip",
      "size": 29117,
      "checksum": "SHA-256:1e678d6a8bfb8f0b0aaeffc29042d0c3a8b55445700031255828a56f818a051c"
    },
    {
      "name": "ESP8266 Weather Station",
      "version": "1.0.3",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "ESP8266 based internet connected Weather Station",
      "paragraph": "ESP8266 based internet connected Weather Station",
      "website": "https://github.com/squix78/esp8266-weather-station",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Weather_Station-1.0.3.zip",
      "archiveFileName": "ESP8266_Weather_Station-1.0.3.zip",
      "size": 49938,
      "checksum": "SHA-256:d91c539bd28adade54a66151f41085f7ff1dcf1420b8cbac7eb490712c913632"
    },
    {
      "name": "ESP8266 Weather Station",
      "version": "1.0.5",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "ESP8266 based internet connected Weather Station",
      "paragraph": "ESP8266 based internet connected Weather Station",
      "website": "https://github.com/squix78/esp8266-weather-station",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Weather_Station-1.0.5.zip",
      "archiveFileName": "ESP8266_Weather_Station-1.0.5.zip",
      "size": 50589,
      "checksum": "SHA-256:26e6b4bdb131c85d924561759d15e3c2afb404d612b6eff0164291bf04f6f3fc"
    },
    {
      "name": "ESP8266 Weather Station",
      "version": "1.1.0",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "ESP8266 based internet connected Weather Station",
      "paragraph": "ESP8266 based internet connected Weather Station",
      "website": "https://github.com/squix78/esp8266-weather-station",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Weather_Station-1.1.0.zip",
      "archiveFileName": "ESP8266_Weather_Station-1.1.0.zip",
      "size": 65913,
      "checksum": "SHA-256:bad1868713581fc65880684469f3932591c569d1cfc7490ee56020b81d7220d5"
    },
    {
      "name": "ESP8266 Weather Station",
      "version": "1.1.1",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "ESP8266 based internet connected Weather Station",
      "paragraph": "ESP8266 based internet connected Weather Station",
      "website": "https://github.com/squix78/esp8266-weather-station",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Weather_Station-1.1.1.zip",
      "archiveFileName": "ESP8266_Weather_Station-1.1.1.zip",
      "size": 75134,
      "checksum": "SHA-256:70b1c87b634ae07ee583498aee74d6178698edbbb54313d7f091a1e6254c5fee"
    },
    {
      "name": "ESP8266 Weather Station",
      "version": "1.1.2",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "ESP8266 based internet connected Weather Station",
      "paragraph": "ESP8266 based internet connected Weather Station",
      "website": "https://github.com/squix78/esp8266-weather-station",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Weather_Station-1.1.2.zip",
      "archiveFileName": "ESP8266_Weather_Station-1.1.2.zip",
      "size": 108562,
      "checksum": "SHA-256:4deb4a726d764e82e263fc9e56750924dc74a506fbedf17b9abe47067f3c1112"
    },
    {
      "name": "ESP8266 Weather Station",
      "version": "1.1.3",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "ESP8266 based internet connected Weather Station",
      "paragraph": "ESP8266 based internet connected Weather Station",
      "website": "https://github.com/squix78/esp8266-weather-station",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Weather_Station-1.1.3.zip",
      "archiveFileName": "ESP8266_Weather_Station-1.1.3.zip",
      "size": 657643,
      "checksum": "SHA-256:bd5a1413583f9c1fe924d13260fee7cf421aebaded7b62a6748eeb761bde1f7a"
    },
    {
      "name": "ESP8266 Weather Station",
      "version": "1.2.0",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "ESP8266 based internet connected Weather Station",
      "paragraph": "ESP8266 based internet connected Weather Station",
      "website": "https://github.com/squix78/esp8266-weather-station",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Weather_Station-1.2.0.zip",
      "archiveFileName": "ESP8266_Weather_Station-1.2.0.zip",
      "size": 660563,
      "checksum": "SHA-256:070b086758da85cc73a67be6ede546c9af1d320e64b7387ea44a904b5cf784e7"
    },
    {
      "name": "ESP8266 Weather Station",
      "version": "1.2.1",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "ESP8266 based internet connected Weather Station",
      "paragraph": "ESP8266 based internet connected Weather Station",
      "website": "https://github.com/squix78/esp8266-weather-station",
      "category": "Display",
      "architectures": [
        "esp8266",
        "esp32"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Weather_Station-1.2.1.zip",
      "archiveFileName": "ESP8266_Weather_Station-1.2.1.zip",
      "size": 660568,
      "checksum": "SHA-256:96a5e356a08ed625d195d6f7365840f1a9a5b502ee2dcd3af4aaba562e513966"
    },
    {
      "name": "ESP8266 Weather Station",
      "version": "1.2.2",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "ESP8266 based internet connected Weather Station",
      "paragraph": "ESP8266 based internet connected Weather Station",
      "website": "https://github.com/squix78/esp8266-weather-station",
      "category": "Display",
      "architectures": [
        "esp8266",
        "esp32"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/squix78/ESP8266_Weather_Station-1.2.2.zip",
      "archiveFileName": "ESP8266_Weather_Station-1.2.2.zip",
      "size": 660581,
      "checksum": "SHA-256:ef1d4c7a87e9ac4f9d6f82ebb68c93eb7d9ca050280813189a29f9654d47ca5a"
    },
    {
      "name": "WebSockets",
      "version": "1.0.0",
      "author": "Markus Sattler",
      "maintainer": "Markus Sattler",
      "sentence": "WebSockets for Arduino (Server + Client)",
      "website": "https://github.com/Links2004/arduinoWebSockets",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Links2004/WebSockets-1.0.0.zip",
      "archiveFileName": "WebSockets-1.0.0.zip",
      "size": 33287,
      "checksum": "SHA-256:9f851aa3bcb23209d590eef503a462578dbf9e5e259327125a12e8adeac81f06"
    },
    {
      "name": "WebSockets",
      "version": "1.1.0",
      "author": "Markus Sattler",
      "maintainer": "Markus Sattler",
      "sentence": "WebSockets for Arduino (Server + Client)",
      "website": "https://github.com/Links2004/arduinoWebSockets",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Links2004/WebSockets-1.1.0.zip",
      "archiveFileName": "WebSockets-1.1.0.zip",
      "size": 33235,
      "checksum": "SHA-256:46204466b6a7219ccd47a990fdc23ffd6e2138465fefb2a10bf9316730381efe"
    },
    {
      "name": "WebSockets",
      "version": "1.2.0",
      "author": "Markus Sattler",
      "maintainer": "Markus Sattler",
      "sentence": "WebSockets for Arduino (Server + Client)",
      "website": "https://github.com/Links2004/arduinoWebSockets",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Links2004/WebSockets-1.2.0.zip",
      "archiveFileName": "WebSockets-1.2.0.zip",
      "size": 35399,
      "checksum": "SHA-256:8809494670bb0cd2bbe1b512552dcf1a718a4b735f49751b4ef9294fcb0cd311"
    },
    {
      "name": "WebSockets",
      "version": "1.3.0",
      "author": "Markus Sattler",
      "maintainer": "Markus Sattler",
      "sentence": "WebSockets for Arduino (Server + Client)",
      "website": "https://github.com/Links2004/arduinoWebSockets",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Links2004/WebSockets-1.3.0.zip",
      "archiveFileName": "WebSockets-1.3.0.zip",
      "size": 41792,
      "checksum": "SHA-256:d066c2fdd528e07f287734f9b0f1999005a3464f516e5265918d2f70d8fad0eb"
    },
    {
      "name": "WebSockets",
      "version": "2.0.0",
      "author": "Markus Sattler",
      "maintainer": "Markus Sattler",
      "sentence": "WebSockets for Arduino (Server + Client)",
      "paragraph": "use 2.0 for ESP and 1.3 for AVR",
      "website": "https://github.com/Links2004/arduinoWebSockets",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Links2004/WebSockets-2.0.0.zip",
      "archiveFileName": "WebSockets-2.0.0.zip",
      "size": 45489,
      "checksum": "SHA-256:1bfda11a2b8940d80f535ec172fcad57d181cbd7873623f7b390210473750463"
    },
    {
      "name": "WebSockets",
      "version": "2.0.2",
      "author": "Markus Sattler",
      "maintainer": "Markus Sattler",
      "sentence": "WebSockets for Arduino (Server + Client)",
      "paragraph": "use 2.x.x for ESP and 1.3 for AVR",
      "website": "https://github.com/Links2004/arduinoWebSockets",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Links2004/WebSockets-2.0.2.zip",
      "archiveFileName": "WebSockets-2.0.2.zip",
      "size": 46371,
      "checksum": "SHA-256:7511895a2f761ac4792ab017971a386986cf4ecb910c7a5d0e272a0061db36a9"
    },
    {
      "name": "WebSockets",
      "version": "2.0.4",
      "author": "Markus Sattler",
      "maintainer": "Markus Sattler",
      "sentence": "WebSockets for Arduino (Server + Client)",
      "paragraph": "use 2.x.x for ESP and 1.3 for AVR",
      "website": "https://github.com/Links2004/arduinoWebSockets",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Links2004/WebSockets-2.0.4.zip",
      "archiveFileName": "WebSockets-2.0.4.zip",
      "size": 50281,
      "checksum": "SHA-256:a3e3b17ac2b5548090cf7d1bdb466836c3e7c477c786623051cf93bf9a661619"
    },
    {
      "name": "WebSockets",
      "version": "2.0.5",
      "author": "Markus Sattler",
      "maintainer": "Markus Sattler",
      "sentence": "WebSockets for Arduino (Server + Client)",
      "paragraph": "use 2.x.x for ESP and 1.3 for AVR",
      "website": "https://github.com/Links2004/arduinoWebSockets",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Links2004/WebSockets-2.0.5.zip",
      "archiveFileName": "WebSockets-2.0.5.zip",
      "size": 52156,
      "checksum": "SHA-256:0667624c4018152821f40ac5daede2ea67759525557c9299374b0bcae9015bbb"
    },
    {
      "name": "WebSockets",
      "version": "2.0.6",
      "author": "Markus Sattler",
      "maintainer": "Markus Sattler",
      "sentence": "WebSockets for Arduino (Server + Client)",
      "paragraph": "use 2.x.x for ESP and 1.3 for AVR",
      "website": "https://github.com/Links2004/arduinoWebSockets",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Links2004/WebSockets-2.0.6.zip",
      "archiveFileName": "WebSockets-2.0.6.zip",
      "size": 53244,
      "checksum": "SHA-256:95c503481994ee5477a1503e5a51b7b13af2dcb0a5c8070714ec10394dd9d120"
    },
    {
      "name": "Queuetue HX711 Library",
      "version": "1.0.1",
      "author": "Scott Russell \u003cscott@queuetue.com\u003e",
      "maintainer": "Scott Russell \u003cscott@queuetue.com\u003e",
      "sentence": "Simple driver for the HX711 ADC.",
      "paragraph": "Allows you to use the inexpensive HX711 strain gauge amplifier and 24-bit ADC to build scales, force gauges and other sensors.",
      "website": "https://github.com/queuetue/Q2-HX711-Arduino-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/queuetue/Queuetue_HX711_Library-1.0.1.zip",
      "archiveFileName": "Queuetue_HX711_Library-1.0.1.zip",
      "size": 3989,
      "checksum": "SHA-256:a3db3a73e4b84acbd6c6c26ac555ba5b5a2552dca9e7866bb7d3aa89b643a225"
    },
    {
      "name": "Queuetue Digital Balance Library",
      "version": "1.0.2",
      "author": "Queuetue",
      "maintainer": "queuetue \u003cinfo@queuetue.com\u003e",
      "sentence": "A library of functions to build a digital balance",
      "paragraph": "Includes taring, calibration",
      "website": "https://github.com/queuetue/Q2-Balance-Arduino-Library",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/queuetue/Queuetue_Digital_Balance_Library-1.0.2.zip",
      "archiveFileName": "Queuetue_Digital_Balance_Library-1.0.2.zip",
      "size": 6178,
      "checksum": "SHA-256:974edc13c848cd6a1b34190840635aba81fd5bef34f24cfc4157f2cc9bd7f0e2"
    },
    {
      "name": "Queuetue Digital Balance Library",
      "version": "1.0.3",
      "author": "Scott Russell \u003cscott@queuetue.com\u003e",
      "maintainer": "Scott Russell \u003cscott@queuetue.com\u003e",
      "sentence": "A library of functions to build a digital balance",
      "paragraph": "Includes smoothing, taring and calibration.",
      "website": "https://github.com/queuetue/Q2-Balance-Arduino-Library",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/queuetue/Queuetue_Digital_Balance_Library-1.0.3.zip",
      "archiveFileName": "Queuetue_Digital_Balance_Library-1.0.3.zip",
      "size": 6277,
      "checksum": "SHA-256:4fff6d54d9278f0af456d3da6c99c6a92c3c22dd861f033b7d6f84ef9d6ca913"
    },
    {
      "name": "Queuetue Digital Balance Library",
      "version": "1.0.4",
      "author": "Scott Russell \u003cscott@queuetue.com\u003e",
      "maintainer": "Scott Russell \u003cscott@queuetue.com\u003e",
      "sentence": "A library of functions to build a digital balance",
      "paragraph": "Includes smoothing, taring and calibration.",
      "website": "https://github.com/queuetue/Q2-Balance-Arduino-Library",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/queuetue/Queuetue_Digital_Balance_Library-1.0.4.zip",
      "archiveFileName": "Queuetue_Digital_Balance_Library-1.0.4.zip",
      "size": 7015,
      "checksum": "SHA-256:2128ec4cc1c063a42276e4c9d476496d5cc61cbdbcede43cd4e7c45eb64e7572"
    },
    {
      "name": "Queuetue Digital Balance Library",
      "version": "1.0.5",
      "author": "Scott Russell \u003cscott@queuetue.com\u003e",
      "maintainer": "Scott Russell \u003cscott@queuetue.com\u003e",
      "sentence": "A library of functions to build a digital balance",
      "paragraph": "Includes smoothing, taring and calibration.",
      "website": "https://github.com/queuetue/Q2-Balance-Arduino-Library",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/queuetue/Queuetue_Digital_Balance_Library-1.0.5.zip",
      "archiveFileName": "Queuetue_Digital_Balance_Library-1.0.5.zip",
      "size": 7450,
      "checksum": "SHA-256:2c4edd0b5e1b632963a1c9375f694c738927deb23e0564157acfe304b352dad4"
    },
    {
      "name": "Queuetue Digital Balance Library",
      "version": "1.0.6",
      "author": "Scott Russell \u003cscott@queuetue.com\u003e",
      "maintainer": "Scott Russell \u003cscott@queuetue.com\u003e",
      "sentence": "A library of functions to build a digital balance",
      "paragraph": "Includes smoothing, taring and calibration.",
      "website": "https://github.com/queuetue/Q2-Balance-Arduino-Library",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/queuetue/Queuetue_Digital_Balance_Library-1.0.6.zip",
      "archiveFileName": "Queuetue_Digital_Balance_Library-1.0.6.zip",
      "size": 7317,
      "checksum": "SHA-256:25bfb177777e300fc08206a4d497edfc7313e4d6ca238f62ecc9db4678f24858"
    },
    {
      "name": "BME280",
      "version": "1.0.0",
      "author": "Tyler Glenn \u003cprotglenn@gmail.com\u003e",
      "maintainer": "Tyler Glenn \u003cprotglenn@gmail.com\u003e",
      "sentence": "Provides a library for reading and interpreting Bosch BME280 environmental sensor data.",
      "paragraph": "Reads temperature, humidity, and pressure. Calculates altitude and dew point. Provides functions for english and metric. Also reads pressure in Pa, hPa, inHg, atm, bar, torr, N/m^2 and psi.",
      "website": "github.com/finitespace/BME280",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/finitespace/BME280-1.0.0.zip",
      "archiveFileName": "BME280-1.0.0.zip",
      "size": 23975,
      "checksum": "SHA-256:e5b4e5d09057948ae7c7ed72aef1f4505b5d47a08fad59c50eb58022aa492f5d"
    },
    {
      "name": "BME280",
      "version": "2.1.0",
      "author": "Tyler Glenn \u003cprotglenn@gmail.com\u003e",
      "maintainer": "Tyler Glenn \u003cprotglenn@gmail.com\u003e",
      "sentence": "Provides a library for reading and interpreting Bosch BME280 environmental sensor data over I2C and SPI.",
      "paragraph": "Reads temperature, humidity, and pressure. Calculates altitude and dew point. Provides functions for english and metric. Also reads pressure in Pa, hPa, inHg, atm, bar, torr, N/m^2 and psi.",
      "website": "https://www.github.com/finitespace/BME280",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/finitespace/BME280-2.1.0.zip",
      "archiveFileName": "BME280-2.1.0.zip",
      "size": 37385,
      "checksum": "SHA-256:104c84c7926624dab1933f298c3f20abe8b8a6678c1d0a45f1231038c0a9b40d"
    },
    {
      "name": "BME280",
      "version": "2.1.2",
      "author": "Tyler Glenn \u003cprotglenn@gmail.com\u003e",
      "maintainer": "Tyler Glenn \u003cprotglenn@gmail.com\u003e",
      "sentence": "Provides a library for reading and interpreting Bosch BME280 environmental sensor data over I2C and SPI.",
      "paragraph": "Reads temperature, humidity, and pressure. Calculates altitude and dew point. Provides functions for english and metric. Also reads pressure in Pa, hPa, inHg, atm, bar, torr, N/m^2 and psi.",
      "website": "https://www.github.com/finitespace/BME280",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/finitespace/BME280-2.1.2.zip",
      "archiveFileName": "BME280-2.1.2.zip",
      "size": 37128,
      "checksum": "SHA-256:b6d90422a0ab4086e04705a893abaab4587150241b357c25987e3eef5662daff"
    },
    {
      "name": "Oregon",
      "version": "1.0.0",
      "author": "Mickael Hubert, Dominique Pierre, Olivier Lebrun",
      "maintainer": "Mickael Hubert \u003cgithub@winlux.fr\u003e",
      "sentence": "Decode data from Oregon sensors.",
      "paragraph": "This sketch provides an example how to implement a humidity/temperature from Oregon sensor. \u003cbr /\u003e Ex: Arduino UNO \\\u003c--(PIN 2) --\u003e 433Mhz receiver \\\u003c=============\u003e Oregon sensors \u003cbr /\u003e",
      "website": "https://github.com/Mickaelh51/Arduino-Oregon-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Mickaelh51/Oregon-1.0.0.zip",
      "archiveFileName": "Oregon-1.0.0.zip",
      "size": 8657,
      "checksum": "SHA-256:39644ccd2a053ab01f8e47ab0ef79ea4a275a9c6d2ca84afff592ddcc06d9925"
    },
    {
      "name": "Oregon",
      "version": "1.0.1",
      "author": "Mickael Hubert, Dominique Pierre, Olivier Lebrun",
      "maintainer": "Mickael Hubert \u003cgithub@winlux.fr\u003e",
      "sentence": "Decode data from Oregon sensors.",
      "paragraph": "This sketch provides an example how to implement a humidity/temperature from Oregon sensor (433Mhz). \u003cbr /\u003e Ex: Arduino UNO -- (PIN 2) --\u003e 433Mhz receiver ====\u003e Oregon sensors \u003cbr /\u003e",
      "website": "https://github.com/Mickaelh51/Arduino-Oregon-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Mickaelh51/Oregon-1.0.1.zip",
      "archiveFileName": "Oregon-1.0.1.zip",
      "size": 8685,
      "checksum": "SHA-256:aaa2dd276f29cf98a81fdc194458fe5d48237183030f4be5e9cd90c789477840"
    },
    {
      "name": "Etherkit JTEncode",
      "version": "1.0.0",
      "author": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "maintainer": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "sentence": "Generate JT65, JT9, JT4, and WSPR symbols on your Arduino.",
      "paragraph": "This library very simply generates a set of channel symbols for JT65, JT9, JT4, or WSPR based on the user providing a properly formatted Type 6 message for JT65, JT9, or JT4 (which is 13 valid characters) or a callsign, Maidenhead grid locator, and power output for WSPR. When paired with a synthesizer that can output frequencies in fine, phase-continuous tuning steps (such as the Si5351), then a beacon or telemetry transmitter can be created which can change the transmitted characters as needed from the Arduino.",
      "website": "https://github.com/etherkit/JTEncode",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/etherkit/Etherkit_JTEncode-1.0.0.zip",
      "archiveFileName": "Etherkit_JTEncode-1.0.0.zip",
      "size": 30583,
      "checksum": "SHA-256:897b93b05112241ffad3bce3346de10e117258d93b3df20c3ad64762065e2fef"
    },
    {
      "name": "Etherkit JTEncode",
      "version": "1.0.1",
      "author": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "maintainer": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "sentence": "Generate JT65, JT9, JT4, and WSPR symbols on your Arduino.",
      "paragraph": "This library very simply generates a set of channel symbols for JT65, JT9, JT4, or WSPR based on the user providing a properly formatted Type 6 message for JT65, JT9, or JT4 (which is 13 valid characters) or a callsign, Maidenhead grid locator, and power output for WSPR. When paired with a synthesizer that can output frequencies in fine, phase-continuous tuning steps (such as the Si5351), then a beacon or telemetry transmitter can be created which can change the transmitted characters as needed from the Arduino.",
      "website": "https://github.com/etherkit/JTEncode",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/etherkit/Etherkit_JTEncode-1.0.1.zip",
      "archiveFileName": "Etherkit_JTEncode-1.0.1.zip",
      "size": 30628,
      "checksum": "SHA-256:da7643e0f4d3cb9089f803888ce4f4363517c346dba901bb9c874e7c17683315"
    },
    {
      "name": "Etherkit JTEncode",
      "version": "1.1.0",
      "author": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "maintainer": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "sentence": "Generate JT65, JT9, JT4, WSPR, and FSQ symbols on your Arduino.",
      "paragraph": "This library very simply generates a set of channel symbols for JT65, JT9, JT4, or WSPR based on the user providing a properly formatted Type 6 message for JT65, JT9, or JT4 (which is 13 valid characters) or a callsign, Maidenhead grid locator, and power output for WSPR. It will also generate an arbitrary FSQ message of up to 200 characters in both directed and non-directed format. When paired with a synthesizer that can output frequencies in fine, phase-continuous tuning steps (such as the Si5351), then a beacon or telemetry transmitter can be created which can change the transmitted characters as needed from the Arduino.",
      "website": "https://github.com/etherkit/JTEncode",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/etherkit/Etherkit_JTEncode-1.1.0.zip",
      "archiveFileName": "Etherkit_JTEncode-1.1.0.zip",
      "size": 34179,
      "checksum": "SHA-256:5191208e175ec08711be105b1cd97be366a6e6d4c113c8d864f93208773e0d63"
    },
    {
      "name": "Etherkit JTEncode",
      "version": "1.1.1",
      "author": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "maintainer": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "sentence": "Generate JT65, JT9, JT4, WSPR, and FSQ symbols on your Arduino.",
      "paragraph": "This library very simply generates a set of channel symbols for JT65, JT9, JT4, or WSPR based on the user providing a properly formatted Type 6 message for JT65, JT9, or JT4 (which is 13 valid characters) or a callsign, Maidenhead grid locator, and power output for WSPR. It will also generate an arbitrary FSQ message of up to 200 characters in both directed and non-directed format. When paired with a synthesizer that can output frequencies in fine, phase-continuous tuning steps (such as the Si5351), then a beacon or telemetry transmitter can be created which can change the transmitted characters as needed from the Arduino.",
      "website": "https://github.com/etherkit/JTEncode",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/etherkit/Etherkit_JTEncode-1.1.1.zip",
      "archiveFileName": "Etherkit_JTEncode-1.1.1.zip",
      "size": 34185,
      "checksum": "SHA-256:81f97b4cdd084c3c86708bf06fbf0ff4e29cee60f329391353a8dc9ac96c8e78"
    },
    {
      "name": "Etherkit JTEncode",
      "version": "1.1.2",
      "author": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "maintainer": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "sentence": "Generate JT65, JT9, JT4, WSPR, and FSQ symbols on your Arduino.",
      "paragraph": "This library very simply generates a set of channel symbols for JT65, JT9, JT4, or WSPR based on the user providing a properly formatted Type 6 message for JT65, JT9, or JT4 (which is 13 valid characters) or a callsign, Maidenhead grid locator, and power output for WSPR. It will also generate an arbitrary FSQ message of up to 200 characters in both directed and non-directed format. When paired with a synthesizer that can output frequencies in fine, phase-continuous tuning steps (such as the Si5351), then a beacon or telemetry transmitter can be created which can change the transmitted characters as needed from the Arduino.",
      "website": "https://github.com/etherkit/JTEncode",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/etherkit/Etherkit_JTEncode-1.1.2.zip",
      "archiveFileName": "Etherkit_JTEncode-1.1.2.zip",
      "size": 34903,
      "checksum": "SHA-256:ced2988832e9001aa284333764eedb76299b9a4f13ee8c0482cb8d4ca34e8148"
    },
    {
      "name": "Etherkit JTEncode",
      "version": "1.1.3",
      "author": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "maintainer": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "sentence": "Generate JT65, JT9, JT4, WSPR, and FSQ symbols on your Arduino.",
      "paragraph": "This library very simply generates a set of channel symbols for JT65, JT9, JT4, or WSPR based on the user providing a properly formatted Type 6 message for JT65, JT9, or JT4 (which is 13 valid characters) or a callsign, Maidenhead grid locator, and power output for WSPR. It will also generate an arbitrary FSQ message of up to 200 characters in both directed and non-directed format. When paired with a synthesizer that can output frequencies in fine, phase-continuous tuning steps (such as the Si5351), then a beacon or telemetry transmitter can be created which can change the transmitted characters as needed from the Arduino.",
      "website": "https://github.com/etherkit/JTEncode",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/etherkit/Etherkit_JTEncode-1.1.3.zip",
      "archiveFileName": "Etherkit_JTEncode-1.1.3.zip",
      "size": 34938,
      "checksum": "SHA-256:da1cfa9b18c17d24f3d5d2767ae12a9d7e97c99d24e08098f048b4cc171db63e"
    },
    {
      "name": "virtmem",
      "version": "1.0.0",
      "author": "Rick Helmus",
      "maintainer": "Rick Helmus",
      "sentence": "Virtual memory library to easily extend RAM.",
      "paragraph": "This library makes it easy to use external sources such as SPI RAM or a computer to extend the available memory.",
      "website": "https://github.com/rhelmus/virtmem",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/rhelmus/virtmem-1.0.0.zip",
      "archiveFileName": "virtmem-1.0.0.zip",
      "size": 57884,
      "checksum": "SHA-256:f7bd8c780f57c978aab625899f34f70c20db1cc3a6bded95f3d4617bb01bbabf"
    },
    {
      "name": "ESPert",
      "version": "1.1.1",
      "author": "Jimmy\u003cjimmy@espert.io\u003e",
      "maintainer": "ESPert Team\u003cjimmy@espert.io\u003e",
      "sentence": "ESPert library for Arduino IDE",
      "paragraph": "The library for ESPert's IoT boards for using with Arduino IDE.  Espert Pte. Ltd. is an Internet of Things (IoT) technology company that is headquartered in Singapore with subsidiary office in Thailand. We developed the ESPresso series, our own line of Arduino-compatible, Wi-Fi-enabled, development and solutions boards based on Espressif System's ESP8266 chipset.",
      "website": "http://github.com/JimmySoftware/ESPert",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/JimmySoftware/ESPert-1.1.1.zip",
      "archiveFileName": "ESPert-1.1.1.zip",
      "size": 1255228,
      "checksum": "SHA-256:68a2a036a0163fd36af9847bceb88eb96ce16ab5ea4a9d5ae17ab3ed5ff5a5a5"
    },
    {
      "name": "ESPert",
      "version": "1.1.2",
      "author": "Jimmy\u003cjimmy@espert.io\u003e",
      "maintainer": "ESPert Team\u003cjimmy@espert.io\u003e",
      "sentence": "ESPert library for Arduino IDE",
      "paragraph": "The library for ESPert's IoT boards for using with Arduino IDE.  Espert Pte. Ltd. is an Internet of Things (IoT) technology company that is headquartered in Singapore with subsidiary office in Thailand. We developed the ESPresso series, our own line of Arduino-compatible, Wi-Fi-enabled, development and solutions boards based on Espressif System's ESP8266 chipset.",
      "website": "http://github.com/JimmySoftware/ESPert",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/JimmySoftware/ESPert-1.1.2.zip",
      "archiveFileName": "ESPert-1.1.2.zip",
      "size": 1255344,
      "checksum": "SHA-256:6a33b6dd47041691b79b6e5369e89cf783c2c2bb57504218ce04942a37ce90a3"
    },
    {
      "name": "ESPert",
      "version": "1.1.3",
      "author": "Jimmy\u003cjimmy@espert.io\u003e",
      "maintainer": "ESPert Team\u003cjimmy@espert.io\u003e",
      "sentence": "ESPert library for Arduino IDE",
      "paragraph": "The library for ESPert's IoT boards for using with Arduino IDE.  Espert Pte. Ltd. is an Internet of Things (IoT) technology company that is headquartered in Singapore with subsidiary office in Thailand. We developed the ESPresso series, our own line of Arduino-compatible, Wi-Fi-enabled, development and solutions boards based on Espressif System's ESP8266 chipset.",
      "website": "http://github.com/JimmySoftware/ESPert",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/JimmySoftware/ESPert-1.1.3.zip",
      "archiveFileName": "ESPert-1.1.3.zip",
      "size": 1255703,
      "checksum": "SHA-256:3b57074d8a851d200789b83a5ffd7da3609b58fe12878f08ac3724f58f57acf2"
    },
    {
      "name": "ESPert",
      "version": "1.1.4",
      "author": "Jimmy\u003cjimmy@espert.io\u003e",
      "maintainer": "ESPert Team\u003cjimmy@espert.io\u003e",
      "sentence": "ESPert library for Arduino IDE",
      "paragraph": "The library for ESPert's IoT boards for using with Arduino IDE.  Espert Pte. Ltd. is an Internet of Things (IoT) technology company that is headquartered in Singapore with subsidiary office in Thailand. We developed the ESPresso series, our own line of Arduino-compatible, Wi-Fi-enabled, development and solutions boards based on Espressif System's ESP8266 chipset.",
      "website": "http://github.com/JimmySoftware/ESPert",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/JimmySoftware/ESPert-1.1.4.zip",
      "archiveFileName": "ESPert-1.1.4.zip",
      "size": 1304464,
      "checksum": "SHA-256:1f52befc70f9fc5b97fa41896a955ff03a768be0031d106e60f0026e5103cf09"
    },
    {
      "name": "ESPert",
      "version": "1.1.5",
      "author": "Jimmy\u003cjimmy@espert.io\u003e",
      "maintainer": "ESPert Team\u003cjimmy@espert.io\u003e",
      "sentence": "ESPert library for Arduino IDE",
      "paragraph": "The library for ESPert's IoT boards for using with Arduino IDE.  Espert Pte. Ltd. is an Internet of Things (IoT) technology company that is headquartered in Singapore with subsidiary office in Thailand. We developed the ESPresso series, our own line of Arduino-compatible, Wi-Fi-enabled, development and solutions boards based on Espressif System's ESP8266 chipset.",
      "website": "http://github.com/JimmySoftware/ESPert",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/JimmySoftware/ESPert-1.1.5.zip",
      "archiveFileName": "ESPert-1.1.5.zip",
      "size": 1304643,
      "checksum": "SHA-256:5ba6939c1b3ad977b0804be6f4c4f55304786a8e5f719c6cad825ecd38ad96f2"
    },
    {
      "name": "ESPert",
      "version": "1.2.0",
      "author": "Jimmy\u003cjimmy@espert.io\u003e",
      "maintainer": "ESPert Team\u003cjimmy@espert.io\u003e",
      "sentence": "ESPert library for Arduino IDE",
      "paragraph": "The library for ESPert's IoT boards for using with Arduino IDE.  Espert Pte. Ltd. is an Internet of Things (IoT) technology company that is headquartered in Singapore with subsidiary office in Thailand. We developed the ESPresso series, our own line of Arduino-compatible, Wi-Fi-enabled, development and solutions boards based on Espressif System's ESP8266 chipset.",
      "website": "http://github.com/JimmySoftware/ESPert",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/JimmySoftware/ESPert-1.2.0.zip",
      "archiveFileName": "ESPert-1.2.0.zip",
      "size": 1305931,
      "checksum": "SHA-256:6bda9aa52334fac1dce0f5c7636d636f660647fa5a10a51d27d070cd9e2ff08a"
    },
    {
      "name": "ESPert",
      "version": "1.2.2",
      "author": "Jimmy\u003cjimmy@espert.io\u003e",
      "maintainer": "ESPert Team\u003cjimmy@espert.io\u003e",
      "sentence": "ESPert library for Arduino IDE",
      "paragraph": "The library for ESPert's IoT boards for using with Arduino IDE.  Espert Pte. Ltd. is an Internet of Things (IoT) technology company that is headquartered in Singapore with subsidiary office in Thailand. We developed the ESPresso series, our own line of Arduino-compatible, Wi-Fi-enabled, development and solutions boards based on Espressif System's ESP8266 chipset.",
      "website": "http://github.com/JimmySoftware/ESPert",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/JimmySoftware/ESPert-1.2.2.zip",
      "archiveFileName": "ESPert-1.2.2.zip",
      "size": 1401589,
      "checksum": "SHA-256:7fa8f45717f89653629fc7901d540cf0b497a063b75cfbe672d4fcf5b5fb967d"
    },
    {
      "name": "ESPert",
      "version": "1.2.4",
      "author": "Jimmy\u003cjimmy@espert.io\u003e",
      "maintainer": "ESPert Team\u003cjimmy@espert.io\u003e",
      "sentence": "ESPert library for Arduino IDE",
      "paragraph": "The library for ESPert's IoT boards for using with Arduino IDE.  Espert Pte. Ltd. is an Internet of Things (IoT) technology company that is headquartered in Singapore with subsidiary office in Thailand. We developed the ESPresso series, our own line of Arduino-compatible, Wi-Fi-enabled, development and solutions boards based on Espressif System's ESP8266 chipset.",
      "website": "http://github.com/JimmySoftware/ESPert",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/JimmySoftware/ESPert-1.2.4.zip",
      "archiveFileName": "ESPert-1.2.4.zip",
      "size": 1578264,
      "checksum": "SHA-256:8667727b73818243060777dc0dc5ee4040852b8deb7e2539ad599c90987cdd1c"
    },
    {
      "name": "ESPert",
      "version": "1.2.5",
      "author": "Jimmy\u003cjimmy@espert.io\u003e",
      "maintainer": "ESPert Team\u003cjimmy@espert.io\u003e",
      "sentence": "ESPert library for Arduino IDE",
      "paragraph": "The library for ESPert's IoT boards for using with Arduino IDE.  Espert Pte. Ltd. is an Internet of Things (IoT) technology company that is headquartered in Singapore with subsidiary office in Thailand. We developed the ESPresso series, our own line of Arduino-compatible, Wi-Fi-enabled, development and solutions boards based on Espressif System's ESP8266 chipset.",
      "website": "http://github.com/JimmySoftware/ESPert",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/JimmySoftware/ESPert-1.2.5.zip",
      "archiveFileName": "ESPert-1.2.5.zip",
      "size": 2294504,
      "checksum": "SHA-256:d482092d9e378dc44fc5da4972203eca6aad98a60c4ab713bfb69f2ec5a461bb"
    },
    {
      "name": "ESPert",
      "version": "1.2.6",
      "author": "Jimmy\u003cjimmy@espert.io\u003e",
      "maintainer": "ESPert Team\u003cjimmy@espert.io\u003e",
      "sentence": "ESPert library for Arduino IDE",
      "paragraph": "The library for ESPert's IoT boards for using with Arduino IDE.  Espert Pte. Ltd. is an Internet of Things (IoT) technology company that is headquartered in Singapore with subsidiary office in Thailand. We developed the ESPresso series, our own line of Arduino-compatible, Wi-Fi-enabled, development and solutions boards based on Espressif System's ESP8266 chipset.",
      "website": "http://github.com/JimmySoftware/ESPert",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/JimmySoftware/ESPert-1.2.6.zip",
      "archiveFileName": "ESPert-1.2.6.zip",
      "size": 2304780,
      "checksum": "SHA-256:69e2e0dee3d0a416174d2a386c6309def6e598571dd55191e51437f6c5ca3011"
    },
    {
      "name": "WiFiManager",
      "version": "0.10.0",
      "author": "tzapu",
      "maintainer": "tzapu",
      "sentence": "ESP8266 WiFi Connection manager with fallback web configuration portal",
      "paragraph": "Library for configuring ESP8266 modules WiFi credentials at runtime.",
      "website": "https://github.com/tzapu/WiFiManager.git",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/tzapu/WiFiManager-0.10.0.zip",
      "archiveFileName": "WiFiManager-0.10.0.zip",
      "size": 29193,
      "checksum": "SHA-256:196ca753980d53c7d5d513327a2140024a95c21e6fa5b23f6b973b320ded04ad"
    },
    {
      "name": "WiFiManager",
      "version": "0.11.0",
      "author": "tzapu",
      "maintainer": "tzapu",
      "sentence": "ESP8266 WiFi Connection manager with fallback web configuration portal",
      "paragraph": "Library for configuring ESP8266 modules WiFi credentials at runtime.",
      "website": "https://github.com/tzapu/WiFiManager.git",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/tzapu/WiFiManager-0.11.0.zip",
      "archiveFileName": "WiFiManager-0.11.0.zip",
      "size": 31594,
      "checksum": "SHA-256:cade8ba705656e40a1a2114f930d3a81c1076ca672fe96b6364d1d5507ef0718"
    },
    {
      "name": "WiFiManager",
      "version": "0.12.0",
      "author": "tzapu",
      "maintainer": "tzapu",
      "sentence": "ESP8266 WiFi Connection manager with fallback web configuration portal",
      "paragraph": "Library for configuring ESP8266 modules WiFi credentials at runtime.",
      "website": "https://github.com/tzapu/WiFiManager.git",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/tzapu/WiFiManager-0.12.0.zip",
      "archiveFileName": "WiFiManager-0.12.0.zip",
      "size": 31551,
      "checksum": "SHA-256:f215754686c55c23da49d30de50620463bc3c7c584e21e151486c771642e7767"
    },
    {
      "name": "WiFiManager",
      "version": "0.5.0",
      "author": "tzapu",
      "maintainer": "tzapu",
      "sentence": "ESP8266 WiFi Connection manager with fallback web configuration portal",
      "paragraph": "Library for configuring ESP8266 modules WiFi credentials at runtime.",
      "website": "https://github.com/tzapu/WiFiManager.git",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/tzapu/WiFiManager-0.5.0.zip",
      "archiveFileName": "WiFiManager-0.5.0.zip",
      "size": 13752,
      "checksum": "SHA-256:151fa42eff492b0918f1726a18c78d4de199fc494a09092dce342218e1b34903"
    },
    {
      "name": "WiFiManager",
      "version": "0.6.0",
      "author": "tzapu",
      "maintainer": "tzapu",
      "sentence": "ESP8266 WiFi Connection manager with fallback web configuration portal",
      "paragraph": "Library for configuring ESP8266 modules WiFi credentials at runtime.",
      "website": "https://github.com/tzapu/WiFiManager.git",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/tzapu/WiFiManager-0.6.0.zip",
      "archiveFileName": "WiFiManager-0.6.0.zip",
      "size": 21037,
      "checksum": "SHA-256:57b99e97ef5cfa0ba0a1239efb2f0465e19fac79bb9cfb25ad6fb802a565d97f"
    },
    {
      "name": "WiFiManager",
      "version": "0.7.0",
      "author": "tzapu",
      "maintainer": "tzapu",
      "sentence": "ESP8266 WiFi Connection manager with fallback web configuration portal",
      "paragraph": "Library for configuring ESP8266 modules WiFi credentials at runtime. **USE version 0.6 together with stable 2.0.0 ESP8266 core for Arduino and use 0.7 for core 2.1.0.rc2 or newer**",
      "website": "https://github.com/tzapu/WiFiManager.git",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/tzapu/WiFiManager-0.7.0.zip",
      "archiveFileName": "WiFiManager-0.7.0.zip",
      "size": 27154,
      "checksum": "SHA-256:7f5fbed11edf116ff8861213650f63d10d96d224f5e74a964addecf2f828fca8"
    },
    {
      "name": "WiFiManager",
      "version": "0.8.0",
      "author": "tzapu",
      "maintainer": "tzapu",
      "sentence": "ESP8266 WiFi Connection manager with fallback web configuration portal",
      "paragraph": "Library for configuring ESP8266 modules WiFi credentials at runtime. **USE version 0.6 together with stable 2.0.0 ESP8266 core for Arduino and use 0.7 for core 2.1.0.rc2 or newer**",
      "website": "https://github.com/tzapu/WiFiManager.git",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/tzapu/WiFiManager-0.8.0.zip",
      "archiveFileName": "WiFiManager-0.8.0.zip",
      "size": 28748,
      "checksum": "SHA-256:af9f9465cae1b79751d149d561c65509ca20f2aafbc7e3ac8b91f1b16fbed424"
    },
    {
      "name": "WiFiManager",
      "version": "0.9.0",
      "author": "tzapu",
      "maintainer": "tzapu",
      "sentence": "ESP8266 WiFi Connection manager with fallback web configuration portal",
      "paragraph": "Library for configuring ESP8266 modules WiFi credentials at runtime. **USE version 0.6 together with stable 2.0.0 ESP8266 core for Arduino and use 0.7 for core 2.1.0.rc2 or newer**",
      "website": "https://github.com/tzapu/WiFiManager.git",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/tzapu/WiFiManager-0.9.0.zip",
      "archiveFileName": "WiFiManager-0.9.0.zip",
      "size": 28674,
      "checksum": "SHA-256:73adadbc3373bb5e8423a6984f2bf1309ae31543341a20e6d4f7ee1e166f2642"
    },
    {
      "name": "Chronos",
      "version": "1.0.0",
      "author": "Pat Deegan",
      "maintainer": "Pat Deegan \u003carduino-lib@flyingcarsandstuff.com\u003e",
      "sentence": "Easily manipulate date-times to perform scheduling, setup calendars and find points in time that are of interest.",
      "paragraph": "Chronos is comprised of three major components: DateTimes and Spans (OO date-time objects that can be manipulated in many ways), Marks (sets of calendar point events like \"every Sunday at 15h00\") and Calendar Events (actual events with fixed or repeating datetimes of specific duration, and the scheduling functions needed to find/manipulate events of interest).",
      "website": "http://flyingcarsandstuff.com/projects/chronos/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/psychogenic/Chronos-1.0.0.zip",
      "archiveFileName": "Chronos-1.0.0.zip",
      "size": 67854,
      "checksum": "SHA-256:c9149a062ffbdc3883e2c4d86d2493d9792f2a156ceba8bfea189816f62be5be"
    },
    {
      "name": "Chronos",
      "version": "1.1.0",
      "author": "Pat Deegan",
      "maintainer": "Pat Deegan \u003carduino-lib@flyingcarsandstuff.com\u003e",
      "sentence": "Easily manipulate date-times to perform scheduling, setup calendars and find points in time that are of interest.",
      "paragraph": "Chronos is comprised of three major components: DateTimes and Spans (OO date-time objects that can be manipulated in many ways), Marks (sets of calendar point events like \"every Sunday at 15h00\") and Calendar Events (actual events with fixed or repeating datetimes of specific duration, and the scheduling functions needed to find/manipulate events of interest).",
      "website": "http://flyingcarsandstuff.com/projects/chronos/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/psychogenic/Chronos-1.1.0.zip",
      "archiveFileName": "Chronos-1.1.0.zip",
      "size": 67952,
      "checksum": "SHA-256:1a9b340425082af0f7e01235e68c24685949b808966c74f41c35c944daa92792"
    },
    {
      "name": "Lewis",
      "version": "0.1.0",
      "author": "Patrick Fenner \u003ccontact@defproc.co.uk\u003e",
      "maintainer": "Patrick Fenner \u003ccontact@defproc.co.uk\u003e",
      "sentence": "A morse code stream/print interpreter",
      "paragraph": "Lewis helps with receiving and sending morse code from a microcontroller",
      "website": "https://git.defproc.co.uk/DefProc/Lewis/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DefProc/Lewis-0.1.0.zip",
      "archiveFileName": "Lewis-0.1.0.zip",
      "size": 13823,
      "checksum": "SHA-256:70336ea7824ded71131ac8eb7c008b6970abed9c9a40e7d0233bc20180fd02e6"
    },
    {
      "name": "Lewis",
      "version": "0.1.1",
      "author": "Patrick Fenner \u003ccontact@defproc.co.uk\u003e",
      "maintainer": "Patrick Fenner \u003ccontact@defproc.co.uk\u003e",
      "sentence": "A morse code stream/print interpreter",
      "paragraph": "Lewis helps with receiving and sending morse code from a microcontroller",
      "website": "https://git.defproc.co.uk/DefProc/Lewis/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DefProc/Lewis-0.1.1.zip",
      "archiveFileName": "Lewis-0.1.1.zip",
      "size": 13823,
      "checksum": "SHA-256:4d56ae0a41e10c77e732caed0a90235a1c910543e7d18cd7b546dbc0d53452b8"
    },
    {
      "name": "Lewis",
      "version": "0.1.2",
      "author": "Patrick Fenner \u003ccontact@defproc.co.uk\u003e",
      "maintainer": "Patrick Fenner \u003ccontact@defproc.co.uk\u003e",
      "sentence": "A morse code stream/print interpreter",
      "paragraph": "Lewis helps with receiving and sending morse code from a microcontroller",
      "website": "https://git.defproc.co.uk/DefProc/Lewis/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DefProc/Lewis-0.1.2.zip",
      "archiveFileName": "Lewis-0.1.2.zip",
      "size": 13827,
      "checksum": "SHA-256:bb9d46ff7a1a5680f4e6d3cd82e076c5d23ef4ce03dcc09fd498f47927422ab6"
    },
    {
      "name": "Goldilocks Analogue DAC Library",
      "version": "1.0.0",
      "author": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "maintainer": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "sentence": "DAC (MCP4822) functions for Goldilocks Analogue",
      "paragraph": "Firmware to control a MCP4822 (12 bit, dual channel, SPI) DAC using the AVR UART MSPI Mode, as implemented on the Goldilocks Analogue. Also provides IIR High, Band, and Low Pass filtering functions.",
      "website": "https://github.com/feilipu/Goldilocks_Analogue_DAC_Library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/feilipu/Goldilocks_Analogue_DAC_Library-1.0.0.zip",
      "archiveFileName": "Goldilocks_Analogue_DAC_Library-1.0.0.zip",
      "size": 13152,
      "checksum": "SHA-256:129bd20f8c106f1ba910caf6ae0b2b78d64626808ae82e9b4c4dd5ba8d688acd"
    },
    {
      "name": "Goldilocks Analogue DAC Library",
      "version": "1.0.3",
      "author": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "maintainer": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "sentence": "DAC (MCP4822) functions for Goldilocks Analogue",
      "paragraph": "Firmware to control a MCP4822 (12 bit, dual channel, SPI) DAC using the AVR UART MSPI Mode, as implemented on the Goldilocks Analogue. Also provides IIR High, Band, and Low Pass filtering functions.",
      "website": "https://github.com/feilipu/Goldilocks_Analogue_DAC_Library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/feilipu/Goldilocks_Analogue_DAC_Library-1.0.3.zip",
      "archiveFileName": "Goldilocks_Analogue_DAC_Library-1.0.3.zip",
      "size": 13250,
      "checksum": "SHA-256:c806cf26db61655a91a4d7d25c610264ace97e2b826e8c3e28266e9eb97ba8c2"
    },
    {
      "name": "AVR Standard C Time Library",
      "version": "1.8.0-4",
      "author": "Michael Duane Rice \u003cmike@mikerice.name\u003e",
      "maintainer": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "sentence": "Time functions for AVR (Goldilocks, Uno, Leonardo, Mega).",
      "paragraph": "The implementation aspires to conform with ISO/IEC 9899 (C90). However, due to limitations of the target processor and the nature of its development environment, a practical AVR implementation must of necessity deviate from the C90 standard time.h. Will work with AVR ATmega with a clock crystal on Timer 2.",
      "website": "https://github.com/feilipu/Arduino_RTC_Library",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/feilipu/AVR_Standard_C_Time_Library-1.8.0-4.zip",
      "archiveFileName": "AVR_Standard_C_Time_Library-1.8.0-4.zip",
      "size": 70467,
      "checksum": "SHA-256:8d84381f19887a4b42333aad01c48460c3a975c22e3e2204cbd7f3d3fac0ea2a"
    },
    {
      "name": "Low-Power",
      "version": "1.4.0",
      "author": "Rocket Scream Electronics",
      "maintainer": "Rocket Scream Electronics",
      "sentence": "Lightweight power management library",
      "paragraph": "Lightweight power management library",
      "website": "https://github.com/rocketscream/Low-Power",
      "category": "Other",
      "architectures": [
        "avr",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/rocketscream/Low_Power-1.4.0.zip",
      "archiveFileName": "Low_Power-1.4.0.zip",
      "size": 9330,
      "checksum": "SHA-256:25bafc683ae0bf1ae980b5ad07298ea24916e269bc770436fedba6e9ffd3e086"
    },
    {
      "name": "Low-Power",
      "version": "1.5.0",
      "author": "Rocket Scream Electronics",
      "maintainer": "Rocket Scream Electronics",
      "sentence": "Lightweight power management library",
      "paragraph": "Lightweight power management library",
      "website": "https://github.com/rocketscream/Low-Power",
      "category": "Other",
      "architectures": [
        "avr",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/rocketscream/Low_Power-1.5.0.zip",
      "archiveFileName": "Low_Power-1.5.0.zip",
      "size": 9430,
      "checksum": "SHA-256:8c79540ac62eb5f0234764c9425bba663419f4d16e57d44bb5c065db7c6a1d0f"
    },
    {
      "name": "Low-Power",
      "version": "1.6.0",
      "author": "Rocket Scream Electronics",
      "maintainer": "Rocket Scream Electronics",
      "sentence": "Lightweight power management library",
      "paragraph": "Lightweight power management library",
      "website": "https://github.com/rocketscream/Low-Power",
      "category": "Other",
      "architectures": [
        "avr",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/rocketscream/Low_Power-1.6.0.zip",
      "archiveFileName": "Low_Power-1.6.0.zip",
      "size": 9615,
      "checksum": "SHA-256:73f4c16da581689d98c8ddd9012b3e395f222b18db85ca7962b748e19617e802"
    },
    {
      "name": "Goldilocks Analogue SPI RAM Library",
      "version": "1.0.0",
      "author": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "maintainer": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "sentence": "Firmware for SPI solid state memory (including SRAM, FRAM, EEPROM) devices for Goldilocks Analogue",
      "paragraph": "Firmware to control SPI SRAM, FRAM, and EEPROM as implemented on the Goldilocks Analogue. Also provides Ring Buffer support for all memory types.",
      "website": "https://github.com/feilipu/Goldilocks_Analogue_SPIRAM_Library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/feilipu/Goldilocks_Analogue_SPI_RAM_Library-1.0.0.zip",
      "archiveFileName": "Goldilocks_Analogue_SPI_RAM_Library-1.0.0.zip",
      "size": 17080,
      "checksum": "SHA-256:a5668f40a4db4bb708eb2cc11fd7847c45ebf4f8344362fc78c7af5251b9b048"
    },
    {
      "name": "Goldilocks Analogue SPI RAM Library",
      "version": "1.0.2",
      "author": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "maintainer": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "sentence": "Firmware for SPI solid state memory (including SRAM, FRAM, EEPROM) devices for Goldilocks Analogue",
      "paragraph": "Firmware to control SPI SRAM, FRAM, and EEPROM as implemented on the Goldilocks Analogue. Also provides Ring Buffer support for all memory types.",
      "website": "https://github.com/feilipu/Goldilocks_Analogue_SPIRAM_Library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/feilipu/Goldilocks_Analogue_SPI_RAM_Library-1.0.2.zip",
      "archiveFileName": "Goldilocks_Analogue_SPI_RAM_Library-1.0.2.zip",
      "size": 17104,
      "checksum": "SHA-256:779113c2352946258e797afce148adce6da13a22316a4d46be68ed2e9c4b14b1"
    },
    {
      "name": "FCWRobot_Model2",
      "version": "1.0.1",
      "author": "foothillscommunityworkshop",
      "maintainer": "Dan B \u003cdanzargm@yahoo.com\u003e",
      "sentence": "The library array that is needed for the FCW Robot Model2.",
      "paragraph": "The Model-2 Educational Robot and trainer is a learning robot for all ages.",
      "website": "https://github.com/foothillscommunityworkshop/Robot-Model-2",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/foothillscommunityworkshop/FCWRobot_Model2-1.0.1.zip",
      "archiveFileName": "FCWRobot_Model2-1.0.1.zip",
      "size": 112298,
      "checksum": "SHA-256:5fdd82d42eba04300de195388a49032487d0ede105f362422f773cb6c2a40b22"
    },
    {
      "name": "RingBuf",
      "version": "1.1.0",
      "author": "D. Aaron Wisner (daw268@cornell.edu)",
      "maintainer": "D. Aaron Wisner (daw268@cornell.edu)",
      "sentence": "A library for buffering items into a ring (circular) buffer",
      "paragraph": "This library is perfect for capturing pin states, timestamps, etc.. during an ISR. Then in void loop(), the buffer can be asynchronously processed whenever your program has free time.",
      "website": "https://github.com/wizard97/ArduinoRingBuffer",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/wizard97/RingBuf-1.1.0.zip",
      "archiveFileName": "RingBuf-1.1.0.zip",
      "size": 7602,
      "checksum": "SHA-256:db4d7b59df4fd28b612433d3d6b8abfd465327309a327c570bf39aa278dc649f"
    },
    {
      "name": "RingBuf",
      "version": "1.2.0",
      "author": "D. Aaron Wisner (daw268@cornell.edu)",
      "maintainer": "D. Aaron Wisner (daw268@cornell.edu)",
      "sentence": "A library for buffering items into a ring (circular) buffer",
      "paragraph": "This library is perfect for capturing pin states, timestamps, etc.. during an ISR. Then in void loop(), the buffer can be asynchronously processed whenever your program has free time.",
      "website": "https://github.com/wizard97/ArduinoRingBuffer",
      "category": "Data Storage",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/wizard97/RingBuf-1.2.0.zip",
      "archiveFileName": "RingBuf-1.2.0.zip",
      "size": 7799,
      "checksum": "SHA-256:4023247f60a8867b03e6481c3447433aac0980b77e85ba5764511980ab704cb5"
    },
    {
      "name": "RingBuf",
      "version": "1.3.0",
      "author": "D. Aaron Wisner (daw268@cornell.edu)",
      "maintainer": "D. Aaron Wisner (daw268@cornell.edu)",
      "sentence": "A library for buffering items into a ring (circular/FIFO) buffer",
      "paragraph": "This library is perfect for capturing pin states, timestamps, etc.. during an ISR. Then in void loop(), the buffer can be asynchronously processed whenever your program has free time.",
      "website": "https://github.com/wizard97/ArduinoRingBuffer",
      "category": "Data Storage",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/wizard97/RingBuf-1.3.0.zip",
      "archiveFileName": "RingBuf-1.3.0.zip",
      "size": 8381,
      "checksum": "SHA-256:6f43d0fee043b7edb0b432263f9273ad796b1996602ab359c8e5d8e0185c3fb7"
    },
    {
      "name": "RingBuf",
      "version": "2.0.0",
      "author": "D. Aaron Wisner (daw268@cornell.edu)",
      "maintainer": "D. Aaron Wisner (daw268@cornell.edu)",
      "sentence": "A library for buffering items into a ring (circular/FIFO) buffer",
      "paragraph": "This library is perfect for capturing pin states, timestamps, etc.. during an ISR. Then in void loop(), the buffer can be asynchronously processed whenever your program has free time.",
      "website": "https://github.com/wizard97/ArduinoRingBuffer",
      "category": "Data Storage",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/wizard97/RingBuf-2.0.0.zip",
      "archiveFileName": "RingBuf-2.0.0.zip",
      "size": 8993,
      "checksum": "SHA-256:04a13a013a54628312e06aa752ddbcded4124318d43ba8062f00ffde339f4378"
    },
    {
      "name": "MFRC522",
      "version": "1.1.2",
      "author": "GithubCommunity",
      "maintainer": "miguelbalboa",
      "sentence": "Arduino RFID Library for MFRC522 (SPI)",
      "paragraph": "Read/Write a RFID Card or Tag using the ISO/IEC 14443A/MIFARE interface.",
      "website": "https://github.com/miguelbalboa/rfid",
      "category": "Communication",
      "architectures": [
        "avr",
        "STM32F1"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/miguelbalboa/MFRC522-1.1.2.zip",
      "archiveFileName": "MFRC522-1.1.2.zip",
      "size": 1103919,
      "checksum": "SHA-256:1ea180cabe9593b40ca4aee487c566bf1d971a2080e9aab8d5175af62e1d076a"
    },
    {
      "name": "MFRC522",
      "version": "1.1.3",
      "author": "GithubCommunity",
      "maintainer": "miguelbalboa",
      "sentence": "Arduino RFID Library for MFRC522 (SPI)",
      "paragraph": "Read/Write a RFID Card or Tag using the ISO/IEC 14443A/MIFARE interface.",
      "website": "https://github.com/miguelbalboa/rfid",
      "category": "Communication",
      "architectures": [
        "avr",
        "STM32F1",
        "teensy"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/miguelbalboa/MFRC522-1.1.3.zip",
      "archiveFileName": "MFRC522-1.1.3.zip",
      "size": 1104309,
      "checksum": "SHA-256:53306fc43f7f55e06d33da93a9bd7baacd8146b859b17f37741b259dd8d95bda"
    },
    {
      "name": "MFRC522",
      "version": "1.1.4",
      "author": "GithubCommunity",
      "maintainer": "miguelbalboa",
      "sentence": "Arduino RFID Library for MFRC522 (SPI)",
      "paragraph": "Read/Write a RFID Card or Tag using the ISO/IEC 14443A/MIFARE interface.",
      "website": "https://github.com/miguelbalboa/rfid",
      "category": "Communication",
      "architectures": [
        "avr",
        "STM32F1",
        "teensy"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/miguelbalboa/MFRC522-1.1.4.zip",
      "archiveFileName": "MFRC522-1.1.4.zip",
      "size": 1103584,
      "checksum": "SHA-256:0eadd8ef25a59e1993496f581263c7842be5ea7967c7e625849e89e25b2e7508"
    },
    {
      "name": "MFRC522",
      "version": "1.1.5",
      "author": "GithubCommunity",
      "maintainer": "miguelbalboa",
      "sentence": "Arduino RFID Library for MFRC522 (SPI)",
      "paragraph": "Read/Write a RFID Card or Tag using the ISO/IEC 14443A/MIFARE interface.",
      "website": "https://github.com/miguelbalboa/rfid",
      "category": "Communication",
      "architectures": [
        "avr",
        "STM32F1",
        "teensy"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/miguelbalboa/MFRC522-1.1.5.zip",
      "archiveFileName": "MFRC522-1.1.5.zip",
      "size": 1105422,
      "checksum": "SHA-256:d9272f414130f69179e9004e60c856419ce93185c79969a1a1f6a4dd4424585a"
    },
    {
      "name": "MFRC522",
      "version": "1.1.6",
      "author": "GithubCommunity",
      "maintainer": "miguelbalboa",
      "sentence": "Arduino RFID Library for MFRC522 (SPI)",
      "paragraph": "Read/Write a RFID Card or Tag using the ISO/IEC 14443A/MIFARE interface.",
      "website": "https://github.com/miguelbalboa/rfid",
      "category": "Communication",
      "architectures": [
        "avr",
        "STM32F1",
        "teensy"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/miguelbalboa/MFRC522-1.1.6.zip",
      "archiveFileName": "MFRC522-1.1.6.zip",
      "size": 1105446,
      "checksum": "SHA-256:500e6a3f9772dcb3d20d7efb8f5dc0282fb820c0b164bf2eb4887b20e9369e70"
    },
    {
      "name": "MFRC522",
      "version": "1.1.7",
      "author": "GithubCommunity",
      "maintainer": "miguelbalboa",
      "sentence": "Arduino RFID Library for MFRC522 (SPI)",
      "paragraph": "Read/Write a RFID Card or Tag using the ISO/IEC 14443A/MIFARE interface.",
      "website": "https://github.com/miguelbalboa/rfid",
      "category": "Communication",
      "architectures": [
        "avr",
        "STM32F1",
        "teensy"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/miguelbalboa/MFRC522-1.1.7.zip",
      "archiveFileName": "MFRC522-1.1.7.zip",
      "size": 1114360,
      "checksum": "SHA-256:3756081f482b84fcd4fe47452c12101f8fee150713c8fcab1959fb5ca3ae0972"
    },
    {
      "name": "MFRC522",
      "version": "1.1.8",
      "author": "GithubCommunity",
      "maintainer": "miguelbalboa",
      "sentence": "Arduino RFID Library for MFRC522 (SPI)",
      "paragraph": "Read/Write a RFID Card or Tag using the ISO/IEC 14443A/MIFARE interface.",
      "website": "https://github.com/miguelbalboa/rfid",
      "category": "Communication",
      "architectures": [
        "avr",
        "STM32F1",
        "teensy"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/miguelbalboa/MFRC522-1.1.8.zip",
      "archiveFileName": "MFRC522-1.1.8.zip",
      "size": 1116481,
      "checksum": "SHA-256:2c111bcc8bc9d28b56900e57b092bbc829607da86a5a476d7feb232a681af54e"
    },
    {
      "name": "MFRC522",
      "version": "1.1.9",
      "author": "GithubCommunity",
      "maintainer": "miguelbalboa",
      "sentence": "Arduino RFID Library for MFRC522 (SPI)",
      "paragraph": "Read/Write a RFID Card or Tag using the ISO/IEC 14443A/MIFARE interface.",
      "website": "https://github.com/miguelbalboa/rfid",
      "category": "Communication",
      "architectures": [
        "avr",
        "STM32F1",
        "teensy"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/miguelbalboa/MFRC522-1.1.9.zip",
      "archiveFileName": "MFRC522-1.1.9.zip",
      "size": 1117744,
      "checksum": "SHA-256:949c23f7f5ac62bdcbd7d4778327e2886a8e255922426f2579eb1aaf74273abd"
    },
    {
      "name": "MFRC522",
      "version": "1.2.0",
      "author": "GithubCommunity",
      "maintainer": "miguelbalboa",
      "sentence": "Arduino RFID Library for MFRC522 (SPI)",
      "paragraph": "Read/Write a RFID Card or Tag using the ISO/IEC 14443A/MIFARE interface.",
      "website": "https://github.com/miguelbalboa/rfid",
      "category": "Communication",
      "architectures": [
        "avr",
        "STM32F1",
        "teensy"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/miguelbalboa/MFRC522-1.2.0.zip",
      "archiveFileName": "MFRC522-1.2.0.zip",
      "size": 1119669,
      "checksum": "SHA-256:b1245c605dd03bb19250dc7212197273c6a9e6fe1c6fae3aef3a21f32aefa8fa"
    },
    {
      "name": "MFRC522",
      "version": "1.2.1",
      "author": "GithubCommunity",
      "maintainer": "miguelbalboa",
      "sentence": "Arduino RFID Library for MFRC522 (SPI)",
      "paragraph": "Read/Write a RFID Card or Tag using the ISO/IEC 14443A/MIFARE interface.",
      "website": "https://github.com/miguelbalboa/rfid",
      "category": "Communication",
      "architectures": [
        "avr",
        "STM32F1",
        "teensy"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/miguelbalboa/MFRC522-1.2.1.zip",
      "archiveFileName": "MFRC522-1.2.1.zip",
      "size": 1120361,
      "checksum": "SHA-256:3f843f3cb17d7fa21b9f360d7e38aadf4f54f848354c406adeddcba79c4b9534"
    },
    {
      "name": "MFRC522",
      "version": "1.3.0",
      "author": "GithubCommunity",
      "maintainer": "miguelbalboa",
      "sentence": "Arduino RFID Library for MFRC522 (SPI)",
      "paragraph": "Read/Write a RFID Card or Tag using the ISO/IEC 14443A/MIFARE interface.",
      "website": "https://github.com/miguelbalboa/rfid",
      "category": "Communication",
      "architectures": [
        "avr",
        "STM32F1",
        "teensy"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/miguelbalboa/MFRC522-1.3.0.zip",
      "archiveFileName": "MFRC522-1.3.0.zip",
      "size": 1131891,
      "checksum": "SHA-256:ffe94fac3ed9ba45e2119e76ace4ba97011f9206d639eef85923952e7af472ac"
    },
    {
      "name": "MFRC522",
      "version": "1.3.1",
      "author": "GithubCommunity",
      "maintainer": "miguelbalboa",
      "sentence": "Arduino RFID Library for MFRC522 (SPI)",
      "paragraph": "Read/Write a RFID Card or Tag using the ISO/IEC 14443A/MIFARE interface.",
      "website": "https://github.com/miguelbalboa/rfid",
      "category": "Communication",
      "architectures": [
        "avr",
        "STM32F1",
        "teensy"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/miguelbalboa/MFRC522-1.3.1.zip",
      "archiveFileName": "MFRC522-1.3.1.zip",
      "size": 1131977,
      "checksum": "SHA-256:0d205760e1ee97b0bb057083d776137b9e94f6869699764f51713058b5493f08"
    },
    {
      "name": "MFRC522",
      "version": "1.3.2",
      "author": "GithubCommunity",
      "maintainer": "miguelbalboa",
      "sentence": "Arduino RFID Library for MFRC522 (SPI)",
      "paragraph": "Read/Write a RFID Card or Tag using the ISO/IEC 14443A/MIFARE interface.",
      "website": "https://github.com/miguelbalboa/rfid",
      "category": "Communication",
      "architectures": [
        "avr",
        "STM32F1",
        "teensy",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/miguelbalboa/MFRC522-1.3.2.zip",
      "archiveFileName": "MFRC522-1.3.2.zip",
      "size": 1131998,
      "checksum": "SHA-256:9fd1dc092ec4d3822e3c9a4204d69ea40dc3ead61b6b855c43feae7ba267930e"
    },
    {
      "name": "MFRC522",
      "version": "1.3.3",
      "author": "GithubCommunity",
      "maintainer": "miguelbalboa",
      "sentence": "Arduino RFID Library for MFRC522 (SPI)",
      "paragraph": "Read/Write a RFID Card or Tag using the ISO/IEC 14443A/MIFARE interface.",
      "website": "https://github.com/miguelbalboa/rfid",
      "category": "Communication",
      "architectures": [
        "avr",
        "STM32F1",
        "teensy",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/miguelbalboa/MFRC522-1.3.3.zip",
      "archiveFileName": "MFRC522-1.3.3.zip",
      "size": 1132125,
      "checksum": "SHA-256:1a799744b2f770c2cef14c0d7951964853fe83c7bf4eb194db15a3c926cb1a65"
    },
    {
      "name": "MFRC522",
      "version": "1.3.4",
      "author": "GithubCommunity",
      "maintainer": "miguelbalboa",
      "sentence": "Arduino RFID Library for MFRC522 (SPI)",
      "paragraph": "Read/Write a RFID Card or Tag using the ISO/IEC 14443A/MIFARE interface.",
      "website": "https://github.com/miguelbalboa/rfid",
      "category": "Communication",
      "architectures": [
        "avr",
        "STM32F1",
        "teensy",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/miguelbalboa/MFRC522-1.3.4.zip",
      "archiveFileName": "MFRC522-1.3.4.zip",
      "size": 1133800,
      "checksum": "SHA-256:a97e01f02bb9723fec796c60f43783366d7c682eab772a58fd933ac3f74d956a"
    },
    {
      "name": "MFRC522",
      "version": "1.3.5",
      "author": "GithubCommunity",
      "maintainer": "miguelbalboa",
      "sentence": "Arduino RFID Library for MFRC522 (SPI)",
      "paragraph": "Read/Write a RFID Card or Tag using the ISO/IEC 14443A/MIFARE interface.",
      "website": "https://github.com/miguelbalboa/rfid",
      "category": "Communication",
      "architectures": [
        "avr",
        "STM32F1",
        "teensy",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/miguelbalboa/MFRC522-1.3.5.zip",
      "archiveFileName": "MFRC522-1.3.5.zip",
      "size": 1134070,
      "checksum": "SHA-256:f8765e132eba27c4ea8d2d9c3cbd5b9e4cddacdb4f5a225b4ef3bc98711e70aa"
    },
    {
      "name": "Syncano Arduino Library",
      "version": "0.1.0",
      "author": "EYEDEA-IO \u003csupport@syncano.com\u003e",
      "maintainer": "Syncano \u003csupport@syncano.com\u003e",
      "sentence": "A library that provides access to Syncano",
      "paragraph": "Provides methods to access the REST API of Syncano.io from Arduino.",
      "website": "https://github.com/Syncano/syncano-arduino",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Syncano/Syncano_Arduino_Library-0.1.0.zip",
      "archiveFileName": "Syncano_Arduino_Library-0.1.0.zip",
      "size": 83575,
      "checksum": "SHA-256:4ea1bb507f1886473d01da0220efa337bfe3a681d82873e56cf5115e048a63d1"
    },
    {
      "name": "Syncano Arduino Library",
      "version": "0.2.0",
      "author": "EYEDEA-IO \u003csupport@syncano.com\u003e",
      "maintainer": "Syncano \u003csupport@syncano.com\u003e",
      "sentence": "A library that provides access to Syncano",
      "paragraph": "Provides methods to access the REST API of Syncano.io from Arduino.",
      "website": "https://github.com/Syncano/syncano-arduino",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Syncano/Syncano_Arduino_Library-0.2.0.zip",
      "archiveFileName": "Syncano_Arduino_Library-0.2.0.zip",
      "size": 83810,
      "checksum": "SHA-256:c52ee40c6e7ccc25a4e4ad4f4584fc39820e474aaad49513673fb3522bacbbd7"
    },
    {
      "name": "MySQL Connector Arduino",
      "version": "1.1.1",
      "author": "Dr. Charles Bell",
      "maintainer": "Dr. Charles Bell \u003cchuck.bell@oracle.com\u003e",
      "sentence": "Connects Arduino using Arduino Ethernet-compatible shields including the Ethernet Shield and WiFi Shield.",
      "paragraph": "You can use this library to connect your Arduino project directly to a MySQL server without using an intermediate computer or a web- or cloud-based service. Having direct access to a database server means you can store data acquired from your project as well as check values stored in tables on the server. This also means you can setup your own, local MySQL server to store your data further removing the need for Internet connectivity. If that is not an issue, you can still connect to and store data on a MySQL server via your network, Internet, or even in the cloud!",
      "website": "https://github.com/ChuckBell/MySQL_Connector_Arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ChuckBell/MySQL_Connector_Arduino-1.1.1.zip",
      "archiveFileName": "MySQL_Connector_Arduino-1.1.1.zip",
      "size": 416246,
      "checksum": "SHA-256:3fe71000fdaf7c13ece906f315c5635b8703c6e1dda31b18a278b244102e340f"
    },
    {
      "name": "LSM6",
      "version": "1.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "LSM6 accelerometer and gyro library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with ST's LSM6DS33 accelerometer and gyro.",
      "website": "https://github.com/pololu/lsm6-arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/LSM6-1.0.0.zip",
      "archiveFileName": "LSM6-1.0.0.zip",
      "size": 8313,
      "checksum": "SHA-256:17d14cb9cb74782926328374577d35d5df7ae99e581030f6f492c891246f3c8b"
    },
    {
      "name": "LIS3MDL",
      "version": "1.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "LIS3MDL magnetometer library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with ST's LIS3MDL magnetometer.",
      "website": "https://github.com/pololu/lis3mdl-arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/LIS3MDL-1.0.0.zip",
      "archiveFileName": "LIS3MDL-1.0.0.zip",
      "size": 8059,
      "checksum": "SHA-256:d34797c4b0560bfdb6df561db40f3b3466e96a1775fe18d675458778755ac6b5"
    },
    {
      "name": "ArduinoINA219",
      "version": "1.0.0",
      "author": "DeCristofaro John \u003cjohngineer@yahoo.com\u003e, Jukka-Pekka Sarjanen \u003cjukka-Pekka.sarjanen@kone.com\u003e, gandy92 \u003cgandy92@googlemail.com\u003e, Flavius Bindea \u003cflav@flav.com\u003e",
      "maintainer": "Flavius Bindea \u003cflav@flav.com\u003e",
      "sentence": "INA219 hi-side i2c current/power sensor Library",
      "paragraph": "INA219 hi-side i2c current/power sensor Library",
      "website": "https://github.com/flav1972/ArduinoINA219",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/flav1972/ArduinoINA219-1.0.0.zip",
      "archiveFileName": "ArduinoINA219-1.0.0.zip",
      "size": 228361,
      "checksum": "SHA-256:b8101da78192a5cbed4c78df499b0580d8a9088f404d564e3a5437758cd0a6b9"
    },
    {
      "name": "ArduinoINA219",
      "version": "1.0.1",
      "author": "DeCristofaro John \u003cjohngineer@yahoo.com\u003e, Jukka-Pekka Sarjanen \u003cjukka-Pekka.sarjanen@kone.com\u003e, gandy92 \u003cgandy92@googlemail.com\u003e, Flavius Bindea \u003cflav@flav.com\u003e",
      "maintainer": "Flavius Bindea \u003cflav@flav.com\u003e",
      "sentence": "INA219 hi-side i2c current/power sensor Library",
      "paragraph": "INA219 hi-side i2c current/power sensor Library",
      "website": "https://github.com/flav1972/ArduinoINA219",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/flav1972/ArduinoINA219-1.0.1.zip",
      "archiveFileName": "ArduinoINA219-1.0.1.zip",
      "size": 230354,
      "checksum": "SHA-256:465343f48fba28765ab74f2abfede837daba3247445655215e05656d57bdb41e"
    },
    {
      "name": "SimpleDHT",
      "version": "1.0.0",
      "author": "Winlin \u003cwinlin@vip.126.com\u003e",
      "maintainer": "Winlin \u003cwinlin@vip.126.com\u003e",
      "sentence": "Arduino Temp \u0026 Humidity Sensors for DHT11 etc.",
      "paragraph": "Simple pure C code with lots of comments, strictly follow the standard DHT protocol, supports 0.5HZ or 1HZ sampling rate.",
      "website": "https://github.com/winlinvip/simple-dht",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/winlinvip/SimpleDHT-1.0.0.zip",
      "archiveFileName": "SimpleDHT-1.0.0.zip",
      "size": 6769,
      "checksum": "SHA-256:ee9a6379dccdeaecd5252c03ddcf1d20fedff7931fe9b3aa924bced18514c389"
    },
    {
      "name": "SimpleDHT",
      "version": "1.0.1",
      "author": "Winlin \u003cwinlin@vip.126.com\u003e",
      "maintainer": "Winlin \u003cwinlin@vip.126.com\u003e",
      "sentence": "Arduino Temp \u0026 Humidity Sensors for DHT11 etc.",
      "paragraph": "Simple C++ code with lots of comments, strictly follow the standard DHT protocol, supports 0.5HZ or 1HZ sampling rate.",
      "website": "https://github.com/winlinvip/simple-dht",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/winlinvip/SimpleDHT-1.0.1.zip",
      "archiveFileName": "SimpleDHT-1.0.1.zip",
      "size": 6752,
      "checksum": "SHA-256:0dbf598f6a12b3d4adefcc7081a498f2fd2931a040bfffc11a1fce93b478b703"
    },
    {
      "name": "SimpleDHT",
      "version": "1.0.2",
      "author": "Winlin \u003cwinlin@vip.126.com\u003e",
      "maintainer": "Winlin \u003cwinlin@vip.126.com\u003e",
      "sentence": "Arduino Temp \u0026 Humidity Sensors for DHT11 etc.",
      "paragraph": "Simple C++ code with lots of comments, strictly follow the standard DHT protocol, supports 0.5HZ or 1HZ sampling rate.",
      "website": "https://github.com/winlinvip/simple-dht",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/winlinvip/SimpleDHT-1.0.2.zip",
      "archiveFileName": "SimpleDHT-1.0.2.zip",
      "size": 6757,
      "checksum": "SHA-256:2befa9345f7980bd74e3b010edf462617291101a810522ab45020d789113a421"
    },
    {
      "name": "Cytron G15 Shield",
      "version": "2.0.0",
      "author": "Cytron Technologies Sdn Bhd \u003csupport@cytron.com.my\u003e",
      "maintainer": "Cytron Technologies Sdn Bhd \u003cwww.cytron.com.my\u003e",
      "sentence": "Library for controlling G15 Cube Servo",
      "paragraph": "This library works with Cytron G15 Shield",
      "website": "https://github.com/CytronTechnologies/Cytron-G15Shield",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CytronTechnologies/Cytron_G15_Shield-2.0.0.zip",
      "archiveFileName": "Cytron_G15_Shield-2.0.0.zip",
      "size": 32166,
      "checksum": "SHA-256:104a87eb38477bc3baf91b6c9f6754c9ba0d9347d2f486d2a8cc7c5938027656"
    },
    {
      "name": "statsdclient",
      "version": "0.0.1",
      "author": "Jan Szumiec",
      "maintainer": "Jan Szumiec \u003cjan.szumiec@gmail.com\u003e",
      "sentence": "Report metrics using statsd",
      "paragraph": "This is a universal library that will let you use either TCP or UDP to put together packets to be sent to a statsd listener. Depends on nothing, so you can get it to work with any networking shield using a bit of glue code.",
      "website": "https://github.com/jasiek/arduino-statsdclient",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jasiek/statsdclient-0.0.1.zip",
      "archiveFileName": "statsdclient-0.0.1.zip",
      "size": 2118,
      "checksum": "SHA-256:de8c833974df43a6cef3e393ee9662e2b35ea88bed528d02efad90306b943633"
    },
    {
      "name": "Plotter",
      "version": "1.0.0",
      "author": "Devin Conley \u003cdevinconley@jhu.edu\u003e",
      "maintainer": "Devin Conley \u003cdevinconley@jhu.edu\u003e",
      "sentence": "an Arduino library for easy plotting using Processing via serial communication.",
      "paragraph": "Supports multi-variable plots against time as well as 2D plotting of an X vs Y variable. Multiple graphs can be displayed at once, with all formatting and scaling handled automatically. Various listener options are provided, including stand-alone options so that the Processing software does NOT need to be downloaded. The listener requires no modification, just start the program on the host computer.",
      "website": "https://github.com/devinconley/ArduinoPlotter",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/devinconley/Plotter-1.0.0.zip",
      "archiveFileName": "Plotter-1.0.0.zip",
      "size": 6564,
      "checksum": "SHA-256:24af718454b4ef43b6f02c860f41b7a6826c7c6fd101fd3f8947a6ff11a01ed5"
    },
    {
      "name": "Plotter",
      "version": "1.0.1",
      "author": "Devin Conley \u003cdevinconley@jhu.edu\u003e",
      "maintainer": "Devin Conley \u003cdevinconley@jhu.edu\u003e",
      "sentence": "An Arduino library for easy plotting on host computer via serial communication.",
      "paragraph": "Supports multi-variable plots against time as well as 2D plotting of an X vs Y variable. Multiple graphs can be displayed at once, with all formatting and scaling handled automatically. A stand-alone listener application, written with Processing, is provided.",
      "website": "https://github.com/devinconley/ArduinoPlotter",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/devinconley/Plotter-1.0.1.zip",
      "archiveFileName": "Plotter-1.0.1.zip",
      "size": 6489,
      "checksum": "SHA-256:d5bb3febc13a6ef2a97e96faa6d52485970616830511431d8f9c549ed1fa9d69"
    },
    {
      "name": "Plotter",
      "version": "1.1.0",
      "author": "Devin Conley \u003cdevinconley@jhu.edu\u003e",
      "maintainer": "Devin Conley \u003cdevinconley@jhu.edu\u003e",
      "sentence": "An Arduino library for easy plotting on host computer via serial communication.",
      "paragraph": "Supports multi-variable plots against time as well as 2D plotting of an X vs Y variable. Multiple graphs can be displayed at once, with all formatting and scaling handled automatically. A stand-alone listener application, written with Processing, is provided.",
      "website": "https://github.com/devinconley/ArduinoPlotter",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/devinconley/Plotter-1.1.0.zip",
      "archiveFileName": "Plotter-1.1.0.zip",
      "size": 7041,
      "checksum": "SHA-256:afb11e0dc84d098d7e8a96d657e90a20422fd6131142c1a53676f5c8a0b918a0"
    },
    {
      "name": "Plotter",
      "version": "2.0.0",
      "author": "Devin Conley \u003cdevinconley@jhu.edu\u003e",
      "maintainer": "Devin Conley \u003cdevinconley@jhu.edu\u003e",
      "sentence": "An Arduino library for easy plotting on host computer via serial communication.",
      "paragraph": "Supports multi-variable plots against time as well as 2D plotting of an X vs Y variable. Multiple graphs can be displayed at once, with all formatting and scaling handled automatically. A stand-alone listener application, written with Processing, is provided.",
      "website": "https://github.com/devinconley/Arduino-Plotter",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/devinconley/Plotter-2.0.0.zip",
      "archiveFileName": "Plotter-2.0.0.zip",
      "size": 7980,
      "checksum": "SHA-256:d0b0a84eb31d2d60fbf214e8f0d098a2f19ed1b5ed23bf849c2233d612d2579a"
    },
    {
      "name": "Plotter",
      "version": "2.1.0",
      "author": "Devin Conley \u003cdevinconley@jhu.edu\u003e",
      "maintainer": "Devin Conley \u003cdevinconley@jhu.edu\u003e",
      "sentence": "An Arduino library for easy plotting on host computer via serial communication.",
      "paragraph": "Supports multi-variable plots against time as well as 2D plotting of an X vs Y variable. Multiple graphs can be displayed at once, with all formatting and scaling handled automatically. A stand-alone listener application, written with Processing, is provided.",
      "website": "https://github.com/devinaconley/arduino-plotter",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/devinconley/Plotter-2.1.0.zip",
      "archiveFileName": "Plotter-2.1.0.zip",
      "size": 10007,
      "checksum": "SHA-256:d161d36884b6d486206572c31f8428c45673be32258b74ee8c82db1d551f5560"
    },
    {
      "name": "Plotter",
      "version": "2.2.0",
      "author": "Devin Conley \u003cdevinconley@jhu.edu\u003e",
      "maintainer": "Devin Conley \u003cdevinconley@jhu.edu\u003e",
      "sentence": "An Arduino library for easy plotting on host computer via serial communication.",
      "paragraph": "Supports multi-variable plots against time as well as 2D plotting of an X vs Y variable. Multiple graphs can be displayed at once, with all formatting and scaling handled automatically. A stand-alone listener application, written with Processing, is provided.",
      "website": "https://github.com/devinaconley/arduino-plotter",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/devinconley/Plotter-2.2.0.zip",
      "archiveFileName": "Plotter-2.2.0.zip",
      "size": 10324,
      "checksum": "SHA-256:633e0f83f6a0d31b1751ad88838c0060cc8034ba011f44c8df4383b7332ae7b0"
    },
    {
      "name": "Plotter",
      "version": "2.2.1",
      "author": "Devin Conley \u003cdevinconley@jhu.edu\u003e",
      "maintainer": "Devin Conley \u003cdevinconley@jhu.edu\u003e",
      "sentence": "An Arduino library for easy plotting on host computer via serial communication.",
      "paragraph": "Supports multi-variable plots against time as well as 2D plotting of an X vs Y variable. Multiple graphs can be displayed at once, with all formatting and scaling handled automatically. A stand-alone listener application, written with Processing, is provided.",
      "website": "https://github.com/devinaconley/arduino-plotter",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/devinconley/Plotter-2.2.1.zip",
      "archiveFileName": "Plotter-2.2.1.zip",
      "size": 10317,
      "checksum": "SHA-256:9b75a1363bf4faef90e1c6a9e07dd3db6c492ffc0527edcbdd8d3a98c54c1631"
    },
    {
      "name": "Plotter",
      "version": "2.3.0",
      "author": "Devin Conley \u003cdevinconley@jhu.edu\u003e",
      "maintainer": "Devin Conley \u003cdevinconley@jhu.edu\u003e",
      "sentence": "An Arduino library for easy plotting on host computer via serial communication.",
      "paragraph": "Supports multi-variable plots against time as well as 2D plotting of an X vs Y variable. Multiple graphs can be displayed at once, with all formatting and scaling handled automatically. A stand-alone listener application, written with Processing, is provided.",
      "website": "https://github.com/devinaconley/arduino-plotter",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/devinconley/Plotter-2.3.0.zip",
      "archiveFileName": "Plotter-2.3.0.zip",
      "size": 10398,
      "checksum": "SHA-256:c99671b6c5bc6e68209bec0140e7568dbca7d42f17048407f8ce48cd5c4b86f9"
    },
    {
      "name": "Plotter",
      "version": "2.3.1",
      "author": "Devin Conley \u003cdevinconley@jhu.edu\u003e",
      "maintainer": "Devin Conley \u003cdevinconley@jhu.edu\u003e",
      "sentence": "An Arduino library for easy plotting on host computer via serial communication.",
      "paragraph": "Supports multi-variable plots against time as well as 2D plotting of an X vs Y variable. Multiple graphs can be displayed at once, with all formatting and scaling handled automatically. A stand-alone listener application, written with Processing, is provided.",
      "website": "https://github.com/devinaconley/arduino-plotter",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/devinconley/Plotter-2.3.1.zip",
      "archiveFileName": "Plotter-2.3.1.zip",
      "size": 10389,
      "checksum": "SHA-256:63b544305ff5f2af22934cf2e1b1bdc1069eb4b93ea79ce0df4ddb7bafcac906"
    },
    {
      "name": "Plotter",
      "version": "2.3.2",
      "author": "Devin Conley \u003cdevinconley@jhu.edu\u003e",
      "maintainer": "Devin Conley \u003cdevinconley@jhu.edu\u003e",
      "sentence": "An Arduino library for easy plotting on host computer via serial communication.",
      "paragraph": "Supports multi-variable plots against time as well as 2D plotting of an X vs Y variable. Multiple graphs can be displayed at once, with all formatting and scaling handled automatically. A stand-alone listener application, written with Processing, is provided.",
      "website": "https://github.com/devinaconley/arduino-plotter",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/devinconley/Plotter-2.3.2.zip",
      "archiveFileName": "Plotter-2.3.2.zip",
      "size": 10388,
      "checksum": "SHA-256:c93d956bc14464a7169d9ee0d9a92f55620b306495435bf4b7c8089b5d5a8eed"
    },
    {
      "name": "Ubidots FONA Library",
      "version": "1.1.0",
      "author": "Ubidots",
      "maintainer": "Ubidots \u003cdevel@ubidots.com\u003e",
      "sentence": "Ubidots library for the Adafruit FONA",
      "paragraph": "Ubidots library for the Adafruit FONA",
      "website": "https://github.com/ubidots/ubidots-fona",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ubidots/Ubidots_FONA_Library-1.1.0.zip",
      "archiveFileName": "Ubidots_FONA_Library-1.1.0.zip",
      "size": 5768,
      "checksum": "SHA-256:2fed4f76ec9ef8d8a3333178399352f039641445354d24ba43bd91c4dd8ad640"
    },
    {
      "name": "Rtc by Makuna",
      "version": "1.0.0",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes interfacing DS1307 and DS3231 Real Time Clock modules easy.",
      "paragraph": "Includes deep support of module features, including temperature, alarms and memory storage if present.  Tested on esp8266.",
      "website": "https://github.com/Makuna/Rtc",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/Rtc_by_Makuna-1.0.0.zip",
      "archiveFileName": "Rtc_by_Makuna-1.0.0.zip",
      "size": 21688,
      "checksum": "SHA-256:ea74a54afbe9898dbb448c738fca64011ce5585a8f4e6ab34dbddb8835ca99cd"
    },
    {
      "name": "Rtc by Makuna",
      "version": "1.0.1",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes interfacing DS1307 and DS3231 Real Time Clock modules easy.",
      "paragraph": "Includes deep support of module features, including temperature, alarms and memory storage if present.  Tested on esp8266.",
      "website": "https://github.com/Makuna/Rtc",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/Rtc_by_Makuna-1.0.1.zip",
      "archiveFileName": "Rtc_by_Makuna-1.0.1.zip",
      "size": 22106,
      "checksum": "SHA-256:ae8f7eb4c5137468f0279e6f3303adef1b3b2b53e2a5572451ecd23dec333f27"
    },
    {
      "name": "Rtc by Makuna",
      "version": "2.0.0",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes interfacing DS1307 and DS3231 Real Time Clock modules easy.",
      "paragraph": "Includes deep support of module features, including temperature, alarms and memory storage if present.  Tested on esp8266.",
      "website": "https://github.com/Makuna/Rtc",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/Rtc_by_Makuna-2.0.0.zip",
      "archiveFileName": "Rtc_by_Makuna-2.0.0.zip",
      "size": 21259,
      "checksum": "SHA-256:c107bfd0e214ae0e0649852fce1de4c1468a5d9b5018ece9b3e84bea4b7d9019"
    },
    {
      "name": "Rtc by Makuna",
      "version": "2.0.1",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes interfacing DS1307 and DS3231 Real Time Clock modules easy.",
      "paragraph": "Includes deep support of module features, including temperature, alarms and memory storage if present.  Tested on esp8266.",
      "website": "https://github.com/Makuna/Rtc/wiki",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/Rtc_by_Makuna-2.0.1.zip",
      "archiveFileName": "Rtc_by_Makuna-2.0.1.zip",
      "size": 21369,
      "checksum": "SHA-256:0940b750630e83e92bf70cefcec919ab53854089927095a1fb5fab1136306769"
    },
    {
      "name": "Embedis",
      "version": "1.0.0",
      "author": "David Turnbull, Tom Moxon",
      "maintainer": "The PatternAgents, LLC \u003cpatternagents@gmail.com\u003e",
      "sentence": "An Embedded Dictionary Server.",
      "paragraph": "Provides a command line interface and persistent key-value store.",
      "website": "https://github.com/thingSoC/embedis",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thingSoC/Embedis-1.0.0.zip",
      "archiveFileName": "Embedis-1.0.0.zip",
      "size": 66130,
      "checksum": "SHA-256:854c7cdddb628420a57a236bd4876e7fdd7240a08655095250307660135cd858"
    },
    {
      "name": "Embedis",
      "version": "1.1.0",
      "author": "David Turnbull, Tom Moxon",
      "maintainer": "The PatternAgents, LLC \u003cpatternagents@gmail.com\u003e",
      "sentence": "An Embedded Dictionary Server.",
      "paragraph": "Provides a command line interface and persistent key-value store.",
      "website": "https://github.com/thingSoC/embedis",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thingSoC/Embedis-1.1.0.zip",
      "archiveFileName": "Embedis-1.1.0.zip",
      "size": 1408222,
      "checksum": "SHA-256:7abbe6054a9c6f645da91bb6b345cb3be1440f839e9b01c29f66a99da96f0bf9"
    },
    {
      "name": "Embedis",
      "version": "1.1.4",
      "author": "David Turnbull, Tom Moxon",
      "maintainer": "The PatternAgents, LLC \u003cpatternagents@gmail.com\u003e",
      "sentence": "An Embedded Dictionary Server.",
      "paragraph": "Provides a command line interface and persistent key-value store.",
      "website": "https://github.com/thingSoC/embedis",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thingSoC/Embedis-1.1.4.zip",
      "archiveFileName": "Embedis-1.1.4.zip",
      "size": 26400849,
      "checksum": "SHA-256:85e891c5da39222d3b121fa66854df3bacbc9968481e7b72ba89df512b2913c4"
    },
    {
      "name": "Embedis",
      "version": "1.1.5",
      "author": "David Turnbull, Tom Moxon",
      "maintainer": "The PatternAgents, LLC \u003cpatternagents@gmail.com\u003e",
      "sentence": "An Embedded Dictionary Server.",
      "paragraph": "Provides a command line interface and persistent key-value store.",
      "website": "https://github.com/thingSoC/embedis",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thingSoC/Embedis-1.1.5.zip",
      "archiveFileName": "Embedis-1.1.5.zip",
      "size": 49353285,
      "checksum": "SHA-256:7ba34917d14fa4fc03a0f648a89b45011629c9af0fe6865a1e650487bcaf49ee"
    },
    {
      "name": "Embedis",
      "version": "1.1.6",
      "author": "David Turnbull, Tom Moxon",
      "maintainer": "The PatternAgents, LLC \u003cpatternagents@gmail.com\u003e",
      "sentence": "An Embedded Dictionary Server.",
      "paragraph": "Provides a command line interface and persistent key-value store.",
      "website": "https://github.com/thingSoC/embedis",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thingSoC/Embedis-1.1.6.zip",
      "archiveFileName": "Embedis-1.1.6.zip",
      "size": 26421506,
      "checksum": "SHA-256:cae43fee0053dc1e3f7f08dee8326f105b4e179a9e92ec951245e30a1ad03777"
    },
    {
      "name": "Embedis",
      "version": "1.1.7",
      "author": "David Turnbull, Tom Moxon",
      "maintainer": "The PatternAgents, LLC \u003cpatternagents@gmail.com\u003e",
      "sentence": "An Embedded Dictionary Server.",
      "paragraph": "Provides a command line interface and persistent key-value store.",
      "website": "https://github.com/thingSoC/embedis",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thingSoC/Embedis-1.1.7.zip",
      "archiveFileName": "Embedis-1.1.7.zip",
      "size": 26421511,
      "checksum": "SHA-256:178bdb6320335a63f731258aafc546275cac164f3ac2687baa7d7f70020cb753"
    },
    {
      "name": "Embedis",
      "version": "1.1.8",
      "author": "David Turnbull, Tom Moxon",
      "maintainer": "The PatternAgents, LLC \u003cpatternagents@gmail.com\u003e",
      "sentence": "An Embedded Dictionary Server.",
      "paragraph": "Provides a command line interface and persistent key-value store.",
      "website": "https://github.com/thingSoC/embedis",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thingSoC/Embedis-1.1.8.zip",
      "archiveFileName": "Embedis-1.1.8.zip",
      "size": 26420384,
      "checksum": "SHA-256:0f89ecd3d355ee3ad1f3f3e1b54e2c2ad939b76ceb481f70f609027d300c5bfa"
    },
    {
      "name": "Embedis",
      "version": "1.1.9",
      "author": "David Turnbull, Tom Moxon",
      "maintainer": "The PatternAgents, LLC \u003cpatternagents@gmail.com\u003e",
      "sentence": "An Embedded Dictionary Server.",
      "paragraph": "Provides a command line interface and persistent key-value store.",
      "website": "https://github.com/thingSoC/embedis",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thingSoC/Embedis-1.1.9.zip",
      "archiveFileName": "Embedis-1.1.9.zip",
      "size": 26420413,
      "checksum": "SHA-256:1f262db8126f28cc943a172c720e04e832d2b863c368c74496116483ef2a7f52"
    },
    {
      "name": "Embedis",
      "version": "1.2.0",
      "author": "David Turnbull, Tom Moxon",
      "maintainer": "The PatternAgents, LLC \u003cpatternagents@gmail.com\u003e",
      "sentence": "An Embedded Dictionary Server.",
      "paragraph": "Provides a command line interface and persistent key-value store.",
      "website": "https://github.com/thingSoC/embedis",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thingSoC/Embedis-1.2.0.zip",
      "archiveFileName": "Embedis-1.2.0.zip",
      "size": 26420770,
      "checksum": "SHA-256:4f07eaa46d84667cf2f01c1af5750d69a8da2db6f8f3aae13e0aa797255b51fd"
    },
    {
      "name": "Sodaq_dataflash",
      "version": "1.0.1",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@sodaq.com\u003e",
      "sentence": "An Arduino library for the AT45DB dataflash as used on SODAQ boards.",
      "website": "https://github.com/SodaqMoja/Sodaq_dataflash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/Sodaq_dataflash-1.0.1.zip",
      "archiveFileName": "Sodaq_dataflash-1.0.1.zip",
      "size": 22591,
      "checksum": "SHA-256:1051b28b5600a639991c187768be26ffc95d4a9d255223ebebfbf75310128e5c"
    },
    {
      "name": "Sodaq_dataflash",
      "version": "1.0.3",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@sodaq.com\u003e",
      "sentence": "An Arduino library for the AT45DB dataflash as used on SODAQ boards.",
      "paragraph": "It supports reading and writing to pages via buf1",
      "website": "https://github.com/SodaqMoja/Sodaq_dataflash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SodaqMoja/Sodaq_dataflash-1.0.3.zip",
      "archiveFileName": "Sodaq_dataflash-1.0.3.zip",
      "size": 22632,
      "checksum": "SHA-256:842f6764e689c3a1b21117722c9c6759cac5d080591bae053e3bfb8ba0bb9c8e"
    },
    {
      "name": "Task by Makuna",
      "version": "1.0.0",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes creating complex mulitple task projects easy.",
      "paragraph": "This implements a Nonpreemptive multitasking library which is effecient in speed and memory, which is good for small Arduino hardware.  While multitasking is an advanced topic, our friends at AdaFruit have a great article on it here (https://learn.adafruit.com/multi-tasking-the-arduino-part-1?view=all),  Samples include blinking an LED without using delay(), monitoring and reacting to a button press, and cross task messaging. Tested on esp8266.",
      "website": "https://github.com/Makuna/Task",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/Task_by_Makuna-1.0.0.zip",
      "archiveFileName": "Task_by_Makuna-1.0.0.zip",
      "size": 23894,
      "checksum": "SHA-256:cbd5368d4499080cd135ad7e23f5393010ff148d0a6863e2baf46213c3e5f211"
    },
    {
      "name": "Task by Makuna",
      "version": "1.1.0",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes creating complex mulitple task projects easy.",
      "paragraph": "This implements a Nonpreemptive multitasking library which is effecient in speed and memory, which is good for small Arduino hardware.  While multitasking is an advanced topic, our friends at AdaFruit have a great article on it here (https://learn.adafruit.com/multi-tasking-the-arduino-part-1?view=all),  Samples include blinking an LED without using delay(), monitoring and reacting to a button press, cross task messaging, and rotary encoder. Tested on AVR and esp8266.",
      "website": "https://github.com/Makuna/Task",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/Task_by_Makuna-1.1.0.zip",
      "archiveFileName": "Task_by_Makuna-1.1.0.zip",
      "size": 27121,
      "checksum": "SHA-256:917dadc6531808f2baabed7efb40a32fd62e18113c43a5bc2eff8767fab7a017"
    },
    {
      "name": "Task by Makuna",
      "version": "1.1.1",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes creating complex mulitple task projects easy.",
      "paragraph": "This implements a Nonpreemptive multitasking library which is effecient in speed and memory, which is good for small Arduino hardware.  While multitasking is an advanced topic, our friends at AdaFruit have a great article on it here (https://learn.adafruit.com/multi-tasking-the-arduino-part-1?view=all),  Samples include blinking an LED without using delay(), monitoring and reacting to a button press, cross task messaging, and rotary encoder. Tested on AVR and esp8266.",
      "website": "https://github.com/Makuna/Task",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/Task_by_Makuna-1.1.1.zip",
      "archiveFileName": "Task_by_Makuna-1.1.1.zip",
      "size": 25131,
      "checksum": "SHA-256:d4ae32a4ed3c6caebfe5cb3ddf1ac5385740b0dc16ac5743adf9c2c381a5c623"
    },
    {
      "name": "Task by Makuna",
      "version": "1.1.2",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes creating complex mulitple task projects easy.",
      "paragraph": "This implements a Nonpreemptive multitasking library which is effecient in speed and memory, which is good for small Arduino hardware.  While multitasking is an advanced topic, our friends at AdaFruit have a great article on it here (https://learn.adafruit.com/multi-tasking-the-arduino-part-1?view=all),  Samples include blinking an LED without using delay(), monitoring and reacting to a button press, cross task messaging, and rotary encoder. Tested on AVR and esp8266.",
      "website": "https://github.com/Makuna/Task",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/Task_by_Makuna-1.1.2.zip",
      "archiveFileName": "Task_by_Makuna-1.1.2.zip",
      "size": 25276,
      "checksum": "SHA-256:f45ff3fbdc937e441db6f3e63d098e79ef8312e5982daae1c76ed9c158e897b8"
    },
    {
      "name": "Task by Makuna",
      "version": "1.1.3",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes creating complex mulitple task projects easy.",
      "paragraph": "This implements a Nonpreemptive multitasking library which is effecient in speed and memory, which is good for small Arduino hardware.  While multitasking is an advanced topic, our friends at AdaFruit have a great article on it here (https://learn.adafruit.com/multi-tasking-the-arduino-part-1?view=all),  Samples include blinking an LED without using delay(), monitoring and reacting to a button press, cross task messaging, and rotary encoder. Tested on AVR and esp8266.",
      "website": "https://github.com/Makuna/Task",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/Task_by_Makuna-1.1.3.zip",
      "archiveFileName": "Task_by_Makuna-1.1.3.zip",
      "size": 25293,
      "checksum": "SHA-256:aad0cca23040dc0aaeabee146a55b8ca052bfeab30d1cbe2f4c4ba2070bfd9d9"
    },
    {
      "name": "Ubidots GPRS Library",
      "version": "1.0.0",
      "author": "Ubidots",
      "maintainer": "Ubidots \u003cdevel@ubidots.com\u003e",
      "sentence": "Ubidots library for the Arduino GPRS sim 900",
      "paragraph": "Ubidots library for the GPRS sim 900",
      "website": "https://github.com/ubidots/ubidots-arduino-gprs",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ubidots/Ubidots_GPRS_Library-1.0.0.zip",
      "archiveFileName": "Ubidots_GPRS_Library-1.0.0.zip",
      "size": 8410,
      "checksum": "SHA-256:35d051dbd3cc0c6b11436352c3e79ad61eef0dc15042f15b7215ad09d78bd8c8"
    },
    {
      "name": "PS2KeyRaw",
      "version": "1.0.2",
      "author": "Paul Carpenter \u003cpaul@pcserviceselectronics.co.uk\u003e",
      "maintainer": "Paul Carpenter \u003cpaul@pcserviceselectronics.co.uk\u003e",
      "sentence": "PS2 keyboard control and raw data receiving",
      "paragraph": "Controls and decodes the communication from the keyboard for testing purposes.",
      "website": "https://github.com/techpaul/PS2KeyRaw.git",
      "category": "Other",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/techpaul/PS2KeyRaw-1.0.2.zip",
      "archiveFileName": "PS2KeyRaw-1.0.2.zip",
      "size": 27270,
      "checksum": "SHA-256:b756b928e8902cc3b6c23d3ed45e7adca66f2dcf3903d8260c113a7cf0963a0f"
    },
    {
      "name": "PS2KeyAdvanced",
      "version": "1.0.2",
      "author": "Paul Carpenter \u003cpaul@pcserviceselectronics.co.uk\u003e",
      "maintainer": "Paul Carpenter \u003cpaul@pcserviceselectronics.co.uk\u003e",
      "sentence": "PS2 keyboard FULL control and ALL keys processing, as well as LED control.",
      "paragraph": "Provides ability to convert long key stroke code sequences to a single integer, for all keys ANY Latin keyboard, even multimedia and 24 Function key keyboards.",
      "website": "https://github.com/techpaul/PS2KeyAdvanced.git",
      "category": "Other",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/techpaul/PS2KeyAdvanced-1.0.2.zip",
      "archiveFileName": "PS2KeyAdvanced-1.0.2.zip",
      "size": 80436,
      "checksum": "SHA-256:e86edf3e97a6d0187e4bf15afc875edd35e884bc93fd5f7c4d28ba7c7e7b2277"
    },
    {
      "name": "PS2KeyMap",
      "version": "1.0.2",
      "author": "Paul Carpenter \u003cpaul@pcserviceselectronics.co.uk\u003e",
      "maintainer": "Paul Carpenter \u003cpaul@pcserviceselectronics.co.uk\u003e",
      "sentence": "PS2 keyboard codes from PS2KeyAdvanced to UTF-8 for any Latin language keyboard.",
      "paragraph": "Takes integer values from PS2KeyAdvanced to convert using selectable country mapping and you can add your own country mapping.",
      "website": "https://github.com/techpaul/PS2KeyMap.git",
      "category": "Other",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/techpaul/PS2KeyMap-1.0.2.zip",
      "archiveFileName": "PS2KeyMap-1.0.2.zip",
      "size": 34279,
      "checksum": "SHA-256:f66696e927a4d4d3984791dd215600cffb9e79dfad3ed2700f32cbc70d1276c0"
    },
    {
      "name": "ArduinoHttpServer",
      "version": "0.1.0",
      "author": "Sander van Woensel \u003csander@vanwoensel.me\u003e",
      "maintainer": "Sander van Woensel \u003csander@vanwoensel.me\u003e",
      "sentence": "Server side minimalistic HTTP protocol implementation.",
      "paragraph": "Just the raw HTTP server protocol for the Arduino platform, the rest is left to your imagination.",
      "website": "https://github.com/QuickSander/ArduinoHttpServer",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/QuickSander/ArduinoHttpServer-0.1.0.zip",
      "archiveFileName": "ArduinoHttpServer-0.1.0.zip",
      "size": 24342,
      "checksum": "SHA-256:4e66f1a9c90ea24bef52a350f47c03158de0cf77d995a8a18b60a1177d6c0197"
    },
    {
      "name": "ArduinoHttpServer",
      "version": "0.1.1",
      "author": "Sander van Woensel \u003csander@vanwoensel.me\u003e",
      "maintainer": "Sander van Woensel \u003csander@vanwoensel.me\u003e",
      "sentence": "Server side minimalistic HTTP protocol implementation.",
      "paragraph": "Just the raw HTTP server protocol for the Arduino platform, the rest is left to your imagination.",
      "website": "https://github.com/QuickSander/ArduinoHttpServer",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/QuickSander/ArduinoHttpServer-0.1.1.zip",
      "archiveFileName": "ArduinoHttpServer-0.1.1.zip",
      "size": 25927,
      "checksum": "SHA-256:cf1e4ada6af38d123cca9ec2a46e9496ede7671189073972b3534117ff360aed"
    },
    {
      "name": "DimSwitch",
      "version": "1.0.0",
      "author": "Krzysztof Budzynski \u003ckrzychb@gazeta.pl\u003e",
      "maintainer": "Krzysztof Budzynski \u003ckrzychb@gazeta.pl\u003e",
      "sentence": "A library to control dimmable ballasts for fluorescent light tubes.",
      "paragraph": "Tested on ESP8266 as well as Arduino Uno, Mega, Due and Micro boards. It will likely work on other similar Arduino compatible boards. For documentation please check https://github.com/krzychb/DimSwitch.",
      "website": "https://github.com/krzychb/DimSwitch",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/krzychb/DimSwitch-1.0.0.zip",
      "archiveFileName": "DimSwitch-1.0.0.zip",
      "size": 401567,
      "checksum": "SHA-256:7e3a5a61ae1202f0e90323db5df06fa45b3496bb6ac144d6e049e93bd1a6b763"
    },
    {
      "name": "DimSwitch",
      "version": "1.0.2",
      "author": "Krzysztof Budzynski \u003ckrzychb@gazeta.pl\u003e",
      "maintainer": "Krzysztof Budzynski \u003ckrzychb@gazeta.pl\u003e",
      "sentence": "A library to control dimmable ballasts for fluorescent light tubes.",
      "paragraph": "Tested on ESP8266 as well as Arduino Uno, Mega, Due and Micro boards. It will likely work on other similar Arduino compatible boards. For documentation please check https://github.com/krzychb/DimSwitch.",
      "website": "https://github.com/krzychb/DimSwitch",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/krzychb/DimSwitch-1.0.2.zip",
      "archiveFileName": "DimSwitch-1.0.2.zip",
      "size": 4294801,
      "checksum": "SHA-256:7ffda184d8beeb181ce3fd1c193ad29ccdc5c7fcfd35fc98eabccda4eb294530"
    },
    {
      "name": "Sensors",
      "version": "1.0.0",
      "author": "James Smith",
      "maintainer": "James Smith \u003cjames@loopj.com\u003e",
      "sentence": "Use I2C-connected sensors like accelerometers, gyroscopes, and barometers in your projects, without knowing the intimate details about the actual device connected.",
      "paragraph": "Use I2C-connected sensors like accelerometers, gyroscopes, and barometers in your projects, without knowing the intimate details about the actual device connected.",
      "website": "https://github.com/loopj/i2c-sensor-hal",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/loopj/Sensors-1.0.0.zip",
      "archiveFileName": "Sensors-1.0.0.zip",
      "size": 23854,
      "checksum": "SHA-256:a3cb33d56696f30a73fc3f5858fe517abda4c43b7cac983c90a234d5ded14c42"
    },
    {
      "name": "HeatpumpIR",
      "version": "1.0.0",
      "author": "Toni Arte\u003ctoni.arte@iki.fi\u003e",
      "maintainer": "Toni Arte\u003ctoni.arte@iki.fi\u003e",
      "sentence": "Heatpump / Air Conditioner infrared control",
      "paragraph": "Control split-unit heatpumps and air conditioners through infrared",
      "website": "https://github.com/ToniA/arduino-heatpumpir",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ToniA/HeatpumpIR-1.0.0.zip",
      "archiveFileName": "HeatpumpIR-1.0.0.zip",
      "size": 129177,
      "checksum": "SHA-256:b2ddf9301daa577b00d3eb5617fb061f7ca42b7adab9622dd8698cf5e89fbd38"
    },
    {
      "name": "HeatpumpIR",
      "version": "1.0.1",
      "author": "Toni Arte\u003ctoni.arte@iki.fi\u003e",
      "maintainer": "Toni Arte\u003ctoni.arte@iki.fi\u003e",
      "sentence": "Heatpump / Air Conditioner infrared control",
      "paragraph": "Control split-unit heatpumps and air conditioners through infrared",
      "website": "https://github.com/ToniA/arduino-heatpumpir",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ToniA/HeatpumpIR-1.0.1.zip",
      "archiveFileName": "HeatpumpIR-1.0.1.zip",
      "size": 129195,
      "checksum": "SHA-256:2da7a1e81a63f4cce9b23406581910ba8a89a8e6a8db3b27a51853a550e7e8cf"
    },
    {
      "name": "HeatpumpIR",
      "version": "1.0.2",
      "author": "Toni Arte\u003ctoni.arte@iki.fi\u003e",
      "maintainer": "Toni Arte\u003ctoni.arte@iki.fi\u003e",
      "sentence": "Heatpump / Air Conditioner infrared control",
      "paragraph": "Control split-unit heatpumps and air conditioners through infrared",
      "website": "https://github.com/ToniA/arduino-heatpumpir",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ToniA/HeatpumpIR-1.0.2.zip",
      "archiveFileName": "HeatpumpIR-1.0.2.zip",
      "size": 131642,
      "checksum": "SHA-256:7de89bd736f0ff77f60dea33e28523d8da04c900762010a70f807594d2cf5903"
    },
    {
      "name": "HeatpumpIR",
      "version": "1.0.3",
      "author": "Toni Arte\u003ctoni.arte@iki.fi\u003e",
      "maintainer": "Toni Arte\u003ctoni.arte@iki.fi\u003e",
      "sentence": "Heatpump / Air Conditioner infrared control",
      "paragraph": "Control split-unit heatpumps and air conditioners through infrared",
      "website": "https://github.com/ToniA/arduino-heatpumpir",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ToniA/HeatpumpIR-1.0.3.zip",
      "archiveFileName": "HeatpumpIR-1.0.3.zip",
      "size": 132400,
      "checksum": "SHA-256:1f89afe071623509612b0305c27fd3809f207f09460c57723f6ce3c41a72aed3"
    },
    {
      "name": "HeatpumpIR",
      "version": "1.0.7",
      "author": "Toni Arte\u003ctoni.arte@iki.fi\u003e",
      "maintainer": "Toni Arte\u003ctoni.arte@iki.fi\u003e",
      "sentence": "Heatpump / Air Conditioner infrared control",
      "paragraph": "Control split-unit heatpumps and air conditioners through infrared",
      "website": "https://github.com/ToniA/arduino-heatpumpir",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ToniA/HeatpumpIR-1.0.7.zip",
      "archiveFileName": "HeatpumpIR-1.0.7.zip",
      "size": 153939,
      "checksum": "SHA-256:86ef28173f9f279dd65947da7ed3f71b9bba73904c2b850c8b1bc5354f4b7134"
    },
    {
      "name": "NetEEPROM",
      "version": "1.0.0",
      "author": "Greg Tan \u003cgreg@gregtan.com\u003e",
      "maintainer": "Greg Tan \u003cgreg@gregtan.com\u003e",
      "sentence": "A library that stores and retrieves network configuration from EEPROM.",
      "paragraph": "This allows the a network configuration to be stored once, efectively tying network information to the hardware. Once set up, multiple sketches running on the same hardware will retrieve the same network information and the same sketch running on multiple boards will receive a different network configuration for each board.",
      "website": "https://github.com/gregington/NetEEPROM",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gregington/NetEEPROM-1.0.0.zip",
      "archiveFileName": "NetEEPROM-1.0.0.zip",
      "size": 6475,
      "checksum": "SHA-256:7e7b03a7f2cdc5f94e6263f386044f558a229a027b0688f04f482aa67f1e8169"
    },
    {
      "name": "NetEEPROM",
      "version": "1.1.0",
      "author": "Greg Tan \u003cgreg@gregtan.com\u003e",
      "maintainer": "Greg Tan \u003cgreg@gregtan.com\u003e",
      "sentence": "A library that stores and retrieves network configuration from EEPROM.",
      "paragraph": "This allows the a network configuration to be stored once, efectively tying network information to the hardware. Once set up, multiple sketches running on the same hardware will retrieve the same network information and the same sketch running on multiple boards will receive a different network configuration for each board.",
      "website": "https://github.com/gregington/NetEEPROM",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gregington/NetEEPROM-1.1.0.zip",
      "archiveFileName": "NetEEPROM-1.1.0.zip",
      "size": 6800,
      "checksum": "SHA-256:111b107fa36e05558175af661221dfacb8bbfb6d0dc8358587a0bb322a59d89c"
    },
    {
      "name": "RfidDb",
      "version": "1.0.0",
      "author": "Greg Tan \u003cgreg@gregtan.com\u003e",
      "maintainer": "Greg Tan \u003cgreg@gregtan.com\u003e",
      "sentence": "A library that stores 32 bit identifiers and associated names to EEPROM which can be used to as a basis for RFID access control applications.",
      "paragraph": "Entries can be added, edited and removed from the database and identifiers can be checked for existence in the database. Checks can be performed using the full identifier (for Wiegand 36 readers) or the low 24 bits (for Wiegand 24 readers).",
      "website": "https://github.com/gregington/RfidDb",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gregington/RfidDb-1.0.0.zip",
      "archiveFileName": "RfidDb-1.0.0.zip",
      "size": 7056,
      "checksum": "SHA-256:6b39cb32173733e03afec9b11f47dcafde0150d8337a7d20e1eda38b5848f490"
    },
    {
      "name": "BigCrystal",
      "version": "2.0.0",
      "author": "Greg Tan \u003cgreg@gregtan.com\u003e",
      "maintainer": "Greg Tan \u003cgreg@gregtan.com\u003e",
      "sentence": "A library that displays double height characters on LCD displays.",
      "paragraph": "The library works with LCD displays connected via 4 bit parallel, 8 bit parallel, I2C (using the PFC8573) and shift registers. For displays using I2C using the MCP2008 chipset (e.g. Adafruit backpack), use the BigCrystalTWI library.",
      "website": "https://github.com/gregington/BigCrystal",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gregington/BigCrystal-2.0.0.zip",
      "archiveFileName": "BigCrystal-2.0.0.zip",
      "size": 13142,
      "checksum": "SHA-256:0e0a301b7c665a14a20abdf05d2624a19bae11a3784dc852e0c76372f93e9531"
    },
    {
      "name": "BigCrystal",
      "version": "2.0.1",
      "author": "Greg Tan \u003cgreg@gregtan.com\u003e",
      "maintainer": "Greg Tan \u003cgreg@gregtan.com\u003e",
      "sentence": "A library that displays double height characters on LCD displays.",
      "paragraph": "The library works with LCD displays connected via 4 bit parallel, 8 bit parallel, I2C (using the PFC8573) and shift registers.",
      "website": "https://github.com/gregington/BigCrystal",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gregington/BigCrystal-2.0.1.zip",
      "archiveFileName": "BigCrystal-2.0.1.zip",
      "size": 13086,
      "checksum": "SHA-256:98c793787abc8bff2edb0ab0f9d3b50749e87b0e68875415693d55e594a4c109"
    },
    {
      "name": "TinyScreen",
      "version": "1.1.0",
      "author": "TinyCircuits \u003cinfo@tiny-circuits.com\u003e",
      "maintainer": "TinyCircuits \u003cinfo@tiny-circuits.com\u003e",
      "sentence": "Arduino compatible software support for TinyScreen and TinyScreen+.",
      "paragraph": "Allows easy use of text and graphics on a tiny display as well as reading built-in button inputs.",
      "website": "https://github.com/TinyCircuits/TinyCircuits-TinyScreen_Lib",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TinyCircuits/TinyScreen-1.1.0.zip",
      "archiveFileName": "TinyScreen-1.1.0.zip",
      "size": 68557,
      "checksum": "SHA-256:86cd34eb0337c8c79a2b015832a11fd0a9ed32e0be1ad977ffe3c8bfe0a70048"
    },
    {
      "name": "base64",
      "version": "1.0.0",
      "author": "Densaugeo \u003cuse@git.hub\u003e",
      "maintainer": "Densaugeo \u003cuse@git.hub\u003e",
      "sentence": "Base64 encoder/decoder for arduino repo",
      "paragraph": "Uses common web conventions - '+' for 62, '/' for 63, '=' for padding. Not that invalid base64 characters are interpreted as padding.",
      "website": "https://github.com/Densaugeo/base64_arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Densaugeo/base64-1.0.0.zip",
      "archiveFileName": "base64-1.0.0.zip",
      "size": 76518,
      "checksum": "SHA-256:4e6b5269c915a915f58454f384c2d1c323d4f1e800c08d91485afb1e4cef13d8"
    },
    {
      "name": "base64",
      "version": "1.0.1",
      "author": "Densaugeo \u003cuse@git.hub\u003e",
      "maintainer": "Densaugeo \u003cuse@git.hub\u003e",
      "sentence": "Base64 encoder/decoder for arduino repo",
      "paragraph": "Uses common web conventions - '+' for 62, '/' for 63, '=' for padding. Note that invalid base64 characters are interpreted as padding.",
      "website": "https://github.com/Densaugeo/base64_arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Densaugeo/base64-1.0.1.zip",
      "archiveFileName": "base64-1.0.1.zip",
      "size": 76518,
      "checksum": "SHA-256:e3d0afab197ffdf61f51b787eea0e5b2d178a7dfa8790f64bb15df66ce486174"
    },
    {
      "name": "base64",
      "version": "1.1.0",
      "author": "Densaugeo \u003cuse@git.hub\u003e",
      "maintainer": "Densaugeo \u003cuse@git.hub\u003e",
      "sentence": "Base64 encoder/decoder for arduino repo",
      "paragraph": "Uses common web conventions - '+' for 62, '/' for 63, '=' for padding. Note that invalid base64 characters are interpreted as padding.",
      "website": "https://github.com/Densaugeo/base64_arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Densaugeo/base64-1.1.0.zip",
      "archiveFileName": "base64-1.1.0.zip",
      "size": 76276,
      "checksum": "SHA-256:80468daf14111c8d125a5e1fa8e61cc59300e75898c70ec1776f9dcdaff0cb9c"
    },
    {
      "name": "CoAP simple library",
      "version": "1.3.5",
      "author": "Hirotaka Niisato \u003chirotakaster@gmail.com\u003e",
      "maintainer": "Hirotaka Niisato \u003chirotakaster@gmail.com\u003e",
      "sentence": "Simple CoAP client/server library for generic Arduino Client hardware.",
      "paragraph": "This CoAP library support simple request/response message.",
      "website": "https://github.com/hirotakaster/CoAP-simple-library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/hirotakaster/CoAP_simple_library-1.3.5.zip",
      "archiveFileName": "CoAP_simple_library-1.3.5.zip",
      "size": 9333,
      "checksum": "SHA-256:94cfacea1a4069a970e4e7385a8aec8b98048782831b900cc39d6893aa5976bf"
    },
    {
      "name": "CoAP simple library",
      "version": "1.3.6",
      "author": "Hirotaka Niisato \u003chirotakaster@gmail.com\u003e",
      "maintainer": "Hirotaka Niisato \u003chirotakaster@gmail.com\u003e",
      "sentence": "Simple CoAP client/server library for generic Arduino Client hardware.",
      "paragraph": "This CoAP library support simple request/response message.",
      "website": "https://github.com/hirotakaster/CoAP-simple-library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/hirotakaster/CoAP_simple_library-1.3.6.zip",
      "archiveFileName": "CoAP_simple_library-1.3.6.zip",
      "size": 9334,
      "checksum": "SHA-256:90baba09fde19b36b2d53ba953b9b5b30941e3c95deb5ccaeec9ca193830e178"
    },
    {
      "name": "SmartEverything CC2541",
      "version": "1.0.0",
      "author": "development",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for the TDK-SP13808 module.",
      "paragraph": "\u003cbr\u003eThe TDK-SP13808 module incapsulates the Texas Instruments CC2541, a BLE devicecommunicating with the SmartEverything though standard UART.",
      "website": "https://github.com/ameltech/sme-cc2541-library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_CC2541-1.0.0.zip",
      "archiveFileName": "SmartEverything_CC2541-1.0.0.zip",
      "size": 7385,
      "checksum": "SHA-256:a99769ed19c29d286d28a615e0b24a567947c23bcef1a84e08301d7636e91d60"
    },
    {
      "name": "SmartEverything CC2541",
      "version": "1.0.1",
      "author": "development",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for the TDK-SP13808 module.",
      "paragraph": "\u003cbr\u003eThe TDK-SP13808 module incapsulates the Texas Instruments CC2541, a BLE devicecommunicating with the SmartEverything though standard UART.",
      "website": "https://github.com/ameltech/sme-cc2541-library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ameltech/SmartEverything_CC2541-1.0.1.zip",
      "archiveFileName": "SmartEverything_CC2541-1.0.1.zip",
      "size": 7388,
      "checksum": "SHA-256:9b281e3e88b19e483cca47c0839f8823fea2ea2f95c96a49223055e32a9cc6d7"
    },
    {
      "name": "BlueRobotics MS5837-30BA Library",
      "version": "1.0.0",
      "author": "BlueRobotics",
      "maintainer": "BlueRobotics \u003cinfo@bluerobotics.com\u003e",
      "sentence": "A simple and easy library for the MS5837 pressure/depth sensor",
      "paragraph": "A simple and easy library for the MS5837 pressure/depth sensor",
      "website": "https://github.com/bluerobotics/BlueRobotics_MS5837_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bluerobotics/BlueRobotics_MS5837_30BA_Library-1.0.0.zip",
      "archiveFileName": "BlueRobotics_MS5837_30BA_Library-1.0.0.zip",
      "size": 8232,
      "checksum": "SHA-256:43c87811c8cf2745696cfeef12775e6bfdc8eed80918f8c92073d213481d0a85"
    },
    {
      "name": "BlueRobotics Arduino_I2C_ESC Library",
      "version": "1.0.0",
      "author": "BlueRobotics",
      "maintainer": "BlueRobotics \u003cinfo@bluerobotics.com\u003e",
      "sentence": "A library for I2C based control of BlueRobotics ESCs",
      "paragraph": "A library for I2C bsaed control of BlueRobotics ESCs including the BlueESC. Can be used on any SimonK ESC as well.",
      "website": "https://github.com/bluerobotics/Arduino_I2C_ESC",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bluerobotics/BlueRobotics_Arduino_I2C_ESC_Library-1.0.0.zip",
      "archiveFileName": "BlueRobotics_Arduino_I2C_ESC_Library-1.0.0.zip",
      "size": 7491,
      "checksum": "SHA-256:31407d37d34a12117bbf146a3fc69ed0d824258fa37b722ddfad5e7c0041dd90"
    },
    {
      "name": "BlueRobotics TSYS01 Library",
      "version": "1.0.0",
      "author": "BlueRobotics",
      "maintainer": "BlueRobotics \u003cinfo@bluerobotics.com\u003e",
      "sentence": "A simple and easy library for the TSYS01 temperature sensor",
      "paragraph": "A simple and easy library for the TSYS01 temperature sensor",
      "website": "https://github.com/bluerobotics/BlueRobotics_TSYS01_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bluerobotics/BlueRobotics_TSYS01_Library-1.0.0.zip",
      "archiveFileName": "BlueRobotics_TSYS01_Library-1.0.0.zip",
      "size": 6668,
      "checksum": "SHA-256:ceea06b8e6844d791ac9ea7aea253d39f0d0edbf31aaae879588825bccb5f857"
    },
    {
      "name": "PololuRPiSlave",
      "version": "1.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Pololu Raspberry Pi I2C Slave Arduino library",
      "paragraph": "This library helps set up a Pololu A-Star 32U4 controller as an I2C slave for use with the Raspberry Pi.",
      "website": "https://github.com/pololu/pololu-rpi-slave-arduino-library",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/PololuRPiSlave-1.0.0.zip",
      "archiveFileName": "PololuRPiSlave-1.0.0.zip",
      "size": 15859,
      "checksum": "SHA-256:4c6a28d133cf4a2561dbc41ae9f34110b725ae2f5c8c173aeb95c411036285e4"
    },
    {
      "name": "PololuRPiSlave",
      "version": "1.0.1",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Pololu Raspberry Pi I2C Slave Arduino library",
      "paragraph": "This library helps set up a Pololu A-Star 32U4 controller as an I2C slave for use with the Raspberry Pi.",
      "website": "https://github.com/pololu/pololu-rpi-slave-arduino-library",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/PololuRPiSlave-1.0.1.zip",
      "archiveFileName": "PololuRPiSlave-1.0.1.zip",
      "size": 16188,
      "checksum": "SHA-256:bf5f7046bcee3e82687f358b5869ea95f461d944fe5af018ffd4c4d4fcdd310d"
    },
    {
      "name": "PololuRPiSlave",
      "version": "2.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Pololu Raspberry Pi I2C Slave Arduino library",
      "paragraph": "This library helps set up a Pololu A-Star or Romi as an I2C slave for use with the Raspberry Pi.",
      "website": "https://github.com/pololu/pololu-rpi-slave-arduino-library",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/PololuRPiSlave-2.0.0.zip",
      "archiveFileName": "PololuRPiSlave-2.0.0.zip",
      "size": 18014,
      "checksum": "SHA-256:c86fb7a3f7860a2644f1b7e9ef2bb785be4d2a284988b7092bb4d72089f865c8"
    },
    {
      "name": "I2C-Sensor-Lib iLib",
      "version": "0.8.0",
      "author": "Ingmar Splitt",
      "maintainer": "Ingmar Splitt",
      "sentence": "Library for sensors and some atmel-specific functions.",
      "paragraph": "The following sensors can be used with an uniform interface: Austria Microsystems TCS3772 light sensor - RGB and clear, Silicon Labs SI7021 humidity sensor, Invensense MPU9250 9DOF - 3 axis acceleration and gyro PLUS AK8963-IC with magnetic-field sensor, Freescale MPL3115A2 pressure, Maxim MAX44009 ambient and lux with incredible wide dynamic, NXP PCF2127 Realtime-Clock with 2ppm, Bosch BMP280 pressure, ST L3G-Series 3 axis gyro / angular rate, Freescale MAG3110 3 axis Compass / Magnetic field, Freescale MMA8451 3 axis acceleration, Fairchild FAN5421 Single-Cell Li-Ion Switching Charger, STM LPS331 Pressure Sensor, Maxim MAX17047 Fuel Gauge for various Cells",
      "website": "https://github.com/orgua/iLib",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/I2C_Sensor_Lib_iLib-0.8.0.zip",
      "archiveFileName": "I2C_Sensor_Lib_iLib-0.8.0.zip",
      "size": 75310,
      "checksum": "SHA-256:1f73273c19c1eae07424cd6bc169dbff1f6e022870b5904e83996dc98430a85c"
    },
    {
      "name": "I2C-Sensor-Lib iLib",
      "version": "0.8.1",
      "author": "Ingmar Splitt",
      "maintainer": "Ingmar Splitt",
      "sentence": "Library for i2c-sensors and some other specific functions (fast eFn, HDLC, SpektrumSerial).",
      "paragraph": "The following sensors can be used with an uniform interface: Austria Microsystems TCS3772 light sensor - RGB and clear, Silicon Labs SI7021 humidity sensor, Invensense MPU9250 9DOF - 3 axis acceleration and gyro PLUS AK8963-IC with magnetic-field sensor, Freescale MPL3115A2 pressure, Maxim MAX44009 ambient and lux with incredible wide dynamic, NXP PCF2127 Realtime-Clock with 2ppm, Bosch BMP280 pressure, ST L3G-Series 3 axis gyro / angular rate, Freescale MAG3110 3 axis Compass / Magnetic field, Freescale MMA8451 3 axis acceleration, Fairchild FAN5421 Single-Cell Li-Ion Switching Charger, STM LPS331 Pressure Sensor, Maxim MAX17047 Fuel Gauge for various Cells",
      "website": "https://github.com/orgua/iLib",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/I2C_Sensor_Lib_iLib-0.8.1.zip",
      "archiveFileName": "I2C_Sensor_Lib_iLib-0.8.1.zip",
      "size": 77354,
      "checksum": "SHA-256:dcce52978f09d4ac9b89d3e91a9141fe08e7dcbee01a06aa62a6a7b976651ebc"
    },
    {
      "name": "I2C-Sensor-Lib iLib",
      "version": "0.8.2",
      "author": "Ingmar Splitt",
      "maintainer": "Ingmar Splitt",
      "sentence": "Library for i2c-sensors and some other specific functions (fast eFn, HDLC, SpektrumSerial).",
      "paragraph": "The following sensors can be used with an uniform interface: Austria Microsystems TCS3772 light sensor - RGB and clear, Silicon Labs SI7021 humidity sensor, Invensense MPU9250 9DOF - 3 axis acceleration and gyro PLUS AK8963-IC with magnetic-field sensor, Freescale MPL3115A2 pressure, Maxim MAX44009 ambient and lux with incredible wide dynamic, NXP PCF2127 Realtime-Clock with 2ppm, Bosch BMP280 pressure, ST L3G-Series 3 axis gyro / angular rate, Freescale MAG3110 3 axis Compass / Magnetic field, Freescale MMA8451 3 axis acceleration, Fairchild FAN5421 Single-Cell Li-Ion Switching Charger, STM LPS331 Pressure Sensor, Maxim MAX17047 Fuel Gauge for various Cells",
      "website": "https://github.com/orgua/iLib",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/I2C_Sensor_Lib_iLib-0.8.2.zip",
      "archiveFileName": "I2C_Sensor_Lib_iLib-0.8.2.zip",
      "size": 77352,
      "checksum": "SHA-256:328593af67886fa374e38bc01991a6fcb5ba507468bc7e8ba46e5b548f821361"
    },
    {
      "name": "Arduboy",
      "version": "1.1.1",
      "author": "Chris J. Martinez, Kevin Bates, Josh Goebel, Scott Allen, Ross O. Shoger",
      "maintainer": "Ross O. Shoger ross@arduboy.com",
      "sentence": "The Arduboy core library.",
      "paragraph": "This library is for content creation on the Arduboy, a portable gaming platform. The library provides access to the sound, display, and input of the Arduboy.",
      "website": "https://github.com/arduboy/arduboy",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Arduboy/Arduboy-1.1.1.zip",
      "archiveFileName": "Arduboy-1.1.1.zip",
      "size": 39220,
      "checksum": "SHA-256:4a8997ea16633759248beefe8bb3a71c7bbd9786c303a95e0805707fa5d0a5f9"
    },
    {
      "name": "Arduboy",
      "version": "0.1.0",
      "author": "Arduboy Team",
      "maintainer": "Chris Martinez, Josh Goebel \u003cdreamer3@gmail.com\u003e",
      "sentence": "Arduboy core library",
      "paragraph": "Core library for working with the portable Arduboy gaming platform.",
      "website": "https://github.com/arduboy/arduboy",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Arduboy/Arduboy-0.1.0.zip",
      "archiveFileName": "Arduboy-0.1.0.zip",
      "size": 63699,
      "checksum": "SHA-256:0e13d92cda58e63371ae0e57d842cefd891cf1ba6b167a3739d3afe48ffdf207"
    },
    {
      "name": "Arduboy",
      "version": "1.0.0",
      "author": "Chris J. Martinez, Kevin Bates, Josh Goebel, Scott Allen, Ross O. Shoger",
      "maintainer": "Ross O. Shoger ros@arduboy.com",
      "sentence": "The Arduboy core library.",
      "paragraph": "This library is for content creation on the Arduboy, a portable gaming platform. The library provides access to the sound, display, and input of the Arduboy.",
      "website": "https://github.com/arduboy/arduboy",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Arduboy/Arduboy-1.0.0.zip",
      "archiveFileName": "Arduboy-1.0.0.zip",
      "size": 37291,
      "checksum": "SHA-256:549e03626c07f9062228770ed0a4283a36800123e8e6cd299a58be590eab8aea"
    },
    {
      "name": "Arduboy",
      "version": "1.1.0",
      "author": "Chris J. Martinez, Kevin Bates, Josh Goebel, Scott Allen, Ross O. Shoger",
      "maintainer": "Ross O. Shoger ros@arduboy.com",
      "sentence": "The Arduboy core library.",
      "paragraph": "This library is for content creation on the Arduboy, a portable gaming platform. The library provides access to the sound, display, and input of the Arduboy.",
      "website": "https://github.com/arduboy/arduboy",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Arduboy/Arduboy-1.1.0.zip",
      "archiveFileName": "Arduboy-1.1.0.zip",
      "size": 37482,
      "checksum": "SHA-256:8c524a113af46c067e3bba660be7c8e2b1ad9921fff5b17b2f42722c06802ff7"
    },
    {
      "name": "swRTC",
      "version": "1.2.6",
      "author": "Leonardo Miliani, lesto",
      "maintainer": "Leonardo Miliani",
      "sentence": "Software implementation of a Real-Time Clock for Arduino boards and Atmel microcontrollers.",
      "website": "http://www.leonardomiliani.com",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/leomil72/swRTC-1.2.6.zip",
      "archiveFileName": "swRTC-1.2.6.zip",
      "size": 28689,
      "checksum": "SHA-256:2437dbed4926f293b3ada7a95432ef84c4194c79d019db2a38b4e280aa9ea1ab"
    },
    {
      "name": "swRTC",
      "version": "1.2.7",
      "author": "Leonardo Miliani, lesto",
      "maintainer": "Leonardo Miliani",
      "sentence": "Software implementation of a Real-Time Clock for Arduino boards and Atmel microcontrollers.",
      "website": "http://www.leonardomiliani.com",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/leomil72/swRTC-1.2.7.zip",
      "archiveFileName": "swRTC-1.2.7.zip",
      "size": 28974,
      "checksum": "SHA-256:af5365486476559b53c65d87e09c3c340541d56d1282baa61fb2cc430f040af5"
    },
    {
      "name": "swRTC",
      "version": "1.2.3",
      "author": "Leonardo Miliani, lesto",
      "maintainer": "Leonardo Miliani",
      "sentence": "Software implementation of a Real-Time Clock for Arduino boards and Atmel microcontrollers.",
      "website": "http://www.leonardomiliani.com",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/leomil72/swRTC-1.2.3.zip",
      "archiveFileName": "swRTC-1.2.3.zip",
      "size": 28406,
      "checksum": "SHA-256:76353ed88ef01b7b64fb4cfb9a63f6aa2b25aca81eba7f00ec11f0296881c546"
    },
    {
      "name": "swRTC",
      "version": "1.2.5",
      "author": "Leonardo Miliani, lesto",
      "maintainer": "Leonardo Miliani",
      "sentence": "Software implementation of a Real-Time Clock for Arduino boards and Atmel microcontrollers.",
      "website": "http://www.leonardomiliani.com",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/leomil72/swRTC-1.2.5.zip",
      "archiveFileName": "swRTC-1.2.5.zip",
      "size": 28452,
      "checksum": "SHA-256:4ef7664443c07f360a31e918cbe56e10f59a940fc256e66a86dc79fd5d05e324"
    },
    {
      "name": "IBM LMIC framework",
      "version": "1.5.0+arduino-0",
      "author": "IBM",
      "maintainer": "Matthijs Kooijman \u003cmatthijs@stdin.nl\u003e",
      "sentence": "Arduino port of the LMIC (LoraWAN-in-C, formerly LoraMAC-in-C) framework provided by IBM.",
      "paragraph": "Supports SX1272/SX1276 and HopeRF RFM92/RFM95 tranceivers",
      "website": "http://www.research.ibm.com/labs/zurich/ics/lrsc/lmic.html",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/matthijskooijman/IBM_LMIC_framework-1.5.0+arduino-0.zip",
      "archiveFileName": "IBM_LMIC_framework-1.5.0+arduino-0.zip",
      "size": 832984,
      "checksum": "SHA-256:cce242bf1164aab3f573ef7657e3809bf1121920960c7a05f86309058a957e68"
    },
    {
      "name": "IBM LMIC framework",
      "version": "1.5.0+arduino-1",
      "author": "IBM",
      "maintainer": "Matthijs Kooijman \u003cmatthijs@stdin.nl\u003e",
      "sentence": "Arduino port of the LMIC (LoraWAN-in-C, formerly LoraMAC-in-C) framework provided by IBM.",
      "paragraph": "Supports SX1272/SX1276 and HopeRF RFM92/RFM95 tranceivers",
      "website": "http://www.research.ibm.com/labs/zurich/ics/lrsc/lmic.html",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/matthijskooijman/IBM_LMIC_framework-1.5.0+arduino-1.zip",
      "archiveFileName": "IBM_LMIC_framework-1.5.0+arduino-1.zip",
      "size": 833225,
      "checksum": "SHA-256:b0af5e7d74863efa9ae57e94b3d6ef1e34d93cbf3ff979c561ef11fcd9e57c61"
    },
    {
      "name": "leOS",
      "version": "1.2.1",
      "author": "Leonardo Miliani",
      "maintainer": "Leonardo Miliani",
      "sentence": "Simple scheduler that run little tasks within IRSs",
      "website": "http://www.leonardomiliani.com",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/leomil72/leOS-1.2.1.zip",
      "archiveFileName": "leOS-1.2.1.zip",
      "size": 321661,
      "checksum": "SHA-256:6482dda6df8f1e4162e55c302974442692144886333ded340340a573e9b83d4a"
    },
    {
      "name": "leOS2",
      "version": "2.3.2",
      "author": "Leonardo Miliani",
      "maintainer": "Leonardo Miliani",
      "sentence": "Simple scheduler based on watchdog that runs little tasks within IRS",
      "website": "http://www.leonardomiliani.com",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/leomil72/leOS2-2.3.2.zip",
      "archiveFileName": "leOS2-2.3.2.zip",
      "size": 319676,
      "checksum": "SHA-256:fc221ebc38f61ff185d7531be8b23fd5e2e49302b07e7857915d57cea6105713"
    },
    {
      "name": "leOS2",
      "version": "2.3.1",
      "author": "Leonardo Miliani",
      "maintainer": "Leonardo Miliani",
      "sentence": "Simple scheduler based on watchdog that runs little tasks within IRS",
      "website": "http://www.leonardomiliani.com",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/leomil72/leOS2-2.3.1.zip",
      "archiveFileName": "leOS2-2.3.1.zip",
      "size": 319635,
      "checksum": "SHA-256:3505a1b509d1aa7c11eb67b21a470a18a9b62b5584ce97d3d084f969c4596fe8"
    },
    {
      "name": "looper",
      "version": "1.1.1",
      "author": "Leonardo Miliani",
      "maintainer": "Leonardo Miliani",
      "sentence": "Proto-scheduler based on the use of millis()",
      "website": "http://www.leonardomiliani.com",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/leomil72/looper-1.1.1.zip",
      "archiveFileName": "looper-1.1.1.zip",
      "size": 25288,
      "checksum": "SHA-256:b482b3bde674b82dc119579038b7723e196ddb9938b3cfcd5d930fa4522aef6d"
    },
    {
      "name": "pRNG",
      "version": "1.2.1",
      "author": "Leonardo Miliani",
      "maintainer": "Leonardo Miliani",
      "sentence": "Pseudo-random number generator",
      "website": "http://www.leonardomiliani.com",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/leomil72/pRNG-1.2.1.zip",
      "archiveFileName": "pRNG-1.2.1.zip",
      "size": 20039,
      "checksum": "SHA-256:fe7950b9e3148c8be72ac73094d926a2be70863fb7f8a835f073456cf7dcec1b"
    },
    {
      "name": "secTimer",
      "version": "1.0.0",
      "author": "Leonardo Miliani",
      "maintainer": "Leonardo Miliani",
      "sentence": "Simple seconds counter",
      "website": "http://www.leonardomiliani.com",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/leomil72/secTimer-1.0.0.zip",
      "archiveFileName": "secTimer-1.0.0.zip",
      "size": 21097,
      "checksum": "SHA-256:9a7b4b13abbded18e33f9f526ce18261fc9964362ec906d76a4afb9bd6e2c9a6"
    },
    {
      "name": "analogComp",
      "version": "1.2.2",
      "author": "Leonardo Miliani",
      "maintainer": "Leonardo Miliani",
      "sentence": "Simple scheduler based on watchdog that runs little tasks within IRS",
      "website": "http://www.leonardomiliani.com",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/leomil72/analogComp-1.2.2.zip",
      "archiveFileName": "analogComp-1.2.2.zip",
      "size": 20917,
      "checksum": "SHA-256:b3083ee18d5c7377d470a64b767b95200e372dfcc74b5ddd6a96e52c4c5dffc2"
    },
    {
      "name": "ArduinoFacil",
      "version": "1.0.2",
      "author": "Jorge Gómez \u003cjorge@sindormir.net\u003e",
      "maintainer": "Jorge Gómez \u003cjorge@sindormir.net\u003e, kwendenarmo \u003ckwendenarmo@akornsys-rdi.net\u003e",
      "sentence": "Librería (más bien conjunto de macros) para facilitar el uso de Arduino en castellano para principiantes.",
      "website": "https://github.com/SindormirNet/ArduinoFacil",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SindormirNet/ArduinoFacil-1.0.2.zip",
      "archiveFileName": "ArduinoFacil-1.0.2.zip",
      "size": 19619,
      "checksum": "SHA-256:c74a9c76f12d2aec2609944dfe58b8674c6079be5d934792c4b51130e649b7c6"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.0.0",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  For Esp8266 it has three methods of sending data, DMA, UART, and Bit Bang.",
      "website": "https://github.com/Makuna/NeoPixelBus",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/NeoPixelBus_by_Makuna-2.0.0.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.0.0.zip",
      "size": 64101,
      "checksum": "SHA-256:5c52ddfdcd0ef2b6a71683571a677dc84703e24f73fd4d231d04583064d3e811"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.0.1",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  For Esp8266 it has three methods of sending data, DMA, UART, and Bit Bang.",
      "website": "https://github.com/Makuna/NeoPixelBus",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/NeoPixelBus_by_Makuna-2.0.1.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.0.1.zip",
      "size": 64107,
      "checksum": "SHA-256:8f8a19de31555c5db56f06945152794f75ec1f5bbb84d76b509c141f9fc3f25a"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.0.2",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  For Esp8266 it has three methods of sending data, DMA, UART, and Bit Bang.",
      "website": "https://github.com/Makuna/NeoPixelBus",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/NeoPixelBus_by_Makuna-2.0.2.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.0.2.zip",
      "size": 64439,
      "checksum": "SHA-256:9305178eb91a9aae9e23ef9295942470b663a367060dc52730da09d410c988de"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.0.3",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  For Esp8266 it has three methods of sending data, DMA, UART, and Bit Bang.",
      "website": "https://github.com/Makuna/NeoPixelBus",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/NeoPixelBus_by_Makuna-2.0.3.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.0.3.zip",
      "size": 65720,
      "checksum": "SHA-256:bac97bd6a7f9ae0e067ba3b2139337ca68f365e00b952deadbebe36071d7bd17"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.0.4",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  For Esp8266 it has three methods of sending data, DMA, UART, and Bit Bang.",
      "website": "https://github.com/Makuna/NeoPixelBus/wiki",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/NeoPixelBus_by_Makuna-2.0.4.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.0.4.zip",
      "size": 84140,
      "checksum": "SHA-256:eff56638d095c9d645ff08945c3f74041a11d5a17f584d92420ecd6cb26c5e05"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.0.5",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  Supports Matrix layout of pixels.  Includes Gamma corretion object.  For Esp8266 it has three methods of sending data, DMA, UART, and Bit Bang.",
      "website": "https://github.com/Makuna/NeoPixelBus/wiki",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/NeoPixelBus_by_Makuna-2.0.5.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.0.5.zip",
      "size": 85368,
      "checksum": "SHA-256:864ff17b0f58b28bfd5c43a552b7c565ff7451853996f83af1e3991f5cdfed87"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.0.6",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  Supports Matrix layout of pixels.  Includes Gamma corretion object.  For Esp8266 it has three methods of sending data, DMA, UART, and Bit Bang.",
      "website": "https://github.com/Makuna/NeoPixelBus/wiki",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/NeoPixelBus_by_Makuna-2.0.6.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.0.6.zip",
      "size": 85606,
      "checksum": "SHA-256:ad0a24a79d545053160580cead609293e06ffae4321597b1ca5a8359d305ebe5"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.0.7",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  Supports Matrix layout of pixels.  Includes Gamma corretion object.  For Esp8266 it has three methods of sending data, DMA, UART, and Bit Bang.",
      "website": "https://github.com/Makuna/NeoPixelBus/wiki",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/NeoPixelBus_by_Makuna-2.0.7.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.0.7.zip",
      "size": 86052,
      "checksum": "SHA-256:48ef91448d1ae15ff3a2a4b9e978744b999124fef92e841ea1ea5237fe9ec964"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.0.8",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  Supports Matrix layout of pixels.  Includes Gamma corretion object.  For Esp8266 it has three methods of sending data, DMA, UART, and Bit Bang.",
      "website": "https://github.com/Makuna/NeoPixelBus/wiki",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/NeoPixelBus_by_Makuna-2.0.8.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.0.8.zip",
      "size": 86013,
      "checksum": "SHA-256:8865f40edc9cb176c7c8bc310ae449a4bcaae9ee5643ad3a35a6b14f72c86569"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.0.9",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  Supports Matrix layout of pixels.  Includes Gamma corretion object.  For Esp8266 it has three methods of sending data, DMA, UART, and Bit Bang.",
      "website": "https://github.com/Makuna/NeoPixelBus/wiki",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/NeoPixelBus_by_Makuna-2.0.9.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.0.9.zip",
      "size": 88959,
      "checksum": "SHA-256:14c23288b5f084d907ca956c4fead283b3e96f98b14e7769e5e2451334da0d39"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.0.91",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  Supports Matrix layout of pixels.  Includes Gamma corretion object.  For Esp8266 it has three methods of sending data, DMA, UART, and Bit Bang.",
      "website": "https://github.com/Makuna/NeoPixelBus/wiki",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/NeoPixelBus_by_Makuna-2.0.91.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.0.91.zip",
      "size": 89198,
      "checksum": "SHA-256:d1f66f82f1bd8fc9e55c35c524aa6fd7c0763a396e660b96f1a43e481cfc3218"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.1.0",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  Supports Matrix layout of pixels.  Includes Gamma corretion object.  For Esp8266 it has three methods of sending data, DMA, UART, and Bit Bang.",
      "website": "https://github.com/Makuna/NeoPixelBus/wiki",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/NeoPixelBus_by_Makuna-2.1.0.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.1.0.zip",
      "size": 101484,
      "checksum": "SHA-256:56691dbc0411c48354a5777d9e379d239578980b9884f26eb2533f8cf4ba8dff"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.1.1",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  Supports Matrix layout of pixels.  Includes Gamma corretion object.  For Esp8266 it has three methods of sending data, DMA, UART, and Bit Bang.",
      "website": "https://github.com/Makuna/NeoPixelBus/wiki",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/NeoPixelBus_by_Makuna-2.1.1.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.1.1.zip",
      "size": 100085,
      "checksum": "SHA-256:a7ddb808508c54b2a58ef8368677699888f7687044dc7f450ac94bea30f4f535"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.1.2",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  Supports Matrix layout of pixels.  Includes Gamma corretion object.  For Esp8266 it has three methods of sending data, DMA, UART, and Bit Bang.",
      "website": "https://github.com/Makuna/NeoPixelBus/wiki",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/NeoPixelBus_by_Makuna-2.1.2.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.1.2.zip",
      "size": 130065,
      "checksum": "SHA-256:f6b4efa700dffefa9df4fd4bcfc0ad20a72ce3e81b1230ce42719bfdc7f97d69"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.1.3",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  Supports Matrix layout of pixels.  Includes Gamma corretion object.  For Esp8266 it has three methods of sending data, DMA, UART, and Bit Bang.",
      "website": "https://github.com/Makuna/NeoPixelBus/wiki",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/NeoPixelBus_by_Makuna-2.1.3.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.1.3.zip",
      "size": 138817,
      "checksum": "SHA-256:2887e9396c5504afe37d6d3920cdc367acccba55b4cddc735646617281712a25"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.1.4",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  Supports Matrix layout of pixels.  Includes Gamma corretion object.  For Esp8266 it has three methods of sending data, DMA, UART, and Bit Bang.",
      "website": "https://github.com/Makuna/NeoPixelBus/wiki",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/NeoPixelBus_by_Makuna-2.1.4.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.1.4.zip",
      "size": 143189,
      "checksum": "SHA-256:df03a2f7178d24a6cebd5495c497efa729db802ee786baebeb8b790f721a0bf9"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.2.0",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) and DotStars (ADA102) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  Supports Matrix layout of pixels.  Includes Gamma corretion object.  For Esp8266 it has three methods of sending data, DMA, UART, and Bit Bang.",
      "website": "https://github.com/Makuna/NeoPixelBus/wiki",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/NeoPixelBus_by_Makuna-2.2.0.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.2.0.zip",
      "size": 151476,
      "checksum": "SHA-256:96fccaf8b18c0e976a6a6bf4d674bfc9168e74c1f3c8d9663164fc997518512a"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.2.1",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) and DotStars (ADA102) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  Supports Matrix layout of pixels.  Includes Gamma corretion object.  For Esp8266 it has three methods of sending NeoPixel data, DMA, UART, and Bit Bang; and two methods of sending DotStar data, hardware SPI and software SPI.",
      "website": "https://github.com/Makuna/NeoPixelBus/wiki",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/NeoPixelBus_by_Makuna-2.2.1.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.2.1.zip",
      "size": 151748,
      "checksum": "SHA-256:b9682efad59a566c473651e7cd5ccdfcaf070807a8709eb09d070bfe25c0376c"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.2.2",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) and DotStars (ADA102) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  Supports Matrix layout of pixels.  Includes Gamma corretion object.  For Esp8266 it has three methods of sending NeoPixel data, DMA, UART, and Bit Bang; and two methods of sending DotStar data, hardware SPI and software SPI.",
      "website": "https://github.com/Makuna/NeoPixelBus/wiki",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/NeoPixelBus_by_Makuna-2.2.2.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.2.2.zip",
      "size": 151797,
      "checksum": "SHA-256:a24e0da0612c4f1655d80c395d7a22ff43af7368a574f01a8cde692dfb802ec2"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.2.3",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) and DotStars (ADA102) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  Supports Matrix layout of pixels.  Includes Gamma corretion object.  For Esp8266 it has three methods of sending NeoPixel data, DMA, UART, and Bit Bang; and two methods of sending DotStar data, hardware SPI and software SPI.",
      "website": "https://github.com/Makuna/NeoPixelBus/wiki",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/NeoPixelBus_by_Makuna-2.2.3.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.2.3.zip",
      "size": 151798,
      "checksum": "SHA-256:9a3d23e65cd92788e6cffee067a19476bdbbda5c216046ded004435e61fd5125"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.2.4",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) and DotStars (ADA102) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  Supports Matrix layout of pixels.  Includes Gamma corretion object.  For Esp8266 it has three methods of sending NeoPixel data, DMA, UART, and Bit Bang; and two methods of sending DotStar data, hardware SPI and software SPI.",
      "website": "https://github.com/Makuna/NeoPixelBus/wiki",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/NeoPixelBus_by_Makuna-2.2.4.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.2.4.zip",
      "size": 151979,
      "checksum": "SHA-256:029e11477ebbd3c5482765ac9cca3d5f95c2be62a3898103b2a893afb28b3d30"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.2.5",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) and DotStars (APA102) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  Supports Matrix layout of pixels.  Includes Gamma corretion object.  For Esp8266 it has three methods of sending NeoPixel data, DMA, UART, and Bit Bang; and two methods of sending DotStar data, hardware SPI and software SPI.",
      "website": "https://github.com/Makuna/NeoPixelBus/wiki",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/NeoPixelBus_by_Makuna-2.2.5.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.2.5.zip",
      "size": 156202,
      "checksum": "SHA-256:0873cb814f3fb8b991daed67fbc27714b4704bd5b901a7a7b6655b6533d9debf"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.2.6",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) and DotStars (APA102) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  Supports Matrix layout of pixels.  Includes Gamma corretion object.  For Esp8266 it has three methods of sending NeoPixel data, DMA, UART, and Bit Bang; and two methods of sending DotStar data, hardware SPI and software SPI.",
      "website": "https://github.com/Makuna/NeoPixelBus/wiki",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/NeoPixelBus_by_Makuna-2.2.6.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.2.6.zip",
      "size": 157327,
      "checksum": "SHA-256:af31acd7f66ac97bc44b4b880d6d684251e0dbcd064e9cc598508adcbe856ae4"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.2.7",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) and DotStars (APA102) easy.",
      "paragraph": "Supports most Arduino platforms, including Esp8266 and Esp32.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  Supports Matrix layout of pixels.  Includes Gamma corretion object.  For Esp8266 it has three methods of sending NeoPixel data, DMA, UART, and Bit Bang; and two methods of sending DotStar data, hardware SPI and software SPI.",
      "website": "https://github.com/Makuna/NeoPixelBus/wiki",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/NeoPixelBus_by_Makuna-2.2.7.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.2.7.zip",
      "size": 163075,
      "checksum": "SHA-256:49a07d593ba521b8339b174ee3ef8ccd68a4ca2f70062f38b5c145fb1ac2135b"
    },
    {
      "name": "OneWireHub",
      "version": "0.2.0",
      "author": "Shagrat2, orgua",
      "maintainer": "Shagrat2",
      "sentence": "OneWire slave device emulator with support for various simultaneously devices",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/OneWireHub-0.2.0.zip",
      "archiveFileName": "OneWireHub-0.2.0.zip",
      "size": 2573170,
      "checksum": "SHA-256:d52046d410c057c08e7b065571fda1543f9458d75fba1907843179579be3813a"
    },
    {
      "name": "OneWireHub",
      "version": "0.3.0",
      "author": "Shagrat2,orgua",
      "maintainer": "Shagrat2",
      "sentence": "OneWire slave device emulator with support for various simultaneously devices",
      "paragraph": "supported sensors: DS2401, DS18B20, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/OneWireHub-0.3.0.zip",
      "archiveFileName": "OneWireHub-0.3.0.zip",
      "size": 3636862,
      "checksum": "SHA-256:d6ee1efa233209b4373af5c32f49c074834e66b549a1ccbe30444428afc751ce"
    },
    {
      "name": "OneWireHub",
      "version": "0.4.0",
      "author": "orgua,Shagrat2,MarkusLange",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for various simultaneously devices",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/OneWireHub-0.4.0.zip",
      "archiveFileName": "OneWireHub-0.4.0.zip",
      "size": 4946367,
      "checksum": "SHA-256:c9a95c88fe21109abe2eeffa15a56364bb769aba18ca498cfd4b425632699947"
    },
    {
      "name": "OneWireHub",
      "version": "0.5.0",
      "author": "orgua,Shagrat2,MarkusLange",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for various simultaneously devices",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/OneWireHub-0.5.0.zip",
      "archiveFileName": "OneWireHub-0.5.0.zip",
      "size": 7526049,
      "checksum": "SHA-256:c4894710b71faa077b234da30ccf8d4a460de12bcc8564d724ccc5648d65fec6"
    },
    {
      "name": "OneWireHub",
      "version": "0.6.0",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for various simultaneously devices",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/OneWireHub-0.6.0.zip",
      "archiveFileName": "OneWireHub-0.6.0.zip",
      "size": 7531522,
      "checksum": "SHA-256:0f241b023fc04e72b1a0e69c498cf87e86613bce904b44784f570f839099eb09"
    },
    {
      "name": "OneWireHub",
      "version": "0.6.5",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for various simultaneously 1wire devices.",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/OneWireHub-0.6.5.zip",
      "archiveFileName": "OneWireHub-0.6.5.zip",
      "size": 7534958,
      "checksum": "SHA-256:b5b0e4c2a72b6da8cc52081069bce066d2c8f3a78281ea5aaffa642125eabb1f"
    },
    {
      "name": "OneWireHub",
      "version": "0.7.0",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for various simultaneously 1wire devices.",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/OneWireHub-0.7.0.zip",
      "archiveFileName": "OneWireHub-0.7.0.zip",
      "size": 7535212,
      "checksum": "SHA-256:78f60655b38c289f8eb70b9df726c421949e7421c01345ff88fd5c2b52ce2ee0"
    },
    {
      "name": "OneWireHub",
      "version": "0.7.5",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for various simultaneously 1wire devices.",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/OneWireHub-0.7.5.zip",
      "archiveFileName": "OneWireHub-0.7.5.zip",
      "size": 7548745,
      "checksum": "SHA-256:893fc2629fc90cf473eb73eec0b4331e999c03c52d20b400529fe6ba380bac88"
    },
    {
      "name": "OneWireHub",
      "version": "0.8.0",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for up to 32 simultaneous 1wire devices.",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/OneWireHub-0.8.0.zip",
      "archiveFileName": "OneWireHub-0.8.0.zip",
      "size": 7549734,
      "checksum": "SHA-256:bf9f3e2de6858ccbba6d8ddf0a8c2bb5713999f637b754468877f549b7bbce8d"
    },
    {
      "name": "OneWireHub",
      "version": "0.8.5",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for up to 32 simultaneous 1wire devices.",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/OneWireHub-0.8.5.zip",
      "archiveFileName": "OneWireHub-0.8.5.zip",
      "size": 7550007,
      "checksum": "SHA-256:cb2f3a6e631a1e905867e4aa30bf195f8c4e505180723e23ab647d955e542d2e"
    },
    {
      "name": "OneWireHub",
      "version": "0.9.0",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for up to 32 simultaneous 1wire devices.",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/OneWireHub-0.9.0.zip",
      "archiveFileName": "OneWireHub-0.9.0.zip",
      "size": 7551466,
      "checksum": "SHA-256:3544d1a1d457d6e0ee27e1e17ef30b85d0350d4f39206a85117a05966f0bbc7f"
    },
    {
      "name": "OneWireHub",
      "version": "0.9.1",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for up to 32 simultaneous 1wire devices.",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/OneWireHub-0.9.1.zip",
      "archiveFileName": "OneWireHub-0.9.1.zip",
      "size": 7552449,
      "checksum": "SHA-256:342609ec29cbb12ca9cf50c18c038d5ee7a87049b581f219acec0e24c221e7be"
    },
    {
      "name": "OneWireHub",
      "version": "0.9.2",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for up to 32 simultaneous 1wire devices.",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890, DS1972, DS2431, BAE910",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/OneWireHub-0.9.2.zip",
      "archiveFileName": "OneWireHub-0.9.2.zip",
      "size": 8015605,
      "checksum": "SHA-256:77d5d6d4670d886c682e2d075929f894f588fbefa4384b40527c2f07c66eb30e"
    },
    {
      "name": "OneWireHub",
      "version": "0.9.3",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for up to 32 simultaneous 1wire devices.",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890, DS1972, DS2431, BAE910",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/OneWireHub-0.9.3.zip",
      "archiveFileName": "OneWireHub-0.9.3.zip",
      "size": 8016034,
      "checksum": "SHA-256:2211dc46156eccc0865392f321f83f2eba26e5aa419a15a561a9c9771e3c129a"
    },
    {
      "name": "OneWireHub",
      "version": "0.9.4",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for up to 32 simultaneous 1wire devices.",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890, DS1972, DS2431, BAE910",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/OneWireHub-0.9.4.zip",
      "archiveFileName": "OneWireHub-0.9.4.zip",
      "size": 8016628,
      "checksum": "SHA-256:2d6b5ae6395d1a49bacb02d6421a5c9ee6276fff4a2de01c5cafdef13a7ca4b9"
    },
    {
      "name": "OneWireHub",
      "version": "0.9.6",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for up to 32 simultaneous 1wire devices.",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890, DS1972, DS2431, BAE910, DS1982, DS2502, DS2501",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/OneWireHub-0.9.6.zip",
      "archiveFileName": "OneWireHub-0.9.6.zip",
      "size": 9426473,
      "checksum": "SHA-256:cf3c80818e4064223e4578d5ca8daa30d985bc391d61795223f4aaf2d870a24e"
    },
    {
      "name": "OneWireHub",
      "version": "0.9.7",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for up to 32 simultaneous 1wire devices.",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890, DS1972, DS2431, BAE910, DS1982, DS2502, DS2501",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/OneWireHub-0.9.7.zip",
      "archiveFileName": "OneWireHub-0.9.7.zip",
      "size": 9426556,
      "checksum": "SHA-256:ee0bec5f58daebc49203d0a3b78d5d53bebd0bbfa52b0aa8e109e581365baab3"
    },
    {
      "name": "OneWireHub",
      "version": "0.9.8",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for up to 32 simultaneous 1wire devices.",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890, DS1972, DS2431, BAE910, DS1982, DS2502, DS2501",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/OneWireHub-0.9.8.zip",
      "archiveFileName": "OneWireHub-0.9.8.zip",
      "size": 9429758,
      "checksum": "SHA-256:5474267ae00cd6e8d88fad1c605a854ca5bf2854f5ab7ce1afb43b4a8c2b88ce"
    },
    {
      "name": "OneWireHub",
      "version": "1.0.0",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for up to 32 simultaneous 1wire devices.",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890, DS1972, DS2431, BAE910, DS1982, DS2502, DS2501",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/OneWireHub-1.0.0.zip",
      "archiveFileName": "OneWireHub-1.0.0.zip",
      "size": 9430175,
      "checksum": "SHA-256:d4b236560e3d0a1ebe139f2f1472df3e82d0b4ca4341ece6402f722ce2903785"
    },
    {
      "name": "OneWireHub",
      "version": "1.1.0",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for up to 32 simultaneous 1wire devices.",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890, DS1972, DS2431, BAE910, DS1982, DS2502, DS2501",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/OneWireHub-1.1.0.zip",
      "archiveFileName": "OneWireHub-1.1.0.zip",
      "size": 9428194,
      "checksum": "SHA-256:74c90b1d3a856203642f7c79a767c917c3551bce56c4bad37849804000a769c5"
    },
    {
      "name": "OneWireHub",
      "version": "1.2.0",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for up to 32 simultaneous 1wire devices.",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890, DS1972, DS2431, BAE910, DS1982, DS2502, DS2501",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/OneWireHub-1.2.0.zip",
      "archiveFileName": "OneWireHub-1.2.0.zip",
      "size": 9429904,
      "checksum": "SHA-256:5af0fea586eb19fd47cee390e40d19ee3196cce360a8d725bfa999b5bda01f52"
    },
    {
      "name": "OneWireHub",
      "version": "2.0.0",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for up to 32 simultaneous 1wire devices.",
      "paragraph": "supported sensors: BAE910, DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2411, DS2413, DS2423, DS2431, DS2432, DS2433, DS2438, DS2450, DS2501, DS2502, DS2503, DS2505, DS2506, DS2890",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/orgua/OneWireHub-2.0.0.zip",
      "archiveFileName": "OneWireHub-2.0.0.zip",
      "size": 10803372,
      "checksum": "SHA-256:1362b8a7e5505f94dd4626f08fbf561075ab977b447f4df8be375bed655fcbac"
    },
    {
      "name": "Sindormir SevenSegments",
      "version": "1.1.0",
      "author": "Jorge Gómez \u003cjorge@sindormir.net\u003e, kwendenarmo \u003cdevel@kwendenarmo.es\u003e",
      "maintainer": "Jorge Gómez \u003cjorge@sindormir.net\u003e",
      "sentence": "Simple Seven Segments library for Arduino.",
      "paragraph": "Easy way to display 0 to F digits.",
      "website": "https://github.com/SindormirNet/ArduinoSevenSegments",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SindormirNet/Sindormir_SevenSegments-1.1.0.zip",
      "archiveFileName": "Sindormir_SevenSegments-1.1.0.zip",
      "size": 17636,
      "checksum": "SHA-256:a7452fb63de0cfdc6fee1a6e630096e087f975456452a282a3b493fb12ff4522"
    },
    {
      "name": "Sindormir SevenSegments",
      "version": "1.0.0",
      "author": "Jorge Gómez \u003cjorge@sindormir.net\u003e",
      "maintainer": "Jorge Gómez \u003cjorge@sindormir.net\u003e",
      "sentence": "Simple Seven Segments library for Arduino.",
      "paragraph": "Easy way to display 0 to F digits.",
      "website": "https://github.com/SindormirNet/ArduinoSevenSegments",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SindormirNet/Sindormir_SevenSegments-1.0.0.zip",
      "archiveFileName": "Sindormir_SevenSegments-1.0.0.zip",
      "size": 14925,
      "checksum": "SHA-256:46c2f866d34af6fc26d1d14f73329b34d22043c34e05fc781a8a1575a49a2665"
    },
    {
      "name": "esp8266_mdns",
      "version": "1.0.0",
      "author": "mrdunk",
      "maintainer": "mrdunk",
      "sentence": "mDNS queries and responses on esp8266.",
      "paragraph": "Or to describe it another way: An mDNS Client or Bonjour Client library for the esp8266.",
      "website": "https://github.com/mrdunk/esp8266_mdns",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrdunk/esp8266_mdns-1.0.0.zip",
      "archiveFileName": "esp8266_mdns-1.0.0.zip",
      "size": 12656,
      "checksum": "SHA-256:85f08a5a0d996c822069951cb00f6d880fd3162d3050e5069d5750fb8403739e"
    },
    {
      "name": "esp8266_mdns",
      "version": "1.1.0",
      "author": "mrdunk",
      "maintainer": "mrdunk",
      "sentence": "mDNS queries and responses on esp8266.",
      "paragraph": "Or to describe it another way: An mDNS Client or Bonjour Client library for the esp8266.",
      "website": "https://github.com/mrdunk/esp8266_mdns",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrdunk/esp8266_mdns-1.1.0.zip",
      "archiveFileName": "esp8266_mdns-1.1.0.zip",
      "size": 13914,
      "checksum": "SHA-256:544513c4d92fe5fbfd19de01833d48a5a26fd688af10f50c7f64d108eeac6236"
    },
    {
      "name": "esp8266_mdns",
      "version": "1.1.1",
      "author": "mrdunk",
      "maintainer": "mrdunk",
      "sentence": "mDNS queries and responses on esp8266.",
      "paragraph": "Or to describe it another way: An mDNS Client or Bonjour Client library for the esp8266.",
      "website": "https://github.com/mrdunk/esp8266_mdns",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrdunk/esp8266_mdns-1.1.1.zip",
      "archiveFileName": "esp8266_mdns-1.1.1.zip",
      "size": 13916,
      "checksum": "SHA-256:0651558ed3e1280849afe8f3af9d3ace6f9084ddc3721f198b3d2c0761cf6e1b"
    },
    {
      "name": "esp8266_mdns",
      "version": "1.1.2",
      "author": "mrdunk",
      "maintainer": "mrdunk",
      "sentence": "mDNS queries and responses on esp8266.",
      "paragraph": "Or to describe it another way: An mDNS Client or Bonjour Client library for the esp8266.",
      "website": "https://github.com/mrdunk/esp8266_mdns",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrdunk/esp8266_mdns-1.1.2.zip",
      "archiveFileName": "esp8266_mdns-1.1.2.zip",
      "size": 14104,
      "checksum": "SHA-256:3adb5cc291664f842c3164b419f0eeef9cd74215cd2ac3b6ff2915188481f445"
    },
    {
      "name": "esp8266_mdns",
      "version": "1.1.3",
      "author": "mrdunk",
      "maintainer": "mrdunk",
      "sentence": "mDNS queries and responses on esp8266.",
      "paragraph": "Or to describe it another way: An mDNS Client or Bonjour Client library for the esp8266.",
      "website": "https://github.com/mrdunk/esp8266_mdns",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrdunk/esp8266_mdns-1.1.3.zip",
      "archiveFileName": "esp8266_mdns-1.1.3.zip",
      "size": 14091,
      "checksum": "SHA-256:a6a2aa414163af2c8d1d996f1460d44ec8d15a91b2f5d8948e087e52f2ee763d"
    },
    {
      "name": "esp8266_mdns",
      "version": "1.1.4",
      "author": "mrdunk",
      "maintainer": "mrdunk",
      "sentence": "mDNS queries and responses on esp8266.",
      "paragraph": "Or to describe it another way: An mDNS Client or Bonjour Client library for the esp8266.",
      "website": "https://github.com/mrdunk/esp8266_mdns",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrdunk/esp8266_mdns-1.1.4.zip",
      "archiveFileName": "esp8266_mdns-1.1.4.zip",
      "size": 14115,
      "checksum": "SHA-256:67053b4fd499a4466ff7c01bcaa56689f68b5275e66b64a05ec3b948a3751bf5"
    },
    {
      "name": "esp8266_mdns",
      "version": "1.1.5",
      "author": "mrdunk",
      "maintainer": "mrdunk",
      "sentence": "mDNS queries and responses on esp8266.",
      "paragraph": "Or to describe it another way: An mDNS Client or Bonjour Client library for the esp8266.",
      "website": "https://github.com/mrdunk/esp8266_mdns",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrdunk/esp8266_mdns-1.1.5.zip",
      "archiveFileName": "esp8266_mdns-1.1.5.zip",
      "size": 14373,
      "checksum": "SHA-256:6dd08fc14a5ffff09d5d52d2ced06944926b6ca2931277273da79ad1badc010d"
    },
    {
      "name": "esp8266_mdns",
      "version": "1.1.6",
      "author": "mrdunk",
      "maintainer": "mrdunk",
      "sentence": "mDNS queries and responses on esp8266.",
      "paragraph": "Or to describe it another way: An mDNS Client or Bonjour Client library for the esp8266.",
      "website": "https://github.com/mrdunk/esp8266_mdns",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrdunk/esp8266_mdns-1.1.6.zip",
      "archiveFileName": "esp8266_mdns-1.1.6.zip",
      "size": 14451,
      "checksum": "SHA-256:5f4819e5cef6ec9aff813c791b0fc2d8268df4ca5618de884d9be84ff5ab982a"
    },
    {
      "name": "XLR8Servo",
      "version": "1.0.0",
      "author": "MattWeber \u003clinkedin.com/in/mattweberdesign\u003e",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Allows Arduino boards to control a variety of servo motors. For Alorium Technology's XLR8 board.",
      "paragraph": "It uses a set of dedicated custom hardware timers instead of the microcontroller's timer. The library can control up to 20 servos accurately without relying on microcontroller interrupt handling.\u003cbr /\u003e",
      "website": "https://github.com/AloriumTechnology/XLR8Servo",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8Servo-1.0.0.zip",
      "archiveFileName": "XLR8Servo-1.0.0.zip",
      "size": 13592,
      "checksum": "SHA-256:8a606406e917456e8ca2fdcac3b7af8aecab89aa2209106936091b9e0c7e05b8"
    },
    {
      "name": "XLR8Servo",
      "version": "1.1.0",
      "author": "Alorium Technology",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Allows Arduino boards to control a variety of servo motors. For Alorium Technology's XLR8 board.",
      "paragraph": "It uses a set of dedicated custom hardware timers instead of the microcontroller's timer. The library can control up to 20 servos accurately without relying on microcontroller interrupt handling.\u003cbr /\u003e",
      "website": "https://github.com/AloriumTechnology/XLR8Servo",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8Servo-1.1.0.zip",
      "archiveFileName": "XLR8Servo-1.1.0.zip",
      "size": 25336,
      "checksum": "SHA-256:c89eb129f771c8c816fac4937e345155fb3314f2d283422b49e2e73ac3025ae7"
    },
    {
      "name": "XLR8Float",
      "version": "1.0.0",
      "author": "MattWeber \u003cmatthew.d.weber@ieee.org\u003e",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Arduino library for hardware accelerated floating point math.",
      "paragraph": "Takes advantage of hardware acceleration available in Alorium Technology's XLR8 product.",
      "website": "https://github.com/AloriumTechnology/XLR8Float",
      "category": "Data Processing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8Float-1.0.0.zip",
      "archiveFileName": "XLR8Float-1.0.0.zip",
      "size": 21587,
      "checksum": "SHA-256:a9d92477e19977488dfc1e25307b53b1324361c021c56790b175e66ffd2df2e2"
    },
    {
      "name": "XLR8Float",
      "version": "1.0.1",
      "author": "Alorium Technology",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Arduino library for hardware accelerated floating point math.",
      "paragraph": "Takes advantage of hardware acceleration available in Alorium Technology's XLR8 product.",
      "website": "https://github.com/AloriumTechnology/XLR8Float",
      "category": "Data Processing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8Float-1.0.1.zip",
      "archiveFileName": "XLR8Float-1.0.1.zip",
      "size": 21565,
      "checksum": "SHA-256:25b189d022405f4ff2e106b1dc6dc8ea90ff2d91551b5915198904ca212e32b5"
    },
    {
      "name": "XLR8Info",
      "version": "1.0.0",
      "author": "MattWeber \u003clinkedin.com/in/mattweberdesign\u003e",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Arduino library for identifying features of XLR8 product",
      "paragraph": "Determines version number of XLR8 design and which XBs are included.",
      "website": "https://github.com/AloriumTechnology/XLR8Info",
      "category": "Uncategorized",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8Info-1.0.0.zip",
      "archiveFileName": "XLR8Info-1.0.0.zip",
      "size": 14113,
      "checksum": "SHA-256:c0ebe893bdca899cb2f193743a0385b1752c0a0e3f0d3abe30d08f5beb347725"
    },
    {
      "name": "XLR8Info",
      "version": "1.0.2",
      "author": "MattWeber \u003clinkedin.com/in/mattweberdesign\u003e",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Arduino library for identifying features of XLR8 product",
      "paragraph": "Determines version number of XLR8 design and which XBs are included.",
      "website": "https://github.com/AloriumTechnology/XLR8Info",
      "category": "Uncategorized",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8Info-1.0.2.zip",
      "archiveFileName": "XLR8Info-1.0.2.zip",
      "size": 14374,
      "checksum": "SHA-256:7f9fb0178ad31182a52dcbf3e1cac16e458fce0d10919964985b6fc343c63fb1"
    },
    {
      "name": "XLR8Info",
      "version": "1.0.3",
      "author": "Alorium Technology",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Arduino library for identifying features of XLR8 product",
      "paragraph": "Determines version number of XLR8 design and which XBs are included.",
      "website": "https://github.com/AloriumTechnology/XLR8Info",
      "category": "Uncategorized",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8Info-1.0.3.zip",
      "archiveFileName": "XLR8Info-1.0.3.zip",
      "size": 15103,
      "checksum": "SHA-256:89fc533951e63e1a068eb303b4c71e68f9df579c71f710d139b5ba5c131665e7"
    },
    {
      "name": "XLR8Info",
      "version": "1.0.5",
      "author": "Alorium Technology",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Arduino library for identifying features of XLR8 product",
      "paragraph": "Determines version number of XLR8 design and which XBs are included.",
      "website": "https://github.com/AloriumTechnology/XLR8Info",
      "category": "Uncategorized",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8Info-1.0.5.zip",
      "archiveFileName": "XLR8Info-1.0.5.zip",
      "size": 15749,
      "checksum": "SHA-256:ca3b94566b3ca5b3dfaaada73a68676debe8a839bcdaa9ef0ff6007b6333d5f4"
    },
    {
      "name": "XLR8Info",
      "version": "1.0.6",
      "author": "Alorium Technology",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Arduino library for identifying features of XLR8 product",
      "paragraph": "Determines version number of XLR8 design and which XBs are included.",
      "website": "https://github.com/AloriumTechnology/XLR8Info",
      "category": "Uncategorized",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8Info-1.0.6.zip",
      "archiveFileName": "XLR8Info-1.0.6.zip",
      "size": 15751,
      "checksum": "SHA-256:4a4af57b5803de6d46e8be200d489e34c75a6e7a77581c5705142fe83daaf728"
    },
    {
      "name": "XLR8Info",
      "version": "1.0.7",
      "author": "Alorium Technology",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Arduino library for identifying features of XLR8 product",
      "paragraph": "For the Alorium Technology XLR8 board, determines version number of XLR8 design and which XBs are included.",
      "website": "https://github.com/AloriumTechnology/XLR8Info",
      "category": "Uncategorized",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8Info-1.0.7.zip",
      "archiveFileName": "XLR8Info-1.0.7.zip",
      "size": 15766,
      "checksum": "SHA-256:7b8a5d69f71fd010f88db7d2d294a391f826f7614f16134f21cf264bb002ea0c"
    },
    {
      "name": "XLR8ADC",
      "version": "1.0.0",
      "author": "MattWeber \u003clinkedin.com/in/mattweberdesign\u003e",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Arduino library to take advantage of XLR8 ADC performance.",
      "paragraph": "XLR8 has a 12 bit ADC and can perform at higher sample rates than the ADC in an ordinary ATmega-based Arduino.",
      "website": "https://github.com/AloriumTechnology/XLR8ADC",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8ADC-1.0.0.zip",
      "archiveFileName": "XLR8ADC-1.0.0.zip",
      "size": 7750,
      "checksum": "SHA-256:5f83c164dfbbf2fda7e5d4d6e5fe7b238cc448b75c9dfd2ecf7f7b92a32b55a8"
    },
    {
      "name": "XLR8ADC",
      "version": "1.0.1",
      "author": "Alorium Technology",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Arduino library to take advantage of XLR8 ADC performance.",
      "paragraph": "XLR8 has a 12 bit ADC and can perform at higher sample rates than the ADC in an ordinary ATmega-based Arduino.",
      "website": "https://github.com/AloriumTechnology/XLR8ADC",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8ADC-1.0.1.zip",
      "archiveFileName": "XLR8ADC-1.0.1.zip",
      "size": 7316,
      "checksum": "SHA-256:6deb7269f045d814d2abaa41a12f9c834c0ee86964b63e29888ecd46d7c242db"
    },
    {
      "name": "XLR8ADC",
      "version": "1.0.2",
      "author": "Alorium Technology",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Arduino library to take advantage of XLR8 ADC performance.",
      "paragraph": "XLR8 has a 12 bit ADC and can perform at higher sample rates than the ADC in an ordinary ATmega-based Arduino.",
      "website": "https://github.com/AloriumTechnology/XLR8ADC",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8ADC-1.0.2.zip",
      "archiveFileName": "XLR8ADC-1.0.2.zip",
      "size": 6866,
      "checksum": "SHA-256:c44f05b92303f4490127c0fc3f91d7199f774565eee05ce6f082a88c78ab6830"
    },
    {
      "name": "XLR8NeoPixel",
      "version": "1.0.0",
      "author": "MattWeber \u003cmatthew.d.weber@ieee.org\u003e",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "paragraph": "Takes advantage of hardware acceleration available in Alorium Technology's XLR8 product. Doesn't use AVR memory, doesn't require disabling interrupts during show() routine, doesn't lose resolution on RGB values when setting brightness low then high. Does provide an awesome drop-in replacement for the standard NeoPixel library.",
      "website": "https://github.com/AloriumTechnology/XLR8NeoPixel",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8NeoPixel-1.0.0.zip",
      "archiveFileName": "XLR8NeoPixel-1.0.0.zip",
      "size": 33058,
      "checksum": "SHA-256:75c86f9bd213f40bd75b6d4132d344b0044f8af73fbe9a680fb9dd80cd0aa368"
    },
    {
      "name": "XLR8NeoPixel",
      "version": "1.0.1",
      "author": "Alorium Technology",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "paragraph": "Takes advantage of hardware acceleration available in Alorium Technology's XLR8 product. Doesn't use AVR memory, doesn't require disabling interrupts during show() routine, doesn't lose resolution on RGB values when setting brightness low then high. Does provide an awesome drop-in replacement for the standard NeoPixel library.",
      "website": "https://github.com/AloriumTechnology/XLR8NeoPixel",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8NeoPixel-1.0.1.zip",
      "archiveFileName": "XLR8NeoPixel-1.0.1.zip",
      "size": 33036,
      "checksum": "SHA-256:6afd9dc2e6224d8577fc1dd5789a536ab852124a5929cf2749a2ac183605e59b"
    },
    {
      "name": "DIGI-DOT-BOOSTER Library",
      "version": "1.0.1",
      "author": "Gamadril",
      "maintainer": "Gamadril \u003cgamadril.dev@gmail.com\u003e",
      "sentence": "An easy to use library to control the DD-Booster.",
      "paragraph": "Encapsulates all protocol logic and SPI control in simple functions.",
      "website": "https://github.com/Gamadril/DD-Booster-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Gamadril/DIGI_DOT_BOOSTER_Library-1.0.1.zip",
      "archiveFileName": "DIGI_DOT_BOOSTER_Library-1.0.1.zip",
      "size": 183782,
      "checksum": "SHA-256:17e9006466e2928119bbff1ac0b011cfe6c80f0de62feecf9a09d2108d70bdd1"
    },
    {
      "name": "DIGI-DOT-BOOSTER Library",
      "version": "1.0.0",
      "author": "Gamadril",
      "maintainer": "Gamadril \u003cgamadril.dev@gmail.com\u003e",
      "sentence": "An easy to use library to control the DD-Booster.",
      "paragraph": "Encapsulates all protocol logic and SPI control in simple functions.",
      "website": "https://github.com/Gamadril/DD-Booster-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Gamadril/DIGI_DOT_BOOSTER_Library-1.0.0.zip",
      "archiveFileName": "DIGI_DOT_BOOSTER_Library-1.0.0.zip",
      "size": 183755,
      "checksum": "SHA-256:42606c210fa21668369cdb55b9d6aa33913dd3b896fd563637dfeee71a955301"
    },
    {
      "name": "SparkFun RedBot Library",
      "version": "2.0.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Provides control to the SparkFun RedBot.",
      "paragraph": "Includes examples for accelerometer, whisker bumpers, line followers, wheel encoders, and driving control.",
      "website": "https://github.com/sparkfun/SparkFun_Redbot_Arduino_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_RedBot_Library-2.0.0.zip",
      "archiveFileName": "SparkFun_RedBot_Library-2.0.0.zip",
      "size": 44326,
      "checksum": "SHA-256:c89840ed16450ce7d80142670df3cfdf30f6f3dd9fe2355b1afdf6b74f154b4e"
    },
    {
      "name": "SparkFun RedBot Library",
      "version": "2.1.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Provides control to the SparkFun RedBot.",
      "paragraph": "Includes examples for accelerometer, whisker bumpers, line followers, wheel encoders, and driving control.",
      "website": "https://github.com/sparkfun/SparkFun_Redbot_Arduino_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_RedBot_Library-2.1.0.zip",
      "archiveFileName": "SparkFun_RedBot_Library-2.1.0.zip",
      "size": 48585,
      "checksum": "SHA-256:1e885baf4543b927e6dbb5edee7070711db90a1d39b534751777e6115015ad30"
    },
    {
      "name": "i2cdetect",
      "version": "1.0.0",
      "author": "Mike Causer",
      "maintainer": "Mike Causer \u003cmcauser@gmail.com\u003e",
      "sentence": "Arduino library for scanning I2C bus for devices",
      "paragraph": "Output a table with the list of detected devices, similar to the linux program of the same name",
      "website": "https://github.com/mcauser/i2cdetect",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mcauser/i2cdetect-1.0.0.zip",
      "archiveFileName": "i2cdetect-1.0.0.zip",
      "size": 3954,
      "checksum": "SHA-256:b484d909da23ab3250ed3b6aa2566d33d96e41a38edf2ecd4b235b13e0482ad5"
    },
    {
      "name": "MS5xxx",
      "version": "1.0.1",
      "author": "Roman Schmitz \u003croman@schmitzi.net\u003e",
      "maintainer": "Roman Schmitz \u003croman@schmitzi.net\u003e",
      "sentence": "Library for digital pressure sensors MS5xxx by Measurement Specialties (MEAS).",
      "paragraph": "Tested with Arduino Uno/Nano/Mico and ESP8266. Long-term tests with MS5607, working implementation for MS5611 chipset.",
      "website": "https://github.com/Schm1tz1/arduino-ms5xxx",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Schm1tz1/MS5xxx-1.0.1.zip",
      "archiveFileName": "MS5xxx-1.0.1.zip",
      "size": 35249,
      "checksum": "SHA-256:de2c95e76a1f67cebdea6943deb12d0b7c0c2549928aba65b7cce3e9dd2846b0"
    },
    {
      "name": "MS5xxx",
      "version": "1.0.2",
      "author": "Roman Schmitz \u003croman@schmitzi.net\u003e",
      "maintainer": "Roman Schmitz \u003croman@schmitzi.net\u003e",
      "sentence": "Library for digital pressure sensors MS5xxx by Measurement Specialties (MEAS).",
      "paragraph": "Tested with Arduino Uno/Nano/Mico and ESP8266. Long-term tests with MS5607, working implementation for MS5611 chipset.",
      "website": "https://github.com/Schm1tz1/arduino-ms5xxx",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Schm1tz1/MS5xxx-1.0.2.zip",
      "archiveFileName": "MS5xxx-1.0.2.zip",
      "size": 35250,
      "checksum": "SHA-256:f1c569745697d3eddc94d659263ff1f8914c4332b6deb2dad962f2bfa3697499"
    },
    {
      "name": "TSIC",
      "version": "0.9.0",
      "author": "Roman Schmitz \u003croman@schmitzi.net\u003e",
      "maintainer": "Roman Schmitz \u003croman@schmitzi.net\u003e",
      "sentence": "Library for TSIC digital temperature sensors (type 206/306/506 and similar).",
      "paragraph": "This project is a library for TSIC digital temperature sensors (type 206/306/506 and similar). It is based on the version 2 from Rolf Wagner from 2014.03.09 which can be found on Arduino Playground. The TSIC sensors feature a very hich accuracy and can be read out roughly every 100ms using the ZACwire-rotocol, more informations can be found in the datasheet. The code is optimized for high speed and low memory consumption.",
      "website": "https://github.com/Schm1tz1/arduino-tsic",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Schm1tz1/TSIC-0.9.0.zip",
      "archiveFileName": "TSIC-0.9.0.zip",
      "size": 18276,
      "checksum": "SHA-256:50f1195965e1064309b41b7ea5a7e293bbb1ac0d1ab8739ea3d513620fd77c93"
    },
    {
      "name": "TSIC",
      "version": "0.9.1",
      "author": "Roman Schmitz \u003croman@schmitzi.net\u003e",
      "maintainer": "Roman Schmitz \u003croman@schmitzi.net\u003e",
      "sentence": "Library for TSIC digital temperature sensors (type 206/306/506 and similar).",
      "paragraph": "This project is a library for TSIC digital temperature sensors (type 206/306/506 and similar). It is based on the version 2 from Rolf Wagner from 2014.03.09 which can be found on Arduino Playground. The TSIC sensors feature a very hich accuracy and can be read out roughly every 100ms using the ZACwire-rotocol, more informations can be found in the datasheet. The code is optimized for high speed and low memory consumption.",
      "website": "https://github.com/Schm1tz1/arduino-tsic",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Schm1tz1/TSIC-0.9.1.zip",
      "archiveFileName": "TSIC-0.9.1.zip",
      "size": 18974,
      "checksum": "SHA-256:a2d0286ab3c408efb9007c4db72a9d75c240aa25d1bd2b58fd5671133dba7a9f"
    },
    {
      "name": "TSIC",
      "version": "1.0.1",
      "author": "Roman Schmitz \u003croman@schmitzi.net\u003e",
      "maintainer": "Roman Schmitz \u003croman@schmitzi.net\u003e",
      "sentence": "Library for TSIC digital temperature sensors (type 206/306/506 and similar).",
      "paragraph": "This project is a library for TSIC digital temperature sensors (type 206/306/506 and similar). It is based on the version 2 from Rolf Wagner from 2014.03.09 which can be found on Arduino Playground. The TSIC sensors feature a very hich accuracy and can be read out roughly every 100ms using the ZACwire-rotocol, more informations can be found in the datasheet. The code is optimized for high speed and low memory consumption.",
      "website": "https://github.com/Schm1tz1/arduino-tsic",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Schm1tz1/TSIC-1.0.1.zip",
      "archiveFileName": "TSIC-1.0.1.zip",
      "size": 19291,
      "checksum": "SHA-256:b16912dd22689813cba93d5599e73adc13369f0922f301bea15ec83cbc250831"
    },
    {
      "name": "Embedded Template Library",
      "version": "8.0.0",
      "author": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "maintainer": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "sentence": "A C++ template library tailored for embedded systems.",
      "paragraph": "Requires some support from STL. See http://andybrown.me.uk/2011/01/15/the-standard-template-library-stl-for-avr-with-c-streams/",
      "website": "http://www.etlcpp.com/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ETLCPP/Embedded_Template_Library-8.0.0.zip",
      "archiveFileName": "Embedded_Template_Library-8.0.0.zip",
      "size": 1446034,
      "checksum": "SHA-256:ab597ac7c1a28dd43ec594b77797ada2e78744eb151481df506850e0ecd76305"
    },
    {
      "name": "Embedded Template Library",
      "version": "8.0.1",
      "author": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "maintainer": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "sentence": "A C++ template library tailored for embedded systems.",
      "paragraph": "Requires some support from STL. See http://andybrown.me.uk/2011/01/15/the-standard-template-library-stl-for-avr-with-c-streams/",
      "website": "http://www.etlcpp.com/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ETLCPP/Embedded_Template_Library-8.0.1.zip",
      "archiveFileName": "Embedded_Template_Library-8.0.1.zip",
      "size": 1446826,
      "checksum": "SHA-256:066e84eee19dad1ec9ac204b3a5225b7af023a6b046e527340b79b6f21d44e88"
    },
    {
      "name": "Embedded Template Library",
      "version": "8.0.2",
      "author": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "maintainer": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "sentence": "A C++ template library tailored for embedded systems.",
      "paragraph": "Requires some support from STL. See http://andybrown.me.uk/2011/01/15/the-standard-template-library-stl-for-avr-with-c-streams/",
      "website": "http://www.etlcpp.com/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ETLCPP/Embedded_Template_Library-8.0.2.zip",
      "archiveFileName": "Embedded_Template_Library-8.0.2.zip",
      "size": 1446955,
      "checksum": "SHA-256:90ad204912607c199d56f76a9d0ae69ebfe83e9e0a61e37f68b010e3d9b08529"
    },
    {
      "name": "Embedded Template Library",
      "version": "8.0.4",
      "author": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "maintainer": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "sentence": "A C++ template library tailored for embedded systems.",
      "paragraph": "Requires some support from STL. See http://andybrown.me.uk/2011/01/15/the-standard-template-library-stl-for-avr-with-c-streams/",
      "website": "http://www.etlcpp.com/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ETLCPP/Embedded_Template_Library-8.0.4.zip",
      "archiveFileName": "Embedded_Template_Library-8.0.4.zip",
      "size": 1501535,
      "checksum": "SHA-256:d9ddad34e23f46d9ba80ceb226ad4a2eb32a2338891dff80d694c1321915a52d"
    },
    {
      "name": "Embedded Template Library",
      "version": "8.0.5",
      "author": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "maintainer": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "sentence": "A C++ template library tailored for embedded systems.",
      "paragraph": "Requires some support from STL. See http://andybrown.me.uk/2011/01/15/the-standard-template-library-stl-for-avr-with-c-streams/",
      "website": "http://www.etlcpp.com/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ETLCPP/Embedded_Template_Library-8.0.5.zip",
      "archiveFileName": "Embedded_Template_Library-8.0.5.zip",
      "size": 1511586,
      "checksum": "SHA-256:82b355c0ea523fb77ea382caa48508178c501b189f74e0d573e6df0a837a61bd"
    },
    {
      "name": "Embedded Template Library",
      "version": "8.1.0",
      "author": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "maintainer": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "sentence": "A C++ template library tailored for embedded systems.",
      "paragraph": "Requires some support from STL. See http://andybrown.me.uk/2011/01/15/the-standard-template-library-stl-for-avr-with-c-streams/",
      "website": "http://www.etlcpp.com/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ETLCPP/Embedded_Template_Library-8.1.0.zip",
      "archiveFileName": "Embedded_Template_Library-8.1.0.zip",
      "size": 1511589,
      "checksum": "SHA-256:d906d9ff129abffe818257d831b00bcef9ca3ba2b9da03c06ee78a095d44b044"
    },
    {
      "name": "Embedded Template Library",
      "version": "8.2.0",
      "author": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "maintainer": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "sentence": "A C++ template library tailored for embedded systems.",
      "paragraph": "Requires some support from STL. See http://andybrown.me.uk/2011/01/15/the-standard-template-library-stl-for-avr-with-c-streams/",
      "website": "http://www.etlcpp.com/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ETLCPP/Embedded_Template_Library-8.2.0.zip",
      "archiveFileName": "Embedded_Template_Library-8.2.0.zip",
      "size": 1768845,
      "checksum": "SHA-256:540f655c09d64a740fc987ab1428f5f9c6fe1e28bdf7ba0c6d7331c7657fd578"
    },
    {
      "name": "Embedded Template Library",
      "version": "9.0.0",
      "author": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "maintainer": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "sentence": "A C++ template library tailored for embedded systems.",
      "paragraph": "Requires some support from STL. See http://andybrown.me.uk/2011/01/15/the-standard-template-library-stl-for-avr-with-c-streams/",
      "website": "http://www.etlcpp.com/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ETLCPP/Embedded_Template_Library-9.0.0.zip",
      "archiveFileName": "Embedded_Template_Library-9.0.0.zip",
      "size": 1805338,
      "checksum": "SHA-256:4379bd72c66330de5c626b6a45f7a505f6742074f25753a73fa36bb5de8c9b5f"
    },
    {
      "name": "Embedded Template Library",
      "version": "9.1.0",
      "author": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "maintainer": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "sentence": "A C++ template library tailored for embedded systems.",
      "paragraph": "Requires some support from STL. See http://andybrown.me.uk/2011/01/15/the-standard-template-library-stl-for-avr-with-c-streams/",
      "website": "http://www.etlcpp.com/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ETLCPP/Embedded_Template_Library-9.1.0.zip",
      "archiveFileName": "Embedded_Template_Library-9.1.0.zip",
      "size": 1823932,
      "checksum": "SHA-256:8681592cefdfb902e52a9a7da66e110363abbaf3de1cf76e4e533bdb7b09dc38"
    },
    {
      "name": "Embedded Template Library",
      "version": "9.1.2",
      "author": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "maintainer": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "sentence": "A C++ template library tailored for embedded systems.",
      "paragraph": "Requires some support from STL. See http://andybrown.me.uk/2011/01/15/the-standard-template-library-stl-for-avr-with-c-streams/",
      "website": "http://www.etlcpp.com/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ETLCPP/Embedded_Template_Library-9.1.2.zip",
      "archiveFileName": "Embedded_Template_Library-9.1.2.zip",
      "size": 1823930,
      "checksum": "SHA-256:3f1bd6239b985fb836ebe841046d352c57a90b4da517e7e6ff40cb7800d6d0a2"
    },
    {
      "name": "Embedded Template Library",
      "version": "9.1.3",
      "author": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "maintainer": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "sentence": "A C++ template library tailored for embedded systems.",
      "paragraph": "Requires some support from STL. See http://andybrown.me.uk/2011/01/15/the-standard-template-library-stl-for-avr-with-c-streams/",
      "website": "http://www.etlcpp.com/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ETLCPP/Embedded_Template_Library-9.1.3.zip",
      "archiveFileName": "Embedded_Template_Library-9.1.3.zip",
      "size": 1820512,
      "checksum": "SHA-256:a75ec8f41a574a865269c68a0d75752468dcd04c52b970da254547cc0f3d85fe"
    },
    {
      "name": "RCLSwitch",
      "version": "1.4.0",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@nicohood.de\u003e",
      "sentence": "Compact version of RC Switch",
      "paragraph": "RCLSwitch is capable of sending TYPE A 10 Dip Switch signals only, but with a very compact implementation.",
      "website": "https://github.com/NicoHood/RCLSwitch",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NicoHood/RCLSwitch-1.4.0.zip",
      "archiveFileName": "RCLSwitch-1.4.0.zip",
      "size": 4499,
      "checksum": "SHA-256:6a6c6a7ae7004801f3daf9b790e7bfa4ec52cc4041c95cebf0eaa03933c0abba"
    },
    {
      "name": "Button",
      "version": "1.0.0",
      "author": "Michael Adams \u003carduino@michaeladams.org\u003e",
      "maintainer": "Michael Adams \u003carduino@michaeladams.org\u003e",
      "sentence": "Button is a tiny library to make reading buttons very simple.",
      "paragraph": "It handles debouncing automatically, and monitoring of state.",
      "website": "http://utrainia.com/",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/madleech/Button-1.0.0.zip",
      "archiveFileName": "Button-1.0.0.zip",
      "size": 4914,
      "checksum": "SHA-256:9abb1dbf1b9f2febe2a779ecfbd0d22acc996235a8921349be50c8a65bd01fb1"
    },
    {
      "name": "TurnoutPulser",
      "version": "1.0.0",
      "author": "Michael Adams \u003carduino@michaeladams.org\u003e",
      "maintainer": "Michael Adams \u003carduino@michaeladams.org\u003e",
      "sentence": "Control a Kato or Tomix style two-wire turnout.",
      "paragraph": "Ideal for model railway and railroad control.",
      "website": "http://utrainia.com/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/madleech/TurnoutPulser-1.0.0.zip",
      "archiveFileName": "TurnoutPulser-1.0.0.zip",
      "size": 5335,
      "checksum": "SHA-256:f1f03d4eb76d972522752ae47efaf123d9273c36538a99cea4729f380a0f14d7"
    },
    {
      "name": "TurnoutPulser",
      "version": "1.0.1",
      "author": "Michael Adams \u003carduino@michaeladams.org\u003e",
      "maintainer": "Michael Adams \u003carduino@michaeladams.org\u003e",
      "sentence": "Control a Kato or Tomix style two-wire turnout.",
      "paragraph": "Ideal for model railway and railroad control.",
      "website": "http://utrainia.com/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/madleech/TurnoutPulser-1.0.1.zip",
      "archiveFileName": "TurnoutPulser-1.0.1.zip",
      "size": 5366,
      "checksum": "SHA-256:1b6a72339ed304ea655915353a6ceed27873d53855889f3ee2a4a189e8e6f157"
    },
    {
      "name": "Mahony",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "None",
      "sentence": "Helpers for MahonyAHRS algorithm",
      "paragraph": "This library wraps the implementation of MahonyAHRS algorithm to get orientation of an object based on accelerometer and gyroscope readings",
      "website": "https://github.com/PaulStoffregen/Mahony",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/Mahony-1.0.0.zip",
      "archiveFileName": "Mahony-1.0.0.zip",
      "size": 3740,
      "checksum": "SHA-256:4785b1aaace5a13970c1901a8842c163bbf8515b59ce69a1ce9bb0263c2d47c5"
    },
    {
      "name": "Mahony",
      "version": "1.1.0",
      "author": "Arduino",
      "maintainer": "None",
      "sentence": "Helpers for MahonyAHRS algorithm",
      "paragraph": "This library wraps the implementation of MahonyAHRS algorithm to get orientation of an object based on accelerometer and gyroscope readings",
      "website": "https://github.com/PaulStoffregen/Mahony",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/Mahony-1.1.0.zip",
      "archiveFileName": "Mahony-1.1.0.zip",
      "size": 5756,
      "checksum": "SHA-256:ae23b4a6932f2871bcf8ec8fb597e4e61f9b3869ad46e7b54586596498dc0344"
    },
    {
      "name": "NtpClientLib",
      "version": "1.1.0",
      "author": "Germán Martín",
      "maintainer": "Germán Martín",
      "sentence": "NtpClient Library",
      "paragraph": "Library to get system sync from a NTP server. Based on code from NTP client example.",
      "website": "https://github.com/gmag11/NtpClient",
      "category": "Timing",
      "architectures": [
        "ESP8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gmag11/NtpClientLib-1.1.0.zip",
      "archiveFileName": "NtpClientLib-1.1.0.zip",
      "size": 8885,
      "checksum": "SHA-256:bc8a3faf5c458a9e5287b03b14a93180fd242ffbaf9c1ddebd0e2c910a7d18b8"
    },
    {
      "name": "NtpClientLib",
      "version": "1.2.0",
      "author": "Germán Martín,gmag11@gmail.com",
      "maintainer": "Germán Martín,gmag11@gmail.com",
      "sentence": "Ntp Client Library",
      "paragraph": "Library to get system sync from a NTP server. Based on code from NTP client example. Currently, it only works on ESP8266 based boards. In a future I'll try to make it compatible with Arduino boards w Eternet or WiFi modules.",
      "website": "https://github.com/gmag11/NtpClient",
      "category": "Timing",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gmag11/NtpClientLib-1.2.0.zip",
      "archiveFileName": "NtpClientLib-1.2.0.zip",
      "size": 9542,
      "checksum": "SHA-256:3c50919ab1df54f24ae0d829bf2bf9914a4a49ee01f3829f4f0fc4ea1e19da3b"
    },
    {
      "name": "NtpClientLib",
      "version": "1.2.1",
      "author": "German Martin",
      "maintainer": "German Martin",
      "sentence": "Ntp Client Library",
      "paragraph": "Library to get system sync from a NTP server. Based on code from NTP client example. Currently, it only works on ESP8266 based boards. In a future I'll try to make it compatible with Arduino boards w Eternet or WiFi modules.",
      "website": "https://github.com/gmag11/NtpClient",
      "category": "Timing",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gmag11/NtpClientLib-1.2.1.zip",
      "archiveFileName": "NtpClientLib-1.2.1.zip",
      "size": 9752,
      "checksum": "SHA-256:50e46c44820bf87ffcb77f7579a996b856fd5f5afaff91107ab8c68825a53778"
    },
    {
      "name": "NtpClientLib",
      "version": "1.3.0",
      "author": "German Martin",
      "maintainer": "German Martin",
      "sentence": "Ntp Client Library",
      "paragraph": "Library to get system sync from a NTP server. Based on code from NTP client example. Currently, it works on ESP8266 based boards. I've made it compatible with Arduino boards w Eternet module but I have not had the opportunity to test it. Please, add an issue to GitHub if you find a bug.",
      "website": "https://github.com/gmag11/NtpClient",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gmag11/NtpClientLib-1.3.0.zip",
      "archiveFileName": "NtpClientLib-1.3.0.zip",
      "size": 11005,
      "checksum": "SHA-256:120a9b610196276f9c60b335d6f33f8a41c042cdc260550bededa7067b325335"
    },
    {
      "name": "NtpClientLib",
      "version": "1.3.1",
      "author": "German Martin",
      "maintainer": "German Martin",
      "sentence": "Ntp Client Library",
      "paragraph": "Library to get system sync from a NTP server. Based on code from NTP client example. Currently, it works on ESP8266 based boards. I've made it compatible with Arduino boards w Eternet module but I have not had the opportunity to test it. Please, add an issue to GitHub if you find a bug.",
      "website": "https://github.com/gmag11/NtpClient",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gmag11/NtpClientLib-1.3.1.zip",
      "archiveFileName": "NtpClientLib-1.3.1.zip",
      "size": 11105,
      "checksum": "SHA-256:1602991d14cd58a10f042780ad0a466137da2aaa0a07bc7bd6e744e3b70b5204"
    },
    {
      "name": "NtpClientLib",
      "version": "1.3.2",
      "author": "German Martin",
      "maintainer": "German Martin",
      "sentence": "Ntp Client Library",
      "paragraph": "Library to get system sync from a NTP server. Based on code from NTP client example. Currently, it works on ESP8266 based boards. I've made it compatible with Arduino boards w Eternet module but I have not had the opportunity to test it. Please, add an issue to GitHub if you find a bug.",
      "website": "https://github.com/gmag11/NtpClient",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gmag11/NtpClientLib-1.3.2.zip",
      "archiveFileName": "NtpClientLib-1.3.2.zip",
      "size": 11132,
      "checksum": "SHA-256:aeb936da2ff6dec88b87018b84996e769327c8d0bfb2ff1adcbd84323893ccee"
    },
    {
      "name": "NtpClientLib",
      "version": "2.0.0",
      "author": "German Martin",
      "maintainer": "German Martin",
      "sentence": "Ntp Client Library",
      "paragraph": "Library to get system sync from a NTP server. Based on code from NTP client example. Currently, it works on ESP8266 based boards. I've made it compatible with Arduino boards w Eternet module but I have not had the opportunity to test it. Please, add an issue to GitHub if you find a bug. NOTICE: After version 2.0.0 library structure has changed. Please refer to README file on github repository.",
      "website": "https://github.com/gmag11/NtpClient",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gmag11/NtpClientLib-2.0.0.zip",
      "archiveFileName": "NtpClientLib-2.0.0.zip",
      "size": 14879,
      "checksum": "SHA-256:6012177cf58b2bd49ff47235f573570d2f1c7bbe9e33c15c984dee9a197a0984"
    },
    {
      "name": "NtpClientLib",
      "version": "2.0.1",
      "author": "German Martin",
      "maintainer": "German Martin",
      "sentence": "Ntp Client Library",
      "paragraph": "Library to get system sync from a NTP server. Based on code from NTP client example. Currently, it works on ESP8266 based boards. I've made it compatible with Arduino boards w Eternet module but I have not had the opportunity to test it. Please, add an issue to GitHub if you find a bug. NOTICE: After version 2.0.0 library structure has changed. Please refer to README file on github repository.",
      "website": "https://github.com/gmag11/NtpClient",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gmag11/NtpClientLib-2.0.1.zip",
      "archiveFileName": "NtpClientLib-2.0.1.zip",
      "size": 14592,
      "checksum": "SHA-256:e029ebc2b99fdc71ed69aa9f6551cffbc04f36ad6b55a7bbeb9fe322655636df"
    },
    {
      "name": "NtpClientLib",
      "version": "2.0.3",
      "author": "German Martin",
      "maintainer": "German Martin",
      "sentence": "Ntp Client Library",
      "paragraph": "Library to get system sync from a NTP server. Based on code from NTP client example. Currently, it works on ESP8266 based boards. I've made it compatible with Arduino boards w Eternet module but I have not had the opportunity to test it. Please, add an issue to GitHub if you find a bug. NOTICE: After version 2.0.0 library structure has changed. Please refer to README file on github repository.",
      "website": "https://github.com/gmag11/NtpClient",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gmag11/NtpClientLib-2.0.3.zip",
      "archiveFileName": "NtpClientLib-2.0.3.zip",
      "size": 14787,
      "checksum": "SHA-256:fe9cdd42264cce0b7a0b185885d983b1656ba1ca78e71047381c943ada4c6a64"
    },
    {
      "name": "NtpClientLib",
      "version": "2.0.4",
      "author": "German Martin",
      "maintainer": "German Martin",
      "sentence": "Ntp Client Library",
      "paragraph": "Library to get system sync from a NTP server. Based on code from NTP client example. Currently, it works on ESP8266 based boards. I've made it compatible with Arduino boards w Eternet module but I have not had the opportunity to test it. Please, add an issue to GitHub if you find a bug. NOTICE: After version 2.0.0 library structure has changed. Please refer to README file on github repository.",
      "website": "https://github.com/gmag11/NtpClient",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gmag11/NtpClientLib-2.0.4.zip",
      "archiveFileName": "NtpClientLib-2.0.4.zip",
      "size": 19473,
      "checksum": "SHA-256:ad8c5679ce2f95494c07721bb5d11270a487788fbb23c5f9008d245e0184d4e3"
    },
    {
      "name": "NtpClientLib",
      "version": "2.0.5",
      "author": "German Martin",
      "maintainer": "German Martin",
      "sentence": "Ntp Client Library",
      "paragraph": "Library to get system sync from a NTP server. Based on code from NTP client example. Currently, it works on ESP8266 based boards. I've made it compatible with Arduino boards w Eternet module but I have not had the opportunity to test it. Please, add an issue to GitHub if you find a bug. NOTICE: After version 2.0.0 library structure has changed. Please refer to README file on github repository.",
      "website": "https://github.com/gmag11/NtpClient",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gmag11/NtpClientLib-2.0.5.zip",
      "archiveFileName": "NtpClientLib-2.0.5.zip",
      "size": 21196,
      "checksum": "SHA-256:0948cccfdbf246db5925ecb8642e82766c316fd1904313d77173b0dcc5976a20"
    },
    {
      "name": "Callback",
      "version": "1.0.0",
      "author": "Tom Stewart \u003ctomstewart89@hotmail.com\u003e",
      "maintainer": "Tom Stewart \u003ctomstewart89@hotmail.com\u003e",
      "sentence": "A simple implementation of Signals and Slots for writing more flexible callbacks",
      "paragraph": "Similar to Boost::Signals and a handy algorithm when writing event driven programs",
      "website": "https://github.com/tomstewart89/Callback",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/tomstewart89/Callback-1.0.0.zip",
      "archiveFileName": "Callback-1.0.0.zip",
      "size": 4010,
      "checksum": "SHA-256:bdc58a4e2488644ec6c6a99b5f8e2bd767dac942cd19670327de5e0e946e718d"
    },
    {
      "name": "MideaIRWrapper",
      "version": "1.0.0",
      "author": "Jeferson Lima \u003cjefersonlimaa@dcc.ufba.br\u003e",
      "maintainer": "Jeferson Lima \u003cjefersonlimaa@dcc.ufba.br\u003e",
      "sentence": "A library that makes, easier work with Midea Air Conditioners.",
      "paragraph": "Midea is a famous trademark of Air Conditioners, arround the world. This library intend to make it easier, for everyone control this air conditioner, using IRremote library as background.",
      "website": "jefersonla.github.io",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/WiserUFBA/MideaIRWrapper-1.0.0.zip",
      "archiveFileName": "MideaIRWrapper-1.0.0.zip",
      "size": 16949,
      "checksum": "SHA-256:6541b8ceeefaa1fbc19723ee03116cb266bf1bd1ffd082073fa6e85a18d68e66"
    },
    {
      "name": "NXPMotionSense",
      "version": "1.0.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Motion sensing with NXP FXOS8700 Accelerometer \u0026 Magnetometer and NXP FXAS21002 Gyroscope.",
      "paragraph": "Provides access 9DOF motion sensing, with calibration to correct for presence of fixed magnetic fields and \"soft iron\" distortion.  NXP's advanced sensor fusion algorithm can be used on faster boards (Teensy 3.2, Arduino Due, etc) or the simpler Madgwick \u0026 Manony filters can be used, for combining the sensor data into reliable absolute orientation readings.",
      "website": "https://github.com/PaulStoffregen/NXPMotionSense",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/NXPMotionSense-1.0.0.zip",
      "archiveFileName": "NXPMotionSense-1.0.0.zip",
      "size": 33515,
      "checksum": "SHA-256:60de4dc453e7f686a18b0e4b867104af4450aba87c3afd6d60e4a9ba78826315"
    },
    {
      "name": "Blynk",
      "version": "0.3.10",
      "author": "Volodymyr Shymanskyy",
      "maintainer": "Volodymyr Shymanskyy \u003cvolodymyr@blynk.cc\u003e",
      "sentence": "Build a smartphone app for your project in minutes!",
      "paragraph": "Blynk allows creating IoT solutions easily and works with Arduino, ESP8266, Raspberry Pi, Intel Edison/Galileo, LinkIt ONE, Particle Core/Photon, Energia, MBED, LightBlue Bean, ...",
      "website": "http://blynk.cc",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/blynkkk/Blynk-0.3.10.zip",
      "archiveFileName": "Blynk-0.3.10.zip",
      "size": 974930,
      "checksum": "SHA-256:b30a3743c94829e7677bf49ed12c8b2ebcf18a976e7fb28bc48bed0a780d403b"
    },
    {
      "name": "Blynk",
      "version": "0.3.3",
      "author": "Volodymyr Shymanskyy",
      "maintainer": "Volodymyr Shymanskyy \u003cvolodymyr@blynk.cc\u003e",
      "sentence": "Build a smartphone app for your hardware project in minutes.",
      "paragraph": "Build a smartphone app for your hardware project in minutes. See more at: http://blynk.cc",
      "website": "http://blynk.cc",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/blynkkk/Blynk-0.3.3.zip",
      "archiveFileName": "Blynk-0.3.3.zip",
      "size": 239570,
      "checksum": "SHA-256:32592bea8a564d0d985ec6d16f17e9476531e23a515746f0b73acd0cf9e20a4d"
    },
    {
      "name": "Blynk",
      "version": "0.3.6",
      "author": "Volodymyr Shymanskyy",
      "maintainer": "Volodymyr Shymanskyy \u003cvolodymyr@blynk.cc\u003e",
      "sentence": "Build a smartphone app for your project in minutes!",
      "paragraph": "Blynk allows creating IoT solutions easily and works with Arduino, ESP8266, Raspberry Pi, Intel Edison/Galileo, LinkIt ONE, Particle Core/Photon, Energia, MBED, LightBlue Bean, ...",
      "website": "http://blynk.cc",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/blynkkk/Blynk-0.3.6.zip",
      "archiveFileName": "Blynk-0.3.6.zip",
      "size": 261184,
      "checksum": "SHA-256:20c031b1e10fdaf7ad095cb4ea480d43469e38cb63ce8f280d0189296f1dfd60"
    },
    {
      "name": "Blynk",
      "version": "0.3.7",
      "author": "Volodymyr Shymanskyy",
      "maintainer": "Volodymyr Shymanskyy \u003cvolodymyr@blynk.cc\u003e",
      "sentence": "Build a smartphone app for your project in minutes!",
      "paragraph": "Blynk allows creating IoT solutions easily and works with Arduino, ESP8266, Raspberry Pi, Intel Edison/Galileo, LinkIt ONE, Particle Core/Photon, Energia, MBED, LightBlue Bean, ...",
      "website": "http://blynk.cc",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/blynkkk/Blynk-0.3.7.zip",
      "archiveFileName": "Blynk-0.3.7.zip",
      "size": 272423,
      "checksum": "SHA-256:8d0059343469e444d21ab6244a9cff2a3e6a4d7afb9865a691a2e7d7f16c7506"
    },
    {
      "name": "Blynk",
      "version": "0.3.8",
      "author": "Volodymyr Shymanskyy",
      "maintainer": "Volodymyr Shymanskyy \u003cvolodymyr@blynk.cc\u003e",
      "sentence": "Build a smartphone app for your project in minutes!",
      "paragraph": "Blynk allows creating IoT solutions easily and works with Arduino, ESP8266, Raspberry Pi, Intel Edison/Galileo, LinkIt ONE, Particle Core/Photon, Energia, MBED, LightBlue Bean, ...",
      "website": "http://blynk.cc",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/blynkkk/Blynk-0.3.8.zip",
      "archiveFileName": "Blynk-0.3.8.zip",
      "size": 473774,
      "checksum": "SHA-256:5db6ddffcea0b1320a900863f96110647e2133754c0d6e09bdcd9c419c0fc813"
    },
    {
      "name": "Blynk",
      "version": "0.3.9",
      "author": "Volodymyr Shymanskyy",
      "maintainer": "Volodymyr Shymanskyy \u003cvolodymyr@blynk.cc\u003e",
      "sentence": "Build a smartphone app for your project in minutes!",
      "paragraph": "Blynk allows creating IoT solutions easily and works with Arduino, ESP8266, Raspberry Pi, Intel Edison/Galileo, LinkIt ONE, Particle Core/Photon, Energia, MBED, LightBlue Bean, ...",
      "website": "http://blynk.cc",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/blynkkk/Blynk-0.3.9.zip",
      "archiveFileName": "Blynk-0.3.9.zip",
      "size": 488982,
      "checksum": "SHA-256:009914196120af325c6f09d9c14a789d24ef229bfa82605f66a75a6c69adf186"
    },
    {
      "name": "Blynk",
      "version": "0.4.0",
      "author": "Volodymyr Shymanskyy",
      "maintainer": "Volodymyr Shymanskyy \u003cvolodymyr@blynk.cc\u003e",
      "sentence": "Build a smartphone app for your project in minutes!",
      "paragraph": "Blynk allows creating IoT solutions easily and works with Arduino, ESP8266, Raspberry Pi, Intel Edison/Galileo, LinkIt ONE, Particle Core/Photon, Energia, MBED, LightBlue Bean, ...",
      "website": "http://blynk.cc",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/blynkkk/Blynk-0.4.0.zip",
      "archiveFileName": "Blynk-0.4.0.zip",
      "size": 1021634,
      "checksum": "SHA-256:aa18b3ffb3ace72ae11302a551134506bab577fc7f90bbd4d53f96d8d782d30a"
    },
    {
      "name": "Blynk",
      "version": "0.4.1",
      "author": "Volodymyr Shymanskyy",
      "maintainer": "Volodymyr Shymanskyy \u003cvolodymyr@blynk.cc\u003e",
      "sentence": "Build a smartphone app for your project in minutes!",
      "paragraph": "It supports  WiFi, BLE, Bluetooth, Ethernet, GSM, USB, Serial. Works with many boards like ESP8266, ESP32, Arduino UNO, Nano, Due, Mega, Zero, MKR100, Yun, Raspberry Pi, Particle, Energia, ARM mbed, Intel Edison/Galileo/Joule, BBC micro:bit, DFRobot, RedBearLab, Microduino, LinkIt ONE ...",
      "website": "http://blynk.cc",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/blynkkk/Blynk-0.4.1.zip",
      "archiveFileName": "Blynk-0.4.1.zip",
      "size": 993219,
      "checksum": "SHA-256:5d218affe7ae039048d87900b3d909e125bf742cbc3e6c6077183bd72b2a1754"
    },
    {
      "name": "Blynk",
      "version": "0.4.2",
      "author": "Volodymyr Shymanskyy",
      "maintainer": "Volodymyr Shymanskyy \u003cvolodymyr@blynk.cc\u003e",
      "sentence": "Build a smartphone app for your project in minutes!",
      "paragraph": "It supports  WiFi, BLE, Bluetooth, Ethernet, GSM, USB, Serial. Works with many boards like ESP8266, ESP32, Arduino UNO, Nano, Due, Mega, Zero, MKR100, Yun, Raspberry Pi, Particle, Energia, ARM mbed, Intel Edison/Galileo/Joule, BBC micro:bit, DFRobot, RedBearLab, Microduino, LinkIt ONE ...",
      "website": "http://blynk.cc",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/blynkkk/Blynk-0.4.2.zip",
      "archiveFileName": "Blynk-0.4.2.zip",
      "size": 991259,
      "checksum": "SHA-256:a03ee6ba3dd6e511ea2cff177decca94d40f266de79e0ab68b19e7b9129d0849"
    },
    {
      "name": "Blynk",
      "version": "0.4.3",
      "author": "Volodymyr Shymanskyy",
      "maintainer": "Volodymyr Shymanskyy \u003cvolodymyr@blynk.cc\u003e",
      "sentence": "Build a smartphone app for your project in minutes!",
      "paragraph": "It supports  WiFi, BLE, Bluetooth, Ethernet, GSM, USB, Serial. Works with many boards like ESP8266, ESP32, Arduino UNO, Nano, Due, Mega, Zero, MKR100, Yun, Raspberry Pi, Particle, Energia, ARM mbed, Intel Edison/Galileo/Joule, BBC micro:bit, DFRobot, RedBearLab, Microduino, LinkIt ONE ...",
      "website": "http://blynk.cc",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/blynkkk/Blynk-0.4.3.zip",
      "archiveFileName": "Blynk-0.4.3.zip",
      "size": 1003637,
      "checksum": "SHA-256:6c2d2fd26d47b69af4231230b7be23b3b1032cb5e188e5a4f171ddd7ceec0605"
    },
    {
      "name": "Blynk",
      "version": "0.4.6",
      "author": "Volodymyr Shymanskyy",
      "maintainer": "Volodymyr Shymanskyy \u003cvshymanskyi@gmail.com\u003e",
      "license": "MIT",
      "sentence": "Build a smartphone app for your project in minutes!",
      "paragraph": "It supports  WiFi, BLE, Bluetooth, Ethernet, GSM, USB, Serial. Works with many boards like ESP8266, ESP32, Arduino UNO, Nano, Due, Mega, Zero, MKR100, Yun, Raspberry Pi, Particle, Energia, ARM mbed, Intel Edison/Galileo/Joule, BBC micro:bit, DFRobot, RedBearLab, Microduino, LinkIt ONE ...",
      "website": "http://blynk.cc",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/blynkkk/Blynk-0.4.6.zip",
      "archiveFileName": "Blynk-0.4.6.zip",
      "size": 7420825,
      "checksum": "SHA-256:e3ea9cdcfd80cf2113c33d959ea3fbbf28e6481a77cac5f209b947574bb8beb1"
    },
    {
      "name": "Blynk",
      "version": "0.4.7",
      "author": "Volodymyr Shymanskyy",
      "maintainer": "Volodymyr Shymanskyy \u003cvshymanskyi@gmail.com\u003e",
      "license": "MIT",
      "sentence": "Build a smartphone app for your project in minutes!",
      "paragraph": "It supports  WiFi, BLE, Bluetooth, Ethernet, GSM, USB, Serial. Works with many boards like ESP8266, ESP32, Arduino UNO, Nano, Due, Mega, Zero, MKR100, Yun, Raspberry Pi, Particle, Energia, ARM mbed, Intel Edison/Galileo/Joule, BBC micro:bit, DFRobot, RedBearLab, Microduino, LinkIt ONE ...",
      "website": "http://blynk.cc",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/blynkkk/Blynk-0.4.7.zip",
      "archiveFileName": "Blynk-0.4.7.zip",
      "size": 494518,
      "checksum": "SHA-256:30dcf08f1fdb7315d14bc58efc008a8b2b0d819012cd83f4134cafe162a7c95c"
    },
    {
      "name": "NmraDcc",
      "version": "1.2.1",
      "author": "Alex Shepherd, Wolfgang Kuffer, Geoff Bunza, Martin Pischky",
      "maintainer": "Alex Shepherd \u003ckiwi64ajs@gmail.com\u003e",
      "sentence": "Enables NMRA DCC Communication",
      "paragraph": "This library allows you to interface to a NMRA DCC track signal and receive DCC commands. The library currently supports the AVR ATTiny84/85 \u0026 ATMega88/168/328/32u4 using the INT0/1 Hardware Interrupt and Timer0 Compare Match B",
      "website": "http://mrrwa.org/dcc-decoder-interface/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrrwa/NmraDcc-1.2.1.zip",
      "archiveFileName": "NmraDcc-1.2.1.zip",
      "size": 725099,
      "checksum": "SHA-256:b1125f3aecbb702b1032a176b325baa4a858eb5731d875a2d340c7ecbab35736"
    },
    {
      "name": "NmraDcc",
      "version": "1.3.0",
      "author": "Alex Shepherd, Wolfgang Kuffer, Geoff Bunza, Martin Pischky, Franz-Peter Müller",
      "maintainer": "Alex Shepherd \u003ckiwi64ajs@gmail.com\u003e",
      "sentence": "Enables NMRA DCC Communication",
      "paragraph": "This library allows you to interface to a NMRA DCC track signal and receive DCC commands. The library currently supports the AVR ATTiny84/85 \u0026 ATMega88/168/328/32u4 and Teensy 3.x using the INT0/1 Hardware Interrupt and micros() ONLY and no longer uses Timer0 Compare Match B, which makes it much more portable to other platforms",
      "website": "http://mrrwa.org/dcc-decoder-interface/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrrwa/NmraDcc-1.3.0.zip",
      "archiveFileName": "NmraDcc-1.3.0.zip",
      "size": 713844,
      "checksum": "SHA-256:d7d9249f5f82ea47b4e4a07470fd4b54fa046564c6db31172b3617b565650d85"
    },
    {
      "name": "NmraDcc",
      "version": "1.4.1",
      "author": "Alex Shepherd, Wolfgang Kuffer, Geoff Bunza, Martin Pischky, Franz-Peter Müller, Sven (littleyoda)",
      "maintainer": "Alex Shepherd \u003ckiwi64ajs@gmail.com\u003e",
      "sentence": "Enables NMRA DCC Communication",
      "paragraph": "This library allows you to interface to a NMRA DCC track signal and receive DCC commands. The library currently supports the AVR ATTiny84/85 \u0026 ATMega88/168/328/32u4 and Teensy 3.x using the INT0/1 Hardware Interrupt and micros() ONLY and no longer uses Timer0 Compare Match B, which makes it much more portable to other platforms",
      "website": "http://mrrwa.org/dcc-decoder-interface/",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrrwa/NmraDcc-1.4.1.zip",
      "archiveFileName": "NmraDcc-1.4.1.zip",
      "size": 714382,
      "checksum": "SHA-256:4cbd8b6c2cead9e147265b08594961d161cbb76fad728de08f9623583b92eceb"
    },
    {
      "name": "NmraDcc",
      "version": "1.4.2",
      "author": "Alex Shepherd, Wolfgang Kuffer, Geoff Bunza, Martin Pischky, Franz-Peter Müller, Sven (littleyoda)",
      "maintainer": "Alex Shepherd \u003ckiwi64ajs@gmail.com\u003e",
      "sentence": "Enables NMRA DCC Communication",
      "paragraph": "This library allows you to interface to a NMRA DCC track signal and receive DCC commands. The library currently supports the AVR ATTiny84/85 \u0026 ATMega88/168/328/32u4 and Teensy 3.x using the INT0/1 Hardware Interrupt and micros() ONLY and no longer uses Timer0 Compare Match B, which makes it much more portable to other platforms",
      "website": "http://mrrwa.org/dcc-decoder-interface/",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrrwa/NmraDcc-1.4.2.zip",
      "archiveFileName": "NmraDcc-1.4.2.zip",
      "size": 714624,
      "checksum": "SHA-256:b991925f832610815accdf731a29cc0039f8a09adcc8daf8e1fe1905b8b3f702"
    },
    {
      "name": "advancedSerial",
      "version": "1.2.1",
      "author": "Vasily Klenov",
      "maintainer": "Vasily Klenov",
      "sentence": "An Arduino library with additions to vanilla Serial.print(). Chainable methods and verbosity levels. Suitable for debug messages.",
      "website": "https://github.com/klenov/advancedSerial",
      "category": "Communication",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/klenov/advancedSerial-1.2.1.zip",
      "archiveFileName": "advancedSerial-1.2.1.zip",
      "size": 13491,
      "checksum": "SHA-256:742d3c0b264f4fbe9fb6e063203e33763ea3233fb23480c777b60731aa389d3c"
    },
    {
      "name": "advancedSerial",
      "version": "1.2.2",
      "author": "Vasily Klenov",
      "maintainer": "Vasily Klenov",
      "sentence": "An Arduino library with additions to vanilla Serial.print(). Chainable methods and verbosity levels. Suitable for debug messages.",
      "website": "https://github.com/klenov/advancedSerial",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/klenov/advancedSerial-1.2.2.zip",
      "archiveFileName": "advancedSerial-1.2.2.zip",
      "size": 11606,
      "checksum": "SHA-256:b3b7d4de4583cfc3fdaa57567bedf0a9a2b19d01554a65ee923954e70a320507"
    },
    {
      "name": "advancedSerial",
      "version": "1.2.4",
      "author": "Vasily Klenov",
      "maintainer": "Vasily Klenov",
      "sentence": "An Arduino library with additions to vanilla Serial.print(). Chainable methods and verbosity levels. Suitable for debug messages.",
      "website": "https://github.com/klenov/advancedSerial",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/klenov/advancedSerial-1.2.4.zip",
      "archiveFileName": "advancedSerial-1.2.4.zip",
      "size": 11532,
      "checksum": "SHA-256:761be8cd1a608b405d58620be38a21aa549b4e8be1c7d5963499da00f0086bd3"
    },
    {
      "name": "CMMC OTA",
      "version": "1.0.4",
      "author": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "sentence": "CMMC OTA",
      "paragraph": "CMMC OTA",
      "website": "https://github.com/cmmakerclub/CMMC_OTA",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/cmmakerclub/CMMC_OTA-1.0.4.zip",
      "archiveFileName": "CMMC_OTA-1.0.4.zip",
      "size": 5292,
      "checksum": "SHA-256:7fefa707c7b10ddb9c39717175ee652ee2f1fc28a4e2b2a7b49a2c15ee0756d2"
    },
    {
      "name": "CMMC OTA",
      "version": "1.0.1",
      "author": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "sentence": "CMMC OTA",
      "paragraph": "CMMC OTA",
      "website": "https://github.com/cmmakerclub/CMMC_OTA",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/cmmakerclub/CMMC_OTA-1.0.1.zip",
      "archiveFileName": "CMMC_OTA-1.0.1.zip",
      "size": 5039,
      "checksum": "SHA-256:86c44489ccebe762731c797fcf5ccdbd2106d8b9c5a78b0e98ca482fa8509dd3"
    },
    {
      "name": "CMMC OTA",
      "version": "1.0.2",
      "author": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "sentence": "CMMC OTA",
      "paragraph": "CMMC OTA",
      "website": "https://github.com/cmmakerclub/CMMC_OTA",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/cmmakerclub/CMMC_OTA-1.0.2.zip",
      "archiveFileName": "CMMC_OTA-1.0.2.zip",
      "size": 5811,
      "checksum": "SHA-256:5bbb0aae0468088a6e034fe011f98912c5c3839cf6f2167ec94d5a205c786511"
    },
    {
      "name": "CMMC OTA",
      "version": "1.0.3",
      "author": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "sentence": "CMMC OTA",
      "paragraph": "CMMC OTA",
      "website": "https://github.com/cmmakerclub/CMMC_OTA",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/cmmakerclub/CMMC_OTA-1.0.3.zip",
      "archiveFileName": "CMMC_OTA-1.0.3.zip",
      "size": 5811,
      "checksum": "SHA-256:ca258e8f9ffe3008ad5627db1c6d37900d1b6bd6b8c87828a40411546d79e9dc"
    },
    {
      "name": "GSM-Playground",
      "version": "1.0.0",
      "author": "Cristian Häussler \u003cc-n-i@web.de\u003e, Marek Hluchnik \u003cmarek.hluchnik@gmail.com\u003e",
      "maintainer": "Cristian Häussler \u003cc-n-i@web.de\u003e",
      "sentence": "A library for GSM Playground device.",
      "paragraph": "GSM Shield for Arduino.",
      "website": "http://www.hwkitchen.com/products/gsm-playground/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/cniweb/GSM_Playground-1.0.0.zip",
      "archiveFileName": "GSM_Playground-1.0.0.zip",
      "size": 59428,
      "checksum": "SHA-256:86a9d580f06fc5c9775633eb961dea2035341e4e48c975ad03c08421f03dda96"
    },
    {
      "name": "GSM-Playground",
      "version": "1.1.1",
      "author": "Cristian Häussler \u003cc-n-i@web.de\u003e, Marek Hluchnik \u003cmarek.hluchnik@gmail.com\u003e",
      "maintainer": "Cristian Häussler \u003cc-n-i@web.de\u003e",
      "sentence": "A library for GSM Playground device.",
      "paragraph": "GSM Shield for Arduino.",
      "website": "http://www.hwkitchen.com/products/gsm-playground/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/cniweb/GSM_Playground-1.1.1.zip",
      "archiveFileName": "GSM_Playground-1.1.1.zip",
      "size": 60259,
      "checksum": "SHA-256:0df413189c5d1f55b5cc6f9a57bf983dd86ec625a0b0cd9d2104751f2b88b4e1"
    },
    {
      "name": "Yet Another Arduino Wiegand Library",
      "version": "1.0.0",
      "author": "Paulo Costa",
      "maintainer": "Paulo Costa \u003cme@paulo.costa.nom.br\u003e",
      "sentence": "An Arduino Library to receive data from Wiegand card readers.",
      "paragraph": "This library supports messages of different sizes (Usually 26 or 34 bits) and automatic size detection.",
      "website": "https://github.com/paulo-raca/YetAnotherArduinoWiegand",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/paulo-raca/Yet_Another_Arduino_Wiegand_Library-1.0.0.zip",
      "archiveFileName": "Yet_Another_Arduino_Wiegand_Library-1.0.0.zip",
      "size": 9792,
      "checksum": "SHA-256:dde805ea5aa7f11fbf53fcb4f490c5e9879236b8b82bc4354793f1bfcec910cb"
    },
    {
      "name": "keyboardButton",
      "version": "1.0.1",
      "author": "Vasily Klenov",
      "maintainer": "Vasily Klenov",
      "sentence": "Convinient way to map a push-button to a keyboard key. This library utilize the ability of 32u4-based Arduino-compatible boards to emulate USB-keyboard.",
      "paragraph": "This library will work only on 32u4-based boards (Arduino Leonardo or Micro, SparkFun Pro Micro, Adafruit Feather etc) and only on pins with external interrupt support.",
      "website": "https://github.com/klenov/keyboardButton",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/klenov/keyboardButton-1.0.1.zip",
      "archiveFileName": "keyboardButton-1.0.1.zip",
      "size": 10779,
      "checksum": "SHA-256:354507b26340a89903cfdfb539eac8fc0c00011e5392c5a2b61a0b0f42106972"
    },
    {
      "name": "AnalogMultiButton",
      "version": "1.0.0",
      "author": "Damien Clarke \u003cdxinteractive@gmail.com\u003e",
      "maintainer": "Damien Clarke \u003cdxinteractive@gmail.com\u003e",
      "sentence": "An Arduino library to capture button presses on multiple buttons through a single analog pin.",
      "paragraph": "Includes debouncing and many options for triggering timed / delayed / repeated press events.",
      "website": "http://damienclarke.me/code/analog-multi-button",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/dxinteractive/AnalogMultiButton-1.0.0.zip",
      "archiveFileName": "AnalogMultiButton-1.0.0.zip",
      "size": 8276,
      "checksum": "SHA-256:97a1c85f5d649c829acc0c7587fca770e2d3fd70503510872997c5ffe849469e"
    },
    {
      "name": "Yet Another Arduino PcInt Library",
      "version": "2.0.0",
      "author": "keestux, SODAQ, GabrielNotman, Paulo Costa",
      "maintainer": "Paulo Costa \u003cme+arduino@paulo.costa.nom.br\u003e",
      "sentence": "A library to support Pin Change Interruptions (PCINT) on AVR Arduinos",
      "paragraph": "This library is fast, supports trigger modes (FALLING, RISING, CHANGE) and supports context data and pin state as callback arguments",
      "website": "https://github.com/paulo-raca/YetAnotherArduinoPcIntLibrary",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/paulo-raca/Yet_Another_Arduino_PcInt_Library-2.0.0.zip",
      "archiveFileName": "Yet_Another_Arduino_PcInt_Library-2.0.0.zip",
      "size": 8514,
      "checksum": "SHA-256:3644aeaa0cb967322401e926d18f315652d64dce0f52bb95911455957f8ae50f"
    },
    {
      "name": "Yet Another Arduino PcInt Library",
      "version": "2.1.0",
      "author": "keestux, SODAQ, GabrielNotman, Paulo Costa",
      "maintainer": "Paulo Costa \u003cme+arduino@paulo.costa.nom.br\u003e",
      "sentence": "A library to support Pin Change Interruptions (PCINT) on AVR Arduinos",
      "paragraph": "This library is fast, supports trigger modes (FALLING, RISING, CHANGE) and supports context data and pin state as callback arguments",
      "website": "https://github.com/paulo-raca/YetAnotherArduinoPcIntLibrary",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/paulo-raca/Yet_Another_Arduino_PcInt_Library-2.1.0.zip",
      "archiveFileName": "Yet_Another_Arduino_PcInt_Library-2.1.0.zip",
      "size": 9020,
      "checksum": "SHA-256:be94bf47f315b87d461de78fd9c40443364356572e1bb0f7dca0380dd13c2cd3"
    },
    {
      "name": "Yet Another Arduino PcInt Library",
      "version": "1.2.0",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library to deal with PCINT (Pin Change Interrupts)",
      "website": "https://github.com/SodaqMoja/Sodaq_PcInt",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/paulo-raca/Yet_Another_Arduino_PcInt_Library-1.2.0.zip",
      "archiveFileName": "Yet_Another_Arduino_PcInt_Library-1.2.0.zip",
      "size": 4893,
      "checksum": "SHA-256:eac6fe6481e8d9fa55694adb9cbf7644d8a19489fc7b885e1c872f27b58778bc"
    },
    {
      "name": "TelegramBot",
      "version": "1.0.1",
      "author": "Casa Jasmina",
      "maintainer": "Casa Jasmina \u003ccasajasmina@arduino.cc\u003e",
      "sentence": "Arduino library for TelegramBot",
      "paragraph": "Arduino library for TelegramBot",
      "website": "https://github.com/CasaJasmina/TelegramBot-Library",
      "category": "Communication",
      "architectures": [
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CasaJasmina/TelegramBot-1.0.1.zip",
      "archiveFileName": "TelegramBot-1.0.1.zip",
      "size": 13507,
      "checksum": "SHA-256:672c5337572a727853cf8d9521d3ac33d62062093486104d192a6e6c967bd1a2"
    },
    {
      "name": "TelegramBot",
      "version": "1.2.2",
      "author": "Casa Jasmina",
      "maintainer": "Casa Jasmina \u003ccasajasmina@arduino.cc\u003e",
      "sentence": "Arduino library for TelegramBot",
      "paragraph": "Arduino library for TelegramBot",
      "website": "https://github.com/CasaJasmina/TelegramBot-Library",
      "category": "Communication",
      "architectures": [
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CasaJasmina/TelegramBot-1.2.2.zip",
      "archiveFileName": "TelegramBot-1.2.2.zip",
      "size": 16584,
      "checksum": "SHA-256:e2dc8ab3789976983b50b0cbd25299b29db4af57dd1678541cf9b58ee6f6a410"
    },
    {
      "name": "TelegramBot",
      "version": "1.2.0",
      "author": "Casa Jasmina",
      "maintainer": "Casa Jasmina \u003ccasajasmina@arduino.cc\u003e",
      "sentence": "Arduino library for TelegramBot",
      "paragraph": "Arduino library for TelegramBot",
      "website": "https://github.com/CasaJasmina/TelegramBot-Library",
      "category": "Communication",
      "architectures": [
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CasaJasmina/TelegramBot-1.2.0.zip",
      "archiveFileName": "TelegramBot-1.2.0.zip",
      "size": 16040,
      "checksum": "SHA-256:e4c172633df0cb9c9d24c211860ec5686022c62ea08a44360fee4ec7cfec8ca6"
    },
    {
      "name": "TelegramBot",
      "version": "1.2.1",
      "author": "Casa Jasmina",
      "maintainer": "Casa Jasmina \u003ccasajasmina@arduino.cc\u003e",
      "sentence": "Arduino library for TelegramBot",
      "paragraph": "Arduino library for TelegramBot",
      "website": "https://github.com/CasaJasmina/TelegramBot-Library",
      "category": "Communication",
      "architectures": [
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CasaJasmina/TelegramBot-1.2.1.zip",
      "archiveFileName": "TelegramBot-1.2.1.zip",
      "size": 16372,
      "checksum": "SHA-256:49ac8c194e2effbf2920aa94e4d66ecfe7bc49bc0f95880fc711309ea8e66a56"
    },
    {
      "name": "ADCTouch",
      "version": "1.0.0",
      "author": "martin2250",
      "maintainer": "martin2250 \u003cmartin.225@web.de\u003e",
      "sentence": "Create Touch Sensors with a single (Analog)Pin without external Hardware",
      "paragraph": "This library uses the internal wiring of AVR microcontrollers to measure capacitance as described here \u003chttp://tuomasnylund.fi/drupal6/content/capacitive-touch-sensing-avr-and-single-adc-pin\u003e",
      "website": "https://github.com/martin2250/ADCTouch",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/martin2250/ADCTouch-1.0.0.zip",
      "archiveFileName": "ADCTouch-1.0.0.zip",
      "size": 3410,
      "checksum": "SHA-256:3fb1e103c38f495b58bbe943764d9040ec3ceb4fcfd9b220838fc770c94f6111"
    },
    {
      "name": "CMMC Easy",
      "version": "0.0.1",
      "author": "Chiang Mai Maker Club\u003cinfo@cmmakerclub.com\u003e",
      "maintainer": "Nat Weerawan\u003cnat.wrw@gmail.com\u003e",
      "sentence": "CMMC Easy is a library for managing time without delay function",
      "paragraph": "CMMC Easy is a library for managing time without delay function",
      "website": "https://github.com/cmmakerclub/CMMCEasy",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/cmmakerclub/CMMC_Easy-0.0.1.zip",
      "archiveFileName": "CMMC_Easy-0.0.1.zip",
      "size": 7510,
      "checksum": "SHA-256:ea0d9a9621992236766ed602283bee8a75b1480075e89cf8a899910d6ac00f1e"
    },
    {
      "name": "FaBo 211 7Segment LED TLC59208F",
      "version": "1.0.2",
      "author": "FaBo\u003cinfo@fabo.io\u003e",
      "maintainer": "Hideki Yamauchi\u003cyamauchi@fabo.io\u003e",
      "sentence": "A library for FaBo 7Segment LED I2C Brick",
      "paragraph": "TLC59208F is 8-Bit I2C Bus LED Driver.",
      "website": "https://github.com/FaBoPlatform/FaBo7Seg-TLC59208-Library",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/FaBoPlatform/FaBo_211_7Segment_LED_TLC59208F-1.0.2.zip",
      "archiveFileName": "FaBo_211_7Segment_LED_TLC59208F-1.0.2.zip",
      "size": 10023,
      "checksum": "SHA-256:91163473025954f2bc927e77dacaa9b8db8651935fed8a120b3b31b1826e6723"
    },
    {
      "name": "ArduinoIRC",
      "version": "0.0.2",
      "author": "Fredi Machado",
      "maintainer": "Fredi Machado \u003cfredisoft@gmail.com\u003e",
      "sentence": "Easy library to make an Arduino IRC Bot.",
      "paragraph": "This library allows your project to connect to an IRC server.",
      "website": "https://github.com/Fredi/ArduinoIRC",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Fredi/ArduinoIRC-0.0.2.zip",
      "archiveFileName": "ArduinoIRC-0.0.2.zip",
      "size": 15670,
      "checksum": "SHA-256:0425a8ca0be33c1bcdd96b52846545398495ef8f1de06a69a312364e05bb7969"
    },
    {
      "name": "ArduinoIRC",
      "version": "0.1.0",
      "author": "Fredi Machado",
      "maintainer": "Fredi Machado \u003cfredisoft@gmail.com\u003e",
      "sentence": "Easy library to make an Arduino IRC Bot.",
      "paragraph": "This library allows your project to connect to an IRC server.",
      "website": "https://github.com/Fredi/ArduinoIRC",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Fredi/ArduinoIRC-0.1.0.zip",
      "archiveFileName": "ArduinoIRC-0.1.0.zip",
      "size": 16877,
      "checksum": "SHA-256:21c83f797594432b5a8f71e3c7f9e7b2a543597e0636b8cb3f9f48a5ab356d62"
    },
    {
      "name": "six-digit-seven-segment",
      "version": "2.1.0",
      "author": "SohnyBohny",
      "maintainer": "SohnyBohny",
      "sentence": "A library that allows you to easily controll a 6-digit 7-Segment Multiplex Matrix",
      "paragraph": "with a 8-Bit-Shiftregister",
      "website": "https://6-digit-7-segment-arduino.readthedocs.io",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SohnyBohny/six_digit_seven_segment-2.1.0.zip",
      "archiveFileName": "six_digit_seven_segment-2.1.0.zip",
      "size": 63954,
      "checksum": "SHA-256:7f41a503de73dd5261d1cb96d53f9aa0ec8df1d9f488cd89b07290149c07285f"
    },
    {
      "name": "six-digit-seven-segment",
      "version": "1.0.1",
      "author": "SohnyBohny",
      "maintainer": "SohnyBohny",
      "sentence": "A library that allows you to easily controll a 6-digit 7-Segment Multiplex Matrix",
      "paragraph": "with a 8-Bit-Shiftregister",
      "website": "https://6-digit-7-segment-arduino.readthedocs.org",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SohnyBohny/six_digit_seven_segment-1.0.1.zip",
      "archiveFileName": "six_digit_seven_segment-1.0.1.zip",
      "size": 60752,
      "checksum": "SHA-256:fdb3f5cb5651ff24ca0a4e31efdea28fff611e8785f3338ee8673a6650678d20"
    },
    {
      "name": "six-digit-seven-segment",
      "version": "1.0.2",
      "author": "SohnyBohny",
      "maintainer": "SohnyBohny",
      "sentence": "A library that allows you to easily controll a 6-digit 7-Segment Multiplex Matrix",
      "paragraph": "with a 8-Bit-Shiftregister",
      "website": "https://6-digit-7-segment-arduino.readthedocs.org",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SohnyBohny/six_digit_seven_segment-1.0.2.zip",
      "archiveFileName": "six_digit_seven_segment-1.0.2.zip",
      "size": 61157,
      "checksum": "SHA-256:3ad5b25287123ebbba85c40903cadcf644fc6b4da2a8ffec996aef9115eab413"
    },
    {
      "name": "six-digit-seven-segment",
      "version": "2.0.0",
      "author": "SohnyBohny",
      "maintainer": "SohnyBohny",
      "sentence": "A library that allows you to easily controll a 6-digit 7-Segment Multiplex Matrix",
      "paragraph": "with a 8-Bit-Shiftregister",
      "website": "https://6-digit-7-segment-arduino.readthedocs.io",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SohnyBohny/six_digit_seven_segment-2.0.0.zip",
      "archiveFileName": "six_digit_seven_segment-2.0.0.zip",
      "size": 63982,
      "checksum": "SHA-256:366553a676e292c65c6d3f43ff3363d89ff8580d91bda4e64e33e46694fbe820"
    },
    {
      "name": "six-digit-seven-segment",
      "version": "2.0.2",
      "author": "SohnyBohny",
      "maintainer": "SohnyBohny",
      "sentence": "A library that allows you to easily controll a 6-digit 7-Segment Multiplex Matrix",
      "paragraph": "with a 8-Bit-Shiftregister",
      "website": "https://6-digit-7-segment-arduino.readthedocs.io",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SohnyBohny/six_digit_seven_segment-2.0.2.zip",
      "archiveFileName": "six_digit_seven_segment-2.0.2.zip",
      "size": 63962,
      "checksum": "SHA-256:47938a89b4ff769164c1a47660e585824cb6d2a2158fba56b5418fa3e99bb395"
    },
    {
      "name": "Itty Bitty",
      "version": "1.5.0",
      "author": "Tom Biuso \u003ctjbtech@yahoo.com\u003e",
      "maintainer": "Tom Biuso \u003ctjbtech@yahoo.com\u003e",
      "sentence": "\u003cbr/\u003eWith the fastest possible Arduino-compatible GPIO and register manipulation...\u003cbr/\u003eIt's the biggest of hits when you need to bang bits!",
      "paragraph": "\u003cbr/\u003e\u003cbr/\u003eGetting tired of mindlessly staring down your wristwatch in an open-mouthed gape, awaiting a digitalRead's return?  Do you long for a super-simple way to set or flip your bits?  Has repeatedly ALT-TABing to the ATmega datasheets to look up register descriptions worn you down to the last raw nerve?\u003cbr/\u003e\u003cbr/\u003eThen, golly gee, this lib is here to allay your despair!\u003cbr/\u003e\u003cbr/\u003eIn fact, it was made for you - whether an Arduino n00b, hopelessly ignorant to the time their programs waste on the simplest IO tasks, or an AVR guru and uber-smart embedded god, who never even gave a thought to seeking an easier way to bang bits.  Most of all, however, this library is for the wretched, cursed signals stuck in the maze of your Arduino's buffers.  For it is they who fly through pin lines at the speed of light only to quietly suffer the most indignant fate at the hands of non-performant source code: WAITING.\u003cbr/\u003e\u003cbr/\u003eSo set those bits free with a little help from your friends - a plenitude of easy-to-use functions, macros, and data structures in this simple, elegant library that will give your code real legs.  But, more importantly, it makes coding that much more FUNNER.",
      "website": "https://github.com/FancyFoxGems/IttyBitty",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/FancyFoxGems/Itty_Bitty-1.5.0.zip",
      "archiveFileName": "Itty_Bitty-1.5.0.zip",
      "size": 271757,
      "checksum": "SHA-256:fc9477256df88450152a6435d587655078facb9dc52be535e079bb9811571a2c"
    },
    {
      "name": "Battery Sense",
      "version": "1.0.0",
      "author": "AgileWare",
      "maintainer": "Roberto Lo Giacco \u003crlogiacco@gmail.com\u003e",
      "sentence": "Arduino battery sensing library",
      "paragraph": "Arduino battery sensing library",
      "website": "https://github.com/rlogiacco/BatterySense",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/rlogiacco/Battery_Sense-1.0.0.zip",
      "archiveFileName": "Battery_Sense-1.0.0.zip",
      "size": 20706,
      "checksum": "SHA-256:ef6495dbfb08fb4ef30aee00080c7bbce077a7e3fa4902542bebdc64d3565657"
    },
    {
      "name": "PagonGameDev GameLoop",
      "version": "0.0.1",
      "author": "Pagon Game Dev\u003cpagongamedev@gmail.com\u003e",
      "maintainer": "Pagon Game Dev\u003cpagongamedev@gmail.com\u003e",
      "sentence": "\"Library for Creating Game with GameLoop\"",
      "website": "https://github.com/pagongamedev/PagonGameDev_GameLoop",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pagongamedev/PagonGameDev_GameLoop-0.0.1.zip",
      "archiveFileName": "PagonGameDev_GameLoop-0.0.1.zip",
      "size": 326654,
      "checksum": "SHA-256:e5cf948a0a409ba2c5c49e02d40a21957fef4d87a0744bf9eb7cb58e7e406938"
    },
    {
      "name": "FaBo 208 Humidity HTS221",
      "version": "1.0.0",
      "author": "FaBo\u003cinfo@fabo.io\u003e",
      "maintainer": "Akira Sasaki\u003cakira@fabo.io\u003e",
      "sentence": "A library for FaBo Humidity I2C Brick",
      "paragraph": "HTS221 is humidity and temperature sensor.",
      "website": "https://github.com/FaBoPlatform/FaBoHumidity-HTS221-Library",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/FaBoPlatform/FaBo_208_Humidity_HTS221-1.0.0.zip",
      "archiveFileName": "FaBo_208_Humidity_HTS221-1.0.0.zip",
      "size": 9026,
      "checksum": "SHA-256:0837ebd2bbac17948975814914f32b0c9f44a377b72ed7a6127a2789e346d4ba"
    },
    {
      "name": "KONNEKTING Device Library",
      "version": "1.0.0-BETA3",
      "author": "Alexander Christian \u003cinfo@konnekting.de\u003e",
      "maintainer": "Alexander Christian \u003cinfo@konnekting.de\u003e",
      "sentence": "A library that enables creating KNX devices powered by Arduino.",
      "paragraph": "Requires an KNX Transceiver connected via UART",
      "website": "http://www.konnekting.de/",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/KONNEKTING/KONNEKTING_Device_Library-1.0.0-BETA3.zip",
      "archiveFileName": "KONNEKTING_Device_Library-1.0.0-BETA3.zip",
      "size": 66823,
      "checksum": "SHA-256:d9bedfc228319d09239f6f38ca1603df76a8a10f4ab17881f8e1b77bdc232562"
    },
    {
      "name": "KONNEKTING Device Library",
      "version": "1.0.0-BETA4",
      "author": "Alexander Christian \u003cinfo@konnekting.de\u003e",
      "maintainer": "Alexander Christian \u003cinfo@konnekting.de\u003e",
      "sentence": "A library that enables creating KNX devices powered by Arduino.",
      "paragraph": "Requires an KNX Transceiver connected via UART",
      "website": "http://www.konnekting.de/",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/KONNEKTING/KONNEKTING_Device_Library-1.0.0-BETA4.zip",
      "archiveFileName": "KONNEKTING_Device_Library-1.0.0-BETA4.zip",
      "size": 81868,
      "checksum": "SHA-256:c09f420156b02d015b4c054b71560225616b25ef61927ad502ca9f7ff3838e42"
    },
    {
      "name": "ESP8266 Microgear",
      "version": "1.2.2",
      "author": "Chavee Issariyapat \u003ci@chavee.com\u003e",
      "maintainer": "Chavee Issariyapat \u003ci@chavee.com\u003e",
      "sentence": "A client library for ESP8266 to connect to NETPIE IOT Platform.",
      "paragraph": "With this library, ESP8266 will be transformed into a working unit called microgear. Once online, it can utilize communication and coordination services provided by NETPIE platform. For more details on the NETPIE Platform, please visit https://netpie.io .",
      "website": "https://github.com/netpieio/microgear-esp8266-arduino",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/netpieio/ESP8266_Microgear-1.2.2.zip",
      "archiveFileName": "ESP8266_Microgear-1.2.2.zip",
      "size": 32183,
      "checksum": "SHA-256:b3b607ca1ea246aa979ee3f9e44c03d17e73aea1b5f104feee32885cd044ce5c"
    },
    {
      "name": "ESP8266 Microgear",
      "version": "1.2.3",
      "author": "Chavee Issariyapat \u003ci@chavee.com\u003e",
      "maintainer": "Chavee Issariyapat \u003ci@chavee.com\u003e",
      "sentence": "A client library for ESP8266 to connect to NETPIE IOT Platform.",
      "paragraph": "With this library, ESP8266 will be transformed into a working unit called microgear. Once online, it can utilize communication and coordination services provided by NETPIE platform. For more details on the NETPIE Platform, please visit https://netpie.io .",
      "website": "https://github.com/netpieio/microgear-esp8266-arduino",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/netpieio/ESP8266_Microgear-1.2.3.zip",
      "archiveFileName": "ESP8266_Microgear-1.2.3.zip",
      "size": 44299,
      "checksum": "SHA-256:2495dfea520e67690f4dfe4584e89924fb2c532ede8e7d4d50cb8329f4fd65fe"
    },
    {
      "name": "ESP8266 Microgear",
      "version": "1.1.5",
      "author": "Chavee Issariyapat \u003ci@chavee.com\u003e",
      "maintainer": "Chavee Issariyapat \u003ci@chavee.com\u003e",
      "sentence": "A client library for ESP8266 to connect to NETPIE IOT Platform.",
      "paragraph": "With this library, ESP8266 will be transformed into a working unit called microgear. Once online, it can utilize communication and coordination services provided by NETPIE platform. For more details on the NETPIE Platform, please visit https://netpie.io .",
      "website": "https://github.com/netpieio/microgear-esp8266-arduino",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/netpieio/ESP8266_Microgear-1.1.5.zip",
      "archiveFileName": "ESP8266_Microgear-1.1.5.zip",
      "size": 25600,
      "checksum": "SHA-256:f57824f92a29c953f085b4f9c7935e79861e1e6e69fe472912ba17050c22adc6"
    },
    {
      "name": "ESP8266 Microgear",
      "version": "1.1.6",
      "author": "Chavee Issariyapat \u003ci@chavee.com\u003e",
      "maintainer": "Chavee Issariyapat \u003ci@chavee.com\u003e",
      "sentence": "A client library for ESP8266 to connect to NETPIE IOT Platform.",
      "paragraph": "With this library, ESP8266 will be transformed into a working unit called microgear. Once online, it can utilize communication and coordination services provided by NETPIE platform. For more details on the NETPIE Platform, please visit https://netpie.io .",
      "website": "https://github.com/netpieio/microgear-esp8266-arduino",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/netpieio/ESP8266_Microgear-1.1.6.zip",
      "archiveFileName": "ESP8266_Microgear-1.1.6.zip",
      "size": 28357,
      "checksum": "SHA-256:5d503e67fc71dff4d14b55735ce67e1a8fabfe7a35a2c3f52221bccefea10525"
    },
    {
      "name": "ESP8266 Microgear",
      "version": "1.1.7",
      "author": "Chavee Issariyapat \u003ci@chavee.com\u003e",
      "maintainer": "Chavee Issariyapat \u003ci@chavee.com\u003e",
      "sentence": "A client library for ESP8266 to connect to NETPIE IOT Platform.",
      "paragraph": "With this library, ESP8266 will be transformed into a working unit called microgear. Once online, it can utilize communication and coordination services provided by NETPIE platform. For more details on the NETPIE Platform, please visit https://netpie.io .",
      "website": "https://github.com/netpieio/microgear-esp8266-arduino",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/netpieio/ESP8266_Microgear-1.1.7.zip",
      "archiveFileName": "ESP8266_Microgear-1.1.7.zip",
      "size": 28878,
      "checksum": "SHA-256:d71add3e68dfe8343ab3865d7cf7547b90a1983bea53bcd98b6bec3f969a6035"
    },
    {
      "name": "ESP8266 Microgear",
      "version": "1.1.9",
      "author": "Chavee Issariyapat \u003ci@chavee.com\u003e",
      "maintainer": "Chavee Issariyapat \u003ci@chavee.com\u003e",
      "sentence": "A client library for ESP8266 to connect to NETPIE IOT Platform.",
      "paragraph": "With this library, ESP8266 will be transformed into a working unit called microgear. Once online, it can utilize communication and coordination services provided by NETPIE platform. For more details on the NETPIE Platform, please visit https://netpie.io .",
      "website": "https://github.com/netpieio/microgear-esp8266-arduino",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/netpieio/ESP8266_Microgear-1.1.9.zip",
      "archiveFileName": "ESP8266_Microgear-1.1.9.zip",
      "size": 28839,
      "checksum": "SHA-256:d5d7e3d71349a7794c743022c3cbc7631a356fd388918433e689ded183257e21"
    },
    {
      "name": "ESP8266 Microgear",
      "version": "1.2.0",
      "author": "Chavee Issariyapat \u003ci@chavee.com\u003e",
      "maintainer": "Chavee Issariyapat \u003ci@chavee.com\u003e",
      "sentence": "A client library for ESP8266 to connect to NETPIE IOT Platform.",
      "paragraph": "With this library, ESP8266 will be transformed into a working unit called microgear. Once online, it can utilize communication and coordination services provided by NETPIE platform. For more details on the NETPIE Platform, please visit https://netpie.io .",
      "website": "https://github.com/netpieio/microgear-esp8266-arduino",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/netpieio/ESP8266_Microgear-1.2.0.zip",
      "archiveFileName": "ESP8266_Microgear-1.2.0.zip",
      "size": 29287,
      "checksum": "SHA-256:c3cb8e27d146f1cd1bef19e47a090a55c2adda1cfc64fb398bb7168ec41a1211"
    },
    {
      "name": "ESP8266 Microgear",
      "version": "1.2.1",
      "author": "Chavee Issariyapat \u003ci@chavee.com\u003e",
      "maintainer": "Chavee Issariyapat \u003ci@chavee.com\u003e",
      "sentence": "A client library for ESP8266 to connect to NETPIE IOT Platform.",
      "paragraph": "With this library, ESP8266 will be transformed into a working unit called microgear. Once online, it can utilize communication and coordination services provided by NETPIE platform. For more details on the NETPIE Platform, please visit https://netpie.io .",
      "website": "https://github.com/netpieio/microgear-esp8266-arduino",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/netpieio/ESP8266_Microgear-1.2.1.zip",
      "archiveFileName": "ESP8266_Microgear-1.2.1.zip",
      "size": 32183,
      "checksum": "SHA-256:c1cfbdc5a32edd4ca07806e30f4c66acf5f675b074a6682a6f65a68dd2d05826"
    },
    {
      "name": "ESP8266 Microgear",
      "version": "1.1.2",
      "author": "Chavee Issariyapat \u003ci@chavee.com\u003e",
      "maintainer": "Chavee Issariyapat \u003ci@chavee.com\u003e",
      "sentence": "A client library for ESP8266 to connect to NETPIE IOT Platform.",
      "paragraph": "With this library, ESP8266 will be transformed into a working unit called microgear. Once online, it can utilize communication and coordination services provided by NETPIE platform. For more details on the NETPIE Platform, please visit https://netpie.io .",
      "website": "https://github.com/netpieio/microgear-esp8266-arduino",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/netpieio/ESP8266_Microgear-1.1.2.zip",
      "archiveFileName": "ESP8266_Microgear-1.1.2.zip",
      "size": 24757,
      "checksum": "SHA-256:51464e17b06fb408b9271de773dffc72493cc5ab8237cd06756fc249212d25c5"
    },
    {
      "name": "DataServeriOS",
      "version": "2.0.0",
      "author": "M. Heeres",
      "maintainer": "Matthijs Heeres \u003cinfo@mheeres.com\u003e",
      "sentence": "Serves data to Arduino Control (iOS) for control over network.",
      "paragraph": "With this library you can communicate bitween the app and your Arduino.",
      "website": "https://github.com/MHeeres/DataServeriOS",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MHeeres/DataServeriOS-2.0.0.zip",
      "archiveFileName": "DataServeriOS-2.0.0.zip",
      "size": 5984,
      "checksum": "SHA-256:061b898f9960ce68d64b48d9f2ae4d367122400c9a503c1fd5aba9eaf89fff3e"
    },
    {
      "name": "Cytron ESPWiFi Shield",
      "version": "1.0.0",
      "author": "Cytron Technologies Sdn Bhd \u003csupport@cytron.com.my\u003e",
      "maintainer": "Cytron Technologies Sdn Bhd \u003cwww.cytron.com.my\u003e",
      "sentence": "Library for Cytron ESPWiFi Shield",
      "paragraph": "This library works with Cytron ESPWiFi Shield",
      "website": "https://github.com/CytronTechnologies/CytronWiFiShield",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CytronTechnologies/Cytron_ESPWiFi_Shield-1.0.0.zip",
      "archiveFileName": "Cytron_ESPWiFi_Shield-1.0.0.zip",
      "size": 624813,
      "checksum": "SHA-256:218374f3699201ac5986b3b12f5bd1a7ddd57f0a9bddf7582695abecd95b1268"
    },
    {
      "name": "Cytron ESPWiFi Shield",
      "version": "2.0.0",
      "author": "Cytron Technologies Sdn Bhd \u003csupport@cytron.com.my\u003e",
      "maintainer": "Cytron Technologies Sdn Bhd \u003cwww.cytron.com.my\u003e",
      "sentence": "Library for Cytron ESPWiFi Shield",
      "paragraph": "This library works with Cytron ESPWiFi Shield",
      "website": "https://github.com/CytronTechnologies/CytronWiFiShield",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CytronTechnologies/Cytron_ESPWiFi_Shield-2.0.0.zip",
      "archiveFileName": "Cytron_ESPWiFi_Shield-2.0.0.zip",
      "size": 33379,
      "checksum": "SHA-256:eee1b7e518bff8a0b75d9189b376e34d11d54fd4851c83ff8daf3edbbf2fba87"
    },
    {
      "name": "RGB_LED",
      "version": "1.0.0",
      "author": "A.Reha Salmaner \u003carsalmaner@dnateknoloji.com.tr\u003e",
      "maintainer": "A.Reha Salmaner \u003carsalmaner@dnateknoloji.com.tr\u003e",
      "sentence": "A library that manage 4 legs rgb leds colour and light duration.",
      "paragraph": "Supports arduino uno \u0026 mini pro digitalWrite function and only PWM pins.",
      "website": "https://github.com/arsalmaner/Arduino-Libraries/tree/master/RGB_LED",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arsalmaner/RGB_LED-1.0.0.zip",
      "archiveFileName": "RGB_LED-1.0.0.zip",
      "size": 15564,
      "checksum": "SHA-256:3c4a2b2a56fe4b54788f8102d3e48855c131b52fc8759424914068f7ce2d10c5"
    },
    {
      "name": "PM2005Lib",
      "version": "1.0.0",
      "author": "Jan Wagner",
      "maintainer": "Jan Wagner \u003cjan.wagner@iki.fi\u003e",
      "sentence": "Controls and reads out data from a PM2005 laser particle sensor module.",
      "paragraph": "With this library you can configure the PM2005 laser particle sensor module. You can read out the measured counts of 0.3um, 2.5um, and 10um sized particles (pcs/L), and can also read out the estimated concentrations (PM2.5, PM10 in microgram/m^3).",
      "website": "http://www.arduino.cc/en/Reference/PM2005Lib",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jwagnerhki/PM2005Lib-1.0.0.zip",
      "archiveFileName": "PM2005Lib-1.0.0.zip",
      "size": 6287,
      "checksum": "SHA-256:7934ca9a9d077191688034c5fff53618a1a847a9a5dd26956cd63f3bb5b2a0f8"
    },
    {
      "name": "PM2005Lib",
      "version": "1.0.2",
      "author": "Jan Wagner",
      "maintainer": "Jan Wagner \u003cjan.wagner@iki.fi\u003e",
      "sentence": "Controls and reads out data from a PM2005 laser particle sensor module.",
      "paragraph": "With this library you can configure the PM2005 laser particle sensor module. You can read out the measured counts of 0.3um, 2.5um, and 10um sized particles (pcs/L), and can also read out the estimated concentrations (PM2.5, PM10 in microgram/m^3).",
      "website": "http://www.arduino.cc/en/Reference/PM2005Lib",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jwagnerhki/PM2005Lib-1.0.2.zip",
      "archiveFileName": "PM2005Lib-1.0.2.zip",
      "size": 6330,
      "checksum": "SHA-256:0d804b6bba8995de8c3fc12329b4b7dc4409166f78c59579d4341c6a59473d1f"
    },
    {
      "name": "FaBo 202 9Axis MPU9250",
      "version": "1.0.0",
      "author": "FaBo\u003cinfo@fabo.io\u003e",
      "maintainer": "Akira Sasaki\u003cakira@fabo.io\u003e",
      "sentence": "A library for FaBo 9Axis I2C Brick",
      "paragraph": "MPU9250 is 9-Axis sensor.",
      "website": "https://github.com/FaBoPlatform/FaBo9AXIS-MPU9250-Library",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/FaBoPlatform/FaBo_202_9Axis_MPU9250-1.0.0.zip",
      "archiveFileName": "FaBo_202_9Axis_MPU9250-1.0.0.zip",
      "size": 11011,
      "checksum": "SHA-256:7dd890e6c9cca3f00eaf5e8c285f2fe56a75feb4f2904689c9897dea7783bd4d"
    },
    {
      "name": "FaBo 205 Proximity VCNL4010",
      "version": "1.0.0",
      "author": "FaBo\u003cinfo@fabo.io\u003e",
      "maintainer": "Akira Sasaki\u003cakira@fabo.io\u003e,Hideki Yamauchi\u003cyamauchi@fabo.io\u003e",
      "sentence": "A library for FaBo Proximity I2C Brick",
      "paragraph": "VCNL4010 is Proximity and Ambient Light Sensor with Infrared Emitter, I2C Interface.",
      "website": "https://github.com/FaBoPlatform/FaBoProximity-VCNL4010-Library",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/FaBoPlatform/FaBo_205_Proximity_VCNL4010-1.0.0.zip",
      "archiveFileName": "FaBo_205_Proximity_VCNL4010-1.0.0.zip",
      "size": 8963,
      "checksum": "SHA-256:22710b063554925e4bdafe8960f7a796d4dc6a7403a47d7a117baddbc6c886db"
    },
    {
      "name": "FaBo 204 Baromter MPL115A2",
      "version": "1.0.0",
      "author": "FaBo\u003cinfo@fabo.io\u003e",
      "maintainer": "Akira Sasaki\u003cakira@fabo.io\u003e",
      "sentence": "A library for FaBo Barometer I2C Brick",
      "paragraph": "MPL115A2 is I2C Digital Barometer.",
      "website": "https://github.com/FaBoPlatform/FaBoBarometer-MPL115-Library",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/FaBoPlatform/FaBo_204_Baromter_MPL115A2-1.0.0.zip",
      "archiveFileName": "FaBo_204_Baromter_MPL115A2-1.0.0.zip",
      "size": 8035,
      "checksum": "SHA-256:f8ea051320029fec21d0252758d6528fd27974d4560c1058106fb19c4647020d"
    },
    {
      "name": "FaBo 201 3Axis ADXL345",
      "version": "1.0.1",
      "author": "FaBo\u003cinfo@fabo.io\u003e",
      "maintainer": "Akira Sasaki\u003cakira@fabo.io\u003e",
      "sentence": "A library for FaBo 3AXIS I2C Brick",
      "paragraph": "ADXL345 is 3-Axis Digital Accelerometer sensor",
      "website": "https://github.com/FaBoPlatform/FaBo3Axis-ADXL345-Library",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/FaBoPlatform/FaBo_201_3Axis_ADXL345-1.0.1.zip",
      "archiveFileName": "FaBo_201_3Axis_ADXL345-1.0.1.zip",
      "size": 9771,
      "checksum": "SHA-256:86906fb4d4da6567f57221919767514df141ce20521bf9d306ea8c072c55a398"
    },
    {
      "name": "FaBo 210 GPIO PCAL6408A",
      "version": "1.0.0",
      "author": "FaBo\u003cinfo@fabo.io\u003e",
      "maintainer": "Akira Sasaki\u003cakira@fabo.io\u003e",
      "sentence": "A library for FaBo GPIO I2C Brick",
      "paragraph": "PCAL6408A is 8bit I2C I/O expander.",
      "website": "https://github.com/FaBoPlatform/FaBoGPIO-PCAL6408-Library",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/FaBoPlatform/FaBo_210_GPIO_PCAL6408A-1.0.0.zip",
      "archiveFileName": "FaBo_210_GPIO_PCAL6408A-1.0.0.zip",
      "size": 7655,
      "checksum": "SHA-256:2acc407e04662477f9136d57f98e2696c4b53e9c9e812299bb6f56e0f806eb77"
    },
    {
      "name": "FaBo 203 Color S11059",
      "version": "1.0.1",
      "author": "FaBo\u003cinfo@fabo.io\u003e",
      "maintainer": "Hideki Yamauchi\u003cyamauchi@fabo.io\u003e",
      "sentence": "A library for FaBo Color I2C Brick",
      "paragraph": "S11059 is color sensor.",
      "website": "https://github.com/FaBoPlatform/FaBoColor-s11059-Library",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/FaBoPlatform/FaBo_203_Color_S11059-1.0.1.zip",
      "archiveFileName": "FaBo_203_Color_S11059-1.0.1.zip",
      "size": 8557,
      "checksum": "SHA-256:36eeeb044355f37c5ca10798c791df60ee2320699c962245cc5fd16bcf83df8a"
    },
    {
      "name": "FaBo 215 RTC PCF2129",
      "version": "1.0.0",
      "author": "FaBo\u003cinfo@fabo.io\u003e",
      "maintainer": "Akira Sasaki\u003cakira@fabo.io\u003e,Hideki Yamauchi\u003cyamauchi@fabo.io\u003e",
      "sentence": "A library for FaBo RTC I2C Brick",
      "paragraph": "PCF2129 is RTC with integrated quartz crystal.",
      "website": "https://github.com/FaBoPlatform/FaBoRTC-PCF2129-Library",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/FaBoPlatform/FaBo_215_RTC_PCF2129-1.0.0.zip",
      "archiveFileName": "FaBo_215_RTC_PCF2129-1.0.0.zip",
      "size": 8981,
      "checksum": "SHA-256:80105ea2c97ce6c40a28ec94d538b6cf7efaeb2d7f814f979348207a34186f97"
    },
    {
      "name": "FaBo 207 Temperature ADT7410",
      "version": "1.0.0",
      "author": "FaBo\u003cinfo@fabo.io\u003e",
      "maintainer": "Akira Sasaki\u003cakira@fabo.io\u003e",
      "sentence": "A library for FaBo Temperature I2C Brick",
      "paragraph": "ADT7410 is 16-Bit Digital I2C Temperature Sensor.",
      "website": "https://github.com/FaBoPlatform/FaBoTemperature-ADT7410-Library",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/FaBoPlatform/FaBo_207_Temperature_ADT7410-1.0.0.zip",
      "archiveFileName": "FaBo_207_Temperature_ADT7410-1.0.0.zip",
      "size": 8307,
      "checksum": "SHA-256:0c5029b0b41924b9fa77837758c8bcc969c1be7622602d89aba26035671f0b4e"
    },
    {
      "name": "FaBo 209 KTemp MCP3421",
      "version": "1.0.0",
      "author": "FaBo\u003cinfo@fabo.io\u003e",
      "maintainer": "Akira Sasaki\u003cakira@fabo.io\u003e",
      "sentence": "A library for FaBo KTemp I2C Brick",
      "paragraph": "MCP3421 is 18-Bit Analog-to-Digital Converter.",
      "website": "https://github.com/FaBoPlatform/FaBoKTemp-MCP3421-Library",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/FaBoPlatform/FaBo_209_KTemp_MCP3421-1.0.0.zip",
      "archiveFileName": "FaBo_209_KTemp_MCP3421-1.0.0.zip",
      "size": 7719,
      "checksum": "SHA-256:cf7d01fb93ecf7da066879a71f77bf5c1cf6196196315a7fabd141e804e11d4c"
    },
    {
      "name": "NeoPixel Painter",
      "version": "1.0.0",
      "author": "DedeHai",
      "maintainer": "DedeHai \u003cdaedae@gmx.ch\u003e",
      "sentence": "Arduino library for easy creation of LED strip animations, based on the NeoPixel library.",
      "paragraph": "It uses HSV colors, supports fade-in and fade-out of pixels, fading colors and fading color saturation. See examples for some inspiration.",
      "website": "https://github.com/...TBD",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DedeHai/NeoPixel_Painter-1.0.0.zip",
      "archiveFileName": "NeoPixel_Painter-1.0.0.zip",
      "size": 15325,
      "checksum": "SHA-256:f122756d2e4035a422ac60a62534ed707f1eca47ff7bf90b21d9ae94944bb7a6"
    },
    {
      "name": "BTLE",
      "version": "1.0.0",
      "author": "Florian Echtler",
      "maintainer": "Florian Echtler",
      "sentence": "Arduino library for basic Bluetooth LE communication.",
      "paragraph": "Arduino library for basic Bluetooth Low Energy support using the nRF24L01+ (basic support = sending \u0026 receiving on the advertising broadcast channel)",
      "website": "https://github.com/floe/BTLE",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/floe/BTLE-1.0.0.zip",
      "archiveFileName": "BTLE-1.0.0.zip",
      "size": 21181,
      "checksum": "SHA-256:36b5f292a2a052cf7ff8af0695609acde60fa4e0914868e7f7a68cfe2119e7de"
    },
    {
      "name": "BTLE",
      "version": "0.1.1",
      "author": "Florian Echtler",
      "maintainer": "Florian Echtler",
      "sentence": "Arduino library for basic Bluetooth LE communication.",
      "paragraph": "Arduino library for basic Bluetooth Low Energy support using the nRF24L01+ (basic support = sending \u0026 receiving on the advertising broadcast channel)",
      "website": "https://github.com/floe/BTLE",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/floe/BTLE-0.1.1.zip",
      "archiveFileName": "BTLE-0.1.1.zip",
      "size": 21183,
      "checksum": "SHA-256:d83bc662d50cf44f85aeede482f8db8586cb3b9eb4a8fb81cb7c2233981f8b1e"
    },
    {
      "name": "HexFabQuadroMotorShield",
      "version": "1.0.0",
      "author": "HexFAB",
      "maintainer": "HexFab \u003cinfo@hexfab.de\u003e",
      "sentence": "Control up to four DC Motors and read their currents with this shield.",
      "paragraph": "This library makes it easy to use the HexFAB Quadro Motor Shield.",
      "website": "https://github.com/HexFab/QuadroMotorShield",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/HexFab/HexFabQuadroMotorShield-1.0.0.zip",
      "archiveFileName": "HexFabQuadroMotorShield-1.0.0.zip",
      "size": 5910,
      "checksum": "SHA-256:80f4fe35194ae1fbe3274423cf7432c266252e40e0fba58273a7ca4ab0970fe8"
    },
    {
      "name": "FaBo 217 Ambient Light ISL29034",
      "version": "1.0.0",
      "author": "FaBo\u003cinfo@fabo.io\u003e",
      "maintainer": "Akira Sasaki\u003cakira@fabo.io\u003e",
      "sentence": "A library for FaBo Ambient Light I2C Brick",
      "paragraph": "ISL29034 is Intersil Integrated Digital Light Sensor.",
      "website": "https://github.com/FaBoPlatform/FaBoAmbientLight-ISL29034-Library",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/FaBoPlatform/FaBo_217_Ambient_Light_ISL29034-1.0.0.zip",
      "archiveFileName": "FaBo_217_Ambient_Light_ISL29034-1.0.0.zip",
      "size": 8608,
      "checksum": "SHA-256:f2c50c2c00deb68511ce2824a40746a21e6d7f42849f66a8cbf2a8d69f65d26b"
    },
    {
      "name": "SonarI2C",
      "version": "1.0.0",
      "author": "Alastair Young \u003calastair@redhunter.com\u003e",
      "maintainer": "Alastair Young \u003calastair@redhunter.com\u003e",
      "sentence": "A library to support cheap ultrasonic sensors on I2C bus",
      "paragraph": "triggers via PCF8574, echo via OR/NOR logic to hardware interrupt. Tested with up to 10 HC-SR04",
      "website": "http://redhunter.com/",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arielnh56/SonarI2C-1.0.0.zip",
      "archiveFileName": "SonarI2C-1.0.0.zip",
      "size": 214346,
      "checksum": "SHA-256:ae0d5ca9b9e8e8fdff574b0314cab43969bd5ca2e9a999a62c7470971f5c5db3"
    },
    {
      "name": "SonarI2C",
      "version": "1.1.2",
      "author": "Alastair Young \u003calastair@redhunter.com\u003e",
      "maintainer": "Alastair Young \u003calastair@redhunter.com\u003e",
      "sentence": "A library to support cheap ultrasonic sensors on I2C bus",
      "paragraph": "triggers via PCF8574, echo via OR/NOR logic to hardware interrupt. Tested with up to 10 HC-SR04",
      "website": "http://redhunter.com/",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arielnh56/SonarI2C-1.1.2.zip",
      "archiveFileName": "SonarI2C-1.1.2.zip",
      "size": 218011,
      "checksum": "SHA-256:0cab7a52bedf01ec80828c8c0c3a676dfa34562d96b6e9af2ff6ad64c62ff40f"
    },
    {
      "name": "TouchWheel",
      "version": "1.0.0",
      "author": "Ben Hencke \u003chencke@gmail.com\u003e",
      "maintainer": "Ben Hencke \u003chencke@gmail.com\u003e",
      "sentence": "Capacitive touch wheels using only 3 analog pins!",
      "paragraph": "The TouchWheel library scans 3 touch pads, when put in a circle this allows for a touch wheel that can detect clockwise and counterclockwise finger movement. The 3 pads can be repeated any number of times for higher resolution touch wheels. 9 and 12 pad wheels with a 1.7\" diameter work very well. Uses the ADCTouch library https://github.com/martin2250/ADCTouch",
      "website": "https://github.com/simap/TouchWheel",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/simap/TouchWheel-1.0.0.zip",
      "archiveFileName": "TouchWheel-1.0.0.zip",
      "size": 3056,
      "checksum": "SHA-256:6f52f6a9b8d2c34f4a7e977bf33e755eb3cde944dff396a6dc46f49c3997679a"
    },
    {
      "name": "GP20U7 GPS Library",
      "version": "1.0.0",
      "author": "Kevin Sidwar",
      "maintainer": "Kevin Sidwar \u003ckevin@sidwar.com\u003e",
      "sentence": "A simple library for the GP20U7 GPS unit",
      "paragraph": "A simple library for the GP20U7 GPS unit",
      "website": "https://github.com/sidwarkd/gp20u7_arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sidwarkd/GP20U7_GPS_Library-1.0.0.zip",
      "archiveFileName": "GP20U7_GPS_Library-1.0.0.zip",
      "size": 10200,
      "checksum": "SHA-256:b49b015f4b8a508fe093338be5c1eb670110e06c17ccb8d1ee9f869ab1f162df"
    },
    {
      "name": "uArmLibrary",
      "version": "1.5.8",
      "author": "UFactory \u003cdeveloper@ufactory.cc\u003e",
      "maintainer": "Joey Song \u003cjoey@ufactory.cc\u003e, Alex Tan\u003calex@ufactory.cc\u003e",
      "sentence": "uArm Library for Arduino",
      "website": "http://developer.ufactory.cc",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/uArm-Developer/uArmLibrary-1.5.8.zip",
      "archiveFileName": "uArmLibrary-1.5.8.zip",
      "size": 16884,
      "checksum": "SHA-256:a5bdf05a843ffdf50c4713c722ed504020a02765f6a4c3a15e25ea14b4ce18aa"
    },
    {
      "name": "uArmLibrary",
      "version": "1.6.0",
      "author": "UFactory \u003cdeveloper@ufactory.cc\u003e",
      "maintainer": "Joey Song \u003cjoey@ufactory.cc\u003e, Alex Tan\u003calex@ufactory.cc\u003e, Dave Corboy\u003cdave@corboy.com\u003e",
      "sentence": "uArm Library for Arduino",
      "website": "http://developer.ufactory.cc",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/uArm-Developer/uArmLibrary-1.6.0.zip",
      "archiveFileName": "uArmLibrary-1.6.0.zip",
      "size": 29562,
      "checksum": "SHA-256:35c6b204882c428986ccacca9eb6ed98c363ab5f7a6cca60ef8754fa4a146496"
    },
    {
      "name": "uArmLibrary",
      "version": "1.6.1",
      "author": "UFactory \u003cdeveloper@ufactory.cc\u003e",
      "maintainer": "Joey Song \u003cjoey@ufactory.cc\u003e, Alex Tan\u003calex@ufactory.cc\u003e, Dave Corboy\u003cdave@corboy.com\u003e",
      "sentence": "uArm Library for Arduino",
      "website": "http://developer.ufactory.cc",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/uArm-Developer/uArmLibrary-1.6.1.zip",
      "archiveFileName": "uArmLibrary-1.6.1.zip",
      "size": 29744,
      "checksum": "SHA-256:b14ef8f55e01813df5233488c977226dce19cba96d3eb9741be72dd00876c622"
    },
    {
      "name": "uArmLibrary",
      "version": "1.7.1",
      "author": "UFactory \u003cdeveloper@ufactory.cc\u003e",
      "maintainer": "Joey Song \u003cjoey@ufactory.cc\u003e, Alex Tan\u003calex@ufactory.cc\u003e, Dave Corboy\u003cdave@corboy.com\u003e",
      "sentence": "uArm Library for Arduino",
      "website": "http://developer.ufactory.cc",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/uArm-Developer/uArmLibrary-1.7.1.zip",
      "archiveFileName": "uArmLibrary-1.7.1.zip",
      "size": 67464,
      "checksum": "SHA-256:568f61c0e9e5b2c8ed51f32dfdadf13ca46cd949424530c57877180564cc24b1"
    },
    {
      "name": "uArmLibrary",
      "version": "1.7.2",
      "author": "UFactory \u003cdeveloper@ufactory.cc\u003e",
      "maintainer": "Joey Song \u003cjoey@ufactory.cc\u003e, Alex Tan\u003calex@ufactory.cc\u003e, Dave Corboy\u003cdave@corboy.com\u003e",
      "sentence": "uArm Library for Arduino",
      "website": "http://developer.ufactory.cc",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/uArm-Developer/uArmLibrary-1.7.2.zip",
      "archiveFileName": "uArmLibrary-1.7.2.zip",
      "size": 67683,
      "checksum": "SHA-256:56451ba9b2c95ffbd2eecc7fc59e537be489bf51ef87687d7afe3ed468bf802e"
    },
    {
      "name": "uArmLibrary",
      "version": "2.2.1",
      "author": "UFactory \u003cdeveloper@ufactory.cc\u003e",
      "maintainer": "Alex Tan\u003calex@ufactory.cc\u003e, Dave Corboy\u003cdave@corboy.com\u003e",
      "sentence": "uArm Library for Arduino",
      "website": "http://developer.ufactory.cc",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/uArm-Developer/uArmLibrary-2.2.1.zip",
      "archiveFileName": "uArmLibrary-2.2.1.zip",
      "size": 1424122,
      "checksum": "SHA-256:634d1a07ae17d98a1c7f6aa0c635c2b8b2ded5eaf1b94ac01051e7891e42688b"
    },
    {
      "name": "uArmLibrary",
      "version": "1.5.10",
      "author": "UFactory \u003cdeveloper@ufactory.cc\u003e",
      "maintainer": "Joey Song \u003cjoey@ufactory.cc\u003e, Alex Tan\u003calex@ufactory.cc\u003e, Dave Corboy\u003cdave@corboy.com\u003e",
      "sentence": "uArm Library for Arduino",
      "website": "http://developer.ufactory.cc",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/uArm-Developer/uArmLibrary-1.5.10.zip",
      "archiveFileName": "uArmLibrary-1.5.10.zip",
      "size": 18968,
      "checksum": "SHA-256:315a9bf468789c1fe0fc12bb0cef26df8c2e0c143bf554a7fe24ac4455b3e4d8"
    },
    {
      "name": "uArmLibrary",
      "version": "1.5.11",
      "author": "UFactory \u003cdeveloper@ufactory.cc\u003e",
      "maintainer": "Joey Song \u003cjoey@ufactory.cc\u003e, Alex Tan\u003calex@ufactory.cc\u003e, Dave Corboy\u003cdave@corboy.com\u003e",
      "sentence": "uArm Library for Arduino",
      "website": "http://developer.ufactory.cc",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/uArm-Developer/uArmLibrary-1.5.11.zip",
      "archiveFileName": "uArmLibrary-1.5.11.zip",
      "size": 18975,
      "checksum": "SHA-256:f55a2fc272127ab926372afd79b3ed1cedefd9559962cf0abdf42548ed4590ed"
    },
    {
      "name": "uArmLibrary",
      "version": "1.5.2",
      "author": "UFactory \u003cdeveloper@ufactory.cc\u003e",
      "maintainer": "Joey Song \u003cjoey@ufactory.cc\u003e, Alex Tan\u003calex@ufactory.cc\u003e",
      "sentence": "uArm Library for Arduino",
      "website": "http://ufactory.cc",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/uArm-Developer/uArmLibrary-1.5.2.zip",
      "archiveFileName": "uArmLibrary-1.5.2.zip",
      "size": 13985,
      "checksum": "SHA-256:fdb2f9df258f8ae5bf6551d9f03ce80c99103eb92080ac72b25b63f8f7d4829d"
    },
    {
      "name": "uArmLibrary",
      "version": "1.5.3",
      "author": "UFactory \u003cdeveloper@ufactory.cc\u003e",
      "maintainer": "Joey Song \u003cjoey@ufactory.cc\u003e, Alex Tan\u003calex@ufactory.cc\u003e",
      "sentence": "uArm Library for Arduino",
      "website": "http://ufactory.cc",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/uArm-Developer/uArmLibrary-1.5.3.zip",
      "archiveFileName": "uArmLibrary-1.5.3.zip",
      "size": 14367,
      "checksum": "SHA-256:635b943b9a0ed6f91b9422167bd34f364dcf2559e2cb387216b3adcf75e69dd2"
    },
    {
      "name": "FaBo 213 LCD mini AQM0802A",
      "version": "1.0.0",
      "author": "FaBo\u003cinfo@fabo.io\u003e",
      "maintainer": "Hideki Yamauchi\u003cyamauchi@fabo.io\u003e",
      "sentence": "A library for FaBo LCD mini I2C Brick",
      "paragraph": "AQM0802A is I2C 8x2 LCD module.",
      "website": "https://github.com/FaBoPlatform/FaBoLCDmini-AQM0802A-Library",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/FaBoPlatform/FaBo_213_LCD_mini_AQM0802A-1.0.0.zip",
      "archiveFileName": "FaBo_213_LCD_mini_AQM0802A-1.0.0.zip",
      "size": 16594,
      "checksum": "SHA-256:f76f11055a8807aed6fb0c736fda29ceb022547baaab7846ed353dfb31f315cf"
    },
    {
      "name": "BasicLinearAlgebra",
      "version": "1.0.0",
      "author": "Tom Stewart \u003ctomstewart89@hotmail.com\u003e",
      "maintainer": "Tom Stewart \u003ctomstewart89@hotmail.com\u003e",
      "sentence": "A template library for working with matrices on Arduino",
      "paragraph": "It supports most common matrix operations including inversion without the need for dynamic memory allocation. It also does compile time checking of the dimensions and type of matrices used as operands.",
      "website": "https://github.com/tomstewart89/Matrix",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/tomstewart89/BasicLinearAlgebra-1.0.0.zip",
      "archiveFileName": "BasicLinearAlgebra-1.0.0.zip",
      "size": 8544,
      "checksum": "SHA-256:84490f96b192b60be5f552a68217fccd054a94af25e34ceb3b3503b151df7e29"
    },
    {
      "name": "BasicLinearAlgebra",
      "version": "1.1.0",
      "author": "Tom Stewart \u003ctomstewart89@hotmail.com\u003e",
      "maintainer": "Tom Stewart \u003ctomstewart89@hotmail.com\u003e",
      "sentence": "A lightweight library for working with matrices and linear algebra on Arduino",
      "paragraph": "It supports most common matrix operations including inversion without the need for dynamic memory allocation. It also does compile time checking of the dimensions and type of matrices used as operands.",
      "website": "https://github.com/tomstewart89/BasicLinearAlgebra",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/tomstewart89/BasicLinearAlgebra-1.1.0.zip",
      "archiveFileName": "BasicLinearAlgebra-1.1.0.zip",
      "size": 8581,
      "checksum": "SHA-256:d446880ee100fa0ce821f204a706f8eaa98c716cb25bc3875e4e4601c833297b"
    },
    {
      "name": "BasicLinearAlgebra",
      "version": "1.2.0",
      "author": "Tom Stewart \u003ctomstewart89@hotmail.com\u003e",
      "maintainer": "Tom Stewart \u003ctomstewart89@hotmail.com\u003e",
      "sentence": "A lightweight library for working with matrices and linear algebra on Arduino",
      "paragraph": "It supports most common matrix operations including inversion without the need for dynamic memory allocation. It also does compile time checking of the dimensions and type of matrices used as operands.",
      "website": "https://github.com/tomstewart89/BasicLinearAlgebra",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/tomstewart89/BasicLinearAlgebra-1.2.0.zip",
      "archiveFileName": "BasicLinearAlgebra-1.2.0.zip",
      "size": 8728,
      "checksum": "SHA-256:4512b8731226a898151db198900681c9e39e3c4fd9dc8e1d2ebff7bdd5e75195"
    },
    {
      "name": "BasicLinearAlgebra",
      "version": "2.0.0",
      "author": "Tom Stewart \u003ctomstewart89@hotmail.com\u003e",
      "maintainer": "Tom Stewart \u003ctomstewart89@hotmail.com\u003e",
      "sentence": "A library for representing matrices and doing matrix math on arduino",
      "paragraph": "Supports most common matrix operations including inversion without the need for dynamic memory allocation. It also does compile time checking of the dimensions and type of matrices used as operands.",
      "website": "https://github.com/tomstewart89/BasicLinearAlgebra",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/tomstewart89/BasicLinearAlgebra-2.0.0.zip",
      "archiveFileName": "BasicLinearAlgebra-2.0.0.zip",
      "size": 14746,
      "checksum": "SHA-256:b3db46671efc57fa6fe318924fc03cb1d9e9c6c0fc6847364d7765b3573e2b63"
    },
    {
      "name": "Base64",
      "version": "0.0.1",
      "author": "Arturo Guadalupi",
      "maintainer": "Arturo Guadalupi",
      "sentence": "A Base64 library for Arduino",
      "paragraph": "A Base64 library for Arduino",
      "website": "https://github.com/agdl/Base64",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/agdl/Base64-0.0.1.zip",
      "archiveFileName": "Base64-0.0.1.zip",
      "size": 13957,
      "checksum": "SHA-256:4936ecc352041e0abb08929676ba598920591f1c7831e0f5ed89409562ae66fc"
    },
    {
      "name": "Infrared",
      "version": "1.0.0",
      "author": "Bengt Martensson \u003cbarf@bengt-martensson.de\u003e",
      "maintainer": "Bengt Martensson \u003cbarf@bengt-martensson.de\u003e",
      "sentence": "An object oriented library for sending, receiving, and analyzing IR signals on the Arduino.",
      "paragraph": "The library contains classes for IR signals, IR sequences, as well as for sending, receiving, analyzing, decoding and rendering of IR signals.",
      "website": "http://www.harctoolbox.org/Infrared4Arduino,html",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bengtmartensson/Infrared-1.0.0.zip",
      "archiveFileName": "Infrared-1.0.0.zip",
      "size": 87322,
      "checksum": "SHA-256:6fb13ae25da2dfcc744a3252a6d56d870c2a01dd53bdb715498c5e650ae5c492"
    },
    {
      "name": "Infrared",
      "version": "1.0.1",
      "author": "Bengt Martensson \u003cbarf@bengt-martensson.de\u003e",
      "maintainer": "Bengt Martensson \u003cbarf@bengt-martensson.de\u003e",
      "sentence": "An object oriented library for sending, receiving, and analyzing IR signals on the Arduino.",
      "paragraph": "The library contains classes for IR signals, IR sequences, as well as for sending, receiving, analyzing, decoding and rendering of IR signals.",
      "website": "http://www.harctoolbox.org/Infrared4Arduino,html",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bengtmartensson/Infrared-1.0.1.zip",
      "archiveFileName": "Infrared-1.0.1.zip",
      "size": 87672,
      "checksum": "SHA-256:77fe30fe918056a6c1ce1d209c7c3124739f7374e35ed836d4fa82382c65704b"
    },
    {
      "name": "GoPRO",
      "version": "1.0.0",
      "author": "Arturo Guadalupi",
      "maintainer": "Arturo Guadalupi",
      "sentence": "GoPRO API library for Arduino",
      "paragraph": "GoPRO API library for Arduino",
      "website": "https://github.com/agdl/GoPRO",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/agdl/GoPRO-1.0.0.zip",
      "archiveFileName": "GoPRO-1.0.0.zip",
      "size": 16096,
      "checksum": "SHA-256:4569fbcd50db6785fa7244154ac47c88ce33e29af32120986d0d0d93442b1b66"
    },
    {
      "name": "ESP8266RestClient",
      "version": "1.0.0",
      "author": "fabianofranca",
      "maintainer": "fabianofranca",
      "sentence": "ESP8266 RESTful HTTP Request Library.",
      "website": "https://github.com/fabianofranca/ESP8266RestClient",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/fabianofranca/ESP8266RestClient-1.0.0.zip",
      "archiveFileName": "ESP8266RestClient-1.0.0.zip",
      "size": 7167,
      "checksum": "SHA-256:298700205dc3d444f2592941f334edca6f5bc3e897d0a98dca46fc9ef92010bd"
    },
    {
      "name": "RTC4543lib",
      "version": "1.0.0",
      "author": "Masami Yamakawa \u003csilkycove@gmail.com\u003e",
      "maintainer": "Masami Yamakawa \u003csilkycove@gmail.com\u003e",
      "sentence": "A simple RTC4543 library.",
      "paragraph": "A simple RTC4543 library.",
      "website": "https://github.com/monoxit/RTC4543lib/",
      "category": "Device Control",
      "architectures": [
        "avr",
        "tiny"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/monoxit/RTC4543lib-1.0.0.zip",
      "archiveFileName": "RTC4543lib-1.0.0.zip",
      "size": 6449,
      "checksum": "SHA-256:9c8df06895da09331bdeb8bd05f10e82827c1b802b9fef0f50edb84dde604646"
    },
    {
      "name": "RTC4543lib",
      "version": "1.0.1",
      "author": "Masami Yamakawa \u003csilkycove@gmail.com\u003e",
      "maintainer": "Masami Yamakawa \u003csilkycove@gmail.com\u003e",
      "sentence": "A simple RTC4543 library.",
      "paragraph": "A simple Arduino library controling the rial time clock RTC-4543. This library is designed to easily access to the device from Arduino based board including tiny core based board and ESP8266.",
      "website": "https://github.com/monoxit/RTC4543lib/",
      "category": "Device Control",
      "architectures": [
        "avr",
        "tiny",
        "ESP8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/monoxit/RTC4543lib-1.0.1.zip",
      "archiveFileName": "RTC4543lib-1.0.1.zip",
      "size": 7257,
      "checksum": "SHA-256:e89bb07c5c776139cf8a89597e873c7bf95d864277a6a32348a7fb8649784e97"
    },
    {
      "name": "EMoRo 2560",
      "version": "2.4.2",
      "author": "Inovatic-ICT",
      "maintainer": "Inovatic-ICT \u003canic@inovatic-ict.com\u003e",
      "sentence": "EMoRo 2560 library includes all specific libraries and examples for EMoRo 2560 controller.",
      "paragraph": "EMoRo 2560 controller is based on ATmega2560 MCU. A few specific fetures are: a wide range of power supplies, two separate DC/DC stabilizers: 5V2A (for MCU and logic) and 5V3A (8 IO ports for RC servo motors with easy Plug \u0026 Play), over-current protection, 16 digital I/O ports  with LED signalization, 8 input analog ports , 8 dual I/O ports for ultrasonic sensors (Plug \u0026 Play), and many other Plug \u0026 Play options, such as: LCD, gyroscope, compass and accelerometer making EMoRo 2560 the most usable Arduino controller for robotics application.",
      "website": "http://www.emoro.eu",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/inovatic-ict/EMoRo_2560-2.4.2.zip",
      "archiveFileName": "EMoRo_2560-2.4.2.zip",
      "size": 273601,
      "checksum": "SHA-256:91e1afbf8ad4450642824e720908277b63a9bf805740c5dab1e4f48e0c30605e"
    },
    {
      "name": "ClosedCube HDC1080",
      "version": "1.0.1",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Texas Instruments HDC1080 Low Power, High Accuracy Digital Humidity Sensor with Temperature Sensor",
      "paragraph": "Arduino library for Texas Instruments HDC1080 Low Power, High Accuracy Digital Humidity Sensor with Temperature Sensor",
      "website": "https://github.com/closedcube/ClosedCube_HDC1080_Arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/closedcube/ClosedCube_HDC1080-1.0.1.zip",
      "archiveFileName": "ClosedCube_HDC1080-1.0.1.zip",
      "size": 163143,
      "checksum": "SHA-256:b659e2d6923454e50f391fc6783ffa2296add9d3d3cb06b25fd9108a4e7eb2e8"
    },
    {
      "name": "ClosedCube HDC1080",
      "version": "1.0.2",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Texas Instruments HDC1080 Low Power, High Accuracy Digital Humidity Sensor with Temperature Sensor",
      "paragraph": "Arduino library for Texas Instruments HDC1080 Low Power, High Accuracy Digital Humidity Sensor with Temperature Sensor",
      "website": "https://github.com/closedcube/ClosedCube_HDC1080_Arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/closedcube/ClosedCube_HDC1080-1.0.2.zip",
      "archiveFileName": "ClosedCube_HDC1080-1.0.2.zip",
      "size": 163213,
      "checksum": "SHA-256:cf7d71b0c306beb1aeee351f62daaabfa8f23167a1a092cc876f1db38323c695"
    },
    {
      "name": "ClosedCube HDC1080",
      "version": "1.2.1",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Texas Instruments HDC1080 Low Power, High Accuracy Digital Humidity Sensor with Temperature Sensor",
      "paragraph": "Arduino library for Texas Instruments HDC1080 Low Power, High Accuracy Digital Humidity Sensor with Temperature Sensor",
      "website": "https://github.com/closedcube/ClosedCube_HDC1080_Arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/closedcube/ClosedCube_HDC1080-1.2.1.zip",
      "archiveFileName": "ClosedCube_HDC1080-1.2.1.zip",
      "size": 164651,
      "checksum": "SHA-256:7e2935d2c9315cc4fa9593720ead03fab0f33fb2efd59cb30e573eb88dad51ab"
    },
    {
      "name": "LedDisplay",
      "version": "0.4.0",
      "author": "Tom Igoe",
      "maintainer": "Paul Stoffregen",
      "sentence": "Print text to an Avago HCMS-29xx LED display.",
      "paragraph": "The HCMS 29xx displays are pretty little displays that contain a row of 5x7 LED matrices.  You'll need five digital output lines to control them.  LedDisplay manages all the necessary pin control and data shifting for you.",
      "website": "http://playground.arduino.cc/Main/LedDisplay",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/LedDisplay-0.4.0.zip",
      "archiveFileName": "LedDisplay-0.4.0.zip",
      "size": 25269,
      "checksum": "SHA-256:995c910a7f41c0f520fa8603292a01445f9ed23a5623eec183c50ec5912d7a0f"
    },
    {
      "name": "LedDisplay",
      "version": "0.4.1",
      "author": "Tom Igoe",
      "maintainer": "Paul Stoffregen",
      "sentence": "Print text to an Avago HCMS-29xx LED display.",
      "paragraph": "The HCMS 29xx displays are pretty little displays that contain a row of 5x7 LED matrices.  You'll need five digital output lines to control them.  LedDisplay manages all the necessary pin control and data shifting for you.",
      "website": "http://playground.arduino.cc/Main/LedDisplay",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/LedDisplay-0.4.1.zip",
      "archiveFileName": "LedDisplay-0.4.1.zip",
      "size": 25207,
      "checksum": "SHA-256:7ac45f6481661aae1a1c2b8b33874f29cb592585944f1422bd273747d7a253f8"
    },
    {
      "name": "ConfigManager",
      "version": "0.1.0",
      "author": "Nick Wiersma \u003cnick@wiersma.co.za\u003e",
      "maintainer": "Nick Wiersma \u003cnick@wiersma.co.za\u003e",
      "sentence": "ESP8266 WiFi connection manager",
      "paragraph": "Library for configuring ESP8266 modules WiFi credentials at runtime.",
      "website": "https://github.com/nrwiersma/ConfigManager.git",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nrwiersma/ConfigManager-0.1.0.zip",
      "archiveFileName": "ConfigManager-0.1.0.zip",
      "size": 6991,
      "checksum": "SHA-256:9831c7e788388a9b76c575b42a8e5d5218bcdeef4a68dfd9a86500d6f9f9fe31"
    },
    {
      "name": "ConfigManager",
      "version": "0.2.0",
      "author": "Nick Wiersma \u003cnick@wiersma.co.za\u003e",
      "maintainer": "Nick Wiersma \u003cnick@wiersma.co.za\u003e",
      "sentence": "ESP8266 WiFi connection manager",
      "paragraph": "Library for configuring ESP8266 modules WiFi credentials at runtime.",
      "website": "https://github.com/nrwiersma/ConfigManager.git",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nrwiersma/ConfigManager-0.2.0.zip",
      "archiveFileName": "ConfigManager-0.2.0.zip",
      "size": 7333,
      "checksum": "SHA-256:6a9e5639d04c6298fde4d8969a31ccbc204b5bc1a41d6f59e6e563e215fd4e82"
    },
    {
      "name": "ConfigManager",
      "version": "0.3.0",
      "author": "Nick Wiersma \u003cnick@wiersma.co.za\u003e",
      "maintainer": "Nick Wiersma \u003cnick@wiersma.co.za\u003e",
      "sentence": "ESP8266 WiFi connection manager",
      "paragraph": "Library for configuring ESP8266 modules WiFi credentials at runtime.",
      "website": "https://github.com/nrwiersma/ConfigManager.git",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nrwiersma/ConfigManager-0.3.0.zip",
      "archiveFileName": "ConfigManager-0.3.0.zip",
      "size": 7763,
      "checksum": "SHA-256:9d57c21301b34d29144626764d8aa3321e80e14d90b9cd2e53a0140c604d5ab0"
    },
    {
      "name": "ConfigManager",
      "version": "0.4.0",
      "author": "Nick Wiersma \u003cnick@wiersma.co.za\u003e",
      "maintainer": "Nick Wiersma \u003cnick@wiersma.co.za\u003e",
      "sentence": "ESP8266 WiFi connection manager",
      "paragraph": "Library for configuring ESP8266 modules WiFi credentials at runtime.",
      "website": "https://github.com/nrwiersma/ConfigManager.git",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nrwiersma/ConfigManager-0.4.0.zip",
      "archiveFileName": "ConfigManager-0.4.0.zip",
      "size": 7914,
      "checksum": "SHA-256:ad0ba8aa9f8d02efa3c6fda8f19a36f71291ed636db4301945768573ba166118"
    },
    {
      "name": "ConfigManager",
      "version": "0.5.0",
      "author": "Nick Wiersma \u003cnick@wiersma.co.za\u003e",
      "maintainer": "Nick Wiersma \u003cnick@wiersma.co.za\u003e",
      "sentence": "ESP8266 WiFi connection manager",
      "paragraph": "Library for configuring ESP8266 modules WiFi credentials at runtime.",
      "website": "https://github.com/nrwiersma/ConfigManager.git",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nrwiersma/ConfigManager-0.5.0.zip",
      "archiveFileName": "ConfigManager-0.5.0.zip",
      "size": 8128,
      "checksum": "SHA-256:2079d3f91d6da514dd6be05f7c3f73b47c19b4d91b854ffe8b9a612eb25d69fa"
    },
    {
      "name": "ConfigManager",
      "version": "0.6.0",
      "author": "Nick Wiersma \u003cnick@wiersma.co.za\u003e",
      "maintainer": "Nick Wiersma \u003cnick@wiersma.co.za\u003e",
      "sentence": "ESP8266 WiFi connection manager",
      "paragraph": "Library for configuring ESP8266 modules WiFi credentials at runtime.",
      "website": "https://github.com/nrwiersma/ConfigManager.git",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nrwiersma/ConfigManager-0.6.0.zip",
      "archiveFileName": "ConfigManager-0.6.0.zip",
      "size": 8144,
      "checksum": "SHA-256:a00c42ca540c6a8cd071b75ce15a0a21d3c43c0174991380ff89be8f4a12931e"
    },
    {
      "name": "ConfigManager",
      "version": "0.7.0",
      "author": "Nick Wiersma \u003cnick@wiersma.co.za\u003e",
      "maintainer": "Nick Wiersma \u003cnick@wiersma.co.za\u003e",
      "sentence": "ESP8266 WiFi connection manager",
      "paragraph": "Library for configuring ESP8266 modules WiFi credentials at runtime.",
      "website": "https://github.com/nrwiersma/ConfigManager.git",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nrwiersma/ConfigManager-0.7.0.zip",
      "archiveFileName": "ConfigManager-0.7.0.zip",
      "size": 8172,
      "checksum": "SHA-256:7d49eb2656ef0ec58e704ef6aa95df1eec241fcbdd601796a093a06c7ade700a"
    },
    {
      "name": "eBtn",
      "version": "1.0.0",
      "author": "Davide Andreazzini \u003candreazzini.davide@gmail.com\u003e",
      "maintainer": "Davide Andreazzini \u003candreazzini.davide@gmail.com\u003e",
      "sentence": "A library to handle Buttons based on events.",
      "paragraph": "Supports the following events : [press , hold, release, long]",
      "website": "https://github.com/david1983/eBtn",
      "category": "Signal Input/Output",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/david1983/eBtn-1.0.0.zip",
      "archiveFileName": "eBtn-1.0.0.zip",
      "size": 3920,
      "checksum": "SHA-256:4516ea72486a99be134eb84c1769277293e32b3901cdf27928e59b394df359e7"
    },
    {
      "name": "FaBo 214 OLED EROLED096",
      "version": "1.0.0",
      "author": "FaBo\u003cinfo@fabo.io\u003e",
      "maintainer": "Hideki Yamauchi\u003cyamauchi@fabo.io\u003e",
      "sentence": "A library for FaBo OLED I2C Brick",
      "paragraph": "EROLED096 is 0.96 OLED module.",
      "website": "https://github.com/FaBoPlatform/FaBoOLED-EROLED096-Library",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/FaBoPlatform/FaBo_214_OLED_EROLED096-1.0.0.zip",
      "archiveFileName": "FaBo_214_OLED_EROLED096-1.0.0.zip",
      "size": 2420242,
      "checksum": "SHA-256:77c9d325ce52c55a7374a26c2463ef88e7491e8a76f297b8e46348be566e8e4c"
    },
    {
      "name": "CoDrone",
      "version": "1.4.4",
      "author": "Robolink \u003cinfo@robolink.com\u003e",
      "maintainer": "Robolink \u003cinfo@robolink.com\u003e",
      "sentence": "A library for CoDrone users",
      "paragraph": "More information can be found at http://robolink.com/",
      "website": "http://Robolink.com/",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/RobolinkInc/CoDrone-1.4.4.zip",
      "archiveFileName": "CoDrone-1.4.4.zip",
      "size": 47065,
      "checksum": "SHA-256:b7ba50c90346dcd8b2683cd005c5302456c4002159181bb9d1b9fe990457000e"
    },
    {
      "name": "CoDrone",
      "version": "1.1.0",
      "author": "Robolink \u003cinfo@robolink.com\u003e",
      "maintainer": "Justin Chang \u003cJuChang@gmail.com\u003e",
      "sentence": "A Library for CoDrone users",
      "paragraph": "More information can be found at http://community.robolink.com/",
      "website": "http://Robolink.com/",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/RobolinkInc/CoDrone-1.1.0.zip",
      "archiveFileName": "CoDrone-1.1.0.zip",
      "size": 34481,
      "checksum": "SHA-256:3aa6f8f559df8418ebaab541bc0fc690ef0e7b6581bd45d061b318891b945eb5"
    },
    {
      "name": "CoDrone",
      "version": "1.2.0",
      "author": "Robolink \u003cinfo@robolink.com\u003e",
      "maintainer": "Robolink \u003cinfo@robolink.com\u003e",
      "sentence": "A Library for CoDrone users",
      "paragraph": "More information can be found at http://community.robolink.com/",
      "website": "http://Robolink.com/",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/RobolinkInc/CoDrone-1.2.0.zip",
      "archiveFileName": "CoDrone-1.2.0.zip",
      "size": 42828,
      "checksum": "SHA-256:24c17c1654b85b4799eaa342acc92e4fe2a87b5436ac6ba19a4883f0101203d7"
    },
    {
      "name": "CoDrone",
      "version": "1.3.0",
      "author": "Robolink \u003cinfo@robolink.com\u003e",
      "maintainer": "Robolink \u003cinfo@robolink.com\u003e",
      "sentence": "A Library for CoDrone users",
      "paragraph": "More information can be found at http://community.robolink.com/",
      "website": "http://Robolink.com/",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/RobolinkInc/CoDrone-1.3.0.zip",
      "archiveFileName": "CoDrone-1.3.0.zip",
      "size": 42973,
      "checksum": "SHA-256:217ef2a174e665030a17ff3ef1dd0f74ad6f367847fb02844bb1af8191a2b234"
    },
    {
      "name": "CoDrone",
      "version": "1.4.0",
      "author": "Robolink \u003cinfo@robolink.com\u003e",
      "maintainer": "Robolink \u003cinfo@robolink.com\u003e",
      "sentence": "A Library for CoDrone users",
      "paragraph": "More information can be found at http://community.robolink.com/",
      "website": "http://Robolink.com/",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/RobolinkInc/CoDrone-1.4.0.zip",
      "archiveFileName": "CoDrone-1.4.0.zip",
      "size": 43724,
      "checksum": "SHA-256:2701e0a2b43b232fafd6563cbc2c57051cb4ac6ea7e20c6b98b48166fac34394"
    },
    {
      "name": "CoDrone",
      "version": "1.4.1",
      "author": "Robolink \u003cinfo@robolink.com\u003e",
      "maintainer": "Robolink \u003cinfo@robolink.com\u003e",
      "sentence": "A Library for CoDrone users",
      "paragraph": "More information can be found at http://community.robolink.com/",
      "website": "http://Robolink.com/",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/RobolinkInc/CoDrone-1.4.1.zip",
      "archiveFileName": "CoDrone-1.4.1.zip",
      "size": 45287,
      "checksum": "SHA-256:afb4e73e43473a8e5986a8ccceaeaa85156a321a359dc86b5ea1dc6c1e1793dd"
    },
    {
      "name": "CoDrone",
      "version": "1.4.2",
      "author": "Robolink \u003cinfo@robolink.com\u003e",
      "maintainer": "Robolink \u003cinfo@robolink.com\u003e",
      "sentence": "A library for CoDrone users",
      "paragraph": "More information can be found at http://community.robolink.com/",
      "website": "http://Robolink.com/",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/RobolinkInc/CoDrone-1.4.2.zip",
      "archiveFileName": "CoDrone-1.4.2.zip",
      "size": 44116,
      "checksum": "SHA-256:96dbaef11f2894b76227e67b7053adfa481ff85f38df3ee6ce181dcbc5fffc28"
    },
    {
      "name": "CoDrone",
      "version": "1.4.3",
      "author": "Robolink \u003cinfo@robolink.com\u003e",
      "maintainer": "Robolink \u003cinfo@robolink.com\u003e",
      "sentence": "A library for CoDrone users",
      "paragraph": "More information can be found at http://robolink.com/",
      "website": "http://Robolink.com/",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/RobolinkInc/CoDrone-1.4.3.zip",
      "archiveFileName": "CoDrone-1.4.3.zip",
      "size": 44429,
      "checksum": "SHA-256:c1dbb131cf7299932364d25cc915c3704d4bbd16a80d34b3c6e32a354e6d3ab9"
    },
    {
      "name": "r89m MPR121Button",
      "version": "1.0.0",
      "author": "Richard Miles \u003carduino@fast-chat.co.uk\u003e",
      "maintainer": "Richard Miles \u003carduino@fast-chat.co.uk\u003e",
      "sentence": "Handle MPR121Buttons, powered by Adafruit's MPR121 library",
      "paragraph": "An extension to Buttons, providing support for MPR121 Buttons.",
      "website": "https://github.com/r89m/arduino-button-MPR121button",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/r89m/r89m_MPR121Button-1.0.0.zip",
      "archiveFileName": "r89m_MPR121Button-1.0.0.zip",
      "size": 7770,
      "checksum": "SHA-256:a768292c44597a59218804503ccb6c2c8408d6c7d5d1c6aa309574b9b97fa78d"
    },
    {
      "name": "r89m CapacitiveButton",
      "version": "1.0.0",
      "author": "Richard Miles \u003carduino@fast-chat.co.uk\u003e",
      "maintainer": "Richard Miles \u003carduino@fast-chat.co.uk\u003e",
      "sentence": "Handle CapacitiveButtons, powered by the CapacitiveSensor library",
      "paragraph": "An extension to Buttons, providing support for Capacitive Buttons.",
      "website": "https://github.com/shaggythesheep/CapacitiveButton",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/r89m/r89m_CapacitiveButton-1.0.0.zip",
      "archiveFileName": "r89m_CapacitiveButton-1.0.0.zip",
      "size": 6961,
      "checksum": "SHA-256:ad7cf2b9e396b6adb389e723d055df8aa78956241404104c7b6770cf1f0f4d27"
    },
    {
      "name": "r89m PushButton",
      "version": "1.0.0",
      "author": "Richard Miles \u003carduino@fast-chat.co.uk\u003e",
      "maintainer": "Richard Miles \u003carduino@fast-chat.co.uk\u003e",
      "sentence": "Handle PushButtons, debounced using the Bounce2 library.",
      "paragraph": "An extension to Buttons, providing support for Push Buttons.",
      "website": "https://github.com/r89m/PushButton",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/r89m/r89m_PushButton-1.0.0.zip",
      "archiveFileName": "r89m_PushButton-1.0.0.zip",
      "size": 7069,
      "checksum": "SHA-256:e30a70007caa42663eab4e57bf6b049fe3a00f2566e1e9b320fb33e189fec2bb"
    },
    {
      "name": "r89m Buttons",
      "version": "2.0.0",
      "author": "Richard Miles \u003carduino@fast-chat.co.uk\u003e",
      "maintainer": "Richard Miles \u003carduino@fast-chat.co.uk\u003e",
      "sentence": "A library that makes working with buttons simple.",
      "paragraph": "Supports several different types of buttons (PushButton, CapacitiveButton, MPR121Button) and several button events (Press, Hold, Release).",
      "website": "https://github.com/r89m/Buttons",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/r89m/r89m_Buttons-2.0.0.zip",
      "archiveFileName": "r89m_Buttons-2.0.0.zip",
      "size": 10656,
      "checksum": "SHA-256:f1dd8c1f3545c94fd22344188ef24a43fcc75ef8ba9803ce725f4ad2b7d73dfb"
    },
    {
      "name": "LircPlayer101",
      "version": "1.0.0",
      "author": "David Antler",
      "maintainer": "dantler@github",
      "sentence": "Infrared bitbanger for Arduino 101",
      "paragraph": "This library enables infrared code playback using any single digital pin on the Arduino101 development board and a LIRC-like input format.",
      "website": "https://github.com/dantler/LircRemote101",
      "category": "Device Control",
      "architectures": [
        "arc32"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/dantler/LircPlayer101-1.0.0.zip",
      "archiveFileName": "LircPlayer101-1.0.0.zip",
      "size": 5946,
      "checksum": "SHA-256:aa405a073922e7e4d17a662277a92a2e3b8394975359628ede2cb238a08071d8"
    },
    {
      "name": "AD7173",
      "version": "0.1.0",
      "author": "Silver Kuusik \u003csilver.kuusik@gmail.com\u003e",
      "maintainer": "Silver Kuusik \u003csilver.kuusik@gmail.com\u003e",
      "sentence": "Arduino library for Analog Devices AD7173 analog digital converter",
      "paragraph": "This library was developed as the 24bit interface for Brain-Duino. It implements basic functionality of the AD7173 for using it with Brain-Duino.",
      "website": "http://brain-duino.com/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/brain-duino/AD7173-0.1.0.zip",
      "archiveFileName": "AD7173-0.1.0.zip",
      "size": 11698,
      "checksum": "SHA-256:bf71928d8b2d159ef1875ec09e35c32d1883d55b84bf186e009f40ba684d4499"
    },
    {
      "name": "AD7173",
      "version": "0.2.0",
      "author": "Silver Kuusik \u003csilver.kuusik@gmail.com\u003e",
      "maintainer": "Silver Kuusik \u003csilver.kuusik@gmail.com\u003e",
      "sentence": "Arduino library for Analog Devices AD7173 analog digital converter",
      "paragraph": "This library was developed as the 24bit interface for Brain-Duino. It implements basic functionality of the AD7173 for using it with Brain-Duino or other purposes.",
      "website": "https://github.com/brain-duino/AD7173-Arduino",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/brain-duino/AD7173-0.2.0.zip",
      "archiveFileName": "AD7173-0.2.0.zip",
      "size": 11264,
      "checksum": "SHA-256:ac308dcea8a2c5542e3d0ecd504e16b59e6ebeb2ed7f44f3068a9752a10347c3"
    },
    {
      "name": "AD7173",
      "version": "0.2.1",
      "author": "Silver Kuusik \u003csilver.kuusik@gmail.com\u003e",
      "maintainer": "Silver Kuusik \u003csilver.kuusik@gmail.com\u003e",
      "sentence": "Arduino library for Analog Devices AD7173 analog digital converter",
      "paragraph": "This library was developed as the 24bit interface for Brain-Duino. It implements basic functionality of the AD7173 for using it with Brain-Duino or other purposes.",
      "website": "https://github.com/brain-duino/AD7173-Arduino",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/brain-duino/AD7173-0.2.1.zip",
      "archiveFileName": "AD7173-0.2.1.zip",
      "size": 11423,
      "checksum": "SHA-256:88fefdaeaf86073a60573a669691234eb3289865e57cd6e86dee2f8f06140e42"
    },
    {
      "name": "AD7173",
      "version": "0.3.0",
      "author": "Silver Kuusik \u003csilver.kuusik@gmail.com\u003e",
      "maintainer": "Silver Kuusik \u003csilver.kuusik@gmail.com\u003e",
      "sentence": "Arduino library for Analog Devices AD7173 analog digital converter",
      "paragraph": "This library was developed as the 24bit interface for Brain-Duino. It implements basic functionality of the AD7173 for using it with Brain-Duino or other purposes.",
      "website": "https://github.com/brain-duino/AD7173-Arduino",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/brain-duino/AD7173-0.3.0.zip",
      "archiveFileName": "AD7173-0.3.0.zip",
      "size": 11599,
      "checksum": "SHA-256:63d88e354128cdb8d17aa88fd682cc1488a8839bd0dda32adad8583b0d51bfcd"
    },
    {
      "name": "OpenDevice",
      "version": "0.1.3",
      "author": "Ricardo JL Rufino \u003cricardo.jl.rufino@gmail.com\u003e",
      "maintainer": "CriativaSoft",
      "sentence": "OpenDevice is a set of tools and APIs to build solutions for the \"Internet of Things\" like home automations systems, robotics, smart city, energy monitoring, security, sensor monitoring",
      "paragraph": "Provide an open and unified framework to interconnect IoT devices, data, and applications over the Web, if you need communication between software and hardware, probably your place is here. Plug your device (Arduino/Raspberypi/Other) to the Cloud and sync in real-time.",
      "website": "http://opendevice.io",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/OpenDevice/OpenDevice-0.1.3.zip",
      "archiveFileName": "OpenDevice-0.1.3.zip",
      "size": 60892,
      "checksum": "SHA-256:33393dd7ac432001963a9bf1b2875a80e93c70f40168cd8fc13fe915b9c15e10"
    },
    {
      "name": "Geometry",
      "version": "1.0.0",
      "author": "Tom Stewart \u003ctomstewart89@hotmail.com\u003e",
      "maintainer": "Tom Stewart \u003ctomstewart89@hotmail.com\u003e",
      "sentence": "A library for working with points, rotations and coordinate transformations in 3D space",
      "paragraph": "Defines three classes to represent 3D coordinates, rotation matrices and transformation matrices. All three classes inherit from the Matrix class defined in the BasicLinearAlgebra library so be sure to have that installed before you use this library. Both Points and Rotations can be rotated in 3D and there's also a few useful methods for converting between Euler angles and rotation matrices, finding the cross product of two vectors and so on. Should be really useful for projects involving 3D motion such as drones or robot arms.",
      "website": "https://github.com/tomstewart89/Geometry",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/tomstewart89/Geometry-1.0.0.zip",
      "archiveFileName": "Geometry-1.0.0.zip",
      "size": 331564,
      "checksum": "SHA-256:c8584e6ce1097265ae3f898ae44477af619830e644d7d4db8047642ebf355575"
    },
    {
      "name": "SmartCardReader",
      "version": "1.0.0",
      "author": "Jeff French \u003carduinocodedog@gmail.com\u003e",
      "maintainer": "Jeff French \u003carduinocodedog@gmail.com\u003e",
      "sentence": "A Library with Samples for the Parallax Smart Card Reader.",
      "paragraph": "The Library provides support for the Parallax Smart Card Reader and the three (3) Smart Cards available for the Reader.  Also includes samples for each supported Smart Card.",
      "website": "http://arduinocodedog.blogspot.com/2015/10/parallax-smart-card-reader-revisited.html",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arduinocodedog/SmartCardReader-1.0.0.zip",
      "archiveFileName": "SmartCardReader-1.0.0.zip",
      "size": 13864,
      "checksum": "SHA-256:688420fb0da9ca462b845cbed9eb9c6b8b52a73712f248dd765195483c4568e4"
    },
    {
      "name": "FaBo 212 LCD PCF8574",
      "version": "1.0.0",
      "author": "FaBo\u003cinfo@fabo.io\u003e",
      "maintainer": "Hideki Yamauchi\u003cyamauchi@fabo.io\u003e",
      "sentence": "A library for FaBo LCD I2C Brick",
      "paragraph": "16x2 LCD I2C module.",
      "website": "https://github.com/FaBoPlatform/FaBoLCD-PCF8574-Library",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/FaBoPlatform/FaBo_212_LCD_PCF8574-1.0.0.zip",
      "archiveFileName": "FaBo_212_LCD_PCF8574-1.0.0.zip",
      "size": 885127,
      "checksum": "SHA-256:9abeaf2553da078dbaf22fce8c8fb5070ef4694d49afe44ca9667fe37c18d999"
    },
    {
      "name": "CRC Simula Library",
      "version": "0.1.0",
      "author": "Chicago Robotics Corporation",
      "maintainer": "CRC Support \u003csupport@chicagorobotics.net\u003e",
      "sentence": "Support Library for Chicago Robotics Simula Boards.",
      "paragraph": "Provides modules for working with the board and its peripherals/sensors.",
      "website": "http://www.chicagorobotics.net/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ChicagoRobotics/CRC_Simula_Library-0.1.0.zip",
      "archiveFileName": "CRC_Simula_Library-0.1.0.zip",
      "size": 35617,
      "checksum": "SHA-256:92f6ad31a9db8f04a1493f472805ef139fd8dd7acb0c67aa21eba19a13297256"
    },
    {
      "name": "CRC Simula Library",
      "version": "0.1.2",
      "author": "Chicago Robotics Corporation",
      "maintainer": "CRC Support \u003csupport@chicagorobotics.net\u003e",
      "sentence": "Support Library for Chicago Robotics Simula Boards.",
      "paragraph": "Provides modules for working with the board and its peripherals/sensors.",
      "website": "https://github.com/ChicagoRobotics/CRC_Simula_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ChicagoRobotics/CRC_Simula_Library-0.1.2.zip",
      "archiveFileName": "CRC_Simula_Library-0.1.2.zip",
      "size": 39605,
      "checksum": "SHA-256:07b47cb332b74b17befef999d275fc67bcd379955db6effd57d4d51728d59445"
    },
    {
      "name": "CRC Simula Library",
      "version": "0.2.1",
      "author": "Chicago Robotics Corporation",
      "maintainer": "CRC Support \u003csupport@chicagorobotics.net\u003e",
      "sentence": "Support Library for Chicago Robotics Simula Boards.",
      "paragraph": "Provides modules for working with the board and its peripherals/sensors.  Now includes behavior tree.",
      "website": "https://github.com/ChicagoRobotics/CRC_Simula_Library",
      "category": "Device Control",
      "architectures": [
        "AVR",
        "Simula"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ChicagoRobotics/CRC_Simula_Library-0.2.1.zip",
      "archiveFileName": "CRC_Simula_Library-0.2.1.zip",
      "size": 26813,
      "checksum": "SHA-256:ba76e2190f4d887de0046864b5e84eaea0d3019db1ff3c312f1c06309faa505e"
    },
    {
      "name": "CRC Simula Library",
      "version": "0.2.3",
      "author": "Chicago Robotics Corporation",
      "maintainer": "CRC Support \u003csupport@chicagorobotics.net\u003e",
      "sentence": "Support Library for Chicago Robotics Simula Boards.",
      "paragraph": "Provides modules for working with the board and its peripherals/sensors.  Now includes behavior tree.",
      "website": "https://github.com/ChicagoRobotics/CRC_Simula_Library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ChicagoRobotics/CRC_Simula_Library-0.2.3.zip",
      "archiveFileName": "CRC_Simula_Library-0.2.3.zip",
      "size": 26807,
      "checksum": "SHA-256:c739585f8ad80731adaa5aaefbae7d59f8c2e7cdca49bb6780946dc79b05ec10"
    },
    {
      "name": "Arduino-Websocket-Fast",
      "version": "1.0.0",
      "author": "Davide Monari (KULeuven)",
      "maintainer": "Davide Monari \u003cdvidemnr@gmail.com\u003e",
      "sentence": "Websocket client library (fast data sending).",
      "paragraph": "The library can wrap around a generic Arduino Client() class or similar interface (e.g. EthernetClient(), WiFiClient(), WiflyClient(), ...) and is optimized in speed for data sending.",
      "website": "https://github.com/u0078867/Arduino-Websocket-Fast",
      "category": "Communication",
      "architectures": [
        "avr",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/u0078867/Arduino_Websocket_Fast-1.0.0.zip",
      "archiveFileName": "Arduino_Websocket_Fast-1.0.0.zip",
      "size": 12947,
      "checksum": "SHA-256:754a2a55c1182e08628290d2a290ed2f7d702854780373f365556238ce3076c8"
    },
    {
      "name": "DueFlashStorage",
      "version": "1.0.0",
      "author": "Sebastian Nilsson",
      "maintainer": "Sebastian Nilsson \u003csebnil@gmail.com\u003e",
      "sentence": "DueFlashStorage saves non-volatile data for Arduino Due.",
      "paragraph": "DueFlashStorage saves non-volatile data for Arduino Due. The library is made to be similar to the EEPROM library. Uses flash block 1 per default. Note: The flash storage is reset every time you upload a new sketch to your Arduino.",
      "website": "https://github.com/sebnil/DueFlashStorage",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sebnil/DueFlashStorage-1.0.0.zip",
      "archiveFileName": "DueFlashStorage-1.0.0.zip",
      "size": 20097,
      "checksum": "SHA-256:52752e50b341002f663d9f5a9ecd1a542c932aabc398366ac7f5fbd3269fa677"
    },
    {
      "name": "MINDS-i-Drone",
      "version": "0.5.0",
      "author": "MINDS-i corp.",
      "maintainer": "MINDS-i \u003ccode@mymindsi.com\u003e",
      "sentence": "Code to assist with running MINDS-i Drones",
      "paragraph": "This library contains code for running MINDS-i Drone hardware",
      "website": "http://mindsieducation.com/programming-resources",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MINDS-i/MINDS_i_Drone-0.5.0.zip",
      "archiveFileName": "MINDS_i_Drone-0.5.0.zip",
      "size": 96364,
      "checksum": "SHA-256:3f90b591200e0e99c3fff03465d7d5dfb4e09f038f37d55d49547666552cc8bc"
    },
    {
      "name": "MINDS-i-Drone",
      "version": "0.6.0",
      "author": "MINDS-i corp.",
      "maintainer": "MINDS-i \u003ccode@mymindsi.com\u003e",
      "sentence": "Code to assist with running MINDS-i Drones",
      "paragraph": "This library contains code for running MINDS-i Drone hardware",
      "website": "http://mindsieducation.com/programming-resources",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MINDS-i/MINDS_i_Drone-0.6.0.zip",
      "archiveFileName": "MINDS_i_Drone-0.6.0.zip",
      "size": 104537,
      "checksum": "SHA-256:3a66202c255f0d1f68140ea71333d4ff79621a7caf9b288b3552abfe43015eb3"
    },
    {
      "name": "MINDS-i-Drone",
      "version": "1.0.0",
      "author": "MINDS-i corp.",
      "maintainer": "MINDS-i \u003ccode@mymindsi.com\u003e",
      "sentence": "Code to assist with running MINDS-i Drones",
      "paragraph": "This library contains code for running MINDS-i Drone hardware",
      "website": "http://mindsieducation.com/programming-resources",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MINDS-i/MINDS_i_Drone-1.0.0.zip",
      "archiveFileName": "MINDS_i_Drone-1.0.0.zip",
      "size": 109907,
      "checksum": "SHA-256:04b0925c58d7b1d3a3264826769180e6912a0098d191f2551986b287b14e1c5c"
    },
    {
      "name": "MINDS-i-Drone",
      "version": "1.0.1",
      "author": "MINDS-i corp.",
      "maintainer": "MINDS-i \u003ccode@mymindsi.com\u003e",
      "sentence": "Code to assist with running MINDS-i Drones",
      "paragraph": "This library contains code for running MINDS-i Drone hardware",
      "website": "http://mindsieducation.com/programming-resources",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MINDS-i/MINDS_i_Drone-1.0.1.zip",
      "archiveFileName": "MINDS_i_Drone-1.0.1.zip",
      "size": 109972,
      "checksum": "SHA-256:bd3d3bda053dd537143cf4477fda219d4a8bad017c67a26ff6b8f63918909fdb"
    },
    {
      "name": "DeepSleepScheduler",
      "version": "1.0.0",
      "author": "Pete \u003carduino@pete.ch\u003e",
      "maintainer": "Pete \u003carduino@pete.ch\u003e",
      "sentence": "Lightweight, cooperative task scheduler with configurable sleep and task supervision.",
      "paragraph": "Provides an easy to use API to schedule tasks, supervise them with the hardware watchdog and put the CPU to SLEEP_MODE_PWR_DOWN or SLEEP_MODE_IDLE while no task is running. Tasks can be schedule from interrupts.",
      "website": "https://github.com/PRosenb/DeepSleepScheduler",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PRosenb/DeepSleepScheduler-1.0.0.zip",
      "archiveFileName": "DeepSleepScheduler-1.0.0.zip",
      "size": 17354,
      "checksum": "SHA-256:db9ba6fb174ad746b04c311302336b3b52c428bef7140df6911b1ca9baa358f8"
    },
    {
      "name": "DeepSleepScheduler",
      "version": "2.0.0",
      "author": "Pete \u003carduino@pete.ch\u003e",
      "maintainer": "Pete \u003carduino@pete.ch\u003e",
      "sentence": "Lightweight, cooperative task scheduler with configurable sleep and task supervision.",
      "paragraph": "Provides an easy to use API to schedule tasks, supervise them with the hardware watchdog and put the CPU to SLEEP_MODE_PWR_DOWN or SLEEP_MODE_IDLE while no task is running. Tasks can be schedule from interrupts.",
      "website": "https://github.com/PRosenb/DeepSleepScheduler",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PRosenb/DeepSleepScheduler-2.0.0.zip",
      "archiveFileName": "DeepSleepScheduler-2.0.0.zip",
      "size": 22803,
      "checksum": "SHA-256:2fa14814730c08d2e92aba7b120e232b7fa4ab12766bd05e401ecd931a194078"
    },
    {
      "name": "DeepSleepScheduler",
      "version": "2.1.0",
      "author": "Pete \u003carduino@pete.ch\u003e",
      "maintainer": "Pete \u003carduino@pete.ch\u003e",
      "sentence": "Lightweight, cooperative task scheduler with configurable sleep and task supervision.",
      "paragraph": "Provides an easy to use API to schedule tasks, supervise them with the hardware watchdog and put the CPU to SLEEP_MODE_PWR_DOWN or SLEEP_MODE_IDLE while no task is running. Tasks can be schedule from interrupts.",
      "website": "https://github.com/PRosenb/DeepSleepScheduler",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PRosenb/DeepSleepScheduler-2.1.0.zip",
      "archiveFileName": "DeepSleepScheduler-2.1.0.zip",
      "size": 25011,
      "checksum": "SHA-256:194fc8ac53358f3ea29dcb8e789f9cf1b2313e67dc6bd450187d3bfa783ca73e"
    },
    {
      "name": "DeepSleepScheduler",
      "version": "2.1.1",
      "author": "Pete \u003carduino@pete.ch\u003e",
      "maintainer": "Pete \u003carduino@pete.ch\u003e",
      "sentence": "Lightweight, cooperative task scheduler with configurable sleep and task supervision.",
      "paragraph": "Provides an easy to use API to schedule tasks, supervise them with the hardware watchdog and put the CPU to SLEEP_MODE_PWR_DOWN or SLEEP_MODE_IDLE while no task is running. Tasks can be schedule from interrupts.",
      "website": "https://github.com/PRosenb/DeepSleepScheduler",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PRosenb/DeepSleepScheduler-2.1.1.zip",
      "archiveFileName": "DeepSleepScheduler-2.1.1.zip",
      "size": 25011,
      "checksum": "SHA-256:0b47ac90d6b03928958a4a675b9146581475beb048b81b00657c3645d9cfd2a7"
    },
    {
      "name": "DeepSleepScheduler",
      "version": "2.1.2",
      "author": "Pete \u003carduino@pete.ch\u003e",
      "maintainer": "Pete \u003carduino@pete.ch\u003e",
      "sentence": "Lightweight, cooperative task scheduler with configurable sleep and task supervision.",
      "paragraph": "Provides an easy to use API to schedule tasks, supervise them with the hardware watchdog and put the CPU to SLEEP_MODE_PWR_DOWN or SLEEP_MODE_IDLE while no task is running. Tasks can be schedule from interrupts.",
      "website": "https://github.com/PRosenb/DeepSleepScheduler",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PRosenb/DeepSleepScheduler-2.1.2.zip",
      "archiveFileName": "DeepSleepScheduler-2.1.2.zip",
      "size": 25012,
      "checksum": "SHA-256:25e9ee01077d41cc7eda9e97201f4394bd1d173314fc5a6f80288e5ed852642a"
    },
    {
      "name": "SmoothThermistor",
      "version": "1.0.0",
      "author": "Gianni Van Hoecke \u003cgianni.vh@gmail.com\u003e",
      "maintainer": "Gianni Van Hoecke \u003cgianni.vh@gmail.com\u003e",
      "sentence": "Flexible thermistor reading library.",
      "paragraph": "Calculates the temperature based on the Steinhart–Hart equation, smoothed by taking a number of samples.",
      "website": "https://github.com/giannivh/SmoothThermistor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/giannivh/SmoothThermistor-1.0.0.zip",
      "archiveFileName": "SmoothThermistor-1.0.0.zip",
      "size": 7380,
      "checksum": "SHA-256:4405bf691d586bd1858a4475d170984b2e40a6bd5ef3564ab7e81eaeb2da897b"
    },
    {
      "name": "SmoothThermistor",
      "version": "1.1.1",
      "author": "Gianni Van Hoecke \u003cgianni.vh@gmail.com\u003e",
      "maintainer": "Gianni Van Hoecke \u003cgianni.vh@gmail.com\u003e",
      "sentence": "Flexible thermistor reading library.",
      "paragraph": "Calculates the temperature based on the Steinhart–Hart equation, smoothed by taking a number of samples.",
      "website": "https://github.com/giannivh/SmoothThermistor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/giannivh/SmoothThermistor-1.1.1.zip",
      "archiveFileName": "SmoothThermistor-1.1.1.zip",
      "size": 7328,
      "checksum": "SHA-256:44b8edd778112f65c99b2051595b5974825452b69a8ee809da15fa38675ff9a2"
    },
    {
      "name": "SmoothThermistor",
      "version": "1.2.1",
      "author": "Gianni Van Hoecke \u003cgianni.vh@gmail.com\u003e",
      "maintainer": "Gianni Van Hoecke \u003cgianni.vh@gmail.com\u003e",
      "sentence": "Flexible thermistor reading library.",
      "paragraph": "Calculates the temperature based on the Steinhart–Hart equation, smoothed by taking a number of samples.",
      "website": "https://github.com/giannivh/SmoothThermistor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/giannivh/SmoothThermistor-1.2.1.zip",
      "archiveFileName": "SmoothThermistor-1.2.1.zip",
      "size": 7310,
      "checksum": "SHA-256:3cff4409435fc2ffc1fb706da5d38ed93bd4270367a0244d630915f4c0d43df6"
    },
    {
      "name": "CmdParser",
      "version": "1.1.0",
      "author": "Pascal Vizeli \u003cpvizeli@syshack.ch\u003e",
      "maintainer": "Pascal Vizeli \u003cpvizeli@syshack.ch\u003e",
      "sentence": "A simple and most powerfull cmd parser with small memory footprint",
      "paragraph": "Supports PROGMEM and Arduino Serial interface.",
      "website": "https://github.com/pvizeli/CmdParser",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pvizeli/CmdParser-1.1.0.zip",
      "archiveFileName": "CmdParser-1.1.0.zip",
      "size": 14556,
      "checksum": "SHA-256:6c03886232c0e8166b3d3f01f18be9f8ce75b89444ebbd1b072756548ba991c9"
    },
    {
      "name": "CmdParser",
      "version": "1.2.0",
      "author": "Pascal Vizeli \u003cpvizeli@syshack.ch\u003e",
      "maintainer": "Pascal Vizeli \u003cpvizeli@syshack.ch\u003e",
      "sentence": "A simple and most powerfull cmd parser with small memory footprint",
      "paragraph": "Supports PROGMEM and Arduino Serial interface.",
      "website": "https://github.com/pvizeli/CmdParser",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pvizeli/CmdParser-1.2.0.zip",
      "archiveFileName": "CmdParser-1.2.0.zip",
      "size": 14585,
      "checksum": "SHA-256:59c9c36c40051ef5d0281556c6baf88f41e84b256b43b0d9da0a5cdbf0b69f03"
    },
    {
      "name": "CmdParser",
      "version": "1.0.0",
      "author": "Pascal Vizeli \u003cpvizeli@syshack.ch\u003e",
      "maintainer": "Pascal Vizeli \u003cpvizeli@syshack.ch\u003e",
      "sentence": "A simple and most powerfull cmd parser with small memory footprint",
      "paragraph": "Supports PROGMEM and Arduino Serial interface.",
      "website": "https://github.com/pvizeli/CmdParser",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pvizeli/CmdParser-1.0.0.zip",
      "archiveFileName": "CmdParser-1.0.0.zip",
      "size": 14428,
      "checksum": "SHA-256:4713c2732090ad29668195602489d50d56bc7ff498e3615c0dd5436e66aaa2dd"
    },
    {
      "name": "Volume",
      "version": "1.0.0",
      "author": "Connor Nishijima \u003cconnornishijima@gmail.com\u003e",
      "maintainer": "Connor Nishijima \u003cconnornishijima@gmail.com\u003e",
      "sentence": "Gives tone() functionality with 8-bit volume control with no extra parts!",
      "paragraph": "Using ultrasonic PWM frequencies, you can now generate square wave tones at any frequency and 256 volume levels with no extra parts! It's all done in a way that tricks your ears into hearing quiter tones than it should!",
      "website": "https://github.com/connornishijima/arduino-volume",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/connornishijima/Volume-1.0.0.zip",
      "archiveFileName": "Volume-1.0.0.zip",
      "size": 22931,
      "checksum": "SHA-256:901b33a3ecf2863e2ca86170be6292fe2a51f6a8ee98e638a54c4fe75cd12ae0"
    },
    {
      "name": "Volume",
      "version": "1.0.2",
      "author": "Connor Nishijima",
      "maintainer": "Connor Nishijima \u003cconnornishijima@gmail.com\u003e",
      "sentence": "Gives tone functionality with 8 bit volume control with no extra parts",
      "paragraph": "Using ultrasonic PWM frequencies, you can now generate square wave tones at any frequency and 256 volume levels with no extra parts!",
      "website": "https://github.com/connornishijima/arduino-volume",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/connornishijima/Volume-1.0.2.zip",
      "archiveFileName": "Volume-1.0.2.zip",
      "size": 23072,
      "checksum": "SHA-256:0642cd4179a84febe411563a1fc6faae76d167e50580a10401534c2216e0c249"
    },
    {
      "name": "Volume",
      "version": "1.1.0",
      "author": "Connor Nishijima",
      "maintainer": "Connor Nishijima \u003cconnornishijima@gmail.com\u003e",
      "sentence": "Gives tone functionality with 8 bit volume control with no extra parts",
      "paragraph": "Using ultrasonic PWM frequencies, you can now generate square wave tones at any frequency and 256 volume levels with no extra parts!",
      "website": "https://github.com/connornishijima/arduino-volume",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/connornishijima/Volume-1.1.0.zip",
      "archiveFileName": "Volume-1.1.0.zip",
      "size": 23970,
      "checksum": "SHA-256:112fb247eeee9f62c9ccb80d3a1539da44afa57f019343ce9c9c574006a5fc64"
    },
    {
      "name": "Volume",
      "version": "1.1.1",
      "author": "Connor Nishijima",
      "maintainer": "Connor Nishijima \u003cconnornishijima@gmail.com\u003e",
      "sentence": "Gives tone functionality with 8 bit volume control with no extra parts",
      "paragraph": "Using ultrasonic PWM frequencies, you can now generate square wave tones at any frequency and 256 volume levels with no extra parts!",
      "website": "https://github.com/connornishijima/arduino-volume",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/connornishijima/Volume-1.1.1.zip",
      "archiveFileName": "Volume-1.1.1.zip",
      "size": 24717,
      "checksum": "SHA-256:fc03e476ea7f69350db0a4c25e1ee0e378fe5e5ed501a6333be6ec3c7429e461"
    },
    {
      "name": "Volume",
      "version": "1.1.2",
      "author": "Connor Nishijima",
      "maintainer": "Connor Nishijima \u003cconnornishijima@gmail.com\u003e",
      "sentence": "Gives tone functionality with 8 bit volume control with no extra parts",
      "paragraph": "Using ultrasonic PWM frequencies, you can now generate square wave tones at any frequency and 256 volume levels with no extra parts!",
      "website": "https://github.com/connornishijima/arduino-volume",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/connornishijima/Volume-1.1.2.zip",
      "archiveFileName": "Volume-1.1.2.zip",
      "size": 24813,
      "checksum": "SHA-256:5eda4d5af9b45fc8a0b5a36e5e439a3890359f294d36401aa69f160365ec2612"
    },
    {
      "name": "FaBo 307 BLE Nordic",
      "version": "1.0.1",
      "author": "FaBo\u003cinfo@fabo.io\u003e",
      "maintainer": "Akira Sasaki\u003cakira@fabo.io\u003e",
      "sentence": "A library for nRF5x.",
      "paragraph": "nRF5x is Nordic's ble module.",
      "website": "https://github.com/FaBoPlatform/FaBoBLE-Nordic-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/FaBoPlatform/FaBo_307_BLE_Nordic-1.0.1.zip",
      "archiveFileName": "FaBo_307_BLE_Nordic-1.0.1.zip",
      "size": 15315,
      "checksum": "SHA-256:dcf62cef483265f50a579ef52167835da77762a5f16e7ba2e70cba05d96cf3cc"
    },
    {
      "name": "ScreenUi",
      "version": "1.1.0",
      "author": "Jason von Nieda \u003cjason@vonnieda.org\u003e",
      "maintainer": "Jason von Nieda \u003cjason@vonnieda.org\u003e",
      "sentence": "ScreenUi is a simple user interface library for character based LCDs like those commonly used with Arduinos.",
      "paragraph": "It provides common user interface components such as labels, checkboxes, text fields, scrollable regions, spinners and buttons.",
      "website": "https://github.com/vonnieda/ScreenUi",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/vonnieda/ScreenUi-1.1.0.zip",
      "archiveFileName": "ScreenUi-1.1.0.zip",
      "size": 13111,
      "checksum": "SHA-256:e249570b6ec54333fd123379bf0bb26edb76fbc33f358a821b6f3bc43f3d7095"
    },
    {
      "name": "TLC5615",
      "version": "1.2.0",
      "author": "Max Chan \u003cmax@maxchan.info\u003e",
      "maintainer": "Max Chan \u003cmax@maxchan.info\u003e",
      "sentence": "Driver for Texas Instruments TLC5615 10-bit DAC",
      "paragraph": "The TLC5615 is *the cheapest* percision DAC available on TI's website, available in a breadboard-friendly DIP-8 package, and it is fairly simple to use (and being a resistor string DAC it can double as a digipot with one terminal permanently grounded.) The current version of TLC5615 library requires the latest version of SPI library to work.",
      "website": "https://en.maxchan.info/arduino#tlc5615",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ArduinoMax/TLC5615-1.2.0.zip",
      "archiveFileName": "TLC5615-1.2.0.zip",
      "size": 2264,
      "checksum": "SHA-256:d744a899248b72534345e4433e84f7d12293c88ef74f3d9ac1c3cd76602261f4"
    },
    {
      "name": "TLC5615",
      "version": "1.2.1",
      "author": "Max Chan \u003cmax@maxchan.info\u003e",
      "maintainer": "Max Chan \u003cmax@maxchan.info\u003e",
      "sentence": "Driver for Texas Instruments TLC5615 10-bit DAC",
      "paragraph": "The TLC5615 is *the cheapest* percision DAC available on TI's website, available in a breadboard-friendly DIP-8 package, and it is fairly simple to use (and being a resistor string DAC it can double as a digipot with one terminal permanently grounded.) The current version of TLC5615 library requires the latest version of SPI library to work.",
      "website": "https://en.maxchan.info/arduino#tlc5615",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ArduinoMax/TLC5615-1.2.1.zip",
      "archiveFileName": "TLC5615-1.2.1.zip",
      "size": 2271,
      "checksum": "SHA-256:fe97a2ef41fc43af8f4cc10d90ac425acb723aaefc6f4973f6c0ea2588a8b10a"
    },
    {
      "name": "TLC5615",
      "version": "1.2.2",
      "author": "Max Chan \u003cmax@maxchan.info\u003e",
      "maintainer": "Max Chan \u003cmax@maxchan.info\u003e",
      "sentence": "Driver for Texas Instruments TLC5615 10-bit DAC",
      "paragraph": "The TLC5615 is *the cheapest* percision DAC available on TI's website, available in a breadboard-friendly DIP-8 package, and it is fairly simple to use (and being a resistor string DAC it can double as a digipot with one terminal permanently grounded.) The current version of TLC5615 library requires the latest version of SPI library to work.",
      "website": "https://en.maxchan.info/arduino#tlc5615",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ArduinoMax/TLC5615-1.2.2.zip",
      "archiveFileName": "TLC5615-1.2.2.zip",
      "size": 2274,
      "checksum": "SHA-256:1383462e0e8027c941488a426b2223854e7c12bd06fd5e86cf7d75e8b1be52d3"
    },
    {
      "name": "Synapse",
      "version": "1.0.0",
      "author": "Vincenzo Pacella \u003cshaduz@shaduzlabs.com\u003e",
      "maintainer": "Vincenzo Pacella \u003cshaduz@shaduzlabs.com\u003e",
      "sentence": "A library designed for the Synapse CV/Gate I/O shield",
      "paragraph": "2 gate in, 2 gate out, 2 CV in (0-5V) and 2 CV out (-5 to 5V or 0 to 10V). This library must be used together with the Synapse shield",
      "website": "https://github.com/shaduzlabs/synapse",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/shaduzlabs/Synapse-1.0.0.zip",
      "archiveFileName": "Synapse-1.0.0.zip",
      "size": 424477,
      "checksum": "SHA-256:f51ff59d9b888cd1deea935fe2257c70bdedc34b6d4d9c5cdc7b8e8f36a56971"
    },
    {
      "name": "Synapse",
      "version": "1.0.1",
      "author": "Vincenzo Pacella \u003cshaduz@shaduzlabs.com\u003e",
      "maintainer": "Vincenzo Pacella \u003cshaduz@shaduzlabs.com\u003e",
      "sentence": "A library designed for the Synapse CV/Gate I/O shield",
      "paragraph": "2 gate in, 2 gate out, 2 CV in (0-5V) and 2 CV out (-5 to 5V or 0 to 10V). This library must be used together with the Synapse shield",
      "website": "https://github.com/shaduzlabs/synapse",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/shaduzlabs/Synapse-1.0.1.zip",
      "archiveFileName": "Synapse-1.0.1.zip",
      "size": 679140,
      "checksum": "SHA-256:14632c011766e9b1ca9acac5187c87c5e66bdc715246ddb6ec608fe709e2e078"
    },
    {
      "name": "PWMServo",
      "version": "2.1.0",
      "author": "Jim Studt, Mikal Hart, David A. Mellis, Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Control RC Servo motors.",
      "paragraph": "PWMServo uses PWM signals for immunity to interrupts, which can corrupt the signals generated by the standard Servo library.  SoftwareSerial, Adafruit_NeoPixel and DmxSimple are the most common cause of these problems.  PWMServo allows use of servo motors when these or other interrupt blocking libraries are required.",
      "website": "https://github.com/PaulStoffregen/PWMServo",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PaulStoffregen/PWMServo-2.1.0.zip",
      "archiveFileName": "PWMServo-2.1.0.zip",
      "size": 6267,
      "checksum": "SHA-256:3e9efbf9d9c90dab049899b3b5a952e6f8f72be0c9b6d6bfa6dfd4eeb70601bd"
    },
    {
      "name": "xxtea-iot-crypt",
      "version": "1.0.0",
      "author": "Abhijit Bose",
      "maintainer": "boseji \u003csalearj@hotmail.com\u003e",
      "sentence": "XXTEA Encryption Library for use in IoT gadgets",
      "paragraph": "Helps to encrypt and decrypt data using shor and simple XXTEA algorithm",
      "website": "https://github.com/boseji/xxtea-iot-crypt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/boseji/xxtea_iot_crypt-1.0.0.zip",
      "archiveFileName": "xxtea_iot_crypt-1.0.0.zip",
      "size": 8449,
      "checksum": "SHA-256:30d42ac8e2c93e13a31db8b1b664263d1196c5cf8ce1a13a436e34cacfb3fa2b"
    },
    {
      "name": "xxtea-iot-crypt",
      "version": "1.1.0",
      "author": "Abhijit Bose",
      "maintainer": "boseji \u003csalearj@hotmail.com\u003e",
      "sentence": "XXTEA Encryption Library for use in IoT gadgets",
      "paragraph": "Helps to encrypt and decrypt data using shor and simple XXTEA algorithm",
      "website": "https://github.com/boseji/xxtea-iot-crypt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/boseji/xxtea_iot_crypt-1.1.0.zip",
      "archiveFileName": "xxtea_iot_crypt-1.1.0.zip",
      "size": 9524,
      "checksum": "SHA-256:09bfe70700da268bde695caac277e6537ba2bb75bfbca19e53978df8396a9a2e"
    },
    {
      "name": "xxtea-iot-crypt",
      "version": "1.2.0",
      "author": "Abhijit Bose",
      "maintainer": "boseji \u003csalearj@hotmail.com\u003e",
      "sentence": "XXTEA Encryption Library for use in IoT gadgets",
      "paragraph": "Helps to encrypt and decrypt data using shor and simple XXTEA algorithm",
      "website": "https://github.com/boseji/xxtea-iot-crypt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/boseji/xxtea_iot_crypt-1.2.0.zip",
      "archiveFileName": "xxtea_iot_crypt-1.2.0.zip",
      "size": 9620,
      "checksum": "SHA-256:452c2423fa8ad8455f3a67604dd6d382481c9a9013bcc24716f2833f49dd415f"
    },
    {
      "name": "rBase64",
      "version": "1.0.0",
      "author": "Abhijit Bose",
      "maintainer": "boseji \u003csalearj@hotmail.com\u003e",
      "sentence": "Real BASE64 Function Library",
      "paragraph": "Helps to Encode and Decode in BASE64 form using simple String operations",
      "website": "http://github.com/boseji/rBASE64",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/boseji/rBase64-1.0.0.zip",
      "archiveFileName": "rBase64-1.0.0.zip",
      "size": 5688,
      "checksum": "SHA-256:d06c386d6b94d61d89b910f8861ebcf563d5307b578ee6adf45cc0ebdec4eebc"
    },
    {
      "name": "ANT-Arduino library",
      "version": "0.1.0",
      "author": "Curtis Malainey \u003ccurtis@malainey.com\u003e",
      "maintainer": "Curtis Malainey \u003ccurtis@malainey.com\u003e",
      "sentence": "Library for talking to various ANT radios from Dynastream Innovations.",
      "paragraph": "Supports NRF51 and NRF52 ANT modules running the network processor firmware that are connected via Serial. Can be configured to work in the ANT+ ecosystem. Currently only supports Broadcast Rx communication. Requires sleep pin to be manually grounded currently.",
      "website": "https://github.com/cujomalainey/ant-arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/cujomalainey/ANT_Arduino_library-0.1.0.zip",
      "archiveFileName": "ANT_Arduino_library-0.1.0.zip",
      "size": 35351,
      "checksum": "SHA-256:269fa359b6f87843cc70498b4519a4c4fff2805f3b99f351958cb5d8eae795a1"
    },
    {
      "name": "ANT-Arduino library",
      "version": "0.1.1",
      "author": "Curtis Malainey \u003ccurtis@malainey.com\u003e",
      "maintainer": "Curtis Malainey \u003ccurtis@malainey.com\u003e",
      "sentence": "Library for talking to various ANT radios from Dynastream Innovations.",
      "paragraph": "Supports NRF51 and NRF52 ANT modules running the network processor firmware that are connected via Serial. Can be configured to work in the ANT+ ecosystem. Currently only supports Broadcast Rx communication. Requires sleep pin to be manually grounded currently.",
      "website": "https://github.com/cujomalainey/ant-arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/cujomalainey/ANT_Arduino_library-0.1.1.zip",
      "archiveFileName": "ANT_Arduino_library-0.1.1.zip",
      "size": 35334,
      "checksum": "SHA-256:d94d0cd31ca1d4b9b1cdc16584a0abace376d2d36ed220197fc268232af6eed5"
    },
    {
      "name": "ANT-Arduino library",
      "version": "0.2.0",
      "author": "Curtis Malainey \u003ccurtis@malainey.com\u003e",
      "maintainer": "Curtis Malainey \u003ccurtis@malainey.com\u003e",
      "sentence": "Library for talking to various ANT radios from Dynastream Innovations.",
      "paragraph": "Supports NRF51 and NRF52 ANT modules running the network processor firmware that are connected via Serial. Can be configured to work in the ANT+ ecosystem. Currently only supports Broadcast Rx communication. Requires sleep pin to be manually grounded currently.",
      "website": "https://github.com/cujomalainey/ant-arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/cujomalainey/ANT_Arduino_library-0.2.0.zip",
      "archiveFileName": "ANT_Arduino_library-0.2.0.zip",
      "size": 40468,
      "checksum": "SHA-256:7d338b81db433ad1a953375d18987e887b1a480def6ca3ef48871dc2ef1ac478"
    },
    {
      "name": "somo-ii-lib",
      "version": "0.1.0",
      "author": "Patrick Fenner \u003ccontact@defproc.co.uk\u003e",
      "maintainer": "Patrick Fenner \u003ccontact@defproc.co.uk\u003e",
      "sentence": "A controller library for the SOMO-II MP3 decoder",
      "paragraph": "Control your SOMO-II MP3 player module",
      "website": "http://defproc.co.uk/project/somo-ii-lib/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DefProc/somo_ii_lib-0.1.0.zip",
      "archiveFileName": "somo_ii_lib-0.1.0.zip",
      "size": 4909,
      "checksum": "SHA-256:beb08b2a5b2ad09efd68764e957c51ac3f3d9c930a33f7c18abd127fbe3c4a23"
    },
    {
      "name": "Luni",
      "version": "0.1.0",
      "author": "Doug Johnson",
      "maintainer": "https://github.com/finson/Luni",
      "sentence": "Implements a framework for device drivers for use on the Arduino.",
      "paragraph": "The traditional role of device drivers as an abstraction layer is a very useful one and can be applied in the Arduino environment to bundle device access into a logical, standard, easy to access API.  Each device driver includes methods for open, status, control, read, write, and close of logical unit instances that represent target device instances. The target device can be physical, virtual, or a combination of the two.",
      "website": "https://github.com/finson/Luni",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/finson-release/Luni-0.1.0.zip",
      "archiveFileName": "Luni-0.1.0.zip",
      "size": 302984,
      "checksum": "SHA-256:2dcee1d52510ecbe56801890a611d55e18cc76b1b1e7601fd4f60b301148d798"
    },
    {
      "name": "Luni",
      "version": "0.8.0",
      "author": "Doug Johnson",
      "maintainer": "https://github.com/finson/Luni",
      "sentence": "Implements a framework for device drivers for use on the Arduino.",
      "paragraph": "The traditional role of device drivers as an abstraction layer is a very useful one and can be applied in the Arduino environment to bundle device access into a logical, standard, easy to access API.  Each device driver includes methods for open, read, write, and close of logical unit instances that represent target device instances. The target device can be physical, virtual, or a combination of the two.",
      "website": "https://github.com/finson/Luni",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/finson-release/Luni-0.8.0.zip",
      "archiveFileName": "Luni-0.8.0.zip",
      "size": 67935,
      "checksum": "SHA-256:5c7a9773c19ed77cbe6d377acfe7f0f62864f750767482031340433963c818bd"
    },
    {
      "name": "Luni",
      "version": "0.9.0",
      "author": "Doug Johnson \u003cstrix@whidbey.com\u003e",
      "maintainer": "Doug Johnson \u003cstrix@whidbey.com\u003e",
      "sentence": "Implements a framework for device drivers for use on the Arduino.",
      "paragraph": "The traditional role of device drivers as an abstraction layer is a very useful one and can be applied in the Arduino environment to bundle device access into a logical, standard, easy to access API.  Each device driver includes methods for open, read, write, and close of logical unit instances that represent target device instances. The target device can be physical, virtual, or a combination of the two.",
      "website": "https://github.com/finson-release/Luni",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/finson-release/Luni-0.9.0.zip",
      "archiveFileName": "Luni-0.9.0.zip",
      "size": 83733,
      "checksum": "SHA-256:f91fea8e5eda89f306c828066579c37b3b86a9d15cf3ee116a0f3c8f30e126a3"
    },
    {
      "name": "Luni",
      "version": "0.9.1",
      "author": "Doug Johnson \u003cstrix@whidbey.com\u003e",
      "maintainer": "Doug Johnson \u003cstrix@whidbey.com\u003e",
      "sentence": "Implements a framework for device drivers for use on the Arduino.",
      "paragraph": "The traditional role of device drivers as an abstraction layer is a very useful one and can be applied in the Arduino environment to bundle device access into a logical, standard, easy to access API.  Each device driver includes methods for open, read, write, and close of logical unit instances that represent target device instances. The target device can be physical, virtual, or a combination of the two.",
      "website": "https://github.com/finson-release/Luni",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/finson-release/Luni-0.9.1.zip",
      "archiveFileName": "Luni-0.9.1.zip",
      "size": 83734,
      "checksum": "SHA-256:ffa140e9e0b08d3e797b8a8de4df997dc00b9ed46b8b19b15c46be4451c9f76b"
    },
    {
      "name": "Rtttl",
      "version": "1.0.0",
      "author": "James BM \u003cspicajames@yahoo.com\u003e",
      "maintainer": "James BM \u003cspicajames@yahoo.com\u003e",
      "sentence": "A library that plays Rtttl melodies",
      "paragraph": "Uses PROGMEM and no timer",
      "website": "https://github.com/spicajames/Rtttl",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/spicajames/Rtttl-1.0.0.zip",
      "archiveFileName": "Rtttl-1.0.0.zip",
      "size": 5584,
      "checksum": "SHA-256:3ba24abed03175fa888a9cf6e4c13f6553bd14fc6af88587c0c8461129fec7b7"
    },
    {
      "name": "Thingplus",
      "version": "1.0.2",
      "author": "Younghyun Jo",
      "maintainer": "Daliworks \u003cdev@daliworks.net\u003e",
      "sentence": "Helps connecting your Arduino board to Thing+ cloud easly and fast",
      "paragraph": "Helps connecting your Arduino board to Thing+ cloud easly and fast",
      "website": "https://github.com/daliworks/arduino_library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/daliworks/Thingplus-1.0.2.zip",
      "archiveFileName": "Thingplus-1.0.2.zip",
      "size": 11030,
      "checksum": "SHA-256:cf0d3cef5280561e36b597df46f9c1a7163bf3bed7ea09145737029f727f0c86"
    },
    {
      "name": "Thingplus",
      "version": "1.0.0",
      "author": "Younghyun Jo",
      "maintainer": "Daliworks \u003cdev@daliworks.net\u003e",
      "sentence": "Helps connecting your Arduino board to Thing+ cloud easly and fast",
      "paragraph": "Helps connecting your Arduino board to Thing+ cloud easly and fast",
      "website": "https://github.com/daliworks/arduino_library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/daliworks/Thingplus-1.0.0.zip",
      "archiveFileName": "Thingplus-1.0.0.zip",
      "size": 12145,
      "checksum": "SHA-256:cc88f2fd6f933abbcccde92618f8e7ac7e0d41c011a3f742258780839525e04c"
    },
    {
      "name": "Thingplus",
      "version": "1.0.1",
      "author": "Younghyun Jo",
      "maintainer": "Daliworks \u003cdev@daliworks.net\u003e",
      "sentence": "Helps connecting your Arduino board to Thing+ cloud easly and fast",
      "paragraph": "Helps connecting your Arduino board to Thing+ cloud easly and fast",
      "website": "https://github.com/daliworks/arduino_library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/daliworks/Thingplus-1.0.1.zip",
      "archiveFileName": "Thingplus-1.0.1.zip",
      "size": 12253,
      "checksum": "SHA-256:fc39087834e42ef96fa2bab8c0b8f23a5afbd030a99e8777b02eca5a16434521"
    },
    {
      "name": "Thingplus",
      "version": "1.0.10",
      "author": "Younghyun Jo",
      "maintainer": "Daliworks \u003cdev@daliworks.net\u003e",
      "sentence": "Helps connecting your Arduino board to Thing+ cloud easly and fast",
      "paragraph": "Helps connecting your Arduino board to Thing+ cloud easly and fast",
      "website": "https://github.com/daliworks/arduino_library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/daliworks/Thingplus-1.0.10.zip",
      "archiveFileName": "Thingplus-1.0.10.zip",
      "size": 17930,
      "checksum": "SHA-256:787d07d21a0ec6bf8b9293cc9c5e16a46fae58087613c4d16bb2a2ffb94d4a2d"
    },
    {
      "name": "Thingplus",
      "version": "1.0.3",
      "author": "Younghyun Jo",
      "maintainer": "Daliworks \u003cdev@daliworks.net\u003e",
      "sentence": "Helps connecting your Arduino board to Thing+ cloud easly and fast",
      "paragraph": "Helps connecting your Arduino board to Thing+ cloud easly and fast",
      "website": "https://github.com/daliworks/arduino_library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/daliworks/Thingplus-1.0.3.zip",
      "archiveFileName": "Thingplus-1.0.3.zip",
      "size": 11053,
      "checksum": "SHA-256:afca42cc2713ddb56f374ada4fac971af8a909918af1cfe82a3ee6e8ca094f34"
    },
    {
      "name": "Thingplus",
      "version": "1.0.4",
      "author": "Younghyun Jo",
      "maintainer": "Daliworks \u003cdev@daliworks.net\u003e",
      "sentence": "Helps connecting your Arduino board to Thing+ cloud easly and fast",
      "paragraph": "Helps connecting your Arduino board to Thing+ cloud easly and fast",
      "website": "https://github.com/daliworks/arduino_library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/daliworks/Thingplus-1.0.4.zip",
      "archiveFileName": "Thingplus-1.0.4.zip",
      "size": 11507,
      "checksum": "SHA-256:01265d2cdd77f8abd10cf7bded5270f690f453b78c26f002fad60a14625ef9a0"
    },
    {
      "name": "Thingplus",
      "version": "1.0.5",
      "author": "Younghyun Jo",
      "maintainer": "Daliworks \u003cdev@daliworks.net\u003e",
      "sentence": "Helps connecting your Arduino board to Thing+ cloud easly and fast",
      "paragraph": "Helps connecting your Arduino board to Thing+ cloud easly and fast",
      "website": "https://github.com/daliworks/arduino_library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/daliworks/Thingplus-1.0.5.zip",
      "archiveFileName": "Thingplus-1.0.5.zip",
      "size": 11705,
      "checksum": "SHA-256:010f6e448444d1706a7a4bb679344c973e3191390c8eee496bd8200a0a7369e9"
    },
    {
      "name": "Thingplus",
      "version": "1.0.6",
      "author": "Younghyun Jo",
      "maintainer": "Daliworks \u003cdev@daliworks.net\u003e",
      "sentence": "Helps connecting your Arduino board to Thing+ cloud easly and fast",
      "paragraph": "Helps connecting your Arduino board to Thing+ cloud easly and fast",
      "website": "https://github.com/daliworks/arduino_library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/daliworks/Thingplus-1.0.6.zip",
      "archiveFileName": "Thingplus-1.0.6.zip",
      "size": 12172,
      "checksum": "SHA-256:1b53f60d3acadcc2d04abe1269e5ec5cfb4831676ee6efc15a2d5e35d268ab91"
    },
    {
      "name": "Thingplus",
      "version": "1.0.7",
      "author": "Younghyun Jo",
      "maintainer": "Daliworks \u003cdev@daliworks.net\u003e",
      "sentence": "Helps connecting your Arduino board to Thing+ cloud easly and fast",
      "paragraph": "Helps connecting your Arduino board to Thing+ cloud easly and fast",
      "website": "https://github.com/daliworks/arduino_library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/daliworks/Thingplus-1.0.7.zip",
      "archiveFileName": "Thingplus-1.0.7.zip",
      "size": 14290,
      "checksum": "SHA-256:8e88cffad0a8f20ccc9085be6d43d56b80439c4c3d446373c5f1f1389704262b"
    },
    {
      "name": "Thingplus",
      "version": "1.0.8",
      "author": "Younghyun Jo",
      "maintainer": "Daliworks \u003cdev@daliworks.net\u003e",
      "sentence": "Helps connecting your Arduino board to Thing+ cloud easly and fast",
      "paragraph": "Helps connecting your Arduino board to Thing+ cloud easly and fast",
      "website": "https://github.com/daliworks/arduino_library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/daliworks/Thingplus-1.0.8.zip",
      "archiveFileName": "Thingplus-1.0.8.zip",
      "size": 14356,
      "checksum": "SHA-256:ebc98c972b5880dad8d2f2bc273bbc0bfb5a3ae411a5bd70fc48b1663755b3c0"
    },
    {
      "name": "Thingplus",
      "version": "1.0.9",
      "author": "Younghyun Jo",
      "maintainer": "Daliworks \u003cdev@daliworks.net\u003e",
      "sentence": "Helps connecting your Arduino board to Thing+ cloud easly and fast",
      "paragraph": "Helps connecting your Arduino board to Thing+ cloud easly and fast",
      "website": "https://github.com/daliworks/arduino_library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/daliworks/Thingplus-1.0.9.zip",
      "archiveFileName": "Thingplus-1.0.9.zip",
      "size": 14738,
      "checksum": "SHA-256:fde791e8e8e99e96760919004458424e70872c21a5daa872fb246d991cb0bbcd"
    },
    {
      "name": "ESP8266 QRcode",
      "version": "1.0.0",
      "author": "Anun Panya \u003caspirinenun@gmail.com\u003e",
      "maintainer": "Anun Panya \u003caspirinenun@gmail.com\u003e",
      "sentence": "ESP8266 Generate QRCode for SSD1306 oled displays 128*64 pixel",
      "paragraph": "ESP8266 Generate QRCode version 7 for SSD1306 oled displays 128*64 pixel",
      "website": "https://github.com/anunpanya/ESP8266_QRcode",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/anunpanya/ESP8266_QRcode-1.0.0.zip",
      "archiveFileName": "ESP8266_QRcode-1.0.0.zip",
      "size": 8558,
      "checksum": "SHA-256:6b3a355703f8b39cf5a7481d5bebd60be5a2acb739ad60750f63cedae883bfba"
    },
    {
      "name": "ESP8266 QRcode",
      "version": "2.0.0",
      "author": "Anun Panya \u003caspirinenun@gmail.com\u003e",
      "maintainer": "Anun Panya \u003caspirinenun@gmail.com\u003e",
      "sentence": "ESP8266 Generate QRCode for SSD1306 oled displays 128*64 pixel",
      "paragraph": "ESP8266 Generate QRCode version 7 for SSD1306 oled displays 128*64 pixel",
      "website": "https://github.com/anunpanya/ESP8266_QRcode",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/anunpanya/ESP8266_QRcode-2.0.0.zip",
      "archiveFileName": "ESP8266_QRcode-2.0.0.zip",
      "size": 37141,
      "checksum": "SHA-256:b03a9b9794ce0a512fc582bd5dd11d84de2eda0f1279b5e7346ddf0706f4fc66"
    },
    {
      "name": "MAX30100lib",
      "version": "1.0.0",
      "author": "OXullo Intersecans \u003cx@brainrapers.org\u003e",
      "maintainer": "OXullo Intersecans \u003cx@brainrapers.org\u003e",
      "sentence": "Maxim-IC MAX30100 heart-rate sensor driver and pulse-oximetry components",
      "paragraph": "This library exposes most of the features of the MAX30100 and offers a modular approach to calculate pulse rate and SpO2",
      "website": "https://github.com/oxullo/MAX30100lib",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/oxullo/MAX30100lib-1.0.0.zip",
      "archiveFileName": "MAX30100lib-1.0.0.zip",
      "size": 29813,
      "checksum": "SHA-256:d837082b854bbc08caf6669e2869ef74d3a6ccbc95f79d3b6a389eb22c95eab2"
    },
    {
      "name": "MAX30100lib",
      "version": "1.0.1",
      "author": "OXullo Intersecans \u003cx@brainrapers.org\u003e",
      "maintainer": "OXullo Intersecans \u003cx@brainrapers.org\u003e",
      "sentence": "Maxim-IC MAX30100 heart-rate sensor driver and pulse-oximetry components",
      "paragraph": "This library exposes most of the features of the MAX30100 and offers a modular approach to calculate pulse rate and SpO2",
      "website": "https://github.com/oxullo/MAX30100lib",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/oxullo/MAX30100lib-1.0.1.zip",
      "archiveFileName": "MAX30100lib-1.0.1.zip",
      "size": 97027,
      "checksum": "SHA-256:65963bf611d614414965e7c0152394c362b278790d11b1b80f7e6b2c8dfc11e0"
    },
    {
      "name": "MAX30100lib",
      "version": "1.1.0",
      "author": "OXullo Intersecans \u003cx@brainrapers.org\u003e",
      "maintainer": "OXullo Intersecans \u003cx@brainrapers.org\u003e",
      "sentence": "Maxim-IC MAX30100 heart-rate sensor driver and pulse-oximetry components",
      "paragraph": "This library exposes most of the features of the MAX30100 and offers a modular approach to calculate pulse rate and SpO2",
      "website": "https://github.com/oxullo/Arduino-MAX30100",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/oxullo/MAX30100lib-1.1.0.zip",
      "archiveFileName": "MAX30100lib-1.1.0.zip",
      "size": 99086,
      "checksum": "SHA-256:cf7725e44467bf6d1773ae07c1756454dbf8c36bf29ae3187f67b67fe39b3fd1"
    },
    {
      "name": "Cayenne",
      "version": "1.0.0",
      "author": "myDevices",
      "maintainer": "myDevices",
      "sentence": "Connect your Arduino device to the Cayenne IoT platform.",
      "paragraph": "Cayenne is the world's first drag and drop IoT project builder that empowers developers, designers and engineers to quickly prototype and share their connected device projects. Cayenne was designed to help users create Internet of Things prototypes and then bring them to production.",
      "website": "http://www.cayenne-mydevices.com/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/myDevicesIoT/Cayenne-1.0.0.zip",
      "archiveFileName": "Cayenne-1.0.0.zip",
      "size": 203181,
      "checksum": "SHA-256:5352ff94a1745eb5866b9ea923f8ec1533e700ac861fbf1c88a84106de564181"
    },
    {
      "name": "Cayenne",
      "version": "1.0.1",
      "author": "myDevices",
      "maintainer": "myDevices",
      "sentence": "Connect your Arduino device to the Cayenne IoT platform.",
      "paragraph": "Cayenne is the world's first drag and drop IoT project builder that empowers developers, designers and engineers to quickly prototype and share their connected device projects. Cayenne was designed to help users create Internet of Things prototypes and then bring them to production.",
      "website": "http://www.cayenne-mydevices.com/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/myDevicesIoT/Cayenne-1.0.1.zip",
      "archiveFileName": "Cayenne-1.0.1.zip",
      "size": 201906,
      "checksum": "SHA-256:7f0cca5445b5fbf56b7e209b3efa1c0daa03daf877c444935f7a423cc96442eb"
    },
    {
      "name": "FirmataWithDeviceFeature",
      "version": "2.8.0",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/ConfigurableFirmata",
      "sentence": "This library implements the Firmata protocol as a set of plugins that can be used to create applications to remotely interface with an Arduino board.",
      "paragraph": "ConfigurableFirmata is an implementation of the Firmata protocol that breaks features such as Digital Input, Digital Output, Analog Input, Analog Output, I2C, etc into individual classes making it easier to mix and match standard features with custom features.",
      "website": "https://github.com/firmata/ConfigurableFirmata",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/finson-release/FirmataWithDeviceFeature-2.8.0.zip",
      "archiveFileName": "FirmataWithDeviceFeature-2.8.0.zip",
      "size": 85002,
      "checksum": "SHA-256:178480a106d3f804ca0989419023cdf7f17c655b18c3af8de7a6fe7f5a744eae"
    },
    {
      "name": "FirmataWithDeviceFeature",
      "version": "2.8.1",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/ConfigurableFirmata",
      "sentence": "This library implements the Firmata protocol as a set of plugins that can be used to create applications to remotely interface with an Arduino board.",
      "paragraph": "ConfigurableFirmata is an implementation of the Firmata protocol that breaks features such as Digital Input, Digital Output, Analog Input, Analog Output, I2C, etc into individual classes making it easier to mix and match standard features with custom features.",
      "website": "https://github.com/firmata/ConfigurableFirmata",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/finson-release/FirmataWithDeviceFeature-2.8.1.zip",
      "archiveFileName": "FirmataWithDeviceFeature-2.8.1.zip",
      "size": 99957,
      "checksum": "SHA-256:dcdf1f05fc93cc4d5487b4bd3771246e875f7d96d7ed366802db8fbdf0627eb8"
    },
    {
      "name": "FirmataWithDeviceFeature",
      "version": "2.9.0",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/ConfigurableFirmata",
      "sentence": "This library implements the Firmata protocol as a set of plugins that can be used to create applications to remotely interface with an Arduino board.",
      "paragraph": "ConfigurableFirmata is an implementation of the Firmata protocol that breaks features such as Digital Input, Digital Output, Analog Input, Analog Output, I2C, etc into individual classes making it easier to mix and match standard features with custom features.",
      "website": "https://github.com/firmata/ConfigurableFirmata",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/finson-release/FirmataWithDeviceFeature-2.9.0.zip",
      "archiveFileName": "FirmataWithDeviceFeature-2.9.0.zip",
      "size": 102694,
      "checksum": "SHA-256:2c4e2ad456daff0f49fd8115ba47bd47d68add50c9985c6fc337c79528349ebb"
    },
    {
      "name": "FirmataWithDeviceFeature",
      "version": "2.8.2",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/ConfigurableFirmata",
      "sentence": "This library implements the Firmata protocol as a set of plugins that can be used to create applications to remotely interface with an Arduino board.",
      "paragraph": "ConfigurableFirmata is an implementation of the Firmata protocol that breaks features such as Digital Input, Digital Output, Analog Input, Analog Output, I2C, etc into individual classes making it easier to mix and match standard features with custom features.",
      "website": "https://github.com/firmata/ConfigurableFirmata",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/finson-release/FirmataWithDeviceFeature-2.8.2.zip",
      "archiveFileName": "FirmataWithDeviceFeature-2.8.2.zip",
      "size": 109632,
      "checksum": "SHA-256:a05d5e03707f28fb56ad4d05a28c03b15653d15053f688d824dd04f5742274e3"
    },
    {
      "name": "FirmataWithDeviceFeature",
      "version": "2.9.1",
      "author": "Firmata Developers, Doug Johnson",
      "maintainer": "Doug Johnson \u003cstrix@whidbey.com\u003e",
      "sentence": "This library implements the Firmata protocol as a set of plugins that can be used to create applications to remotely interface with an Arduino board.",
      "paragraph": "FirmataWithDeviceFeature is a fork of ConfigurableFirmata 2.8.2 that adds a feature to support DeviceDrivers on the Arduino.",
      "website": "https://github.com/finson-release/FirmataWithDeviceFeature",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/finson-release/FirmataWithDeviceFeature-2.9.1.zip",
      "archiveFileName": "FirmataWithDeviceFeature-2.9.1.zip",
      "size": 123699,
      "checksum": "SHA-256:301d9d21ee96a203bf036e91a9b8a60a86e0ebac0ca1d3eb58d80ff6286d20a7"
    },
    {
      "name": "FirmataWithDeviceFeature",
      "version": "2.9.2",
      "author": "Firmata Developers, Doug Johnson",
      "maintainer": "Doug Johnson \u003cstrix@whidbey.com\u003e",
      "sentence": "This library implements the Firmata protocol as a set of plugins that can be used to create applications to remotely interface with an Arduino board.",
      "paragraph": "FirmataWithDeviceFeature is a fork of ConfigurableFirmata 2.8.2 that adds a feature to support DeviceDrivers on the Arduino.",
      "website": "https://github.com/finson-release/FirmataWithDeviceFeature",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/finson-release/FirmataWithDeviceFeature-2.9.2.zip",
      "archiveFileName": "FirmataWithDeviceFeature-2.9.2.zip",
      "size": 123771,
      "checksum": "SHA-256:c2e3165131d8226dab8dc4ead023f2ada87d25949a473c2e3d7e3bd0c076c813"
    },
    {
      "name": "FirmataWithDeviceFeature",
      "version": "2.9.3",
      "author": "Firmata Developers, Doug Johnson",
      "maintainer": "Doug Johnson \u003cstrix@whidbey.com\u003e",
      "sentence": "This library implements the Firmata protocol as a set of plugins that can be used to create applications to remotely interface with an Arduino board.",
      "paragraph": "FirmataWithDeviceFeature is a fork of ConfigurableFirmata 2.8.2 that adds a feature to support DeviceDrivers on the Arduino.",
      "website": "https://github.com/finson-release/FirmataWithDeviceFeature",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/finson-release/FirmataWithDeviceFeature-2.9.3.zip",
      "archiveFileName": "FirmataWithDeviceFeature-2.9.3.zip",
      "size": 111660,
      "checksum": "SHA-256:b1f1288eeb4fce611b62d8638dfc5b710e39b0b2acb8010a2c2e9ee338db3589"
    },
    {
      "name": "FirmataWithDeviceFeature",
      "version": "2.9.4",
      "author": "Firmata Developers, Doug Johnson",
      "maintainer": "Doug Johnson \u003cstrix@whidbey.com\u003e",
      "sentence": "This library implements the Firmata protocol as a set of plugins that can be used to create applications to remotely interface with an Arduino board.",
      "paragraph": "FirmataWithDeviceFeature is a fork of ConfigurableFirmata 2.8.2 that adds a feature to support DeviceDrivers on the Arduino.",
      "website": "https://github.com/finson-release/FirmataWithDeviceFeature",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/finson-release/FirmataWithDeviceFeature-2.9.4.zip",
      "archiveFileName": "FirmataWithDeviceFeature-2.9.4.zip",
      "size": 111662,
      "checksum": "SHA-256:ad4a7b955c1550fc4635bcec2929711c84172a3e2053abae7cc8f16a02c874b8"
    },
    {
      "name": "IoTPipe",
      "version": "0.1.0",
      "author": "IoT Pipe Team \u003cteam@iotpipe.io\u003e",
      "maintainer": "IoT Pipe Team \u003cteam@iotpipe.io\u003e",
      "sentence": "A library to use with the IoT Pipe web service.",
      "paragraph": "Easily integrate your ESP8266 projects into the Internet of Things.",
      "website": "http://www.iotpipe.io/",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/iotpipe/IoTPipe-0.1.0.zip",
      "archiveFileName": "IoTPipe-0.1.0.zip",
      "size": 10007,
      "checksum": "SHA-256:92047edcf78b91042560d5c689ca632ffaac896ef96c543a09a45c7b9541f0b6"
    },
    {
      "name": "IoTPipe",
      "version": "0.1.2",
      "author": "IoT Pipe Team \u003cteam@iotpipe.io\u003e",
      "maintainer": "IoT Pipe Team \u003cteam@iotpipe.io\u003e",
      "sentence": "A library to use with the IoT Pipe web service.",
      "paragraph": "Easily integrate your ESP8266 projects into the Internet of Things.",
      "website": "http://www.iotpipe.io/",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/iotpipe/IoTPipe-0.1.2.zip",
      "archiveFileName": "IoTPipe-0.1.2.zip",
      "size": 10022,
      "checksum": "SHA-256:ddd6264e8b1ddf2b449bf608805b2544ebf364015c0c619a593c5bb7bdd8a6df"
    },
    {
      "name": "IoTPipe",
      "version": "0.2.0",
      "author": "IoT Pipe Team \u003cteam@iotpipe.io\u003e",
      "maintainer": "IoT Pipe Team \u003cteam@iotpipe.io\u003e",
      "sentence": "A library to use with the IoT Pipe web service.",
      "paragraph": "Easily integrate your ESP8266 projects into the Internet of Things.",
      "website": "http://www.iotpipe.io/",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/iotpipe/IoTPipe-0.2.0.zip",
      "archiveFileName": "IoTPipe-0.2.0.zip",
      "size": 13866,
      "checksum": "SHA-256:9bb5c917e1d2fbf953692afe524b5c12cf3dc2630a812691149f5b57e15ef2e2"
    },
    {
      "name": "IoTPipe",
      "version": "0.2.1",
      "author": "IoT Pipe Team \u003cteam@iotpipe.io\u003e",
      "maintainer": "IoT Pipe Team \u003cteam@iotpipe.io\u003e",
      "sentence": "A library to use with the IoT Pipe web service.",
      "paragraph": "Easily integrate your ESP8266 projects into the Internet of Things.",
      "website": "http://www.iotpipe.io/",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/iotpipe/IoTPipe-0.2.1.zip",
      "archiveFileName": "IoTPipe-0.2.1.zip",
      "size": 14012,
      "checksum": "SHA-256:d1abb32c2f18b7c286fc0327e3c72b61cf223204c49a2ada4986f9f14768766f"
    },
    {
      "name": "U8g2",
      "version": "2.0.6",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "Library for monochrome LCDs and OLEDs. Successor of U8glib.",
      "paragraph": "Supported display controller: SSD1306, UC1701, ST7565, ST7920.",
      "website": "https://github.com/olikraus/u8g2",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/olikraus/U8g2-2.0.6.zip",
      "archiveFileName": "U8g2-2.0.6.zip",
      "size": 1752038,
      "checksum": "SHA-256:1fb3d6e663c971eb87648a5f14437e7a2c3d8ca441c29bf550432718adcb5ba3"
    },
    {
      "name": "U8g2",
      "version": "2.0.7",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "Library for monochrome LCDs and OLEDs. Successor of U8glib.",
      "paragraph": "Supported display controller: SSD1306, SH1106, UC1701, ST7565, ST7920, LD7032.",
      "website": "https://github.com/olikraus/u8g2",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/olikraus/U8g2-2.0.7.zip",
      "archiveFileName": "U8g2-2.0.7.zip",
      "size": 1770794,
      "checksum": "SHA-256:114830a61b72561fd42da0d15bb391cd43903fd1c9771aa0a3d18504089266a3"
    },
    {
      "name": "U8g2",
      "version": "2.1.5",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "Library for monochrome LCDs and OLEDs. Successor of U8glib.",
      "paragraph": "Supported display controller: SSD1306, SH1106, T6963, UC1701, ST7565, ST7920, LD7032.",
      "website": "https://github.com/olikraus/u8g2",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/olikraus/U8g2-2.1.5.zip",
      "archiveFileName": "U8g2-2.1.5.zip",
      "size": 1930048,
      "checksum": "SHA-256:434e23b7c3572b45fe62c43409ec9500ea43a1feafe6e14613d3a39957d0ac7c"
    },
    {
      "name": "U8g2",
      "version": "2.10.1",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "Monochrome LCD, OLED and eInk Library. Display controller: SSD1306, SSD1322, SSD1325, SSD1606, SH1106, T6963, RA8835, PCD8544, UC1604, UC1608, UC1610, UC1611, UC1701, ST7565, ST7920, LD7032, KS0108. Interfaces: I2C, SPI, Parallel.",
      "paragraph": "Successor of U8glib. Features: UTF8, \u003e700 fonts, U8x8 char output, all Arduino Boards supported.",
      "website": "https://github.com/olikraus/u8g2",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/olikraus/U8g2-2.10.1.zip",
      "archiveFileName": "U8g2-2.10.1.zip",
      "size": 3503454,
      "checksum": "SHA-256:d9519e13105a3ca5822c77bff900410f22cb7a50af5d3ae8c734335c8e2d94db"
    },
    {
      "name": "U8g2",
      "version": "2.11.2",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "Monochrome LCD, OLED and eInk Library. Display controller: SSD1305, SSD1306, SSD1322, SSD1325, SSD1327, SSD1606, SH1106, T6963, RA8835, LC7981, PCD8544, PCF8812, UC1604, UC1608, UC1610, UC1611, UC1701, ST7565, ST7567, NT7534, ST7920, LD7032, KS0108. Interfaces: I2C, SPI, Parallel.",
      "paragraph": "Successor of U8glib. Features: UTF8, \u003e700 fonts, U8x8 char output, all Arduino Boards supported.",
      "website": "https://github.com/olikraus/u8g2",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/olikraus/U8g2-2.11.2.zip",
      "archiveFileName": "U8g2-2.11.2.zip",
      "size": 3527657,
      "checksum": "SHA-256:9df889acc86cb7027b70900ad35b3d53f50aa260461b072b21c9953f4df875e0"
    },
    {
      "name": "U8g2",
      "version": "2.11.4",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "Monochrome LCD, OLED and eInk Library. Display controller: SSD1305, SSD1306, SSD1322, SSD1325, SSD1327, SSD1606, SH1106, T6963, RA8835, LC7981, PCD8544, PCF8812, UC1604, UC1608, UC1610, UC1611, UC1701, ST7565, ST7567, NT7534, ST7920, LD7032, KS0108. Interfaces: I2C, SPI, Parallel.",
      "paragraph": "Successor of U8glib. Features: UTF8, \u003e700 fonts, U8x8 char output, all Arduino Boards supported.",
      "website": "https://github.com/olikraus/u8g2",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/olikraus/U8g2-2.11.4.zip",
      "archiveFileName": "U8g2-2.11.4.zip",
      "size": 3527656,
      "checksum": "SHA-256:214b35233c39446872b43785562698663b8055fd809197eac630aff70beb112c"
    },
    {
      "name": "U8g2",
      "version": "2.12.6",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "Monochrome LCD, OLED and eInk Library. Display controller: SSD1305, SSD1306, SSD1309, SSD1322, SSD1325, SSD1327, SSD1606, SH1106, T6963, RA8835, LC7981, PCD8544, PCF8812, UC1604, UC1608, UC1610, UC1611, UC1701, ST7565, ST7567, NT7534, IST3020, ST7920, LD7032, KS0108. Interfaces: I2C, SPI, Parallel.",
      "paragraph": "Monochrome LCD, OLED and eInk Library. Successor of U8glib. Supported display controller: SSD1305, SSD1306, SSD1309, SSD1322, SSD1325, SSD1327, SSD1606, SH1106, T6963, RA8835, LC7981, PCD8544, PCF8812, UC1604, UC1608, UC1610, UC1611, UC1701, ST7565, ST7567, NT7534, IST3020, ST7920, LD7032, KS0108. Supported interfaces: I2C, SPI, Parallel. Features: UTF8, \u003e700 fonts, U8x8 char output.",
      "website": "https://github.com/olikraus/u8g2",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/olikraus/U8g2-2.12.6.zip",
      "archiveFileName": "U8g2-2.12.6.zip",
      "size": 3536335,
      "checksum": "SHA-256:d6417f4ea0d6d3a91d099731388ab2aaa9097b7564e2608424b4cdd94182f8e2"
    },
    {
      "name": "U8g2",
      "version": "2.13.5",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "Monochrome LCD, OLED and eInk Library. Display controller: SSD1305, SSD1306, SSD1309, SSD1322, SSD1325, SSD1327, SSD1606, SSD1607, SH1106, T6963, RA8835, LC7981, PCD8544, PCF8812, UC1604, UC1608, UC1610, UC1611, UC1701, ST7565, ST7567, NT7534, IST3020, ST7920, LD7032, KS0108. Interfaces: I2C, SPI, Parallel.",
      "paragraph": "Monochrome LCD, OLED and eInk Library. Successor of U8glib. Supported display controller: SSD1305, SSD1306, SSD1309, SSD1322, SSD1325, SSD1327, SSD1606, SSD1607, SH1106, T6963, RA8835, LC7981, PCD8544, PCF8812, UC1604, UC1608, UC1610, UC1611, UC1701, ST7565, ST7567, NT7534, IST3020, ST7920, LD7032, KS0108. Supported interfaces: I2C, SPI, Parallel. Features: UTF8, \u003e700 fonts, U8x8 char output.",
      "website": "https://github.com/olikraus/u8g2",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/olikraus/U8g2-2.13.5.zip",
      "archiveFileName": "U8g2-2.13.5.zip",
      "size": 3646290,
      "checksum": "SHA-256:5a23ff084bf5f819fd9ec0b7c8e1ece8c973ec9ba86f032f40c96a7b019f24f1"
    },
    {
      "name": "U8g2",
      "version": "2.14.7",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "Monochrome LCD, OLED and eInk Library. Display controller: SSD1305, SSD1306, SSD1309, SSD1322, SSD1325, SSD1327, SSD1606, SSD1607, SH1106, T6963, RA8835, LC7981, PCD8544, PCF8812, UC1604, UC1608, UC1610, UC1611, UC1701, ST7565, ST7567, NT7534, IST3020, ST7920, LD7032, KS0108. Interfaces: I2C, SPI, Parallel.",
      "paragraph": "Monochrome LCD, OLED and eInk Library. Successor of U8glib. Supported display controller: SSD1305, SSD1306, SSD1309, SSD1322, SSD1325, SSD1327, SSD1606, SSD1607, SH1106, T6963, RA8835, LC7981, PCD8544, PCF8812, UC1604, UC1608, UC1610, UC1611, UC1701, ST7565, ST7567, NT7534, IST3020, ST7920, LD7032, KS0108. Supported interfaces: I2C, SPI, Parallel. Features: UTF8, \u003e700 fonts, U8x8 char output.",
      "website": "https://github.com/olikraus/u8g2",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/olikraus/U8g2-2.14.7.zip",
      "archiveFileName": "U8g2-2.14.7.zip",
      "size": 3658892,
      "checksum": "SHA-256:39b232923e207a96d5829fa2bda02b588dd26b3f1c75da19063db4a9e8e0e156"
    },
    {
      "name": "U8g2",
      "version": "2.2.7",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "Library for monochrome LCDs and OLEDs. Successor of U8glib.",
      "paragraph": "Supported display controller: SSD1306, SH1106, T6963, UC1701, ST7565, ST7920, LD7032.",
      "website": "https://github.com/olikraus/u8g2",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/olikraus/U8g2-2.2.7.zip",
      "archiveFileName": "U8g2-2.2.7.zip",
      "size": 925671,
      "checksum": "SHA-256:a93e6313faa37cd527a94c7712eaaecc29321f9f9f168c4f9b0973f49710f6dd"
    },
    {
      "name": "U8g2",
      "version": "2.3.2",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "Library for monochrome LCDs and OLEDs. Successor of U8glib.",
      "paragraph": "Supported display controller: SSD1306, SH1106, T6963, UC1701, ST7565, ST7920, LD7032.",
      "website": "https://github.com/olikraus/u8g2",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/olikraus/U8g2-2.3.2.zip",
      "archiveFileName": "U8g2-2.3.2.zip",
      "size": 1941163,
      "checksum": "SHA-256:089e8102bb173bdaec3b43b284599b7a172cfb532caf6f93a36d88c3f54755b5"
    },
    {
      "name": "U8g2",
      "version": "2.4.1",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "Library for monochrome LCDs and OLEDs. Successor of U8glib.",
      "paragraph": "Supported display controller: SSD1306, SH1106, T6963, UC1701, ST7565, ST7920, LD7032.",
      "website": "https://github.com/olikraus/u8g2",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/olikraus/U8g2-2.4.1.zip",
      "archiveFileName": "U8g2-2.4.1.zip",
      "size": 1944220,
      "checksum": "SHA-256:e9e595771eafb9a99097c1296a37afb3e3460256093ba9f7be46b1d8285e0187"
    },
    {
      "name": "U8g2",
      "version": "2.5.2",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "Library for monochrome LCDs and OLEDs. Successor of U8glib. Features: UTF8, \u003e700 fonts, all Arduino Boards supported",
      "paragraph": "Supported display controller: SSD1306, SSD1322, SSD1325, SH1106, T6963, RA8835, UC1701, ST7565, ST7920, LD7032.",
      "website": "https://github.com/olikraus/u8g2",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/olikraus/U8g2-2.5.2.zip",
      "archiveFileName": "U8g2-2.5.2.zip",
      "size": 3436449,
      "checksum": "SHA-256:331bd8832db8f770bafb1e4eec09305dc1a8130f5001183294177bb13e183c01"
    },
    {
      "name": "U8g2",
      "version": "2.6.3",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "Library for monochrome LCDs and OLEDs. Successor of U8glib. Features: UTF8, \u003e700 fonts, all Arduino Boards supported",
      "paragraph": "Supported display controller: SSD1306, SSD1322, SSD1325, SH1106, T6963, RA8835, UC1610, UC1611, UC1701, ST7565, ST7920, LD7032.",
      "website": "https://github.com/olikraus/u8g2",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/olikraus/U8g2-2.6.3.zip",
      "archiveFileName": "U8g2-2.6.3.zip",
      "size": 3455549,
      "checksum": "SHA-256:0e043b41cd37eaf993dfc93fb13fd391c6d14c27b61c55f5b95085432b7575f3"
    },
    {
      "name": "U8g2",
      "version": "2.7.5",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "Library for monochrome LCDs and OLEDs. Successor of U8glib. Features: UTF8, \u003e700 fonts, all Arduino Boards supported",
      "paragraph": "Supported display controller: SSD1306, SSD1322, SSD1325, SH1106, T6963, RA8835, UC1608, UC1610, UC1611, UC1701, ST7565, ST7920, LD7032.",
      "website": "https://github.com/olikraus/u8g2",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/olikraus/U8g2-2.7.5.zip",
      "archiveFileName": "U8g2-2.7.5.zip",
      "size": 3469626,
      "checksum": "SHA-256:67b4699208ad5359cebe28efde963bc3eb74a6818dac027022ec077c2424fe12"
    },
    {
      "name": "U8g2",
      "version": "2.8.4",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "Library for monochrome LCDs and OLEDs.  Controller: SSD1306, SSD1322, SSD1325, SH1106, T6963, RA8835, UC1608, UC1610, UC1611, UC1701, ST7565, ST7920, LD7032, KS0108.",
      "paragraph": "Successor of U8glib. Features: UTF8, \u003e700 fonts, all Arduino Boards supported.",
      "website": "https://github.com/olikraus/u8g2",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/olikraus/U8g2-2.8.4.zip",
      "archiveFileName": "U8g2-2.8.4.zip",
      "size": 3481344,
      "checksum": "SHA-256:a9b8b37b027ad01ca932c126d6e76879e5c6b332cc84e6457f092c445428c9a5"
    },
    {
      "name": "U8g2",
      "version": "2.8.5",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "Library for monochrome LCDs and OLEDs.  Controller: SSD1306, SSD1322, SSD1325, SH1106, T6963, RA8835, UC1608, UC1610, UC1611, UC1701, ST7565, ST7920, LD7032, KS0108.",
      "paragraph": "Successor of U8glib. Features: UTF8, \u003e700 fonts, all Arduino Boards supported.",
      "website": "https://github.com/olikraus/u8g2",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/olikraus/U8g2-2.8.5.zip",
      "archiveFileName": "U8g2-2.8.5.zip",
      "size": 3481365,
      "checksum": "SHA-256:e01c69ccabd1025b0db1b27e2003b07cb68fedbed4e56c23acf345e97ee4c778"
    },
    {
      "name": "U8g2",
      "version": "2.9.1",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "Library for monochrome LCDs and OLEDs.  Supported controller: SSD1306, SSD1322, SSD1325, SH1106, T6963, RA8835, PCD8544, UC1604, UC1608, UC1610, UC1611, UC1701, ST7565, ST7920, LD7032, KS0108.",
      "paragraph": "Successor of U8glib. Features: UTF8, \u003e700 fonts, all Arduino Boards supported.",
      "website": "https://github.com/olikraus/u8g2",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/olikraus/U8g2-2.9.1.zip",
      "archiveFileName": "U8g2-2.9.1.zip",
      "size": 3493534,
      "checksum": "SHA-256:356e0b905b1c44a4a0e40606db35939b9d064d94afeddee3131c5c901ac9075f"
    },
    {
      "name": "U8g2",
      "version": "2.9.2",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "Library for monochrome LCDs and OLEDs.  Controller: SSD1306, SSD1322, SSD1325, SH1106, T6963, RA8835, PCD8544, UC1604, UC1608, UC1610, UC1611, UC1701, ST7565, ST7920, LD7032, KS0108. Interfaces: I2C, SPI, Parallel.",
      "paragraph": "Successor of U8glib. Features: UTF8, \u003e700 fonts, U8x8 char output, all Arduino Boards supported.",
      "website": "https://github.com/olikraus/u8g2",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/olikraus/U8g2-2.9.2.zip",
      "archiveFileName": "U8g2-2.9.2.zip",
      "size": 3496672,
      "checksum": "SHA-256:9de9453986c6e80541d0131dc52bf9da0d3617c96f67b3b1926add3aceba9cf3"
    },
    {
      "name": "SpritzCipher",
      "version": "0.1.2",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz cipher library, Random bytes generator, Hash \u0026 MAC functions.",
      "paragraph": "Spritz cipher library, A spongy RC4-like stream cipher. This library contains cryptographically secure pseudo-random bytes generator, Hash \u0026 MAC functions with configurable output length.",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-0.1.2.zip",
      "archiveFileName": "SpritzCipher-0.1.2.zip",
      "size": 8486,
      "checksum": "SHA-256:93b38847180ef4cc11d6e57321263534ae5897a4e1b04ac45a5ef2b79619b8b8"
    },
    {
      "name": "SpritzCipher",
      "version": "0.1.3",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz cipher library, Random bytes generator, Hash \u0026 MAC functions.",
      "paragraph": "Spritz cipher library, A spongy RC4-like stream cipher. This library contains cryptographically secure pseudo-random bytes generator, Hash \u0026 MAC functions with configurable output length.",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-0.1.3.zip",
      "archiveFileName": "SpritzCipher-0.1.3.zip",
      "size": 8125,
      "checksum": "SHA-256:ec4756a404f4c39b61c95d7169ab394538694a54d5fabbd490698ee47badbc1a"
    },
    {
      "name": "SpritzCipher",
      "version": "0.1.4",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz cipher library, Random bytes generator, Hash \u0026 MAC.",
      "paragraph": "Spritz cipher library, A spongy RC4-like stream cipher. This library contains cryptographically secure RNG, Hash \u0026 MAC with configurable output length.",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-0.1.4.zip",
      "archiveFileName": "SpritzCipher-0.1.4.zip",
      "size": 8357,
      "checksum": "SHA-256:4da6d0dc16cd62d0352eb43a067c00b7a1a347f69181c4892b8b7b9d5fa743dd"
    },
    {
      "name": "SpritzCipher",
      "version": "0.1.5",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz cipher library, Random bytes generator, Hash \u0026 MAC.",
      "paragraph": "Spritz cipher library, A spongy RC4-like stream cipher. This library contains cryptographically secure RNG, Hash \u0026 MAC with configurable output length.",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-0.1.5.zip",
      "archiveFileName": "SpritzCipher-0.1.5.zip",
      "size": 8385,
      "checksum": "SHA-256:f8d6668226e6dbaee86f9ca6769a3ce23fdad167c7c7c1fe92ca2b6b47907d95"
    },
    {
      "name": "SpritzCipher",
      "version": "0.2.0",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz cipher library, Secure random bytes generator, Flexible hash \u0026 MAC.",
      "paragraph": "Spritz cipher, A spongy RC4-like stream cipher. This library contains secure random bytes generator, Flexible cryptographic hash function \u0026 message authentication code (MAC).",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-0.2.0.zip",
      "archiveFileName": "SpritzCipher-0.2.0.zip",
      "size": 10584,
      "checksum": "SHA-256:f1bcb4cec0be4dafe7d6a092c630b73c35457d806b5ee778f5461b6c52ea7bb6"
    },
    {
      "name": "SpritzCipher",
      "version": "0.2.1",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz cipher library, Secure random bytes generator, Flexible hash \u0026 MAC.",
      "paragraph": "Spritz cipher, A spongy RC4-like stream cipher. This library contains secure random bytes generator, Flexible cryptographic hash function \u0026 message authentication code (MAC).",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-0.2.1.zip",
      "archiveFileName": "SpritzCipher-0.2.1.zip",
      "size": 10593,
      "checksum": "SHA-256:2d1464baae670e035be90e05f9f1298dc4ebd11adbce38605ff7194696a9ddee"
    },
    {
      "name": "SpritzCipher",
      "version": "0.2.2",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz cipher library, Secure random bytes generator, Flexible hash \u0026 MAC.",
      "paragraph": "Spritz cipher, A spongy RC4-like stream cipher. This library contains secure random bytes generator, Flexible cryptographic hash function \u0026 message authentication code (MAC).",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-0.2.2.zip",
      "archiveFileName": "SpritzCipher-0.2.2.zip",
      "size": 10477,
      "checksum": "SHA-256:04563edabe791e39be6a45b705f53b95f5030a65c4f9e86b8e944292c44b076f"
    },
    {
      "name": "SpritzCipher",
      "version": "0.3.0",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz cipher library, Secure random bytes generator, Flexible hash \u0026 MAC.",
      "paragraph": "Spritz cipher, A spongy RC4-like stream cipher. This library contains secure random bytes generator, Flexible cryptographic hash function \u0026 message authentication code (MAC).",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-0.3.0.zip",
      "archiveFileName": "SpritzCipher-0.3.0.zip",
      "size": 10390,
      "checksum": "SHA-256:2913a942b41cf4cb43c939bf7e43a88bb3e234f58ecbb9f996860128251f57fc"
    },
    {
      "name": "SpritzCipher",
      "version": "0.3.1",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz cipher library, Secure random bytes generator, Flexible hash \u0026 MAC.",
      "paragraph": "Spritz cipher, A spongy RC4-like stream cipher. This library contains secure random bytes generator, Flexible cryptographic hash function \u0026 message authentication code (MAC).",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-0.3.1.zip",
      "archiveFileName": "SpritzCipher-0.3.1.zip",
      "size": 10524,
      "checksum": "SHA-256:328989b8ea4013e63b11592a9d3c1c43d1436d584dac96e49a0cb21a0df7ab4a"
    },
    {
      "name": "SpritzCipher",
      "version": "0.4.0",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz cipher library, Secure random bytes generator, Flexible hash \u0026 MAC.",
      "paragraph": "Spritz cipher, A spongy RC4-like stream cipher. This library contains secure random bytes generator, Flexible cryptographic hash function \u0026 message authentication code (MAC).",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-0.4.0.zip",
      "archiveFileName": "SpritzCipher-0.4.0.zip",
      "size": 13923,
      "checksum": "SHA-256:05f3ec660fcc334be7b5dc092c83f4425cf8724fc775f87f1b00af3a230d0fbd"
    },
    {
      "name": "SpritzCipher",
      "version": "0.4.1",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz cipher library, Secure random bytes generator, Flexible hash \u0026 MAC.",
      "paragraph": "Spritz cipher, A spongy RC4-like stream cipher. This library contains secure random bytes generator, Flexible cryptographic hash function \u0026 message authentication code (MAC).",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-0.4.1.zip",
      "archiveFileName": "SpritzCipher-0.4.1.zip",
      "size": 14321,
      "checksum": "SHA-256:b4ac099de1768d1b0f33e31e7f6784c99a645b716298a3c5e9086e28024bff38"
    },
    {
      "name": "SpritzCipher",
      "version": "0.4.2",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz cipher library, Secure random bytes generator, Flexible hash \u0026 MAC.",
      "paragraph": "Spritz cipher, A spongy RC4-like stream cipher. This library contains secure random bytes generator, Flexible cryptographic hash function \u0026 message authentication code (MAC).",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-0.4.2.zip",
      "archiveFileName": "SpritzCipher-0.4.2.zip",
      "size": 15941,
      "checksum": "SHA-256:a1a6d7ad7a3ea205653a3065a708bda91c2556542af3bf7aab036167de4c4910"
    },
    {
      "name": "SpritzCipher",
      "version": "0.4.3",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz cipher library, Secure random bytes generator, Flexible hash \u0026 MAC.",
      "paragraph": "Spritz cipher, A spongy RC4-like stream cipher. This library contains secure random bytes generator, Flexible cryptographic hash function \u0026 message authentication code (MAC).",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-0.4.3.zip",
      "archiveFileName": "SpritzCipher-0.4.3.zip",
      "size": 16247,
      "checksum": "SHA-256:91d9fcb2194bd33fc8dceae0c9aaec25a551ee677f74cf319e98a0453216264f"
    },
    {
      "name": "SpritzCipher",
      "version": "0.4.4",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz cipher library, Random bytes generator, Data encryption, Hash and MAC.",
      "paragraph": "This Spritz (a spongy RC4-like stream cipher and hash function) library contains cryptographic random bytes generator, Cryptographic hash function, Message Authentication Code (MAC) function, Data encryption/decryption using Key and Nonce/Salt/IV, General purpose functions such as timing-safe comparison and data wiping from memory.",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-0.4.4.zip",
      "archiveFileName": "SpritzCipher-0.4.4.zip",
      "size": 17153,
      "checksum": "SHA-256:86df0c0bddf6c0aee22c4b2c0a409cb45cc70e2319a6a6e43477288d23c7442e"
    },
    {
      "name": "SpritzCipher",
      "version": "0.5.0",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz cipher library, Random bytes generator, Data encryption, Hash and MAC.",
      "paragraph": "This Spritz (a spongy RC4-like stream cipher and hash function) library contains cryptographic random bytes generator, Cryptographic hash function, Message Authentication Code (MAC) function, Data encryption/decryption using Key and Nonce/Salt/IV, General purpose functions such as timing-safe comparison and data wiping from memory.",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-0.5.0.zip",
      "archiveFileName": "SpritzCipher-0.5.0.zip",
      "size": 19555,
      "checksum": "SHA-256:8023f4968560be2cf75d0d5d167582bc91f11e7163412ef440bbba894b3884dc"
    },
    {
      "name": "SpritzCipher",
      "version": "0.5.1",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz cipher library, Random number generator, Data encryption, Hash and MAC.",
      "paragraph": "This Spritz (a spongy RC4-like stream cipher and hash function) library contains cryptographic pseudo-random number generator, Cryptographic hash function, Message Authentication Code (MAC) function, Data encryption/decryption using Key and Nonce/Salt/IV, General purpose functions such as timing-safe comparison and data wiping from memory.",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-0.5.1.zip",
      "archiveFileName": "SpritzCipher-0.5.1.zip",
      "size": 19540,
      "checksum": "SHA-256:81b9c440e5b0c1847e378b08d96c6c68c5881ee71ba541b82f216bab6ce0a462"
    },
    {
      "name": "SpritzCipher",
      "version": "0.5.2",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz cipher library, Random number generator, Data encryption, Hash and MAC.",
      "paragraph": "This Spritz (a spongy RC4-like stream cipher and hash function) library contains cryptographic pseudo-random number generator, Cryptographic hash function, Message Authentication Code (MAC) function, Data encryption/decryption using Key and Nonce/Salt/IV, General purpose functions such as timing-safe comparison and data wiping from memory.",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-0.5.2.zip",
      "archiveFileName": "SpritzCipher-0.5.2.zip",
      "size": 18337,
      "checksum": "SHA-256:9af42ddcf7751a72670289bdf917d05914c981e8eb7cabd80fbda1f9637bfe49"
    },
    {
      "name": "SpritzCipher",
      "version": "0.5.3",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz cipher library, Random number generator, Data encryption, Hash and MAC.",
      "paragraph": "This Spritz (a spongy RC4-like stream cipher and hash function) library contains cryptographic pseudo-random number generator, Cryptographic hash function, Message Authentication Code (MAC) function, Data encryption/decryption using Key and Nonce/Salt/IV, General purpose functions such as timing-safe comparison and data wiping from memory.",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-0.5.3.zip",
      "archiveFileName": "SpritzCipher-0.5.3.zip",
      "size": 18519,
      "checksum": "SHA-256:ea11cb36ae3ce52954439daf2bbd223c4bf11b261dbec9d7e61949413bf64f6c"
    },
    {
      "name": "SpritzCipher",
      "version": "0.9.0",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz cipher library, Random number generator, Data encryption, Hash and MAC.",
      "paragraph": "This Spritz (a spongy RC4-like stream cipher and hash function) library contains cryptographic pseudo-random number generator, Cryptographic hash function, Message Authentication Code (MAC) function, Data encryption/decryption using Key and Nonce/Salt/IV, General purpose functions such as timing-safe comparison and data wiping from memory.",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-0.9.0.zip",
      "archiveFileName": "SpritzCipher-0.9.0.zip",
      "size": 18527,
      "checksum": "SHA-256:6a0595e809440bd8ab6cc117a17864f96b6b072576a6a31e7853031991b48f1d"
    },
    {
      "name": "SpritzCipher",
      "version": "0.9.1",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz cipher library, Random number generator, Data encryption, Hash and MAC.",
      "paragraph": "This Spritz (a spongy RC4-like stream cipher and hash function) library contains cryptographic pseudo-random number generator, Cryptographic hash function, Message Authentication Code (MAC) function, Data encryption/decryption using Key and Nonce/Salt/IV, General purpose functions such as timing-safe comparison and data wiping from memory.",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-0.9.1.zip",
      "archiveFileName": "SpritzCipher-0.9.1.zip",
      "size": 18561,
      "checksum": "SHA-256:14b458c2b9251691106db877cd9d7993561cc2fe55ff1b3f1917f8d23301ed4e"
    },
    {
      "name": "SpritzCipher",
      "version": "0.9.2",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz cipher library, Random number generator, Data encryption, Hash and MAC.",
      "paragraph": "This Spritz (a spongy RC4-like stream cipher and hash function) library contains cryptographic pseudo-random number generator, Cryptographic hash function, Message Authentication Code (MAC) function, Data encryption/decryption using Key and Nonce/Salt/IV, General purpose functions such as timing-safe comparison and data wiping from memory.",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-0.9.2.zip",
      "archiveFileName": "SpritzCipher-0.9.2.zip",
      "size": 18732,
      "checksum": "SHA-256:aacb94ed37a35b8561b4bcfe7ecf8e12376ff8bb2efe3789fec50cb9f88591fa"
    },
    {
      "name": "SpritzCipher",
      "version": "0.9.3",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz cipher library, Cryptographic random number generator, Data encryption, Hash and MAC.",
      "paragraph": "This Spritz (a spongy RC4-like stream cipher and hash function) library contains a cryptographic pseudo-random number generator, a cryptographic hash function, a message authentication code (MAC) function, Data encryption/decryption using Key and Nonce/Salt/IV, and some general-purpose functions such as timing-safe comparison and data wiping from memory.",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-0.9.3.zip",
      "archiveFileName": "SpritzCipher-0.9.3.zip",
      "size": 18979,
      "checksum": "SHA-256:f46f0267b35fa9d2beb356a1b9b65d238fd6c457b3f85eb13bd4c6ff368f3ff5"
    },
    {
      "name": "SpritzCipher",
      "version": "0.9.4",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz cipher library, Cryptographic random number generator, Data encryption, Hash and MAC.",
      "paragraph": "This Spritz (a spongy RC4-like stream cipher and hash function) library contains a cryptographic pseudo-random number generator, a cryptographic hash function, a message authentication code (MAC) function, Data encryption/decryption using Key and Nonce/Salt/IV, and some general-purpose functions such as timing-safe comparison and data wiping from memory.",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-0.9.4.zip",
      "archiveFileName": "SpritzCipher-0.9.4.zip",
      "size": 18967,
      "checksum": "SHA-256:4cfd65097c234aded7355cab86143b59bbcdb30e7d07c80e9ffd13d6093f2763"
    },
    {
      "name": "SpritzCipher",
      "version": "0.9.5",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz library for Arduino, CSPRNG, cryptographic hash and MAC functions, symmetric-key data encryption, and some general-purpose functions.",
      "paragraph": "Spritz is a spongy RC4-like stream cipher and hash function. This library contains a cryptographic pseudo-random number generator, cryptographic hash and message authentication code (MAC) functions, can perform symmetric-key authenticated data encryption, and general-purpose functions for timing-safe comparison and wiping data from memory.",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-0.9.5.zip",
      "archiveFileName": "SpritzCipher-0.9.5.zip",
      "size": 19534,
      "checksum": "SHA-256:c02ed8796e07026d94d407541d23d036f5587132ddb2313f0d9d2a4169e55a0a"
    },
    {
      "name": "SpritzCipher",
      "version": "1.0.0",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz library for Arduino, CSPRNG, cryptographic hash and MAC functions, symmetric-key data encryption, and some general-purpose functions.",
      "paragraph": "Spritz is a spongy RC4-like stream cipher and hash function. This library contains a cryptographic pseudo-random number generator, cryptographic hash and message authentication code (MAC) functions, can perform symmetric-key authenticated data encryption, and general-purpose functions for timing-safe comparison and wiping data from memory.",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-1.0.0.zip",
      "archiveFileName": "SpritzCipher-1.0.0.zip",
      "size": 19530,
      "checksum": "SHA-256:ab453738e4433b1938016fc7a54a72d911adac7503cce6b88a47bd2cbc6b854b"
    },
    {
      "name": "SpritzCipher",
      "version": "1.0.1",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz library for Arduino, CSPRNG, cryptographic hash and MAC functions, symmetric-key data encryption, and some general-purpose functions.",
      "paragraph": "Spritz is a spongy RC4-like stream cipher and hash function. This library contains a cryptographic pseudo-random number generator, cryptographic hash and message authentication code (MAC) functions, can perform symmetric-key authenticated data encryption, and general-purpose functions for timing-safe comparison and wiping data from memory.",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-1.0.1.zip",
      "archiveFileName": "SpritzCipher-1.0.1.zip",
      "size": 19542,
      "checksum": "SHA-256:745d52944e325f1d33063f41aa06eeb8ecf018259ff2e7bd2360e699f0f7ded2"
    },
    {
      "name": "SpritzCipher",
      "version": "1.0.2",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz library for Arduino, CSPRNG, cryptographic hash and MAC functions, symmetric-key data encryption, and some general-purpose functions.",
      "paragraph": "Spritz is a spongy RC4-like stream cipher and hash function. This library contains a cryptographic pseudo-random number generator, cryptographic hash and message authentication code (MAC) functions, can perform symmetric-key authenticated data encryption, and general-purpose functions for timing-safe comparison and wiping data from memory.",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-1.0.2.zip",
      "archiveFileName": "SpritzCipher-1.0.2.zip",
      "size": 21917,
      "checksum": "SHA-256:57d7fc2ec1931d9eb85bff62f6d475a2a0c89864d02b4e3e7dc4b5204d21c6ad"
    },
    {
      "name": "SpritzCipher",
      "version": "1.0.3",
      "author": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "maintainer": "Abderraouf Adjal \u003cabderraouf.adjal@gmail.com\u003e",
      "sentence": "Spritz library for Arduino, CSPRNG, cryptographic hash and MAC functions, symmetric-key data encryption, and some general-purpose functions.",
      "paragraph": "Spritz is a spongy RC4-like stream cipher and hash function. This library contains a cryptographic pseudo-random number generator, cryptographic hash and message authentication code (MAC) functions, can perform symmetric-key authenticated data encryption, and general-purpose functions for timing-safe comparison and wiping data from memory.",
      "website": "https://github.com/abderraouf-adjal/ArduinoSpritzCipher",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/abderraouf-adjal/SpritzCipher-1.0.3.zip",
      "archiveFileName": "SpritzCipher-1.0.3.zip",
      "size": 19714,
      "checksum": "SHA-256:4f91b7aad9e64ce05f6212ed9e9a069d77c1eb73d60e648f1cd60fe76b3a6c8f"
    },
    {
      "name": "FaBoBLE-BLE113",
      "version": "1.0.1",
      "author": "FaBo\u003cinfo@fabo.io\u003e",
      "maintainer": "Akira Sasaki\u003cakira@fabo.io\u003e",
      "sentence": "A library for SiliconLabs BLE113.",
      "paragraph": "BLE113 is SiliconLabs BLE module.",
      "website": "https://github.com/FaBoPlatform/FaBoBLE-BLE113-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/FaBoPlatform/FaBoBLE_BLE113-1.0.1.zip",
      "archiveFileName": "FaBoBLE_BLE113-1.0.1.zip",
      "size": 11167,
      "checksum": "SHA-256:1e72b3b57968fd116167c475f385cbe4a6aa749a728138fd60c4204f0a0a18f5"
    },
    {
      "name": "ResponsiveAnalogRead",
      "version": "0.0.1",
      "author": "Damien Clarke \u003cdxinteractive@gmail.com\u003e",
      "maintainer": "Damien Clarke \u003cdxinteractive@gmail.com\u003e",
      "sentence": "Arduino library for eliminating noise in analogRead inputs without decreasing responsiveness",
      "paragraph": "Arduino library for eliminating noise in analogRead inputs without decreasing responsiveness",
      "website": "http://damienclarke.me/code/responsive-analog-read",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/dxinteractive/ResponsiveAnalogRead-0.0.1.zip",
      "archiveFileName": "ResponsiveAnalogRead-0.0.1.zip",
      "size": 8198,
      "checksum": "SHA-256:e595513b81e199d4e7b1839cdd4655a722b0f611ec0431cabe6fb00f5db29320"
    },
    {
      "name": "ResponsiveAnalogRead",
      "version": "1.0.1",
      "author": "Damien Clarke \u003cdxinteractive@gmail.com\u003e",
      "maintainer": "Damien Clarke \u003cdxinteractive@gmail.com\u003e",
      "sentence": "Arduino library for eliminating noise in analogRead inputs without decreasing responsiveness",
      "paragraph": "Arduino library for eliminating noise in analogRead inputs without decreasing responsiveness",
      "website": "http://damienclarke.me/code/responsive-analog-read",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/dxinteractive/ResponsiveAnalogRead-1.0.1.zip",
      "archiveFileName": "ResponsiveAnalogRead-1.0.1.zip",
      "size": 8608,
      "checksum": "SHA-256:bcd680ddfa7708e4c70448f7b107a4a70138d03a407f0b947ff6fbd5e7483101"
    },
    {
      "name": "ResponsiveAnalogRead",
      "version": "1.1.0",
      "author": "Damien Clarke \u003cdxinteractive@gmail.com\u003e",
      "maintainer": "Damien Clarke \u003cdxinteractive@gmail.com\u003e",
      "sentence": "Arduino library for eliminating noise in analogRead inputs without decreasing responsiveness",
      "paragraph": "Arduino library for eliminating noise in analogRead inputs without decreasing responsiveness",
      "website": "http://damienclarke.me/code/responsive-analog-read",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/dxinteractive/ResponsiveAnalogRead-1.1.0.zip",
      "archiveFileName": "ResponsiveAnalogRead-1.1.0.zip",
      "size": 9281,
      "checksum": "SHA-256:e2af24607f5f3de39cfbda997597e3e1487ed28dc6e8b9ce5aa6a41e42007278"
    },
    {
      "name": "Nokia 5110 Driver",
      "version": "1.0.0",
      "author": "Hossein Baghayi",
      "maintainer": "Hossein Baghayi \u003chossein.baghayi@gmail.com\u003e",
      "sentence": "Nokia 5110 LCD driver",
      "paragraph": "This driver is intended to ease the process to handling Nokia 5110 LCD.",
      "website": "https://github.com/baghayi/Nokia_5110",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/baghayi/Nokia_5110_Driver-1.0.0.zip",
      "archiveFileName": "Nokia_5110_Driver-1.0.0.zip",
      "size": 10499,
      "checksum": "SHA-256:025cbf9f439983db2e09d208205ce0d32ab914fe5809ae5195804da0f91a4b0d"
    },
    {
      "name": "Nokia 5110 Driver",
      "version": "1.0.2",
      "author": "Hossein Baghayi",
      "maintainer": "Hossein Baghayi \u003chossein.baghayi@gmail.com\u003e",
      "sentence": "Nokia 5110 LCD driver",
      "paragraph": "This driver is intended to ease the process of handling Nokia 5110 LCD.",
      "website": "https://github.com/baghayi/Nokia_5110",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/baghayi/Nokia_5110_Driver-1.0.2.zip",
      "archiveFileName": "Nokia_5110_Driver-1.0.2.zip",
      "size": 12056,
      "checksum": "SHA-256:84fbe79bbb45e1d738c1abdecaaf1104528b64b332c3bd25e17ad82790aec406"
    },
    {
      "name": "Nokia 5110 Driver",
      "version": "1.0.3",
      "author": "Hossein Baghayi",
      "maintainer": "Hossein Baghayi \u003chossein.baghayi@gmail.com\u003e",
      "sentence": "Nokia 5110 LCD driver",
      "paragraph": "This driver is intended to ease the process of handling Nokia 5110 LCD.",
      "website": "https://github.com/baghayi/Nokia_5110",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/baghayi/Nokia_5110_Driver-1.0.3.zip",
      "archiveFileName": "Nokia_5110_Driver-1.0.3.zip",
      "size": 12303,
      "checksum": "SHA-256:abe7f42abe235994a6d84b19f9802511932f1c241dcb776424a0a84af6a9c0ca"
    },
    {
      "name": "Arduino Process Scheduler",
      "version": "1.0.0",
      "author": "D. Aaron Wisner \u003cdaw268@cornell.edu\u003e",
      "maintainer": "D. Aaron Wisner \u003cdaw268@cornell.edu\u003e",
      "sentence": "An OOP multitasking library",
      "paragraph": "A thread safe Library that gives the user fine grained control over custom 'Process' objects. Dynamically schedule how often a process runs and/or number of iterations. Advanced features include Exception handling and Process CPU time statistics.",
      "website": "https://github.com/wizard97/ArduinoProcessScheduler",
      "category": "Timing",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/wizard97/Arduino_Process_Scheduler-1.0.0.zip",
      "archiveFileName": "Arduino_Process_Scheduler-1.0.0.zip",
      "size": 15494,
      "checksum": "SHA-256:f3119b5763eefbb3e3a85819f88e74dc1fabfe63f78dc53769bb72de0bce6052"
    },
    {
      "name": "XLR8BuildTemplate",
      "version": "0.0.1",
      "author": "Alorium Technology",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Template for building custom designs for XLR8",
      "paragraph": "Use this template to create a build directory for XLR8 designs",
      "website": "https://github.com/AloriumTechnology/XLR8BuildTemplate",
      "category": "Uncategorized",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8BuildTemplate-0.0.1.zip",
      "archiveFileName": "XLR8BuildTemplate-0.0.1.zip",
      "size": 20021,
      "checksum": "SHA-256:df476c48baf9c3c617e1ae93daec4b79c4b08bf0f8db50b0e36203d2163b7817"
    },
    {
      "name": "XLR8BuildTemplate",
      "version": "0.0.2",
      "author": "Alorium Technology",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Template for building custom designs for XLR8",
      "paragraph": "Use this template to create a build directory for XLR8 designs",
      "website": "https://github.com/AloriumTechnology/XLR8BuildTemplate",
      "category": "Uncategorized",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8BuildTemplate-0.0.2.zip",
      "archiveFileName": "XLR8BuildTemplate-0.0.2.zip",
      "size": 21984,
      "checksum": "SHA-256:ea95c37aeb0f9d60ff738686afab5c9897ed5d0a90fe89ab3b208d0033518069"
    },
    {
      "name": "XLR8BuildTemplate",
      "version": "1.0.0",
      "author": "Alorium Technology",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Template for building custom designs for XLR8",
      "paragraph": "Use this template to create a build directory for XLR8 designs using the Alorium Technology OpenXLR8 flow",
      "website": "https://github.com/AloriumTechnology/XLR8BuildTemplate",
      "category": "Uncategorized",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8BuildTemplate-1.0.0.zip",
      "archiveFileName": "XLR8BuildTemplate-1.0.0.zip",
      "size": 22137,
      "checksum": "SHA-256:2f154fe4cfa59f3d719c5c6b4c850006f56c353f328bded2f7481b08cbfd7b31"
    },
    {
      "name": "Iondb",
      "version": "1.1.0",
      "author": "IonDB Project \u003ciondbproject@gmail.com\u003e",
      "maintainer": "IonDB Project \u003ciondbproject@gmail.com\u003e",
      "sentence": "A powerful key-value store for all data storage needs.",
      "paragraph": "Supports multiple back-end storage engines, complex queries, and more!",
      "website": "http://iondb.org",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/iondbproject/Iondb-1.1.0.zip",
      "archiveFileName": "Iondb-1.1.0.zip",
      "size": 109021,
      "checksum": "SHA-256:8590cba13212532185b3777b90dbe600995e932e6de392e8fccfbf67b4c6122c"
    },
    {
      "name": "Iondb",
      "version": "1.1.1",
      "author": "IonDB Project \u003ciondbproject@gmail.com\u003e",
      "maintainer": "IonDB Project \u003ciondbproject@gmail.com\u003e",
      "sentence": "A powerful key-value store for all data storage needs.",
      "paragraph": "Supports multiple back-end storage engines, complex queries, and more!",
      "website": "http://iondb.org",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/iondbproject/Iondb-1.1.1.zip",
      "archiveFileName": "Iondb-1.1.1.zip",
      "size": 109315,
      "checksum": "SHA-256:bd9d4fb4dd9cc3dd71f57c8c9ea690865cc8db0fcc6ec082d4f3bc5d2a6b1bf1"
    },
    {
      "name": "Iondb",
      "version": "1.2.0",
      "author": "IonDB Project \u003ciondbproject@gmail.com\u003e",
      "maintainer": "IonDB Project \u003ciondbproject@gmail.com\u003e",
      "sentence": "A powerful key-value store for all data storage needs.",
      "paragraph": "Supports multiple back-end storage engines, complex queries, and more!",
      "website": "http://iondb.org",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/iondbproject/Iondb-1.2.0.zip",
      "archiveFileName": "Iondb-1.2.0.zip",
      "size": 114880,
      "checksum": "SHA-256:f6adaf0b4123e4256e4b711e348269f86a6c499b6bcef93dec7f065cb850c6c8"
    },
    {
      "name": "XLR8Core",
      "version": "0.0.1",
      "author": "Alorium Technology",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "OpenXLR8 Core components",
      "paragraph": "With these components, users can integrate their own designs into XLR8 platform",
      "website": "https://github.com/AloriumTechnology/XLR8Core",
      "category": "Uncategorized",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8Core-0.0.1.zip",
      "archiveFileName": "XLR8Core-0.0.1.zip",
      "size": 5164601,
      "checksum": "SHA-256:178acee22a739c2bed564665aeebdd58e1a656434858d91ba9c6ad2cf5554cbe"
    },
    {
      "name": "XLR8Core",
      "version": "0.0.2",
      "author": "Alorium Technology",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "OpenXLR8 Core components",
      "paragraph": "With these components, users can integrate their own designs into XLR8 platform",
      "website": "https://github.com/AloriumTechnology/XLR8Core",
      "category": "Uncategorized",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8Core-0.0.2.zip",
      "archiveFileName": "XLR8Core-0.0.2.zip",
      "size": 5239149,
      "checksum": "SHA-256:361449603d7abbc9fcd94e14d2c8d1a516ad5acc1b25a5d0e4ade9af05dcc3a8"
    },
    {
      "name": "XLR8Core",
      "version": "1.0.1",
      "author": "Alorium Technology",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "OpenXLR8 Core components",
      "paragraph": "With these components, users can integrate their own designs into XLR8 platform",
      "website": "https://github.com/AloriumTechnology/XLR8Core",
      "category": "Uncategorized",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8Core-1.0.1.zip",
      "archiveFileName": "XLR8Core-1.0.1.zip",
      "size": 5240568,
      "checksum": "SHA-256:c4d8a8a51f353f15f522f86496121754bee14d8c6fa0c9d84fe70454b178dc65"
    },
    {
      "name": "XLR8Core",
      "version": "1.0.2",
      "author": "Alorium Technology",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "OpenXLR8 Core components",
      "paragraph": "With these components, users can integrate their own designs into XLR8 platform using the Alorium Technology OpenXLR8 flow",
      "website": "https://github.com/AloriumTechnology/XLR8Core",
      "category": "Uncategorized",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8Core-1.0.2.zip",
      "archiveFileName": "XLR8Core-1.0.2.zip",
      "size": 5240584,
      "checksum": "SHA-256:3eec962cbaf577cc6131062a6ca5eaacfba2816ed1b7bb092fb67d6c02e520df"
    },
    {
      "name": "XLR8Pong",
      "version": "1.0.0",
      "author": "Alorium Technology",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Pong game using the FPGA logic. For Alorium Technology's XLR8 board.",
      "paragraph": "\u003cbr /\u003e",
      "website": "https://github.com/AloriumTechnology/XLR8Pong",
      "category": "Uncategorized",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8Pong-1.0.0.zip",
      "archiveFileName": "XLR8Pong-1.0.0.zip",
      "size": 23909,
      "checksum": "SHA-256:30f38bf9dd6f60c735fcf5ef80a014a93f539bf0f69072b66daf767a4f74474d"
    },
    {
      "name": "Lora Serialization",
      "version": "2.1.0",
      "author": "Joscha Feth \u003cjoscha@feth.com\u003e",
      "maintainer": "Joscha Feth \u003cjoscha@feth.com\u003e",
      "sentence": "Library for serialization of data on the Arduino side and deserialization in the TTN",
      "website": "https://github.com/thesolarnomad/lora-serialization",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thesolarnomad/Lora_Serialization-2.1.0.zip",
      "archiveFileName": "Lora_Serialization-2.1.0.zip",
      "size": 430879,
      "checksum": "SHA-256:be2bbd6a2ec2af70c3cdc62d589e111fed377356a4691f741fc611cc4ec217f3"
    },
    {
      "name": "Lora Serialization",
      "version": "2.2.0",
      "author": "Joscha Feth \u003cjoscha@feth.com\u003e",
      "maintainer": "Joscha Feth \u003cjoscha@feth.com\u003e",
      "sentence": "Library for serialization of data on the Arduino side and deserialization in the TTN",
      "website": "https://github.com/thesolarnomad/lora-serialization",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thesolarnomad/Lora_Serialization-2.2.0.zip",
      "archiveFileName": "Lora_Serialization-2.2.0.zip",
      "size": 433567,
      "checksum": "SHA-256:3d4a425589394c429f5d1f1f6bd0aff84661110197271d332f48651307416fc0"
    },
    {
      "name": "Shifty",
      "version": "0.1.0",
      "author": "Jonathan Bartlett \u003cjonathan@bartlettpublishing.com\u003e",
      "maintainer": "Jonathan Bartlett \u003cjonathan@bartlettpublishing.com\u003e",
      "sentence": "Extremely flexible and easy-to-use shift register driver for 74HC595 shift registers",
      "paragraph": "This library is a very flexible way to manage 74HC595 shift registers on Arduino.  It allows you to write to individual outputs just like \"digitalWrite\", allows you to daisy-chain shift registers together, and, if you wire it according to the README, allows you to use your shift register for *both* input *and* output pins.  Note that the input is still under active development and may or may not be functional at the moment.",
      "website": "http://www.github.com/johnnyb/Shifty",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/johnnyb/Shifty-0.1.0.zip",
      "archiveFileName": "Shifty-0.1.0.zip",
      "size": 5257,
      "checksum": "SHA-256:07c0f5412642d6d0b0641896018144c97b66e7e674041961c56d1a81db9362ad"
    },
    {
      "name": "Shifty",
      "version": "0.1.3",
      "author": "Jonathan Bartlett \u003cjonathan@bartlettpublishing.com\u003e",
      "maintainer": "Jonathan Bartlett \u003cjonathan@bartlettpublishing.com\u003e",
      "sentence": "Extremely flexible and easy-to-use shift register driver for 74HC595 shift registers",
      "paragraph": "This library is a very flexible way to manage 74HC595 shift registers on Arduino.  It allows you to write to individual outputs just like \"digitalWrite\", allows you to daisy-chain shift registers together, and, if you wire it according to the README, allows you to use your shift register for *both* input *and* output pins.  Note that the input is still under active development and may or may not be functional at the moment.",
      "website": "http://www.github.com/johnnyb/Shifty",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/johnnyb/Shifty-0.1.3.zip",
      "archiveFileName": "Shifty-0.1.3.zip",
      "size": 5338,
      "checksum": "SHA-256:a578f4f4d93f493cb0f5fe74fe78c4f4b4851ee1ed675488264de523c86d46bc"
    },
    {
      "name": "Shifty",
      "version": "0.1.5",
      "author": "Jonathan Bartlett \u003cjonathan@bartlettpublishing.com\u003e",
      "maintainer": "Jonathan Bartlett \u003cjonathan@bartlettpublishing.com\u003e",
      "sentence": "Extremely flexible and easy-to-use shift register driver for 74HC595 shift registers",
      "paragraph": "This library is a very flexible way to manage 74HC595 shift registers on Arduino.  It allows you to write to individual outputs just like \"digitalWrite\", allows you to daisy-chain shift registers together, and, if you wire it according to the README, allows you to use your shift register for *both* input *and* output pins.  Note that the input is still under active development and may or may not be functional at the moment.",
      "website": "http://www.github.com/johnnyb/Shifty",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/johnnyb/Shifty-0.1.5.zip",
      "archiveFileName": "Shifty-0.1.5.zip",
      "size": 5335,
      "checksum": "SHA-256:976b65043ab424215b7a2dfa6716b6114e645229375d3e7aa66c158d48af328a"
    },
    {
      "name": "Eventually",
      "version": "0.1.0",
      "author": "Jonathan Bartlett \u003cjonathan@bartlettpublishing.com\u003e",
      "maintainer": "Jonathan Bartlett \u003cjonathan@bartlettpublishing.com\u003e",
      "sentence": "Event-based programming library for Arduino",
      "paragraph": "This library is meant to make Arduino programming tasks much more simplified by using an event-driven model rather than the standard looping model.",
      "website": "http://www.github.com/johnnyb/Eventually",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/johnnyb/Eventually-0.1.0.zip",
      "archiveFileName": "Eventually-0.1.0.zip",
      "size": 10066,
      "checksum": "SHA-256:ebffc0afb656336233944dc39014aa0972629a9a4b687bf18f73e199ddbf22b8"
    },
    {
      "name": "Eventually",
      "version": "0.1.3",
      "author": "Jonathan Bartlett \u003cjonathan@bartlettpublishing.com\u003e",
      "maintainer": "Jonathan Bartlett \u003cjonathan@bartlettpublishing.com\u003e",
      "sentence": "Event-based programming library for Arduino",
      "paragraph": "This library is meant to make Arduino programming tasks much more simplified by using an event-driven model rather than the standard looping model.",
      "website": "http://www.github.com/johnnyb/Eventually",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/johnnyb/Eventually-0.1.3.zip",
      "archiveFileName": "Eventually-0.1.3.zip",
      "size": 10161,
      "checksum": "SHA-256:1afd73680391700ae79798147bd7acb5e10902f0b77bdcb15a5a399f7e931e2b"
    },
    {
      "name": "MAX1464",
      "version": "1.0.0",
      "author": "Giacomo Mazzamuto \u003cgmazzamuto@gmail.com\u003e",
      "maintainer": "Giacomo Mazzamuto \u003cgmazzamuto@gmail.com\u003e",
      "sentence": "A complete interface for the the Maxim MAX1464 Multichannel Sensor Signal Processor for Arduino.",
      "website": "https://github.com/gmazzamuto/MAX1464-Arduino-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/gmazzamuto/MAX1464-1.0.0.zip",
      "archiveFileName": "MAX1464-1.0.0.zip",
      "size": 57423,
      "checksum": "SHA-256:eaad7fe9722420d69e6fc9c09ee66edda986ccf63ae6a591497f704ec7aa4f30"
    },
    {
      "name": "ACROBOTIC SSD1306",
      "version": "1.0.0",
      "author": "ACROBOTIC",
      "maintainer": "ACROBOTIC \u003cmaster@acrobotic.com\u003e",
      "sentence": "Library for SSD1306-powered OLED 128x64 displays!",
      "paragraph": "Library for SSD1306-powered OLED 128x64 displays!",
      "website": "https://github.com/acrobotic/Ai_Ardulib_SSD1306",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/acrobotic/ACROBOTIC_SSD1306-1.0.0.zip",
      "archiveFileName": "ACROBOTIC_SSD1306-1.0.0.zip",
      "size": 16581,
      "checksum": "SHA-256:3ab3ee2b63130e38b3a52b277e1755c94d94d30a4f3666d18b8c22cf1c999f1f"
    },
    {
      "name": "ACROBOTIC SSD1306",
      "version": "1.0.1",
      "author": "ACROBOTIC",
      "maintainer": "ACROBOTIC \u003cmaster@acrobotic.com\u003e",
      "sentence": "Library for SSD1306-powered OLED 128x64 displays!",
      "paragraph": "This is a library for displaying text and images in SSD1306-powered OLED 128x64 displays; includes support for the ESP8266 SoC!",
      "website": "https://github.com/acrobotic/Ai_Ardulib_SSD1306",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/acrobotic/ACROBOTIC_SSD1306-1.0.1.zip",
      "archiveFileName": "ACROBOTIC_SSD1306-1.0.1.zip",
      "size": 18891,
      "checksum": "SHA-256:ca3cd281fa967ef3651dde609a45b543407b44693348bef18fff2d4799e98300"
    },
    {
      "name": "LispMotor",
      "version": "0.0.1",
      "author": "Lisper.li",
      "maintainer": "Lisper \u003cleyapin@gmail.com\u003e",
      "sentence": "L298x driver",
      "paragraph": "This library make it easy to control car with DC motors use L298x",
      "website": "https://github.com/leyap/LispMotor",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/leyap/LispMotor-0.0.1.zip",
      "archiveFileName": "LispMotor-0.0.1.zip",
      "size": 3763,
      "checksum": "SHA-256:5f9620413293dedc054d0ae11057d7ac1144a3632853a09b34146b7e68b41bb3"
    },
    {
      "name": "RTCDue",
      "version": "1.1.0",
      "author": "Markus Lange",
      "maintainer": "Markus Lange \u003cmlange.unipb@gmail.com\u003e",
      "sentence": "Use for the RTC inside the SAM3X8E from the Arduino DUE",
      "paragraph": "The RTCDue Library feature: access to the RTC Modul from the DUE to set time, date and alarm functions.",
      "website": "https://github.com/MarkusLange/RTCDue",
      "category": "Timing",
      "architectures": [
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MarkusLange/RTCDue-1.1.0.zip",
      "archiveFileName": "RTCDue-1.1.0.zip",
      "size": 17736,
      "checksum": "SHA-256:95abcdd36ff02fa31eea86539db8e0a017d06df3cb6542b480ea9e3b380af1ac"
    },
    {
      "name": "WizFi250",
      "version": "1.1.0",
      "author": "DongEun Koak",
      "maintainer": "WIZnet \u003cnet@wiznet.co.kr\u003e",
      "sentence": "Helps using your Arduino board to Wi-Fi easily and fast",
      "paragraph": "Helps using your Arduino board to Wi-Fi easily and fast",
      "website": "https://github.com/Wiznet/WizFi250_arduino_library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Wiznet/WizFi250-1.1.0.zip",
      "archiveFileName": "WizFi250-1.1.0.zip",
      "size": 716016,
      "checksum": "SHA-256:95b7e42089af6dcd68b61e011b1149b837d0f779da95c917c034a307039a1c37"
    },
    {
      "name": "WizFi250",
      "version": "1.2.0",
      "author": "DongEun Koak",
      "maintainer": "WIZnet \u003cnet@wiznet.co.kr\u003e",
      "sentence": "Helps using your Arduino board to Wi-Fi easily and fast",
      "paragraph": "Helps using your Arduino board to Wi-Fi easily and fast",
      "website": "https://github.com/Wiznet/WizFi250_arduino_library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Wiznet/WizFi250-1.2.0.zip",
      "archiveFileName": "WizFi250-1.2.0.zip",
      "size": 715986,
      "checksum": "SHA-256:a2f6ec7fda609420daa5527c35e781107500135e542b8892a51f0d934bf99a67"
    },
    {
      "name": "WizFi250",
      "version": "1.3.0",
      "author": "DongEun Koak",
      "maintainer": "WIZnet \u003cnet@wiznet.co.kr\u003e",
      "sentence": "Helps using your Arduino board to Wi-Fi easily and fast",
      "paragraph": "Helps using your Arduino board to Wi-Fi easily and fast",
      "website": "https://github.com/Wiznet/WizFi250_arduino_library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Wiznet/WizFi250-1.3.0.zip",
      "archiveFileName": "WizFi250-1.3.0.zip",
      "size": 716617,
      "checksum": "SHA-256:4a347b3b6e168944a54e54107169c05733c1d46902bdab39c9841abe730ae6fe"
    },
    {
      "name": "WizFi250",
      "version": "1.0.0",
      "author": "DongEun Koak",
      "maintainer": "WIZnet \u003cnet@wiznet.co.kr\u003e",
      "sentence": "Helps using your Arduino board to Wi-Fi easily and fast",
      "paragraph": "Helps using your Arduino board to Wi-Fi easily and fast",
      "website": "https://github.com/Wiznet/WizFi250_arduino_library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Wiznet/WizFi250-1.0.0.zip",
      "archiveFileName": "WizFi250-1.0.0.zip",
      "size": 714987,
      "checksum": "SHA-256:fd7ced45345408d2dc11ee73e0b931cacd65e90bbf5b33f8546d23f3312f8db3"
    },
    {
      "name": "BowlerCom",
      "version": "3.12.0",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate between an arduino and a computer.",
      "paragraph": "This library adds suppoort for the Bolwer Protocol to arduino. It lets you form namespaces and RPCs of arbitrary types and sizes, and send them in a compact binary format.",
      "website": "https://github.com/madhephaestus/BowlerCom",
      "category": "Communication",
      "architectures": [
        "avr",
        "arc32"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CommonWealthRobotics/BowlerCom-3.12.0.zip",
      "archiveFileName": "BowlerCom-3.12.0.zip",
      "size": 84724,
      "checksum": "SHA-256:b550eec4d73e20c272444328b5c065894ba6e964592d56a7a26d0d368bf6273c"
    },
    {
      "name": "BowlerCom",
      "version": "3.12.2",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate between an arduino and a computer.",
      "paragraph": "This library adds suppoort for the Bolwer Protocol to arduino. It lets you form namespaces and RPCs of arbitrary types and sizes, and send them in a compact binary format.",
      "website": "https://github.com/CommonWealthRobotics/BowlerCom",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CommonWealthRobotics/BowlerCom-3.12.2.zip",
      "archiveFileName": "BowlerCom-3.12.2.zip",
      "size": 84710,
      "checksum": "SHA-256:ea32cc442480b23794dec71aa9fa1070041f828e7403e1b7fe262308ae708e92"
    },
    {
      "name": "BowlerCom",
      "version": "3.12.3",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate between an arduino and a computer.",
      "paragraph": "This library adds suppoort for the Bolwer Protocol to arduino. It lets you form namespaces and RPCs of arbitrary types and sizes, and send them in a compact binary format.",
      "website": "https://github.com/CommonWealthRobotics/BowlerCom",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CommonWealthRobotics/BowlerCom-3.12.3.zip",
      "archiveFileName": "BowlerCom-3.12.3.zip",
      "size": 85320,
      "checksum": "SHA-256:80d84583ae5999519a099a710450201ef83756288656f521a5d80b27cb826380"
    },
    {
      "name": "BowlerCom",
      "version": "3.12.4",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate between an arduino and a computer.",
      "paragraph": "This library adds suppoort for the Bolwer Protocol to arduino. It lets you form namespaces and RPCs of arbitrary types and sizes, and send them in a compact binary format.",
      "website": "https://github.com/CommonWealthRobotics/BowlerCom",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CommonWealthRobotics/BowlerCom-3.12.4.zip",
      "archiveFileName": "BowlerCom-3.12.4.zip",
      "size": 87153,
      "checksum": "SHA-256:93b1f79859958ddca685718715564532166746003eb874eec1b7c64acc6da8b9"
    },
    {
      "name": "BowlerCom",
      "version": "3.12.5",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate between an arduino and a computer.",
      "paragraph": "This library adds suppoort for the Bolwer Protocol to arduino. It lets you form namespaces and RPCs of arbitrary types and sizes, and send them in a compact binary format.",
      "website": "https://github.com/CommonWealthRobotics/BowlerCom",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CommonWealthRobotics/BowlerCom-3.12.5.zip",
      "archiveFileName": "BowlerCom-3.12.5.zip",
      "size": 87498,
      "checksum": "SHA-256:33a3feb3ee3e8ef9f31bcb358335414d53650a80a41d954eb3538d28d4dec93a"
    },
    {
      "name": "BowlerCom",
      "version": "3.12.6",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate between an arduino and a computer.",
      "paragraph": "This library adds suppoort for the Bolwer Protocol to arduino. It lets you form namespaces and RPCs of arbitrary types and sizes, and send them in a compact binary format.",
      "website": "https://github.com/CommonWealthRobotics/BowlerCom",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CommonWealthRobotics/BowlerCom-3.12.6.zip",
      "archiveFileName": "BowlerCom-3.12.6.zip",
      "size": 87603,
      "checksum": "SHA-256:132936dba2ffccda6b8dbd2c1bd4f2476592fe0bdf9da4e860b133379d5e14c3"
    },
    {
      "name": "BowlerCom",
      "version": "3.12.8",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate between an arduino and a computer.",
      "paragraph": "This library adds suppoort for the Bolwer Protocol to arduino. It lets you form namespaces and RPCs of arbitrary types and sizes, and send them in a compact binary format.",
      "website": "https://github.com/CommonWealthRobotics/BowlerCom",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CommonWealthRobotics/BowlerCom-3.12.8.zip",
      "archiveFileName": "BowlerCom-3.12.8.zip",
      "size": 89608,
      "checksum": "SHA-256:852d2e463299636c3ea78abe7db520573675c9ebef670d24c872d0071fb56db9"
    },
    {
      "name": "BowlerCom",
      "version": "3.12.9",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate between an arduino and a computer.",
      "paragraph": "This library adds suppoort for the Bolwer Protocol to arduino. It lets you form namespaces and RPCs of arbitrary types and sizes, and send them in a compact binary format.",
      "website": "https://github.com/CommonWealthRobotics/BowlerCom",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CommonWealthRobotics/BowlerCom-3.12.9.zip",
      "archiveFileName": "BowlerCom-3.12.9.zip",
      "size": 89521,
      "checksum": "SHA-256:d7b560caf913385fc1f8f4180cdaee34d29c7c8928b1152f32063b6bde9a5e34"
    },
    {
      "name": "BowlerCom",
      "version": "3.13.0",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate between an arduino and a computer.",
      "paragraph": "This library adds suppoort for the Bolwer Protocol to arduino. It lets you form namespaces and RPCs of arbitrary types and sizes, and send them in a compact binary format.",
      "website": "https://github.com/CommonWealthRobotics/BowlerCom",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CommonWealthRobotics/BowlerCom-3.13.0.zip",
      "archiveFileName": "BowlerCom-3.13.0.zip",
      "size": 90057,
      "checksum": "SHA-256:cc21e71bb5594152aaebb00bb2dcaa460bf54a94f9b3d55b958eb68541f19959"
    },
    {
      "name": "BowlerCom",
      "version": "3.13.1",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate between an arduino and a computer.",
      "paragraph": "This library adds suppoort for the Bolwer Protocol to arduino. It lets you form namespaces and RPCs of arbitrary types and sizes, and send them in a compact binary format.",
      "website": "https://github.com/CommonWealthRobotics/BowlerCom",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CommonWealthRobotics/BowlerCom-3.13.1.zip",
      "archiveFileName": "BowlerCom-3.13.1.zip",
      "size": 90037,
      "checksum": "SHA-256:4dcb11dfa6e4dff953ce725537549e1e97cb4cf92614ea02da685fd3fd17c661"
    },
    {
      "name": "BowlerCom",
      "version": "3.13.2",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate between an arduino and a computer.",
      "paragraph": "This library adds suppoort for the Bolwer Protocol to arduino. It lets you form namespaces and RPCs of arbitrary types and sizes, and send them in a compact binary format.",
      "website": "https://github.com/CommonWealthRobotics/BowlerCom",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CommonWealthRobotics/BowlerCom-3.13.2.zip",
      "archiveFileName": "BowlerCom-3.13.2.zip",
      "size": 90106,
      "checksum": "SHA-256:5283794517ccb6eeea7994218b33be12d53d1c83643b3d31450ee317c2f31ee4"
    },
    {
      "name": "BowlerCom",
      "version": "3.13.3",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate between an arduino and a computer.",
      "paragraph": "This library adds suppoort for the Bolwer Protocol to arduino. It lets you form namespaces and RPCs of arbitrary types and sizes, and send them in a compact binary format.",
      "website": "https://github.com/CommonWealthRobotics/BowlerCom",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CommonWealthRobotics/BowlerCom-3.13.3.zip",
      "archiveFileName": "BowlerCom-3.13.3.zip",
      "size": 90549,
      "checksum": "SHA-256:f7b5d9606bbedc270986efa4e9162e4187182d85fe1788d9723648e3dd107127"
    },
    {
      "name": "BowlerCom",
      "version": "3.13.4",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate between an arduino and a computer.",
      "paragraph": "This library adds suppoort for the Bolwer Protocol to arduino. It lets you form namespaces and RPCs of arbitrary types and sizes, and send them in a compact binary format.",
      "website": "https://github.com/CommonWealthRobotics/BowlerCom",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CommonWealthRobotics/BowlerCom-3.13.4.zip",
      "archiveFileName": "BowlerCom-3.13.4.zip",
      "size": 90708,
      "checksum": "SHA-256:2ac0dfd3090b1be77254fcfa53fb20804d829e82f765a439edefc6c817659754"
    },
    {
      "name": "BowlerCom",
      "version": "3.13.5",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate between an arduino and a computer.",
      "paragraph": "This library adds suppoort for the Bolwer Protocol to arduino. It lets you form namespaces and RPCs of arbitrary types and sizes, and send them in a compact binary format.",
      "website": "https://github.com/CommonWealthRobotics/BowlerCom",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CommonWealthRobotics/BowlerCom-3.13.5.zip",
      "archiveFileName": "BowlerCom-3.13.5.zip",
      "size": 90743,
      "checksum": "SHA-256:e329c68a9c443d9ff78fc90e3095205d3b7a25f5a9b7c0cf4b17b89c0a1c8bd1"
    },
    {
      "name": "BowlerCom",
      "version": "3.14.0",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate between an arduino and a computer.",
      "paragraph": "This library adds suppoort for the Bolwer Protocol to arduino. It lets you form namespaces and RPCs of arbitrary types and sizes, and send them in a compact binary format.",
      "website": "https://github.com/CommonWealthRobotics/BowlerCom",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CommonWealthRobotics/BowlerCom-3.14.0.zip",
      "archiveFileName": "BowlerCom-3.14.0.zip",
      "size": 92152,
      "checksum": "SHA-256:2a5d72c77b47945c13dc7395f83281ed96c666f4c9ce27694d0187e2266200e2"
    },
    {
      "name": "BowlerCom",
      "version": "3.15.0",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate between an arduino and a computer.",
      "paragraph": "This library adds suppoort for the Bolwer Protocol to arduino. It lets you form namespaces and RPCs of arbitrary types and sizes, and send them in a compact binary format.",
      "website": "https://github.com/CommonWealthRobotics/BowlerCom",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CommonWealthRobotics/BowlerCom-3.15.0.zip",
      "archiveFileName": "BowlerCom-3.15.0.zip",
      "size": 92539,
      "checksum": "SHA-256:d9044d1035de855d7123ebd9e435fdc747cec674f708a97915eadd18eed9c81f"
    },
    {
      "name": "LiquidMenu",
      "version": "1.1.5",
      "author": "Vasil Kalchev",
      "maintainer": "Vasil Kalchev \u003cvase7u@gmail.com\u003e",
      "sentence": "Menu creation Arduino library for LCDs, extends LiquidCrystal.",
      "paragraph": "LiquidMenu extends the Arduino's LiquidCrystal library with the ability to create menus. It simplifies the menu creation process by abstracting the elements of a menu into hierarchically organized classes.",
      "website": "https://github.com/VasilKalchev/LiquidMenu.git",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/VasilKalchev/LiquidMenu-1.1.5.zip",
      "archiveFileName": "LiquidMenu-1.1.5.zip",
      "size": 1090004,
      "checksum": "SHA-256:846f6745e163649eeaf988a8b5d02b77f2aee755565e6c56ef8cafbe0ac5b3d8"
    },
    {
      "name": "LiquidMenu",
      "version": "1.0.1",
      "author": "Vasil Kalchev",
      "maintainer": "Vasil Kalchev \u003cvase7u@gmail.com\u003e",
      "sentence": "Menu creation Arduino library for LCDs, extends LiquidCrystal.",
      "paragraph": "LiquidMenu extends the Arduino's LiquidCrystal library with the ability to create menus. It simplifies the menu creation process by abstracting the elements of a menu into hierarchically organized classes.",
      "website": "https://github.com/VasilKalchev/LiquidMenu.git",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/VasilKalchev/LiquidMenu-1.0.1.zip",
      "archiveFileName": "LiquidMenu-1.0.1.zip",
      "size": 914637,
      "checksum": "SHA-256:0ea477d12e959e44e96400f008233cf80d3085a8f339ac116e9fbbe904ef010a"
    },
    {
      "name": "LiquidMenu",
      "version": "1.0.2",
      "author": "Vasil Kalchev",
      "maintainer": "Vasil Kalchev \u003cvase7u@gmail.com\u003e",
      "sentence": "Menu creation Arduino library for LCDs, extends LiquidCrystal.",
      "paragraph": "LiquidMenu extends the Arduino's LiquidCrystal library with the ability to create menus. It simplifies the menu creation process by abstracting the elements of a menu into hierarchically organized classes.",
      "website": "https://github.com/VasilKalchev/LiquidMenu.git",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/VasilKalchev/LiquidMenu-1.0.2.zip",
      "archiveFileName": "LiquidMenu-1.0.2.zip",
      "size": 914637,
      "checksum": "SHA-256:bd04267a35d533b6c0161fc6ad3272b7e747013a88c0a5de4a26f9e638a4345b"
    },
    {
      "name": "LiquidMenu",
      "version": "1.1.4",
      "author": "Vasil Kalchev",
      "maintainer": "Vasil Kalchev \u003cvase7u@gmail.com\u003e",
      "sentence": "Menu creation Arduino library for LCDs, extends LiquidCrystal.",
      "paragraph": "LiquidMenu extends the Arduino's LiquidCrystal library with the ability to create menus. It simplifies the menu creation process by abstracting the elements of a menu into hierarchically organized classes.",
      "website": "https://github.com/VasilKalchev/LiquidMenu.git",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/VasilKalchev/LiquidMenu-1.1.4.zip",
      "archiveFileName": "LiquidMenu-1.1.4.zip",
      "size": 1006562,
      "checksum": "SHA-256:6e00fa2fa917398ec95958708714915a2aa1a38a4b0cc5e396ddd7626ec4a86c"
    },
    {
      "name": "LiquidMenu",
      "version": "1.1.6",
      "author": "Vasil Kalchev",
      "maintainer": "Vasil Kalchev \u003cvase7u@gmail.com\u003e",
      "sentence": "Menu creation Arduino library for LCDs, extends LiquidCrystal.",
      "paragraph": "LiquidMenu extends the Arduino's LiquidCrystal library with the ability to create menus. It simplifies the menu creation process by abstracting the elements of a menu into hierarchically organized classes.",
      "website": "https://github.com/VasilKalchev/LiquidMenu.git",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/VasilKalchev/LiquidMenu-1.1.6.zip",
      "archiveFileName": "LiquidMenu-1.1.6.zip",
      "size": 1090013,
      "checksum": "SHA-256:8d677ce26523355e943eb64f181cfa9cdc9b1300f335553bd28a2a22cc3e6d21"
    },
    {
      "name": "LiquidMenu",
      "version": "1.2.0",
      "author": "Vasil Kalchev",
      "maintainer": "Vasil Kalchev \u003cvase7u@gmail.com\u003e",
      "sentence": "Menu creation Arduino library for LCDs, extends LiquidCrystal.",
      "paragraph": "LiquidMenu extends the Arduino's LiquidCrystal library with the ability to create menus. It simplifies the menu creation process by abstracting the elements of a menu into hierarchically organized classes.",
      "website": "https://github.com/VasilKalchev/LiquidMenu.git",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/VasilKalchev/LiquidMenu-1.2.0.zip",
      "archiveFileName": "LiquidMenu-1.2.0.zip",
      "size": 3714901,
      "checksum": "SHA-256:3aaa09ceca208c9c4142425de1ccfdf5330eb0a9f0efeac9004e2dc43346991f"
    },
    {
      "name": "LiquidMenu",
      "version": "1.3.0",
      "author": "Vasil Kalchev \u003cvase7u@gmail.com\u003e",
      "maintainer": "Vasil Kalchev \u003cvase7u@gmail.com\u003e",
      "sentence": "Menu creation Arduino library for LCDs, extends LiquidCrystal.",
      "paragraph": "LiquidMenu wraps the Arduino's LiquidCrystal library with the ability to create menus. It simplifies the menu creation process by abstracting the elements of a menu into hierarchically organized classes.",
      "website": "https://github.com/VasilKalchev/LiquidMenu.git",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/VasilKalchev/LiquidMenu-1.3.0.zip",
      "archiveFileName": "LiquidMenu-1.3.0.zip",
      "size": 4048978,
      "checksum": "SHA-256:5c39437f717426bd7176b794c19b08c51b218ec832b7ce5cb48dd46c843a1d82"
    },
    {
      "name": "Coordinates",
      "version": "1.0.0",
      "author": "Sebastien DUMETZ",
      "maintainer": "Sebastien DUMETZ \u003cs.dumetz@holusion.com\u003e",
      "sentence": "Allow easy and reliable conversion between cartesian and polar coordinate system.",
      "paragraph": "This library provides a class to convert easily cartesian to polar or polar to cartesian coordinates. It uses floating point math to do so with quadrant checking to always give the best approximation.",
      "website": "https://github.com/sdumetz/coordinates",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sdumetz/Coordinates-1.0.0.zip",
      "archiveFileName": "Coordinates-1.0.0.zip",
      "size": 4806,
      "checksum": "SHA-256:a3906fac717b1ec7b199e2d4450eae140a1df176f3eaa119fc8b82baaab985d0"
    },
    {
      "name": "Sparkfun MPU-9250",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics \u003cTechSupport@SparkFun.com\u003e",
      "sentence": "Driver for InvenSense's MPU-9250 9-DOF IMU (3-axis gyroscope, 3-axis accelerometer \u0026 3-axis magnetometer)",
      "paragraph": "The \u003ca href=\"https://www.invensense.com/products/motion-tracking/9-axis/mpu-9250/\"\u003eMPU-9250\u003c/a\u003e is a system-in-package featuring acceleration full-scales of ±2 / ±4 / ±8 / ±16 (g), rotational full-scales of ±250 / ±500 / ±1000 / ±2000 (°/sec) and a magnetic field full scale of ±4800 µT. The MPU-9250 includes an I\u003csup\u003e2\u003c/sup\u003eC serial bus interface that supports speeds up to 400 kHz.",
      "website": "https://github.com/sparkfun/MPU-9250_Breakout",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/Sparkfun_MPU_9250-1.0.0.zip",
      "archiveFileName": "Sparkfun_MPU_9250-1.0.0.zip",
      "size": 21094,
      "checksum": "SHA-256:251c2043675e956a02bdffb37420dacdd54addd0607bc0bc437c1d790c20c71b"
    },
    {
      "name": "SoftModem",
      "version": "1.0.0",
      "author": "arms22",
      "maintainer": "arms22",
      "sentence": "Audio Jack Modem Library for Arduino.",
      "paragraph": "Generates a FSK-modulated signal that can be fed into an audio jack for data transmission.",
      "website": "https://github.com/arms22/SoftModem",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arms22/SoftModem-1.0.0.zip",
      "archiveFileName": "SoftModem-1.0.0.zip",
      "size": 5598,
      "checksum": "SHA-256:14dff20472648ed7be1610e28cbaeb1021ffc72d7393687a8dcda2fe4455b5f1"
    },
    {
      "name": "EtherSia",
      "version": "1.0.0",
      "author": "Nicholas Humfrey \u003cnjh@aelius.com\u003e",
      "maintainer": "Nicholas Humfrey \u003cnjh@aelius.com\u003e",
      "sentence": "IPv6 library for the ENC28J60 Ethernet controller",
      "paragraph": "A library to allow network communication using IPv6 over Ethernet for projects using the ENC28J60 Ethernet controller.",
      "website": "http://github.com/njh/EtherSia",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/njh/EtherSia-1.0.0.zip",
      "archiveFileName": "EtherSia-1.0.0.zip",
      "size": 78840,
      "checksum": "SHA-256:e695d708c3bde8cfe8d8be98be1aefbaec6e3cbfa0734869570d59d3a9de7db7"
    },
    {
      "name": "EtherSia",
      "version": "2.0.0",
      "author": "Nicholas Humfrey \u003cnjh@aelius.com\u003e",
      "maintainer": "Nicholas Humfrey \u003cnjh@aelius.com\u003e",
      "sentence": "IPv6 library for the ENC28J60 and W5100 Ethernet controllers",
      "paragraph": "A library to allow network communication using IPv6 over Ethernet",
      "website": "http://github.com/njh/EtherSia",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/njh/EtherSia-2.0.0.zip",
      "archiveFileName": "EtherSia-2.0.0.zip",
      "size": 93994,
      "checksum": "SHA-256:5667e00d7f5996ef4b1d823c8dce2b89e71886861ed773d84657c3a88ada1528"
    },
    {
      "name": "EtherSia",
      "version": "2.1.0",
      "author": "Nicholas Humfrey \u003cnjh@aelius.com\u003e",
      "maintainer": "Nicholas Humfrey \u003cnjh@aelius.com\u003e",
      "sentence": "IPv6 library for the ENC28J60, W5500 or W5100 Ethernet controllers",
      "paragraph": "A library to allow network communication using IPv6 over Ethernet",
      "website": "http://github.com/njh/EtherSia",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/njh/EtherSia-2.1.0.zip",
      "archiveFileName": "EtherSia-2.1.0.zip",
      "size": 147523,
      "checksum": "SHA-256:22fada14919f988fb2e0db41ed3e23afbdcaad0e8935581c0311a8f19acc8eb6"
    },
    {
      "name": "EtherSia",
      "version": "2.2.0",
      "author": "Nicholas Humfrey \u003cnjh@aelius.com\u003e",
      "maintainer": "Nicholas Humfrey \u003cnjh@aelius.com\u003e",
      "sentence": "IPv6 library for the ENC28J60, W5500 or W5100 Ethernet controllers",
      "paragraph": "A library to allow network communication using IPv6 over Ethernet. Supports a minimal HTTP Server, UDP Client and Server, DNS lookup and SLAAC (Stateless Auto-configuration).",
      "website": "http://github.com/njh/EtherSia",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/njh/EtherSia-2.2.0.zip",
      "archiveFileName": "EtherSia-2.2.0.zip",
      "size": 197466,
      "checksum": "SHA-256:ca462b236bdd81245a855d787b7553e127e0cc91d1d11fb8f47f02ff4b3e4703"
    },
    {
      "name": "LCDMenu",
      "version": "2.1.4",
      "author": "Nils Feldkaemper \u003cnilsfeld@gmail.com\u003e",
      "maintainer": "Nils Feldkaemper \u003cnilsfeld@gmail.com\u003e",
      "sentence": "A library with you can generate a menu`s based on the nested set model with multi layers",
      "paragraph": "Supports serial monitor, liquidcrystal, i2c, graphic displays (u8glib), ...",
      "website": "https://github.com/Jomelo/LCDMenuLib",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Jomelo/LCDMenu-2.1.4.zip",
      "archiveFileName": "LCDMenu-2.1.4.zip",
      "size": 648516,
      "checksum": "SHA-256:163941a986e6ef2461bb12a45d259218f3fcc8812ceb7b4fb0bd76624d2aa8c0"
    },
    {
      "name": "LCDMenu",
      "version": "2.1.5",
      "author": "Nils Feldkaemper \u003cnilsfeld@gmail.com\u003e",
      "maintainer": "Nils Feldkaemper \u003cnilsfeld@gmail.com\u003e",
      "sentence": "A library to generate menu`s based on the nested set model with multi layers",
      "paragraph": "Supports serial monitor, liquidcrystal, i2c, graphic displays (u8glib), ...",
      "website": "https://github.com/Jomelo/LCDMenuLib",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Jomelo/LCDMenu-2.1.5.zip",
      "archiveFileName": "LCDMenu-2.1.5.zip",
      "size": 648583,
      "checksum": "SHA-256:d04eb711f6704f24e55ae9ea296d2a395c04651609c4ed9b83893b2fddba8784"
    },
    {
      "name": "LCDMenu",
      "version": "2.2.0",
      "author": "Nils Feldkaemper \u003cnilsfeld@gmail.com\u003e",
      "maintainer": "Nils Feldkaemper \u003cnilsfeld@gmail.com\u003e",
      "sentence": "A library with you can generate a menu`s based on the nested set model with multi layers",
      "paragraph": "Supports serial monitor, liquidcrystal, i2c, graphic displays (u8glib), ...",
      "website": "https://github.com/Jomelo/LCDMenuLib",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Jomelo/LCDMenu-2.2.0.zip",
      "archiveFileName": "LCDMenu-2.2.0.zip",
      "size": 682109,
      "checksum": "SHA-256:052dedb645a4576755b25d77eef812d6d7a3a66657923c2a9eb62c6a5972fcb8"
    },
    {
      "name": "LCDMenu",
      "version": "2.3.2",
      "author": "Nils Feldkaemper \u003cnilsfeld@gmail.com\u003e",
      "maintainer": "Nils Feldkaemper \u003cnilsfeld@gmail.com\u003e",
      "sentence": "A library with you can generate a menu`s based on the nested set model with multi layers",
      "paragraph": "Supports serial monitor, liquidcrystal, i2c, graphic displays (u8glib), ...",
      "website": "https://github.com/Jomelo/LCDMenuLib",
      "category": "Display",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Jomelo/LCDMenu-2.3.2.zip",
      "archiveFileName": "LCDMenu-2.3.2.zip",
      "size": 832332,
      "checksum": "SHA-256:f392a3780d2aeab2e45b0766a55d31e2d693949eacbaa5ebf22934539a2b9a7e"
    },
    {
      "name": "SetPoint",
      "version": "1.0.0",
      "author": "Shigeru Kobayashi",
      "maintainer": "Shigeru Kobayashi",
      "sentence": "A library that makes detecting changes on an analog input simple.",
      "paragraph": "Divides an input to LOW or HIGH and detect edges based on the threshold and hysteresis.",
      "website": "https://github.com/kotobuki/SetPoint",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/kotobuki/SetPoint-1.0.0.zip",
      "archiveFileName": "SetPoint-1.0.0.zip",
      "size": 3310,
      "checksum": "SHA-256:7c797a2a51d55415352ae221624f944ab25ee5e6180bffb401b547738b655677"
    },
    {
      "name": "LispIO",
      "version": "0.0.1",
      "author": "Lisper.li",
      "maintainer": "Lisper \u003cleyapin@gmail.com\u003e",
      "sentence": "new lightweight IO function",
      "paragraph": "provide some useful function make it easy to control io",
      "website": "https://github.com/leyap/LispIO",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/leyap/LispIO-0.0.1.zip",
      "archiveFileName": "LispIO-0.0.1.zip",
      "size": 3151,
      "checksum": "SHA-256:ede24935aa1dc961106ea05fa8941e2cb946d5cded642b99f5e0138dfa03f3f8"
    },
    {
      "name": "hd44780",
      "version": "0.5.0-a",
      "author": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "maintainer": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "sentence": "Extensible hd44780 LCD library.",
      "paragraph": "hd44780 is an extensible LCD library for hd44780 based LCD displays. The API functionality provided by the hd44780 library class, when combined with an hd44780 library i/o subclass, is compatible with the API functionality of the Arduino LiquidCrystal library as well as most of the LCD API 1.0 Specification (some of which is nearly obsolete). The hd44780 API also provides some addtional extensions and all the API functions provided by hd44780 are common across all i/o subclasses. hd44780 currently includes i/o subclasses for Arduino direct pin control, i2c expander backpacks, and LCDs with native i2c interface.",
      "website": "https://github.com/duinoWitchery/hd44780",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/duinoWitchery/hd44780-0.5.0-a.zip",
      "archiveFileName": "hd44780-0.5.0-a.zip",
      "size": 78633,
      "checksum": "SHA-256:0882c95f6a6213289014780e16976ab195173f6501d980dd43583ef54c1f5dbf"
    },
    {
      "name": "hd44780",
      "version": "0.6.0",
      "author": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "maintainer": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "sentence": "Extensible hd44780 LCD library.",
      "paragraph": "hd44780 is an extensible LCD library for hd44780 based LCD displays. The API functionality provided by the hd44780 library class, when combined with an hd44780 library i/o subclass, is compatible with the API functionality of the Arduino LiquidCrystal library as well as most of the LCD API 1.0 Specification (some of which is nearly obsolete). The hd44780 API also provides some addtional extensions and all the API functions provided by hd44780 are common across all i/o subclasses. hd44780 currently includes i/o subclasses for Arduino direct pin control, i2c expander backpacks, and LCDs with native i2c interface.",
      "website": "https://github.com/duinoWitchery/hd44780",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/duinoWitchery/hd44780-0.6.0.zip",
      "archiveFileName": "hd44780-0.6.0.zip",
      "size": 84643,
      "checksum": "SHA-256:ed936872e3d2bdc6a01bf320595d73163b0a59615b80367e94177ce41965ec7a"
    },
    {
      "name": "hd44780",
      "version": "0.7.1",
      "author": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "maintainer": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "sentence": "Extensible hd44780 LCD library.",
      "paragraph": "hd44780 is an extensible LCD library for hd44780 based LCD displays. The API functionality provided by the hd44780 library class, when combined with an hd44780 library i/o subclass, is compatible with the API functionality of the Arduino LiquidCrystal library as well as most of the LCD API 1.0 Specification (some of which is nearly obsolete). The hd44780 API also provides some addtional extensions and all the API functions provided by hd44780 are common across all i/o subclasses. hd44780 currently includes i/o subclasses for Arduino direct pin control, i2c expander backpacks, and LCDs with native i2c interface.",
      "website": "https://github.com/duinoWitchery/hd44780",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/duinoWitchery/hd44780-0.7.1.zip",
      "archiveFileName": "hd44780-0.7.1.zip",
      "size": 93002,
      "checksum": "SHA-256:13e9d682382dec5bccccff30eceeeb0a85ff92d28a89c11a3cd83960079c37c8"
    },
    {
      "name": "hd44780",
      "version": "0.7.2",
      "author": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "maintainer": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "sentence": "Extensible hd44780 LCD library.",
      "paragraph": "hd44780 is an extensible LCD library for hd44780 based LCD displays. The API functionality provided by the hd44780 library class, when combined with an hd44780 library i/o subclass, is compatible with the API functionality of the Arduino LiquidCrystal library as well as most of the LCD API 1.0 Specification (some of which is nearly obsolete). The hd44780 API also provides some addtional extensions and all the API functions provided by hd44780 are common across all i/o subclasses. hd44780 currently includes i/o subclasses for Arduino direct pin control, i2c expander backpacks, and LCDs with native i2c interface.",
      "website": "https://github.com/duinoWitchery/hd44780",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/duinoWitchery/hd44780-0.7.2.zip",
      "archiveFileName": "hd44780-0.7.2.zip",
      "size": 100751,
      "checksum": "SHA-256:e3614cc77abd18cd6d28442d8fbd089c52506a45f2324967b5df6c656df2700c"
    },
    {
      "name": "hd44780",
      "version": "0.7.3",
      "author": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "maintainer": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "sentence": "Extensible hd44780 LCD library.",
      "paragraph": "hd44780 is an extensible LCD library for hd44780 based LCD displays. The API functionality provided by the hd44780 library class, when combined with an hd44780 library i/o subclass, is compatible with the API functionality of the Arduino LiquidCrystal library as well as most of the LCD API 1.0 Specification (some of which is nearly obsolete). The hd44780 API also provides some addtional extensions and all the API functions provided by hd44780 are common across all i/o subclasses. hd44780 currently includes i/o subclasses for Arduino direct pin control, i2c expander backpacks, and LCDs with native i2c interface.",
      "website": "https://github.com/duinoWitchery/hd44780",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/duinoWitchery/hd44780-0.7.3.zip",
      "archiveFileName": "hd44780-0.7.3.zip",
      "size": 108069,
      "checksum": "SHA-256:f37cb8f66c548b37d2cc2a9675bb8a718dc097fe67382df8344130992309ed33"
    },
    {
      "name": "hd44780",
      "version": "0.8.0",
      "author": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "maintainer": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "sentence": "Extensible hd44780 LCD library.",
      "paragraph": "hd44780 is an extensible LCD library for hd44780 based LCD displays. The API functionality provided by the hd44780 library class, when combined with an hd44780 library i/o subclass, is compatible with the API functionality of the Arduino LiquidCrystal library as well as most of the LCD API 1.0 Specification (some of which is nearly obsolete). The hd44780 API also provides some addtional extensions and all the API functions provided by hd44780 are common across all i/o subclasses. hd44780 currently includes i/o subclasses for Arduino direct pin control, i2c expander backpacks, and LCDs with native i2c interface.",
      "website": "https://github.com/duinoWitchery/hd44780",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/duinoWitchery/hd44780-0.8.0.zip",
      "archiveFileName": "hd44780-0.8.0.zip",
      "size": 117113,
      "checksum": "SHA-256:dcb6e376885fb24e4de80dfdb956175a2c754888b04a2342707898ce197c422a"
    },
    {
      "name": "hd44780",
      "version": "0.8.1",
      "author": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "maintainer": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "sentence": "Extensible hd44780 LCD library.",
      "paragraph": "hd44780 is an extensible LCD library for hd44780 based LCD displays. The API functionality provided by the hd44780 library class, when combined with an hd44780 library i/o subclass, is compatible with the API functionality of the Arduino LiquidCrystal library as well as most of the LCD API 1.0 Specification (some of which is nearly obsolete). The hd44780 API also provides some addtional extensions and all the API functions provided by hd44780 are common across all i/o subclasses. hd44780 currently includes i/o subclasses for Arduino direct pin control, i2c expander backpacks, and LCDs with native i2c interface.",
      "website": "https://github.com/duinoWitchery/hd44780",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/duinoWitchery/hd44780-0.8.1.zip",
      "archiveFileName": "hd44780-0.8.1.zip",
      "size": 122063,
      "checksum": "SHA-256:ce919df1fde4619327e63f7541a15696c3de2df7c655d71102e51a893a3de303"
    },
    {
      "name": "hd44780",
      "version": "0.8.2",
      "author": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "maintainer": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "sentence": "Extensible hd44780 LCD library.",
      "paragraph": "hd44780 is an extensible LCD library for hd44780 based LCD displays. The API functionality provided by the hd44780 library class, when combined with an hd44780 library i/o subclass, is compatible with the API functionality of the Arduino LiquidCrystal library as well as most of the LCD API 1.0 Specification (some of which is nearly obsolete). The hd44780 API also provides some addtional extensions and all the API functions provided by hd44780 are common across all i/o subclasses. hd44780 currently includes i/o subclasses for Arduino direct pin control, i2c expander backpacks, and LCDs with native i2c interface.",
      "website": "https://github.com/duinoWitchery/hd44780",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/duinoWitchery/hd44780-0.8.2.zip",
      "archiveFileName": "hd44780-0.8.2.zip",
      "size": 126029,
      "checksum": "SHA-256:f6ca425da84d988419a90474cf640156b137a06f277b31b7b0411743d20a1c1e"
    },
    {
      "name": "hd44780",
      "version": "0.8.3",
      "author": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "maintainer": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "sentence": "Extensible hd44780 LCD library.",
      "paragraph": "hd44780 is an extensible LCD library for hd44780 based LCD displays. The API functionality provided by the hd44780 library class, when combined with an hd44780 library i/o subclass, is compatible with the API functionality of the Arduino LiquidCrystal library as well as most of the LCD API 1.0 Specification. The hd44780 API also provides some addtional extensions, including return statusfor API functions, ability to read from the LCD, and ability to configure the LCD command execution timing. hd44780 currently includes i/o subclasses for Arduino direct pin control, i2c expander backpacks, and LCDs with native i2c interface. keywords: hd44780 lcd i2c display hd44780_I2Cexp hd44780_pinIO hd44780_I2Clcd LiquidCrystal Bill Perry bperrybap duinowitchery",
      "website": "https://github.com/duinoWitchery/hd44780",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/duinoWitchery/hd44780-0.8.3.zip",
      "archiveFileName": "hd44780-0.8.3.zip",
      "size": 129336,
      "checksum": "SHA-256:a8782021e9ae69387ccbcfef334e1c99eebe46fefda6a01b5dc7a7fbca51c8a5"
    },
    {
      "name": "hd44780",
      "version": "0.8.4",
      "author": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "maintainer": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "sentence": "Extensible hd44780 LCD library.",
      "paragraph": "hd44780 is an extensible LCD library for hd44780 based LCD displays. The API functionality provided by the hd44780 library class, when combined with an hd44780 library i/o subclass, is compatible with the API functionality of the Arduino LiquidCrystal library as well as most of the LCD API 1.0 Specification. The hd44780 API also provides some addtional extensions, including return status for API functions, ability to read from the LCD, and ability to configure the LCD command execution timing. hd44780 currently includes i/o subclasses for Arduino direct pin control, i2c expander backpacks, and LCDs with native i2c interface. keywords: hd44780 lcd i2c display hd44780_I2Cexp hd44780_pinIO hd44780_I2Clcd LiquidCrystal Bill Perry bperrybap duinowitchery",
      "website": "https://github.com/duinoWitchery/hd44780",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/duinoWitchery/hd44780-0.8.4.zip",
      "archiveFileName": "hd44780-0.8.4.zip",
      "size": 134229,
      "checksum": "SHA-256:66ac15be390fbca3f0c9a78db16b9b576b6843f3c063f501bba3947150e30437"
    },
    {
      "name": "hd44780",
      "version": "0.8.5",
      "author": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "maintainer": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "sentence": "Extensible hd44780 LCD library.",
      "paragraph": "hd44780 is an extensible LCD library for hd44780 based LCD displays. The API functionality provided by the hd44780 library class, when combined with an hd44780 library i/o subclass, is compatible with the API functionality of the Arduino LiquidCrystal library as well as most of the LCD API 1.0 Specification. The hd44780 API also provides some addtional extensions, including return status for API functions, ability to read from the LCD, and ability to configure the LCD command execution timing. hd44780 currently includes i/o subclasses for Arduino direct pin control, i2c expander backpacks, and LCDs with native i2c interface. keywords: hd44780 lcd i2c display hd44780_I2Cexp hd44780_pinIO hd44780_I2Clcd LiquidCrystal Bill Perry bperrybap duinowitchery",
      "website": "https://github.com/duinoWitchery/hd44780",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/duinoWitchery/hd44780-0.8.5.zip",
      "archiveFileName": "hd44780-0.8.5.zip",
      "size": 159759,
      "checksum": "SHA-256:108c297c5bccfd502a413df75e169529f03fa5f00ea242fd4f6d9196e4a48eba"
    },
    {
      "name": "hd44780",
      "version": "0.8.6",
      "author": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "maintainer": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "sentence": "Extensible hd44780 LCD library.",
      "paragraph": "hd44780 is an extensible LCD library for hd44780 based LCD displays. The API functionality provided by the hd44780 library class, when combined with an hd44780 library i/o subclass, is compatible with the API functionality of the Arduino LiquidCrystal library as well as most of the LCD API 1.0 Specification. The hd44780 API also provides some addtional extensions, including return status for API functions, ability to read from the LCD, and ability to configure the LCD command execution timing. hd44780 currently includes i/o subclasses for Arduino direct pin control, i2c expander backpacks, and LCDs with native i2c interface. keywords: hd44780 lcd i2c display hd44780_I2Cexp hd44780_pinIO hd44780_I2Clcd LiquidCrystal Bill Perry bperrybap duinowitchery",
      "website": "https://github.com/duinoWitchery/hd44780",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/duinoWitchery/hd44780-0.8.6.zip",
      "archiveFileName": "hd44780-0.8.6.zip",
      "size": 170913,
      "checksum": "SHA-256:2dd9b681e0b21004b78b8f0bd918184f3af65f9e61481424fb049e5747daa6ab"
    },
    {
      "name": "hd44780",
      "version": "0.9.0",
      "author": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "maintainer": "Bill Perry \u003cbperrybap@opensource.billsworld.billandterrie.com\u003e",
      "sentence": "Extensible hd44780 LCD library.",
      "paragraph": "hd44780 is an extensible LCD library for hd44780 based LCD displays. The API functionality provided by the hd44780 library class, when combined with an hd44780 library i/o subclass, is compatible with the API functionality of the Arduino LiquidCrystal library as well as most of the LCD API 1.0 Specification. The hd44780 API also provides some addtional extensions, including return status for API functions, ability to read from the LCD, and ability to configure the LCD command execution timing. hd44780 currently includes i/o subclasses for Arduino direct pin control, i2c expander backpacks, and LCDs with native i2c interface. keywords: hd44780 lcd i2c display hd44780_I2Cexp hd44780_pinIO hd44780_I2Clcd LiquidCrystal Bill Perry bperrybap duinowitchery",
      "website": "https://github.com/duinoWitchery/hd44780",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/duinoWitchery/hd44780-0.9.0.zip",
      "archiveFileName": "hd44780-0.9.0.zip",
      "size": 179334,
      "checksum": "SHA-256:5514c2d2e517313fc50b5638b2d3476ce7da1cd71798105635e5b86c73777376"
    },
    {
      "name": "CheapStepper",
      "version": "0.2.0",
      "author": "Tyler Henry",
      "maintainer": "Tyler Henry \u003ctyler@tylerhenry.com\u003e",
      "sentence": "A library for the cheap but useful 28BYJ-48 5v stepper motor with ULN2003 driver board",
      "paragraph": "Library uses half-stepping for fine control (default: 4096 mini-steps per rotation), and supports blocking and non-blocking moves. The total number of steps is also adjustable (e.g. 4076 steps for 63.68395:1 measured gear ratio).",
      "website": "https://github.com/tyhenry/CheapStepper",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/tyhenry/CheapStepper-0.2.0.zip",
      "archiveFileName": "CheapStepper-0.2.0.zip",
      "size": 211843,
      "checksum": "SHA-256:2d36644a80540dae089372e5a378eff84a5a85ac4d5fb64d416f7bfe3831845d"
    },
    {
      "name": "LcdProgressBar",
      "version": "1.0.0",
      "author": "Wilfried Loche \u003cwloche@hotmail.com\u003e",
      "maintainer": "Wilfried Loche \u003cwloche@hotmail.com\u003e",
      "sentence": "A library to draw some customized progress bar on any LCD display.",
      "paragraph": "Depends on LiquidChrystal library.",
      "website": "https://github.com/wloche/LcdProgressBar",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/wloche/LcdProgressBar-1.0.0.zip",
      "archiveFileName": "LcdProgressBar-1.0.0.zip",
      "size": 538497,
      "checksum": "SHA-256:139fba20fe8a041e85da37d9955ce77cd1e09b0e6d2022fdfbc7e164f1248b9d"
    },
    {
      "name": "LcdProgressBar",
      "version": "1.0.1",
      "author": "Wilfried Loche \u003cwloche@hotmail.com\u003e",
      "maintainer": "Wilfried Loche \u003cwloche@hotmail.com\u003e",
      "sentence": "A library to draw some customized progress bar on any LCD display.",
      "paragraph": "Depends on LiquidChrystal library.",
      "website": "https://github.com/wloche/LcdProgressBar",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/wloche/LcdProgressBar-1.0.1.zip",
      "archiveFileName": "LcdProgressBar-1.0.1.zip",
      "size": 536477,
      "checksum": "SHA-256:7eefb7f0a4207f9c3bd64333fd106e89c57626dbc441a9d254f4a516acf05f1a"
    },
    {
      "name": "HaLakeKit",
      "version": "1.0.0",
      "author": "Tokusei Noborio",
      "maintainer": "Tokusei Noborio, Asuki Kono",
      "sentence": "A library to control hakale kit.",
      "paragraph": "xyz.",
      "website": "https://robip.halake.com/halake-board.html",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nyampass/HaLakeKit-1.0.0.zip",
      "archiveFileName": "HaLakeKit-1.0.0.zip",
      "size": 4433,
      "checksum": "SHA-256:eb8cc7fd08a773119e384b9d27d6efb977d4bc6a213e4b509c73f42837263810"
    },
    {
      "name": "HaLakeKit",
      "version": "1.0.1",
      "author": "nyampass",
      "maintainer": "Tokusei Noborio, Asuki Kono",
      "sentence": "A library to control hakale kit.",
      "paragraph": "It can get information from an accel sensor and a push switch.",
      "website": "https://robip.halake.com/halake-board.html",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nyampass/HaLakeKit-1.0.1.zip",
      "archiveFileName": "HaLakeKit-1.0.1.zip",
      "size": 4476,
      "checksum": "SHA-256:12dca625b9bb12ffacd3dddd266ac69db2d007ab7e98c7919d957c901bcad71c"
    },
    {
      "name": "HaLakeKit",
      "version": "1.0.2",
      "author": "nyampass",
      "maintainer": "Tokusei Noborio, Asuki Kono",
      "sentence": "A library to control hakale kit.",
      "paragraph": "It can get information from an accel sensor and a push switch.",
      "website": "https://github.com/nyampass/HaLakeKit-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nyampass/HaLakeKit-1.0.2.zip",
      "archiveFileName": "HaLakeKit-1.0.2.zip",
      "size": 4572,
      "checksum": "SHA-256:58e4434e8d04e1fa0ab7d03b644a4ba46f31719544ce2e9bcbca52db8fe345e8"
    },
    {
      "name": "HaLakeKit",
      "version": "1.0.3",
      "author": "nyampass",
      "maintainer": "Tokusei Noborio, Asuki Kono",
      "sentence": "A library to control hakale kit.",
      "paragraph": "It can get information from an accel sensor and a push switch.",
      "website": "https://github.com/nyampass/HaLakeKit-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nyampass/HaLakeKit-1.0.3.zip",
      "archiveFileName": "HaLakeKit-1.0.3.zip",
      "size": 4908,
      "checksum": "SHA-256:1fd9e55054ca272ee942e9d72dbce0764cd0ffdabba3473add8a9ba7a2cb1aae"
    },
    {
      "name": "LcdProgressBarDouble",
      "version": "1.0.0",
      "author": "Wilfried Loche \u003cwloche@hotmail.com\u003e",
      "maintainer": "Wilfried Loche \u003cwloche@hotmail.com\u003e",
      "sentence": "A library to draw some customized progress bar on any LCD display.",
      "paragraph": "Depends on LiquidChrystal library.",
      "website": "https://github.com/wloche/LcdProgressBarDouble",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/wloche/LcdProgressBarDouble-1.0.0.zip",
      "archiveFileName": "LcdProgressBarDouble-1.0.0.zip",
      "size": 357841,
      "checksum": "SHA-256:75f9c905098b01e28b5d36ec2b09a25b7a5207315423bbf220576584d7a03c75"
    },
    {
      "name": "LcdProgressBarDouble",
      "version": "1.0.4",
      "author": "Wilfried Loche \u003cwloche@hotmail.com\u003e",
      "maintainer": "Wilfried Loche \u003cwloche@hotmail.com\u003e",
      "sentence": "A library to draw some customized progress bar on any LCD display.",
      "paragraph": "Depends on LiquidChrystal library.",
      "website": "https://github.com/wloche/LcdProgressBarDouble",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/wloche/LcdProgressBarDouble-1.0.4.zip",
      "archiveFileName": "LcdProgressBarDouble-1.0.4.zip",
      "size": 659104,
      "checksum": "SHA-256:293fb9766aa5be54874824ab6d527055bed9fb2198f2d108232df0408f89969f"
    },
    {
      "name": "LcdProgressBarDouble",
      "version": "1.0.5",
      "author": "Wilfried Loche \u003cwloche@hotmail.com\u003e",
      "maintainer": "Wilfried Loche \u003cwloche@hotmail.com\u003e",
      "sentence": "A library to draw some customized progress bar on any LCD display.",
      "paragraph": "Depends on LiquidChrystal library.",
      "website": "https://github.com/wloche/LcdProgressBarDouble",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/wloche/LcdProgressBarDouble-1.0.5.zip",
      "archiveFileName": "LcdProgressBarDouble-1.0.5.zip",
      "size": 659200,
      "checksum": "SHA-256:01f1d29bd537534e131b88ed115df8b0094b52ae736c9b63fe033fef59cb2b9f"
    },
    {
      "name": "LcdProgressBarDouble",
      "version": "1.1.0",
      "author": "Wilfried Loche \u003cwloche@hotmail.com\u003e",
      "maintainer": "Wilfried Loche \u003cwloche@hotmail.com\u003e",
      "sentence": "A library to draw some customized progress bar on any LCD display.",
      "paragraph": "Depends on LiquidChrystal library.",
      "website": "https://github.com/wloche/LcdProgressBarDouble",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/wloche/LcdProgressBarDouble-1.1.0.zip",
      "archiveFileName": "LcdProgressBarDouble-1.1.0.zip",
      "size": 659482,
      "checksum": "SHA-256:c4373e9a341b57e237b987c32348e90a2e548722fe0b6c53330cb3418157a6f3"
    },
    {
      "name": "OakOLED",
      "version": "0.9.0",
      "author": "Brian Taylor",
      "maintainer": "Brian Taylor \u003cel.wubo@gmail.com\u003e",
      "sentence": "An Adafruit GFX driver for the Oak OLED (an SSD1306 with no reset line)",
      "paragraph": "Install this as the display library for Adafruit_GFX",
      "website": "https://github.com/netguy204/OakOLED",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/netguy204/OakOLED-0.9.0.zip",
      "archiveFileName": "OakOLED-0.9.0.zip",
      "size": 4689,
      "checksum": "SHA-256:cabec2eb77f8032aeaaec553c1314efd5113a03a74aa325acf5bc23aa08605f8"
    },
    {
      "name": "EDB",
      "version": "1.0.2",
      "author": "James Whiddon \u003cjwhiddon@gmail.com\u003e",
      "maintainer": "James Whiddon \u003cjwhiddon@gmail.com\u003e",
      "sentence": "Extended Database Library",
      "paragraph": "This Arduino Extended Database Library increases the maximum number of records allowed in a database from 256 records (byte) to a theoretical maximum of 4,294,967,295 records (unsigned long). The maximum record size was also increased from 256 bytes (byte) to 65,534 bytes (unsigned int).  You may use this library in conjunction with the standard Arduino EEPROM library, an external EEPROM such as the AT24C1024, or any other platform that supports byte level reading and writing such as an SD card.",
      "website": "https://github.com/jwhiddon/EDB",
      "category": "Data Storage",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jwhiddon/EDB-1.0.2.zip",
      "archiveFileName": "EDB-1.0.2.zip",
      "size": 19480,
      "checksum": "SHA-256:e5e7b0b398196f0e6729d1a8b4df64f2568affa29f327933d7fc2a30bd465790"
    },
    {
      "name": "EDB",
      "version": "1.0.3",
      "author": "James Whiddon \u003cjwhiddon@gmail.com\u003e",
      "maintainer": "James Whiddon \u003cjwhiddon@gmail.com\u003e",
      "sentence": "Extended Database Library",
      "paragraph": "This Arduino Extended Database Library increases the maximum number of records allowed in a database from 256 records (byte) to a theoretical maximum of 4,294,967,295 records (unsigned long). The maximum record size was also increased from 256 bytes (byte) to 65,534 bytes (unsigned int).  You may use this library in conjunction with the standard Arduino EEPROM library, an external EEPROM such as the AT24C1024, or any other platform that supports byte level reading and writing such as an SD card.",
      "website": "https://github.com/jwhiddon/EDB",
      "category": "Data Storage",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jwhiddon/EDB-1.0.3.zip",
      "archiveFileName": "EDB-1.0.3.zip",
      "size": 23966,
      "checksum": "SHA-256:5340e903558f599dd8656b3b6dd196ed8e3e4385702cd69f1d28c21562dfc283"
    },
    {
      "name": "EDB",
      "version": "1.0.4",
      "author": "James Whiddon \u003cjwhiddon@gmail.com\u003e",
      "maintainer": "James Whiddon \u003cjwhiddon@gmail.com\u003e",
      "sentence": "Extended Database Library",
      "paragraph": "This Arduino Extended Database Library increases the maximum number of records allowed in a database from 256 records (byte) to a theoretical maximum of 4,294,967,295 records (unsigned long). The maximum record size was also increased from 256 bytes (byte) to 65,534 bytes (unsigned int).  You may use this library in conjunction with the standard Arduino EEPROM library, an external EEPROM such as the AT24C1024, or any other platform that supports byte level reading and writing such as an SD card.",
      "website": "https://github.com/jwhiddon/EDB",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jwhiddon/EDB-1.0.4.zip",
      "archiveFileName": "EDB-1.0.4.zip",
      "size": 23987,
      "checksum": "SHA-256:c4b8d8bcc9b1182efb632854898bfe1316d87bb71be05207beecdf967af80c31"
    },
    {
      "name": "Gadgetron Libraries",
      "version": "1.0.0",
      "author": "NVSL",
      "maintainer": "NVSL \u003cswanson@eng.ucsd.edu \u003e",
      "sentence": "Collection of Libraries for the Gadgetron software.",
      "paragraph": "This libraries are used to simplify the production of electronic devices with the Gadgetron software.",
      "website": "https://github.com/NVSL/gadgetron-software-libraries.git",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NVSL/Gadgetron_Libraries-1.0.0.zip",
      "archiveFileName": "Gadgetron_Libraries-1.0.0.zip",
      "size": 65470,
      "checksum": "SHA-256:093b0cf8e1e252768df251579e6af56a522b1980149f5c54e183c55b6b9160a5"
    },
    {
      "name": "Gadgetron Libraries",
      "version": "1.0.1",
      "author": "NVSL",
      "maintainer": "NVSL \u003cswanson@eng.ucsd.edu \u003e",
      "sentence": "Collection of Libraries for the Gadgetron software.",
      "paragraph": "This libraries are used to simplify the production of electronic devices with the Gadgetron software.",
      "website": "https://github.com/NVSL/gadgetron-software-libraries.git",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NVSL/Gadgetron_Libraries-1.0.1.zip",
      "archiveFileName": "Gadgetron_Libraries-1.0.1.zip",
      "size": 116614,
      "checksum": "SHA-256:c8779467e12ea96445829e3bc5a1affb40d44755c9a57e7acfa60e48745654a2"
    },
    {
      "name": "Gadgetron Libraries",
      "version": "1.0.2",
      "author": "NVSL",
      "maintainer": "NVSL \u003cswanson@eng.ucsd.edu \u003e",
      "sentence": "Collection of Libraries for the Gadgetron software.",
      "paragraph": "This libraries are used to simplify the production of electronic devices with the Gadgetron software.",
      "website": "https://github.com/NVSL/gadgetron-software-libraries.git",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NVSL/Gadgetron_Libraries-1.0.2.zip",
      "archiveFileName": "Gadgetron_Libraries-1.0.2.zip",
      "size": 116604,
      "checksum": "SHA-256:c2032143886f62d9b976aba4f0244d3dbeb352c2465edb67f2e9322964dfd3f7"
    },
    {
      "name": "Gadgetron Libraries",
      "version": "1.0.3",
      "author": "NVSL",
      "maintainer": "NVSL \u003cswanson@eng.ucsd.edu \u003e",
      "sentence": "Collection of Libraries for the Gadgetron software.",
      "paragraph": "This libraries are used to simplify the production of electronic devices with the Gadgetron software.",
      "website": "https://github.com/NVSL/gadgetron-software-libraries.git",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NVSL/Gadgetron_Libraries-1.0.3.zip",
      "archiveFileName": "Gadgetron_Libraries-1.0.3.zip",
      "size": 115123,
      "checksum": "SHA-256:4c8b49412bef9d7c97a2fbc16e940de9223586f4c37e488705fc5b241752bac2"
    },
    {
      "name": "Gadgetron Libraries",
      "version": "1.0.7",
      "author": "NVSL",
      "maintainer": "NVSL \u003cswanson@eng.ucsd.edu \u003e",
      "sentence": "Collection of Libraries for the Gadgetron software.",
      "paragraph": "This libraries are used to simplify the production of electronic devices with the Gadgetron software.",
      "website": "https://github.com/NVSL/gadgetron-software-libraries.git",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NVSL/Gadgetron_Libraries-1.0.7.zip",
      "archiveFileName": "Gadgetron_Libraries-1.0.7.zip",
      "size": 115064,
      "checksum": "SHA-256:74623fb30596dac6af66e5040d7b8e984661a9bf6cff6b3894590fbe30eab4d7"
    },
    {
      "name": "RobotDuLAB Arduino Library",
      "version": "0.0.1",
      "author": "Labaixbidouille \u003ccontact@labaixbidouille.com\u003e",
      "maintainer": "Labaixbidouille \u003ccontact@labaixbidouille.com\u003e",
      "sentence": "Bibliothèque de pilotage simplifié de RobotDuLAB.",
      "paragraph": "Permet de faciliter l'écriture d'un sketch pour RobotDuLAB.",
      "website": "https://github.com/LabAixBidouille/RobotDuLAB-arduino-library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/LabAixBidouille/RobotDuLAB_Arduino_Library-0.0.1.zip",
      "archiveFileName": "RobotDuLAB_Arduino_Library-0.0.1.zip",
      "size": 9602,
      "checksum": "SHA-256:318160175758eb47815b299083772a982d1e4f9cc50a8f3387384261d64d214d"
    },
    {
      "name": "RobotDuLAB Arduino Library",
      "version": "0.0.2",
      "author": "Labaixbidouille \u003ccontact@labaixbidouille.com\u003e",
      "maintainer": "Labaixbidouille \u003ccontact@labaixbidouille.com\u003e",
      "sentence": "Bibliothèque de pilotage simplifié de RobotDuLAB.",
      "paragraph": "Permet de faciliter l'écriture d'un sketch pour RobotDuLAB.",
      "website": "https://github.com/LabAixBidouille/RobotDuLAB-arduino-library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/LabAixBidouille/RobotDuLAB_Arduino_Library-0.0.2.zip",
      "archiveFileName": "RobotDuLAB_Arduino_Library-0.0.2.zip",
      "size": 9453,
      "checksum": "SHA-256:965e431ea7eeef45795b7247db7eea3b031d39f34428d39aa44caa5af5333691"
    },
    {
      "name": "ArduinoSTL",
      "version": "0.1.1",
      "author": "Mike Matera \u003cmatera@lifealgorithmic.com\u003e",
      "maintainer": "Mike Matera \u003cmatera@lifealgorithmic.com\u003e",
      "sentence": "A port of uClibc++ packaged as an Arduino library.",
      "paragraph": "This library includes important C++ functions, including cout and cin, printf and scanf. It also includes STL containers like vector and algorithms.",
      "website": "https://github.com/mike-matera/ArduinoSTL",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mike-matera/ArduinoSTL-0.1.1.zip",
      "archiveFileName": "ArduinoSTL-0.1.1.zip",
      "size": 509964,
      "checksum": "SHA-256:7e69d0d6626feb585bfd49fd35cc32fcfe4bdddf67ade5331d29e5ea1ab912ba"
    },
    {
      "name": "ArduinoSTL",
      "version": "0.1.2",
      "author": "Mike Matera \u003cmatera@lifealgorithmic.com\u003e",
      "maintainer": "Mike Matera \u003cmatera@lifealgorithmic.com\u003e",
      "sentence": "A port of uClibc++ packaged as an Arduino library.",
      "paragraph": "This library includes important C++ functions, including cout and cin, printf and scanf. It also includes STL containers like vector and algorithms.",
      "website": "https://github.com/mike-matera/ArduinoSTL",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mike-matera/ArduinoSTL-0.1.2.zip",
      "archiveFileName": "ArduinoSTL-0.1.2.zip",
      "size": 509999,
      "checksum": "SHA-256:e551aa845560b714366229e8bf9a0e47fb41fedc6c2e94a6da6a733a67cae9eb"
    },
    {
      "name": "ArduinoSTL",
      "version": "0.1.4",
      "author": "Mike Matera \u003cmatera@lifealgorithmic.com\u003e",
      "maintainer": "Mike Matera \u003cmatera@lifealgorithmic.com\u003e",
      "sentence": "A port of uClibc++ packaged as an Arduino library.",
      "paragraph": "This library includes important C++ functions, including cout and cin, printf and scanf. It also includes STL containers like vector and algorithms.",
      "website": "https://github.com/mike-matera/ArduinoSTL",
      "category": "Other",
      "architectures": [
        "avr",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mike-matera/ArduinoSTL-0.1.4.zip",
      "archiveFileName": "ArduinoSTL-0.1.4.zip",
      "size": 510214,
      "checksum": "SHA-256:b5f1c9cd27ab36382145acdd50d14530d683818bebadbf692ee8c21b7ad43c18"
    },
    {
      "name": "ArduinoSTL",
      "version": "0.1.5",
      "author": "Mike Matera \u003cmatera@lifealgorithmic.com\u003e",
      "maintainer": "Mike Matera \u003cmatera@lifealgorithmic.com\u003e",
      "sentence": "A port of uClibc++ packaged as an Arduino library.",
      "paragraph": "This library includes important C++ functions, including cout and cin, printf and scanf. It also includes STL containers like vector and algorithms.",
      "website": "https://github.com/mike-matera/ArduinoSTL",
      "category": "Other",
      "architectures": [
        "avr",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mike-matera/ArduinoSTL-0.1.5.zip",
      "archiveFileName": "ArduinoSTL-0.1.5.zip",
      "size": 511149,
      "checksum": "SHA-256:1ab360282b3601b51ada588bc134d58ae1e451c156db3760e40e407c62fa65f5"
    },
    {
      "name": "ArduinoSTL",
      "version": "0.1.6",
      "author": "Mike Matera \u003cmatera@lifealgorithmic.com\u003e",
      "maintainer": "Mike Matera \u003cmatera@lifealgorithmic.com\u003e",
      "sentence": "A port of uClibc++ packaged as an Arduino library.",
      "paragraph": "This library includes important C++ functions, including cout and cin, printf and scanf. It also includes STL containers like vector and algorithms.",
      "website": "https://github.com/mike-matera/ArduinoSTL",
      "category": "Other",
      "architectures": [
        "avr",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mike-matera/ArduinoSTL-0.1.6.zip",
      "archiveFileName": "ArduinoSTL-0.1.6.zip",
      "size": 511151,
      "checksum": "SHA-256:6f33db78ef2f58e71c32d3f92edb1f20d2960ba263a2c9f0af289ae80f0a8627"
    },
    {
      "name": "ArduinoSTL",
      "version": "0.1.7",
      "author": "Mike Matera \u003cmatera@lifealgorithmic.com\u003e",
      "maintainer": "Mike Matera \u003cmatera@lifealgorithmic.com\u003e",
      "sentence": "A port of uClibc++ packaged as an Arduino library.",
      "paragraph": "This library includes important C++ functions, including cout and cin, printf and scanf. It also includes STL containers like vector and algorithms.",
      "website": "https://github.com/mike-matera/ArduinoSTL",
      "category": "Other",
      "architectures": [
        "avr",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mike-matera/ArduinoSTL-0.1.7.zip",
      "archiveFileName": "ArduinoSTL-0.1.7.zip",
      "size": 512122,
      "checksum": "SHA-256:511b9a9646e3a23828cd7c4f410d1c8db0f9b620aa36f3bc9d0eac74b6f90848"
    },
    {
      "name": "ArduinoSTL",
      "version": "0.1.8",
      "author": "Mike Matera \u003cmatera@lifealgorithmic.com\u003e",
      "maintainer": "Mike Matera \u003cmatera@lifealgorithmic.com\u003e",
      "sentence": "A port of uClibc++ packaged as an Arduino library.",
      "paragraph": "This library includes important C++ functions, including cout and cin, printf and scanf. It also includes STL containers like vector and algorithms.",
      "website": "https://github.com/mike-matera/ArduinoSTL",
      "category": "Other",
      "architectures": [
        "avr",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mike-matera/ArduinoSTL-0.1.8.zip",
      "archiveFileName": "ArduinoSTL-0.1.8.zip",
      "size": 512104,
      "checksum": "SHA-256:d7694a297fb486b2d8d2567fed0a4ce41c0b6c6c371fdf15d2da9e9c611211ac"
    },
    {
      "name": "ArduinoSTL",
      "version": "1.0.2",
      "author": "Mike Matera \u003cmatera@lifealgorithmic.com\u003e",
      "maintainer": "Mike Matera \u003cmatera@lifealgorithmic.com\u003e",
      "sentence": "A port of uClibc++ packaged as an Arduino library.",
      "paragraph": "This library includes important C++ functions, including cout and cin, printf and scanf. It also includes STL containers like vector and algorithms.",
      "website": "https://github.com/mike-matera/ArduinoSTL",
      "category": "Other",
      "architectures": [
        "avr",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mike-matera/ArduinoSTL-1.0.2.zip",
      "archiveFileName": "ArduinoSTL-1.0.2.zip",
      "size": 512909,
      "checksum": "SHA-256:f5f253ff72bcbc42b350eda57e6bd35b1e1aa340798fc63ddfd1436049f9231c"
    },
    {
      "name": "SharpIR",
      "version": "1.0.0",
      "author": "Giuseppe Masino",
      "maintainer": "Giuseppe Masino \u003chttp://www.facebook.com/peppe.masino1\u003e",
      "sentence": "Allow to acquire distance data from analog Sharp IR sensors",
      "website": "https://github.com/HackerInside0/SharpIR.git",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/HackerInside0/SharpIR-1.0.0.zip",
      "archiveFileName": "SharpIR-1.0.0.zip",
      "size": 2789,
      "checksum": "SHA-256:22b0081714ff325505f9ae34884956e75f8bdc4035599f316cd22bcf350da150"
    },
    {
      "name": "SharpIR",
      "version": "1.0.1",
      "author": "Giuseppe Masino \u003chttp://www.facebook.com/peppe.masino1\u003e",
      "maintainer": "Giuseppe Masino \u003chttp://www.facebook.com/peppe.masino1\u003e",
      "sentence": "Allow to acquire distance data from analog Sharp IR sensors",
      "website": "https://github.com/HackerInside0/Arduino_SharpIR.git",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/HackerInside0/SharpIR-1.0.1.zip",
      "archiveFileName": "SharpIR-1.0.1.zip",
      "size": 3350,
      "checksum": "SHA-256:9f07204b9bc889a645fd8a3724380bf76f47b92f76f28b51734067fbe4abea2b"
    },
    {
      "name": "SharpIR",
      "version": "1.0.2",
      "author": "Giuseppe Masino \u003chttp://www.facebook.com/peppe.masino1\u003e",
      "maintainer": "Giuseppe Masino \u003chttp://www.facebook.com/peppe.masino1\u003e",
      "sentence": "Allow to acquire distance data from analog Sharp IR sensors",
      "website": "https://github.com/HackerInside0/Arduino_SharpIR.git",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/HackerInside0/SharpIR-1.0.2.zip",
      "archiveFileName": "SharpIR-1.0.2.zip",
      "size": 4036,
      "checksum": "SHA-256:edb169b712504f1307214c52854c0f63b908fc42437f70a2371dca0b1c2aaa2a"
    },
    {
      "name": "SharpIR",
      "version": "1.0.3",
      "author": "Giuseppe Masino \u003chttp://www.facebook.com/peppe.masino1\u003e",
      "maintainer": "Giuseppe Masino \u003chttp://www.facebook.com/peppe.masino1\u003e",
      "sentence": "Allow to acquire distance data from analog Sharp IR sensors",
      "website": "https://github.com/HackerInside0/Arduino_SharpIR.git",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/HackerInside0/SharpIR-1.0.3.zip",
      "archiveFileName": "SharpIR-1.0.3.zip",
      "size": 4158,
      "checksum": "SHA-256:d58f7995b34a58ebd9acdabfd0ba4331f1f240ff9dab929ffdd8ce0450f7183c"
    },
    {
      "name": "SharpIR",
      "version": "1.1.0",
      "author": "Giuseppe Masino (HackerInside) \u003chttp://www.facebook.com/dev.hackerinside\u003e",
      "maintainer": "Giuseppe Masino (HackerInside) \u003chttp://www.facebook.com/dev.hackerinside\u003e",
      "sentence": "Allow to acquire distance data from analog Sharp IR sensors",
      "website": "https://github.com/HackerInside0/Arduino_SharpIR.git",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/HackerInside0/SharpIR-1.1.0.zip",
      "archiveFileName": "SharpIR-1.1.0.zip",
      "size": 6477,
      "checksum": "SHA-256:b6a5e6d0fa7b359fd1a490de3935fbd89fc8a85c832002631f7b95cd3d7ee912"
    },
    {
      "name": "Neurona",
      "version": "1.0.0",
      "author": "Caio Benatti Moretti",
      "maintainer": "Caio Benatti Moretti \u003ccaiodba@gmail.com\u003e",
      "sentence": "Artificial Neural Network architectures for Arduino",
      "paragraph": "This library allows an Arduino board to feed artificial neural network structures, in order to perform tasks such as pattern recognition, non-linear regression and time-series prediction from the available architectures. Click at More info to download the training algorithm of the respective architecture and paste in code the configuration obtained as output.",
      "website": "http://www.moretticb.com/Neurona",
      "category": "Data Processing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/moretticb/Neurona-1.0.0.zip",
      "archiveFileName": "Neurona-1.0.0.zip",
      "size": 11899,
      "checksum": "SHA-256:e3303dc5822a07fc4a3d3f217964fbdf592bfdd96f5170b13480b0c000adc99b"
    },
    {
      "name": "Flash",
      "version": "1.0.0",
      "author": "Mikal Hart \u003cmikal.n.hart@intel.com\u003e",
      "maintainer": "Christopher Schirner \u003cschinken@bamberg.ccc.de\u003e, Michel V \u003cmvhconsult@users.noreply.github.com\u003e",
      "sentence": "A library to wrap accessing and writing to flash",
      "website": "http://github.com/schinken/Flash",
      "category": "Data Storage",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/schinken/Flash-1.0.0.zip",
      "archiveFileName": "Flash-1.0.0.zip",
      "size": 13044,
      "checksum": "SHA-256:a8cd34c1ff326f3f874dcc3a2b434247c470df11ef6f98c06839a8247792396d"
    },
    {
      "name": "Flash",
      "version": "1.0.1",
      "author": "Mikal Hart \u003cmikal.n.hart@intel.com\u003e",
      "maintainer": "Christopher Schirner \u003cschinken@bamberg.ccc.de\u003e, Michel V \u003cmvhconsult@users.noreply.github.com\u003e",
      "sentence": "A library to wrap accessing and writing to flash",
      "paragraph": "It supports easy access to flash, also with a streaming interface",
      "website": "http://github.com/schinken/Flash",
      "category": "Data Storage",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/schinken/Flash-1.0.1.zip",
      "archiveFileName": "Flash-1.0.1.zip",
      "size": 13087,
      "checksum": "SHA-256:5f139ddea67a1d8b3b737fafff4fb3310e1e3763ce1826ec428b542d19eba464"
    },
    {
      "name": "EspSaveCrash",
      "version": "1.0.0",
      "author": "Krzysztof Budzynski \u003ckrzychb@gazeta.pl\u003e",
      "maintainer": "Krzysztof Budzynski \u003ckrzychb@gazeta.pl\u003e",
      "sentence": "Automatically saves exception details and stack trace to flash in case of ESP8266 crash.",
      "paragraph": "EspSaveCrash is a handy little library that will keep catching and saving crash information to ESP8266 flash in case it fails due to exception or software WDT. For more details please visit https://github.com/krzychb/ESPSaveCrash.",
      "website": "https://github.com/krzychb/EspSaveCrash",
      "category": "Other",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/krzychb/EspSaveCrash-1.0.0.zip",
      "archiveFileName": "EspSaveCrash-1.0.0.zip",
      "size": 15483,
      "checksum": "SHA-256:aad41fc040d9b548104da2fb1ce4fa96bf0f2020dcaee2d8df4eeb9289547ed7"
    },
    {
      "name": "EspSaveCrash",
      "version": "1.0.2",
      "author": "Krzysztof Budzynski \u003ckrzychb@gazeta.pl\u003e",
      "maintainer": "Krzysztof Budzynski \u003ckrzychb@gazeta.pl\u003e",
      "sentence": "Automatically saves exception details and stack trace to flash in case of ESP8266 crash.",
      "paragraph": "EspSaveCrash is a handy little library that will keep catching and saving crash information to ESP8266 flash in case it fails due to exception or software WDT. For more details please visit https://github.com/krzychb/ESPSaveCrash",
      "website": "https://github.com/krzychb/EspSaveCrash",
      "category": "Other",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/krzychb/EspSaveCrash-1.0.2.zip",
      "archiveFileName": "EspSaveCrash-1.0.2.zip",
      "size": 79154,
      "checksum": "SHA-256:bda1fcf793c0efa59597211f566bee4ee26cfe278b6af0dd18e7cf9998547f02"
    },
    {
      "name": "VL53L0X",
      "version": "1.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "VL53L0X distance sensor library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with ST's VL53L0X distance sensor.",
      "website": "https://github.com/pololu/vl53l0x-arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/VL53L0X-1.0.0.zip",
      "archiveFileName": "VL53L0X-1.0.0.zip",
      "size": 17558,
      "checksum": "SHA-256:add3a9be284954077ad9cc704a8ca83ae4e0dc79ee87aa16d77bd2b271244da0"
    },
    {
      "name": "VL53L0X",
      "version": "1.0.1",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "VL53L0X distance sensor library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with ST's VL53L0X distance sensor.",
      "website": "https://github.com/pololu/vl53l0x-arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/VL53L0X-1.0.1.zip",
      "archiveFileName": "VL53L0X-1.0.1.zip",
      "size": 17638,
      "checksum": "SHA-256:a29bfd31451d9d5641bf89dd6a8d8e7604159603ec20c122e1cbb8d6e1d4de59"
    },
    {
      "name": "TCM2lib",
      "version": "1.0.0",
      "author": "OXullo Intersecans \u003cx@brainrapers.org\u003e",
      "maintainer": "OXullo Intersecans \u003cx@brainrapers.org\u003e",
      "sentence": "Arduino library for the MPico TCM2 E-Ink timings module",
      "paragraph": "This library can be used in conjunction with a Pervasive Displays S1441CS121 4.41\" E-Ink kit and provides a graphic to EPD format converting tool",
      "website": "https://github.com/oxullo/Arduino-TCM2",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/oxullo/TCM2lib-1.0.0.zip",
      "archiveFileName": "TCM2lib-1.0.0.zip",
      "size": 40730,
      "checksum": "SHA-256:c76b3a6862d5462886e51d95358523c6589cb3b4893661f9f964ec57adf4432b"
    },
    {
      "name": "TCM2lib",
      "version": "1.0.1",
      "author": "OXullo Intersecans \u003cx@brainrapers.org\u003e",
      "maintainer": "OXullo Intersecans \u003cx@brainrapers.org\u003e",
      "sentence": "Arduino library for the MPico TCM2 E-Ink timings module",
      "paragraph": "This library can be used in conjunction with a Pervasive Displays S1441CS121 4.41\" E-Ink kit and provides a graphic to EPD format converting tool",
      "website": "https://github.com/oxullo/Arduino-TCM2",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/oxullo/TCM2lib-1.0.1.zip",
      "archiveFileName": "TCM2lib-1.0.1.zip",
      "size": 39609,
      "checksum": "SHA-256:28b0d3d990eb9cd6e554f4c4f1812d00de28d2a4ff34cce5012f84374a217486"
    },
    {
      "name": "uStepper",
      "version": "0.3.0",
      "author": "ON Development IVS",
      "maintainer": "Thomas Olsen (thomas@ustepper.com)",
      "sentence": "Library offering support for uStepper",
      "paragraph": "uStepper support library",
      "website": "https://github.com/uStepper/uStepper/blob/master/Library/uStepper.zip",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/uStepper/uStepper-0.3.0.zip",
      "archiveFileName": "uStepper-0.3.0.zip",
      "size": 388849,
      "checksum": "SHA-256:ba0e6e009fab7bc64a421c769cac4228d6e33fa2a7b1099cf96ff69060d21b95"
    },
    {
      "name": "uStepper",
      "version": "0.4.0",
      "author": "ON Development IVS",
      "maintainer": "Thomas Olsen (thomas@ustepper.com)",
      "sentence": "Library offering support for uStepper",
      "paragraph": "uStepper support library",
      "website": "https://github.com/uStepper/uStepper/blob/master/Library/uStepper.zip",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/uStepper/uStepper-0.4.0.zip",
      "archiveFileName": "uStepper-0.4.0.zip",
      "size": 418712,
      "checksum": "SHA-256:6e9ea154f491db1b4b462231cb8e230c3741f7aee9e6e7cffeccfcefa3290790"
    },
    {
      "name": "uStepper",
      "version": "0.4.1",
      "author": "ON Development IVS",
      "maintainer": "Thomas Olsen (thomas@ustepper.com)",
      "sentence": "Library offering support for uStepper",
      "paragraph": "uStepper support library",
      "website": "https://github.com/uStepper/uStepper/tree/master/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/uStepper/uStepper-0.4.1.zip",
      "archiveFileName": "uStepper-0.4.1.zip",
      "size": 419106,
      "checksum": "SHA-256:8faf87bc5224215d2e4021e5c61c977b7fe2dba90e40c24d51991a7512632b65"
    },
    {
      "name": "uStepper",
      "version": "0.4.2",
      "author": "ON Development IVS",
      "maintainer": "Thomas Olsen (thomas@ustepper.com)",
      "sentence": "Library offering support for uStepper",
      "paragraph": "uStepper support library",
      "website": "https://github.com/uStepper/uStepper/tree/master/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/uStepper/uStepper-0.4.2.zip",
      "archiveFileName": "uStepper-0.4.2.zip",
      "size": 419240,
      "checksum": "SHA-256:06f0b54694caa2063d6767bbdf15dcf066ece4cc871b03345b4722b4fd8de436"
    },
    {
      "name": "uStepper",
      "version": "0.4.3",
      "author": "ON Development IVS",
      "maintainer": "Thomas Olsen (thomas@ustepper.com)",
      "sentence": "Library offering support for uStepper",
      "paragraph": "uStepper support library",
      "website": "https://github.com/uStepper/uStepper/tree/master/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/uStepper/uStepper-0.4.3.zip",
      "archiveFileName": "uStepper-0.4.3.zip",
      "size": 419646,
      "checksum": "SHA-256:9ea73f994a119d815dbfe8eb3e60f3034adf749bfa7a25e961b5d320cb7ee45f"
    },
    {
      "name": "uStepper",
      "version": "0.4.4",
      "author": "ON Development IVS",
      "maintainer": "Thomas Olsen (thomas@ustepper.com)",
      "sentence": "Library offering support for uStepper",
      "paragraph": "uStepper support library",
      "website": "https://github.com/uStepper/uStepper/tree/master/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/uStepper/uStepper-0.4.4.zip",
      "archiveFileName": "uStepper-0.4.4.zip",
      "size": 420556,
      "checksum": "SHA-256:0a85fbf7365658c0ac27ee410c95cf9a0cc86a101954d51fc7a802e48d080a57"
    },
    {
      "name": "uStepper",
      "version": "0.4.5",
      "author": "ON Development IVS",
      "maintainer": "Thomas Olsen (thomas@ustepper.com)",
      "sentence": "Library offering support for uStepper",
      "paragraph": "uStepper support library",
      "website": "https://github.com/uStepper/uStepper/tree/master/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/uStepper/uStepper-0.4.5.zip",
      "archiveFileName": "uStepper-0.4.5.zip",
      "size": 422994,
      "checksum": "SHA-256:00c7d0b60b4c82ac7528a28424891bd04f637280a10a89ded2360950aba1cc99"
    },
    {
      "name": "uStepper",
      "version": "1.0.0",
      "author": "ON Development IVS",
      "maintainer": "Thomas Olsen (thomas@ustepper.com)",
      "sentence": "Library offering support for uStepper",
      "paragraph": "uStepper support library",
      "website": "https://github.com/uStepper/uStepper/tree/master/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/uStepper/uStepper-1.0.0.zip",
      "archiveFileName": "uStepper-1.0.0.zip",
      "size": 457702,
      "checksum": "SHA-256:79b6bb2ac13f479820caad7bab80768a5ad05e04e0ddf39507368139fd0a9156"
    },
    {
      "name": "uStepper",
      "version": "1.1.0",
      "author": "ON Development IVS",
      "maintainer": "Thomas Olsen (thomas@ustepper.com)",
      "sentence": "Library offering support for uStepper",
      "paragraph": "uStepper support library",
      "website": "https://github.com/uStepper/uStepper/tree/master/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/uStepper/uStepper-1.1.0.zip",
      "archiveFileName": "uStepper-1.1.0.zip",
      "size": 491494,
      "checksum": "SHA-256:bc92340e2637887ee4a1f6dbe025e81534b59efe14b136402e11638ad8edda95"
    },
    {
      "name": "uStepper",
      "version": "1.2.0",
      "author": "ON Development IVS",
      "maintainer": "Thomas Olsen (thomas@ustepper.com)",
      "sentence": "Library offering support for uStepper",
      "paragraph": "uStepper support library",
      "website": "https://github.com/uStepper/uStepper/tree/master/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/uStepper/uStepper-1.2.0.zip",
      "archiveFileName": "uStepper-1.2.0.zip",
      "size": 491220,
      "checksum": "SHA-256:5f1c6cd78e1cbaa2d0a1c5313ebfedc27ed7c36aa8214eea70491bd3764a27b7"
    },
    {
      "name": "uStepper",
      "version": "1.2.1",
      "author": "ON Development IVS",
      "maintainer": "Thomas Olsen (thomas@ustepper.com)",
      "sentence": "Library offering support for uStepper",
      "paragraph": "uStepper support library",
      "website": "https://github.com/uStepper/uStepper/tree/master/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/uStepper/uStepper-1.2.1.zip",
      "archiveFileName": "uStepper-1.2.1.zip",
      "size": 492899,
      "checksum": "SHA-256:50afcb3a2438b12889c0b87d9c3c5212e2e9bc41026a8b2c2ffd83e84be5583f"
    },
    {
      "name": "uStepper",
      "version": "1.2.2",
      "author": "ON Development IVS",
      "maintainer": "Thomas Olsen (thomas@ustepper.com)",
      "sentence": "Library offering support for uStepper",
      "paragraph": "uStepper support library",
      "website": "https://github.com/uStepper/uStepper/tree/master/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/uStepper/uStepper-1.2.2.zip",
      "archiveFileName": "uStepper-1.2.2.zip",
      "size": 493871,
      "checksum": "SHA-256:5f7c73905ca57aecd5d7f199935b553cc1ae3f4a10382a407abb7dfca0c2f164"
    },
    {
      "name": "L293",
      "version": "1.0.0",
      "author": "Giuseppe Masino \u003chttp://www.facebook.com/peppe.masino1\u003e",
      "maintainer": "Giuseppe Masino \u003chttp://www.facebook.com/peppe.masino1\u003e",
      "sentence": "Allow to control brushless motors with L293 motor driver",
      "website": "https://github.com/HackerInside0/L293.git",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/HackerInside0/L293-1.0.0.zip",
      "archiveFileName": "L293-1.0.0.zip",
      "size": 4344,
      "checksum": "SHA-256:f53ce571e2b7c9c000f25e2a55714b5f3392f29e66111094b532de033ca88545"
    },
    {
      "name": "L293",
      "version": "1.0.1",
      "author": "Giuseppe Masino \u003chttp://www.facebook.com/peppe.masino1\u003e",
      "maintainer": "Giuseppe Masino \u003chttp://www.facebook.com/peppe.masino1\u003e",
      "sentence": "Allow to control brushless motors with L293 motor driver",
      "website": "https://github.com/HackerInside0/Arduino_L293.git",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/HackerInside0/L293-1.0.1.zip",
      "archiveFileName": "L293-1.0.1.zip",
      "size": 4761,
      "checksum": "SHA-256:4bcaf8d1b179c0a6232761331a1b742759e7d86ed463d5fe9ca18e42f88f517f"
    },
    {
      "name": "L293",
      "version": "2.0.0",
      "author": "Giuseppe Masino \u003chttp://www.facebook.com/peppe.masino1\u003e",
      "maintainer": "Giuseppe Masino \u003chttp://www.facebook.com/peppe.masino1\u003e",
      "sentence": "Allow to control brushless motors with L293 motor driver",
      "website": "https://github.com/HackerInside0/Arduino_L293.git",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/HackerInside0/L293-2.0.0.zip",
      "archiveFileName": "L293-2.0.0.zip",
      "size": 167631,
      "checksum": "SHA-256:a39c812bb0de471239b5ee2d7eb6b56e69819204705423cfb199ed141583e9e6"
    },
    {
      "name": "L293",
      "version": "3.0.0",
      "author": "Giuseppe Masino \u003chttp://www.facebook.com/peppe.masino1\u003e",
      "maintainer": "Giuseppe Masino \u003chttp://www.facebook.com/peppe.masino1\u003e",
      "sentence": "Allow to control brushless motors with L293 motor driver",
      "website": "https://github.com/HackerInside0/Arduino_L293.git",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/HackerInside0/L293-3.0.0.zip",
      "archiveFileName": "L293-3.0.0.zip",
      "size": 168370,
      "checksum": "SHA-256:0dbc10cd1fbb37477426ee6417b7619fb5b754efb064094445d30e1f9418752b"
    },
    {
      "name": "AD5241",
      "version": "1.0.0",
      "author": "Max Chan \u003cmax@maxchan.info\u003e",
      "maintainer": "Max Chan \u003cmax@maxchan.info\u003e",
      "sentence": "Driver for Analog Devices AD5241/2 and AD5280/2 digital potentiometers.",
      "paragraph": "The Analog Devices AD5241/2 series and their higher voltage siblings AD5280/2 series are one family of percision 8-bit digital potentiometers.",
      "website": "https://en.maxchan.info/arduino#ad5241",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ArduinoMax/AD5241-1.0.0.zip",
      "archiveFileName": "AD5241-1.0.0.zip",
      "size": 2702,
      "checksum": "SHA-256:4cd9afb8c13f1168c73d26a1a99b602c47723d833ac02b3aab971f4cd6b98a44"
    },
    {
      "name": "AD5241",
      "version": "1.0.1",
      "author": "Max Chan \u003cmax@maxchan.info\u003e",
      "maintainer": "Max Chan \u003cmax@maxchan.info\u003e",
      "sentence": "Driver for Analog Devices AD5241/2 and AD5280/2 digital potentiometers.",
      "paragraph": "The Analog Devices AD5241/2 series and their higher voltage siblings AD5280/2 series are one family of percision 8-bit digital potentiometers.",
      "website": "https://en.maxchan.info/arduino#ad5241",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ArduinoMax/AD5241-1.0.1.zip",
      "archiveFileName": "AD5241-1.0.1.zip",
      "size": 2709,
      "checksum": "SHA-256:7f591364c063b3191c0c83695ecb8b518c44494f962a84692dfe41f0c5283768"
    },
    {
      "name": "AD5241",
      "version": "1.0.2",
      "author": "Max Chan \u003cmax@maxchan.info\u003e",
      "maintainer": "Max Chan \u003cmax@maxchan.info\u003e",
      "sentence": "Driver for Analog Devices AD5241/2 and AD5280/2 digital potentiometers.",
      "paragraph": "The Analog Devices AD5241/2 series and their higher voltage siblings AD5280/2 series are one family of percision 8-bit digital potentiometers.",
      "website": "https://en.maxchan.info/arduino#ad5241",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ArduinoMax/AD5241-1.0.2.zip",
      "archiveFileName": "AD5241-1.0.2.zip",
      "size": 2712,
      "checksum": "SHA-256:8e5b0e566ae87e570e256b6b2901c680c5b31d71fdfdf59c12dbf84ae38077bd"
    },
    {
      "name": "MCP41XXX",
      "version": "1.0.0",
      "author": "Max Chan \u003cmax@maxchan.info\u003e",
      "maintainer": "Max Chan \u003cmax@maxchan.info\u003e",
      "sentence": "Driver for Microchip MCP41xxx/42xxx digital potentiometers and MCP43xxx/44xxx digital rheostats.",
      "paragraph": "The Microchip MCP41xxx/42xxx series are one family of common low-cost 8-bit digital potentiometers. The current version of MCP41XXX library requires the latest version of SPI library to work.",
      "website": "https://en.maxchan.info/arduino#mcp41xxx",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ArduinoMax/MCP41XXX-1.0.0.zip",
      "archiveFileName": "MCP41XXX-1.0.0.zip",
      "size": 2757,
      "checksum": "SHA-256:aa12cad3cab2acf8474b7f5bf5e9bec81f2eb8cc17cb6090f1c60aee16543d65"
    },
    {
      "name": "MCP41XXX",
      "version": "1.0.1",
      "author": "Max Chan \u003cmax@maxchan.info\u003e",
      "maintainer": "Max Chan \u003cmax@maxchan.info\u003e",
      "sentence": "Driver for Microchip MCP41xxx/42xxx digital potentiometers and MCP43xxx/44xxx digital rheostats.",
      "paragraph": "The Microchip MCP41xxx/42xxx series are one family of common low-cost 8-bit digital potentiometers. The current version of MCP41XXX library requires the latest version of SPI library to work.",
      "website": "https://en.maxchan.info/arduino#mcp41xxx",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ArduinoMax/MCP41XXX-1.0.1.zip",
      "archiveFileName": "MCP41XXX-1.0.1.zip",
      "size": 2760,
      "checksum": "SHA-256:94db8a542b59a01d45d19cc53b38cb6d05a9cf3c53fb7310e8536aa1c6456c44"
    },
    {
      "name": "MCP41XXX",
      "version": "1.0.2",
      "author": "Max Chan \u003cmax@maxchan.info\u003e",
      "maintainer": "Max Chan \u003cmax@maxchan.info\u003e",
      "sentence": "Driver for Microchip MCP41xxx/42xxx digital potentiometers and MCP43xxx/44xxx digital rheostats.",
      "paragraph": "The Microchip MCP41xxx/42xxx series are one family of common low-cost 8-bit digital potentiometers. The current version of MCP41XXX library requires the latest version of SPI library to work.",
      "website": "https://en.maxchan.info/arduino#mcp41xxx",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ArduinoMax/MCP41XXX-1.0.2.zip",
      "archiveFileName": "MCP41XXX-1.0.2.zip",
      "size": 2767,
      "checksum": "SHA-256:97b63ab601b1367667a3d32b5c9e62623269a3ab90cece2e383ee07c0b13f0e2"
    },
    {
      "name": "MCP41XXX",
      "version": "1.0.3",
      "author": "Max Chan \u003cmax@maxchan.info\u003e",
      "maintainer": "Max Chan \u003cmax@maxchan.info\u003e",
      "sentence": "Driver for Microchip MCP41xxx/42xxx digital potentiometers and MCP43xxx/44xxx digital rheostats.",
      "paragraph": "The Microchip MCP41xxx/42xxx series are one family of common low-cost 8-bit digital potentiometers. The current version of MCP41XXX library requires the latest version of SPI library to work.",
      "website": "https://en.maxchan.info/arduino#mcp41xxx",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ArduinoMax/MCP41XXX-1.0.3.zip",
      "archiveFileName": "MCP41XXX-1.0.3.zip",
      "size": 2771,
      "checksum": "SHA-256:e6e68ae9f96cd80a50246d534c211f3d3feef0f57ad8e165ad04017d0498c464"
    },
    {
      "name": "PLS7shield",
      "version": "1.3.0",
      "author": "Milan Lukic",
      "maintainer": "Milan Lukic \u003cmrmot021@gmail.com\u003e",
      "sentence": "Arduino shield with various I/O devices",
      "paragraph": "4 x PUSH BUTTON + 8 x LED + 8 x DIP SWITCH + 4 x 7SEG",
      "website": "https://github.com/mrmot021/PLS7shield",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrmot021/PLS7shield-1.3.0.zip",
      "archiveFileName": "PLS7shield-1.3.0.zip",
      "size": 4277,
      "checksum": "SHA-256:d85d891aec0a2a3a2d3f7a5363f91d6200c2ee6606f1ab6c14cfed5260ae08f3"
    },
    {
      "name": "SoftwareReset",
      "version": "1.0.0",
      "author": "Giuseppe Masino \u003chttp://www.facebook.com/peppe.masino1\u003e",
      "maintainer": "Giuseppe Masino \u003chttp://www.facebook.com/peppe.masino1\u003e",
      "sentence": "Allow to reset an arduino board from the sketch",
      "website": "https://github.com/HackerInside0/Arduino_SoftwareReset.git",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/HackerInside0/SoftwareReset-1.0.0.zip",
      "archiveFileName": "SoftwareReset-1.0.0.zip",
      "size": 1598,
      "checksum": "SHA-256:17d8a263656f43098410a711222609ac1ca40e306b81f4d020be59d14100aa8a"
    },
    {
      "name": "SoftwareReset",
      "version": "2.0.0",
      "author": "Giuseppe Masino \u003chttp://www.facebook.com/peppe.masino1\u003e",
      "maintainer": "Giuseppe Masino \u003chttp://www.facebook.com/peppe.masino1\u003e",
      "sentence": "Allow to reset an arduino board from the sketch",
      "website": "https://github.com/HackerInside0/Arduino_SoftwareReset.git",
      "category": "Device Control",
      "architectures": [
        "AVR"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/HackerInside0/SoftwareReset-2.0.0.zip",
      "archiveFileName": "SoftwareReset-2.0.0.zip",
      "size": 3744,
      "checksum": "SHA-256:2c0abc0d8a650fc2a6bd1531856f0bc0ea0763814f9eb885dcb7bd4f9d98b71d"
    },
    {
      "name": "Arduno-Twitter-library",
      "version": "1.3.0",
      "author": "NeoCat \u003cneocat@neocat.jp\u003e",
      "maintainer": "NeoCat \u003cneocat@neocat.jp\u003e",
      "sentence": "Arduino Twitter Library to send tweets",
      "paragraph": "A library to post tweets to Twitter from Arduino with an Ethernet.",
      "website": "https://github.com/NeoCat/Arduno-Twitter-library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NeoCat/Arduno_Twitter_library-1.3.0.zip",
      "archiveFileName": "Arduno_Twitter_library-1.3.0.zip",
      "size": 6562,
      "checksum": "SHA-256:48c80e05b812e0e8351371dcf206190f826039818c8963a2a158ffd2adefdd67"
    },
    {
      "name": "FastGPIO",
      "version": "2.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Faster general-purpose I/O",
      "paragraph": "C++ library for the Arduino IDE that allows you to manipulate general-purpose I/O (GPIO) pins on your Arduino or Arduino-compatible board with minimal overhead.",
      "website": "https://github.com/pololu/fastgpio-arduino",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/FastGPIO-2.0.0.zip",
      "archiveFileName": "FastGPIO-2.0.0.zip",
      "size": 11347,
      "checksum": "SHA-256:5eca767ffc53d14d0e2c3ca83b053ce6b200ce6ffe61b3631bd62fd4e5898e55"
    },
    {
      "name": "MegunoLink",
      "version": "1.6.0",
      "author": "Number Eight Innovation",
      "maintainer": "Number Eight Innovation \u003csupport@megunolink.com\u003e",
      "sentence": "Library for storing data in the eeprom, processing serial messages and plotting data with MegunoLink.",
      "paragraph": "Also includes handy timer and filtering tools.",
      "website": "http://www.megunolink.com/documentation/arduino-libraries-for-megunolink/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Megunolink/MegunoLink-1.6.0.zip",
      "archiveFileName": "MegunoLink-1.6.0.zip",
      "size": 91651,
      "checksum": "SHA-256:0e2c77b5ec3186ac2276d861a765f288dadf1885848294a94a0f2c339500fd11"
    },
    {
      "name": "MegunoLink",
      "version": "1.9.0",
      "author": "Number Eight Innovation",
      "maintainer": "Number Eight Innovation \u003csupport@megunolink.com\u003e",
      "sentence": "Library for storing data in the eeprom, processing serial messages and plotting data with MegunoLink.",
      "paragraph": "Also includes handy timer and filtering tools.",
      "website": "http://www.megunolink.com/documentation/arduino-libraries-for-megunolink/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Megunolink/MegunoLink-1.9.0.zip",
      "archiveFileName": "MegunoLink-1.9.0.zip",
      "size": 104868,
      "checksum": "SHA-256:0ed230a6f975d182b5c932cb9475b92b1718c4e7dc8f292c881095e545a70964"
    },
    {
      "name": "DualVNH5019MotorShield",
      "version": "2.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Arduino library for the Pololu Dual VNH5019 Motor Driver Shield",
      "paragraph": "This is a library for the Arduino that interfaces with the Pololu Dual VNH5019 Motor Driver Shield. It makes it simple to drive two brushed, DC motors.",
      "website": "https://github.com/pololu/dual-vnh5019-motor-shield",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/DualVNH5019MotorShield-2.0.0.zip",
      "archiveFileName": "DualVNH5019MotorShield-2.0.0.zip",
      "size": 6624,
      "checksum": "SHA-256:0043ad0698d800b1f244869af965e4e1ffc6c18c1c4121ed1682127669b9c701"
    },
    {
      "name": "QTRSensors",
      "version": "3.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Arduino library for the Pololu QTR Reflectance Sensors",
      "paragraph": "This is a library for an Arduino-compatible controller that interfaces with the Pololu QTR reflectance sensors.",
      "website": "https://github.com/pololu/qtr-sensors-arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/QTRSensors-3.0.0.zip",
      "archiveFileName": "QTRSensors-3.0.0.zip",
      "size": 16641,
      "checksum": "SHA-256:9b8b477d93fe56aab98f963571b5a049442f04f57c9f70990fa18f20cf7f3369"
    },
    {
      "name": "PololuQik",
      "version": "2.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Arduino library for the Pololu qik dual serial motor controllers",
      "paragraph": "This is a library for an Arduino-compatible controller that interfaces with the Pololu qik dual serial motor controllers.",
      "website": "https://github.com/pololu/qik-arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/PololuQik-2.0.0.zip",
      "archiveFileName": "PololuQik-2.0.0.zip",
      "size": 10911,
      "checksum": "SHA-256:f54c74dd8f3201a48ec23444da23eecd1187d7b2aac6c56960ad2401bf0eb116"
    },
    {
      "name": "LSM303",
      "version": "3.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Arduino library for Pololu LSM303 boards",
      "paragraph": "This is a library for an Arduino-compatible controller that interfaces with LSM303D, LSM303DLHC, LSM303DLM, and LSM303DLH 3D compass and accelerometer ICs on Pololu boards.",
      "website": "https://github.com/pololu/lsm303-arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/LSM303-3.0.0.zip",
      "archiveFileName": "LSM303-3.0.0.zip",
      "size": 16219,
      "checksum": "SHA-256:231b44c55a369e38078f86f035c30f7a3a8707fbf15653a4675908bc3a3fc234"
    },
    {
      "name": "LSM303",
      "version": "3.0.1",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Arduino library for Pololu LSM303 boards",
      "paragraph": "This is a library for an Arduino-compatible controller that interfaces with LSM303D, LSM303DLHC, LSM303DLM, and LSM303DLH 3D compass and accelerometer ICs on Pololu boards.",
      "website": "https://github.com/pololu/lsm303-arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/LSM303-3.0.1.zip",
      "archiveFileName": "LSM303-3.0.1.zip",
      "size": 16231,
      "checksum": "SHA-256:324cfa3b469a394db6067b99e05100fc34914702d9474bc9145189d097a2d3de"
    },
    {
      "name": "LPS",
      "version": "3.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Arduino library for Pololu LPS25H and LPS331AP boards",
      "paragraph": "This is a library for an Arduino-compatible controller that interfaces with ST LPS25H and LPS331AP pressure sensors on Pololu boards.",
      "website": "https://github.com/pololu/lps-arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/LPS-3.0.0.zip",
      "archiveFileName": "LPS-3.0.0.zip",
      "size": 9034,
      "checksum": "SHA-256:66015cf4b42408772327d7dd00cc5ef02424501759b9cef471e1fb6aeb30f954"
    },
    {
      "name": "PololuHD44780",
      "version": "2.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "C++ library for the Arduino IDE that allows you to control an LCD that uses the Hitachi HD44780 protocol.",
      "paragraph": "This is a C++ library for the Arduino IDE that allows you to control an LCD that uses the Hitachi HD44780 protocol. This library is very similar to the LiquidCrystal library, but it provides more separation between the low-level hardware access functions and the high-level functions so that the low-level functions can be replaced if necessary.",
      "website": "https://github.com/pololu/pololu-hd44780-arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/PololuHD44780-2.0.0.zip",
      "archiveFileName": "PololuHD44780-2.0.0.zip",
      "size": 13465,
      "checksum": "SHA-256:aa3393bab19ad6efafa325d9a0d5d922fd14eea952dd3c79ee119c55103342a6"
    },
    {
      "name": "A4990MotorShield",
      "version": "2.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Arduino library for the Pololu A4990 Dual Motor Driver Shield",
      "paragraph": "This is a library for an Arduino-compatible controller that interfaces with the Pololu A4990 Dual Motor Driver Shield for Arduino.",
      "website": "https://github.com/pololu/a4990-motor-shield",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/A4990MotorShield-2.0.0.zip",
      "archiveFileName": "A4990MotorShield-2.0.0.zip",
      "size": 6207,
      "checksum": "SHA-256:b2c1368cd6d4b7376cd1dba0d0a5556e48481a814bcdca44a34cf9f0b5f71bab"
    },
    {
      "name": "DRV8835MotorShield",
      "version": "2.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Arduino library for the Pololu DRV8835 Dual Motor Driver Shield",
      "paragraph": "This is a library for an Arduino-compatible controller that interfaces with the Pololu DRV8835 Dual Motor Driver Shield for Arduino.",
      "website": "https://github.com/pololu/drv8835-motor-shield",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/DRV8835MotorShield-2.0.0.zip",
      "archiveFileName": "DRV8835MotorShield-2.0.0.zip",
      "size": 5977,
      "checksum": "SHA-256:666a05567ff8869a55c33eac983fec0dfa66eeabe46f4984b25e97674c24735f"
    },
    {
      "name": "L3G",
      "version": "3.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Arduino library for Pololu L3G4200D, L3GD20, and L3G4200D boards",
      "paragraph": "This is a library for an Arduino-compatible controller that interfaces with L3GD20H, L3GD20, and L3G4200D gyros on Pololu board.",
      "website": "https://github.com/pololu/l3g-arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/L3G-3.0.0.zip",
      "archiveFileName": "L3G-3.0.0.zip",
      "size": 9304,
      "checksum": "SHA-256:242003e06f7fa10fa68344da98848ed17ed48a53a12e51645fb194ede531e706"
    },
    {
      "name": "DualMC33926MotorShield",
      "version": "2.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Arduino library for the Pololu Dual MC33926 Motor Driver Shield",
      "paragraph": "This is a library for the Arduino that interfaces with the Pololu Dual MC33926 Motor Driver Shield. It makes it simple to drive two brushed, DC motors.",
      "website": "https://github.com/pololu/dual-mc33926-motor-shield",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/DualMC33926MotorShield-2.0.0.zip",
      "archiveFileName": "DualMC33926MotorShield-2.0.0.zip",
      "size": 5813,
      "checksum": "SHA-256:9c33852874a9fe9352f0c081b427c6d3b1d7f634f5199d71fb9fff540f512d5a"
    },
    {
      "name": "USBPause",
      "version": "2.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Pause and restore USB interrupts",
      "paragraph": "C++ library for the Arduino IDE that makes it easy to temporarily pause USB interrupts and restore them later.",
      "website": "https://github.com/pololu/usb-pause-arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/USBPause-2.0.0.zip",
      "archiveFileName": "USBPause-2.0.0.zip",
      "size": 4543,
      "checksum": "SHA-256:67379664bbf5c485bb80ccaae37490b79171f3f9c1016446c39bb4d4d1d9d85c"
    },
    {
      "name": "Pushbutton",
      "version": "2.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Pushbutton library for Arduino",
      "paragraph": "C++ library for the Arduino IDE that helps interface with pushbuttons by either reading the state of the button or monitoring it for press/release events",
      "website": "https://github.com/pololu/pushbutton-arduino",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/Pushbutton-2.0.0.zip",
      "archiveFileName": "Pushbutton-2.0.0.zip",
      "size": 9014,
      "checksum": "SHA-256:5414dbf4364b307715b9940ef592ce4e1706204de14c6dd03a57d6a3c874fd38"
    },
    {
      "name": "Buzz",
      "version": "1.0.0",
      "author": "Connor Nishijima",
      "maintainer": "Connor Nishijima \u003cconnornishijima@gmail.com\u003e",
      "sentence": "AC-based motion detection using only the ADC and a wire",
      "paragraph": "By monitoring the amplitude of AC electricity waveforms in the air for changes, Buzz provides motion detection using only a wire!",
      "website": "https://github.com/connornishijima/arduino-buzz",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/connornishijima/Buzz-1.0.0.zip",
      "archiveFileName": "Buzz-1.0.0.zip",
      "size": 20540,
      "checksum": "SHA-256:17eca6449613def8af5c0ef1002db026e8ca6f92a41ac871df9291dcb8963217"
    },
    {
      "name": "Buzz",
      "version": "1.0.1",
      "author": "Connor Nishijima",
      "maintainer": "Connor Nishijima \u003cconnornishijima@gmail.com\u003e",
      "sentence": "AC/static electricity-based motion detection using only the ADC and a wire!",
      "paragraph": "By monitoring the amplitude of AC electricity waveforms in the air for changes, Buzz provides motion detection using only a wire!",
      "website": "https://github.com/connornishijima/arduino-buzz",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/connornishijima/Buzz-1.0.1.zip",
      "archiveFileName": "Buzz-1.0.1.zip",
      "size": 20563,
      "checksum": "SHA-256:6e425e9530a9f8c26ff8c008821c354ec5f4467a5144a7935a1c386ac2b243fe"
    },
    {
      "name": "Buzz",
      "version": "1.0.2",
      "author": "Connor Nishijima",
      "maintainer": "Connor Nishijima \u003cconnornishijima@gmail.com\u003e",
      "sentence": "AC/static electricity-based motion detection using only the ADC and a wire!",
      "paragraph": "By monitoring the amplitude of AC electricity waveforms in the air for changes, Buzz provides motion detection using only a wire!",
      "website": "https://github.com/connornishijima/arduino-buzz",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/connornishijima/Buzz-1.0.2.zip",
      "archiveFileName": "Buzz-1.0.2.zip",
      "size": 21817,
      "checksum": "SHA-256:9fe34a70c8a30815350aa0f08cc630c91afb8c5d531330144923aa39c49e9390"
    },
    {
      "name": "Buzz",
      "version": "1.0.3",
      "author": "Connor Nishijima",
      "maintainer": "Connor Nishijima \u003cconnornishijima@gmail.com\u003e",
      "sentence": "AC/static electricity-based motion detection using only the ADC and a wire!",
      "paragraph": "By monitoring the amplitude of AC electricity waveforms in the air for changes, Buzz provides motion detection using only a wire!",
      "website": "https://github.com/connornishijima/arduino-buzz",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/connornishijima/Buzz-1.0.3.zip",
      "archiveFileName": "Buzz-1.0.3.zip",
      "size": 22448,
      "checksum": "SHA-256:b29b32bb2ffdac7bef31f6328b8bcc199888cbc80226571dcc17645accfb3023"
    },
    {
      "name": "ESPiLight",
      "version": "0.10.0",
      "author": "Puuu",
      "maintainer": "Puuu \u003cpuuu@users.noreply.github.com\u003e",
      "sentence": "pilight 433.92 MHz protocols library for Arduino",
      "paragraph": "With this port of pilight 433.92 MHz protocols, you can transmit, receive and parse all 434 MHz protocols (e.g., rc switches or weather stations) supported by pilight. This should help to implement IoT bridges between the 434MHz-RF band and internet protocols. It is developed and tested on ESP8266.",
      "website": "https://github.com/puuu/espilight",
      "category": "Signal Input/Output",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/puuu/ESPiLight-0.10.0.zip",
      "archiveFileName": "ESPiLight-0.10.0.zip",
      "size": 212513,
      "checksum": "SHA-256:9c3621bc2ab87a0c854888cbd8fff1bae511487c43d5ef5c319de4bba38d9918"
    },
    {
      "name": "ESPiLight",
      "version": "0.10.1",
      "author": "Puuu",
      "maintainer": "Puuu \u003cpuuu@users.noreply.github.com\u003e",
      "sentence": "pilight 433.92 MHz protocols library for Arduino",
      "paragraph": "With this port of pilight 433.92 MHz protocols, you can transmit, receive and parse all 434 MHz protocols (e.g., rc switches or weather stations) supported by pilight. This should help to implement IoT bridges between the 434MHz-RF band and internet protocols. It is developed and tested on ESP8266.",
      "website": "https://github.com/puuu/espilight",
      "category": "Signal Input/Output",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/puuu/ESPiLight-0.10.1.zip",
      "archiveFileName": "ESPiLight-0.10.1.zip",
      "size": 213105,
      "checksum": "SHA-256:292afe8be564e46200f3285ac72628ea149219fb21b1717cb8214216dd4bab92"
    },
    {
      "name": "ESPiLight",
      "version": "0.11.0",
      "author": "Puuu",
      "maintainer": "Puuu \u003cpuuu@users.noreply.github.com\u003e",
      "sentence": "pilight 433.92 MHz protocols library for Arduino",
      "paragraph": "With this port of pilight 433.92 MHz protocols, you can transmit, receive and parse all 434 MHz protocols (e.g., rc switches or weather stations) supported by pilight. This should help to implement IoT bridges between the 434MHz-RF band and internet protocols. It is developed and tested on ESP8266.",
      "website": "https://github.com/puuu/espilight",
      "category": "Signal Input/Output",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/puuu/ESPiLight-0.11.0.zip",
      "archiveFileName": "ESPiLight-0.11.0.zip",
      "size": 213128,
      "checksum": "SHA-256:be2f59fd5ff6b37f2057e1cecee0a476e717eb537093246026cc7b78f6d7c520"
    },
    {
      "name": "ESPiLight",
      "version": "0.9.0",
      "author": "Puuu",
      "maintainer": "Puuu \u003cpuuu@users.noreply.github.com\u003e",
      "sentence": "pilight 433.92 MHz protocols library for Arduino",
      "paragraph": "With this port of pilight 433.92 MHz protocols, you can transmit, receive and parse all 434 MHz protocols (e.g., rc switches or weather stations) supported by pilight. This should help to implement IoT bridges between the 434MHz-RF band and internet protocols. It is developed and tested on ESP8266.",
      "website": "https://github.com/puuu/espilight",
      "category": "Signal Input/Output",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/puuu/ESPiLight-0.9.0.zip",
      "archiveFileName": "ESPiLight-0.9.0.zip",
      "size": 31142,
      "checksum": "SHA-256:ae7ac2b229845a30a2675d541ff10a0bdd35484556135f81acac9e5232c8fa85"
    },
    {
      "name": "ESPiLight",
      "version": "0.9.1",
      "author": "Puuu",
      "maintainer": "Puuu \u003cpuuu@users.noreply.github.com\u003e",
      "sentence": "pilight 433.92 MHz protocols library for Arduino",
      "paragraph": "With this port of pilight 433.92 MHz protocols, you can transmit, receive and parse all 434 MHz protocols (e.g., rc switches or weather stations) supported by pilight. This should help to implement IoT bridges between the 434MHz-RF band and internet protocols. It is developed and tested on ESP8266.",
      "website": "https://github.com/puuu/espilight",
      "category": "Signal Input/Output",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/puuu/ESPiLight-0.9.1.zip",
      "archiveFileName": "ESPiLight-0.9.1.zip",
      "size": 31709,
      "checksum": "SHA-256:aedb2e0cbe4204679022ef432626547d38ddd19f37928e3027674fe5dce44d5b"
    },
    {
      "name": "TheThingsNetwork",
      "version": "0.17.0",
      "author": "Johan Stokking, Ludo Teirlinck, Fokke Zandbergen, The Things Network",
      "maintainer": "Johan Stokking \u003cjohan@thethingsnetwork.org\u003e",
      "sentence": "An Arduino library for the The Things Network.",
      "paragraph": "Compatible with any Microchip RN2483 and RN2903 device.",
      "website": "https://github.com/TheThingsNetwork/arduino-library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TheThingsNetwork/TheThingsNetwork-0.17.0.zip",
      "archiveFileName": "TheThingsNetwork-0.17.0.zip",
      "size": 12476,
      "checksum": "SHA-256:eccfbbb5ea0c6d6f0ff397c43d1b00b82e969d5ec57240b40019e4de452e7a98"
    },
    {
      "name": "TheThingsNetwork",
      "version": "1.0.0",
      "author": "Johan Stokking, Ludo Teirlinck, Fokke Zandbergen, The Things Network",
      "maintainer": "Johan Stokking \u003cjohan@thethingsnetwork.org\u003e",
      "sentence": "Arduino library for the The Things Network.",
      "paragraph": "Compatible with any Microchip RN2483 and RN2903 device.",
      "website": "https://github.com/TheThingsNetwork/arduino-device-lib",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TheThingsNetwork/TheThingsNetwork-1.0.0.zip",
      "archiveFileName": "TheThingsNetwork-1.0.0.zip",
      "size": 55545,
      "checksum": "SHA-256:408281ca22c65255e88787d1f4404e074b0fd09d14f371df2b16d48cffc4964f"
    },
    {
      "name": "TheThingsNetwork",
      "version": "1.0.1",
      "author": "The Things Network",
      "maintainer": "Johan Stokking \u003cjohan@thethingsnetwork.org\u003e",
      "sentence": "Arduino library for the The Things Network.",
      "paragraph": "Compatible with any Microchip RN2483 and RN2903 device.",
      "website": "https://github.com/TheThingsNetwork/arduino-device-lib",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TheThingsNetwork/TheThingsNetwork-1.0.1.zip",
      "archiveFileName": "TheThingsNetwork-1.0.1.zip",
      "size": 55518,
      "checksum": "SHA-256:70ef66868e554295c919c21602a61f46d6806003347ac04523c1a0704c818024"
    },
    {
      "name": "TheThingsNetwork",
      "version": "2.0.0",
      "author": "The Things Network",
      "maintainer": "Johan Stokking \u003cjohan@thethingsnetwork.org\u003e",
      "sentence": "The Things Network Arduino Library.",
      "paragraph": "Compatible with any Microchip RN2483 and RN2903 device.",
      "website": "https://github.com/TheThingsNetwork/arduino-device-lib",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TheThingsNetwork/TheThingsNetwork-2.0.0.zip",
      "archiveFileName": "TheThingsNetwork-2.0.0.zip",
      "size": 56857,
      "checksum": "SHA-256:2da92e80200a2f6815f47490ef4abb5883f3dc2fe3617aacfa844f712d3e3f76"
    },
    {
      "name": "TheThingsNetwork",
      "version": "2.1.0",
      "author": "The Things Network",
      "maintainer": "Johan Stokking \u003cjohan@thethingsnetwork.org\u003e",
      "sentence": "The Things Network Arduino Library.",
      "paragraph": "Compatible with any Microchip RN2483 and RN2903 device.",
      "website": "https://github.com/TheThingsNetwork/arduino-device-lib",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TheThingsNetwork/TheThingsNetwork-2.1.0.zip",
      "archiveFileName": "TheThingsNetwork-2.1.0.zip",
      "size": 95042,
      "checksum": "SHA-256:c8e92f5be376c93024b2027bfcf55dfc2402d794d2b36257043624e4c84b9c7f"
    },
    {
      "name": "TheThingsNetwork",
      "version": "2.2.0",
      "author": "The Things Network",
      "maintainer": "Johan Stokking \u003cjohan@thethingsnetwork.org\u003e",
      "sentence": "The Things Network Arduino Library.",
      "paragraph": "Compatible with any Microchip RN2483 and RN2903 device.",
      "website": "https://github.com/TheThingsNetwork/arduino-device-lib",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TheThingsNetwork/TheThingsNetwork-2.2.0.zip",
      "archiveFileName": "TheThingsNetwork-2.2.0.zip",
      "size": 94186,
      "checksum": "SHA-256:50d42d4cf6718e5ad1bd00676a2fc9fbe54f789a8eb130b0f873035de0b922e5"
    },
    {
      "name": "TheThingsNetwork",
      "version": "2.2.2",
      "author": "The Things Network",
      "maintainer": "Johan Stokking \u003cjohan@thethingsnetwork.org\u003e",
      "sentence": "The Things Network Arduino Library.",
      "paragraph": "Compatible with any Microchip RN2483 and RN2903 device.",
      "website": "https://github.com/TheThingsNetwork/arduino-device-lib",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TheThingsNetwork/TheThingsNetwork-2.2.2.zip",
      "archiveFileName": "TheThingsNetwork-2.2.2.zip",
      "size": 94232,
      "checksum": "SHA-256:f05aa4154c427a4fea44c13206c8b925830140f88cdda2bf4a2260333544f825"
    },
    {
      "name": "TheThingsNetwork",
      "version": "2.3.1",
      "author": "The Things Network",
      "maintainer": "Johan Stokking \u003cjohan@thethingsnetwork.org\u003e",
      "sentence": "The Things Network Arduino Library.",
      "paragraph": "Compatible with any Microchip RN2483 and RN2903 device.",
      "website": "https://github.com/TheThingsNetwork/arduino-device-lib",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TheThingsNetwork/TheThingsNetwork-2.3.1.zip",
      "archiveFileName": "TheThingsNetwork-2.3.1.zip",
      "size": 56586,
      "checksum": "SHA-256:534319a4c46a1b14bc24162225a01e5e2f61991480d70a7bda1812731ef29086"
    },
    {
      "name": "TheThingsNetwork",
      "version": "2.4.0",
      "author": "The Things Network",
      "maintainer": "Johan Stokking \u003cjohan@thethingsnetwork.org\u003e",
      "sentence": "The Things Network Arduino Library.",
      "paragraph": "Compatible with any Microchip RN2483 and RN2903 device.",
      "website": "https://github.com/TheThingsNetwork/arduino-device-lib",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TheThingsNetwork/TheThingsNetwork-2.4.0.zip",
      "archiveFileName": "TheThingsNetwork-2.4.0.zip",
      "size": 56798,
      "checksum": "SHA-256:744d8663bbb5c8a5683157e9c6c3adbd0ccb46bb097b8fad9d8783e2b5e9f9d7"
    },
    {
      "name": "TheThingsNetwork",
      "version": "2.5.1",
      "author": "The Things Network",
      "maintainer": "Johan Stokking \u003cjohan@thethingsnetwork.org\u003e",
      "sentence": "The Things Network Arduino Library.",
      "paragraph": "Compatible with any Microchip RN2483 and RN2903 device.",
      "website": "https://github.com/TheThingsNetwork/arduino-device-lib",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TheThingsNetwork/TheThingsNetwork-2.5.1.zip",
      "archiveFileName": "TheThingsNetwork-2.5.1.zip",
      "size": 61369,
      "checksum": "SHA-256:5dbe946e47ef7cd780ae28403efcbc830dda4ff1ba68a0436c7128f3bb7521a9"
    },
    {
      "name": "TheThingsNetwork",
      "version": "2.5.2",
      "author": "The Things Network",
      "maintainer": "Johan Stokking \u003cjohan@thethingsnetwork.org\u003e",
      "sentence": "The Things Network Arduino Library.",
      "paragraph": "Compatible with any Microchip RN2483 and RN2903 device.",
      "website": "https://github.com/TheThingsNetwork/arduino-device-lib",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TheThingsNetwork/TheThingsNetwork-2.5.2.zip",
      "archiveFileName": "TheThingsNetwork-2.5.2.zip",
      "size": 61366,
      "checksum": "SHA-256:fd49806bf84db5d70e7b5627e82d57623f04db5ef19ae3487fd59e28bc55417e"
    },
    {
      "name": "Talk2",
      "version": "1.0.0",
      "author": "Wisen",
      "maintainer": "Talk² by Wisen \u003ctalk2@wisen.com.au\u003e",
      "sentence": "\u003cfont color=\"#0066CC\"\u003eLibrary for the Talk² Boards.\u003c/font\u003e",
      "paragraph": "This library contains HAL (\u003cb\u003eH\u003c/b\u003eardware \u003cb\u003eA\u003c/b\u003ebstratction \u003cb\u003eL\u003c/b\u003eayer) drivers to be used with Talk² Boards like the Whisper Node. Please make sure you're using a recent version of the Arduino IDE.",
      "website": "http://talk2.wisen.com.au",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/talk2wisen/Talk2-1.0.0.zip",
      "archiveFileName": "Talk2-1.0.0.zip",
      "size": 395039,
      "checksum": "SHA-256:e499cd21c917201443098dcacf2d5298566c2ae5876d6d5e3ede66a4d2bf8b60"
    },
    {
      "name": "Talk2",
      "version": "1.0.1",
      "author": "Wisen",
      "maintainer": "Talk2 by Wisen \u003ctalk2@wisen.com.au\u003e",
      "sentence": "\u003cfont color=\"#0066CC\"\u003eLibrary for the Talk2 Boards.\u003c/font\u003e",
      "paragraph": "This library contains HAL (\u003cb\u003eH\u003c/b\u003eardware \u003cb\u003eA\u003c/b\u003ebstratction \u003cb\u003eL\u003c/b\u003eayer) drivers to be used with Talk2 Boards like the Whisper Node. Please make sure you're using a recent version of the Arduino IDE.",
      "website": "http://talk2.wisen.com.au",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/talk2wisen/Talk2-1.0.1.zip",
      "archiveFileName": "Talk2-1.0.1.zip",
      "size": 671728,
      "checksum": "SHA-256:2f0e21d8f578195a8176712d01e615872511dc6b968b19d7880c2f65f15d3824"
    },
    {
      "name": "Ethernet2",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet board or shield. For all Arduino boards.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "http://arduino.cc/en/Reference/Ethernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Ethernet2-1.0.0.zip",
      "archiveFileName": "Ethernet2-1.0.0.zip",
      "size": 61031,
      "checksum": "SHA-256:ccc7dee4b11fa16f04faa3493733dcfdc2ff88932ae4c0811297db26185390a9"
    },
    {
      "name": "Ethernet2",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet board or shield. For all Arduino boards.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "https://github.com/adafruit/Ethernet2",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Ethernet2-1.0.1.zip",
      "archiveFileName": "Ethernet2-1.0.1.zip",
      "size": 61038,
      "checksum": "SHA-256:9d36ddf36e2606596751432eb45c976d467026736534e71ad3702ae5a2fd7749"
    },
    {
      "name": "Ethernet2",
      "version": "1.0.2",
      "author": "Various",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet board or shield. For all Arduino boards.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "https://github.com/adafruit/Ethernet2",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Ethernet2-1.0.2.zip",
      "archiveFileName": "Ethernet2-1.0.2.zip",
      "size": 61040,
      "checksum": "SHA-256:d57eed63eb3089eb72b6ab9f842a77ca51f649e8a642219fb9b9ff25a48f023f"
    },
    {
      "name": "Ethernet2",
      "version": "1.0.3",
      "author": "Various",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet board or shield. For all Arduino boards.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "https://github.com/adafruit/Ethernet2",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Ethernet2-1.0.3.zip",
      "archiveFileName": "Ethernet2-1.0.3.zip",
      "size": 61748,
      "checksum": "SHA-256:b00a3ed0f12270ff7be38152460d9e23108e81a06c2a4f01e85b2a121e1334da"
    },
    {
      "name": "Ethernet2",
      "version": "1.0.4",
      "author": "Various",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Enables network connection (local and Internet) using W5500 based Ethernet shields.",
      "paragraph": "With this library you can use W5500 based Ethernet shields, such as the 'Arduino Ethernet Shield v2' to connect to Internet, but not older W5100 based shields. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "https://github.com/adafruit/Ethernet2",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Ethernet2-1.0.4.zip",
      "archiveFileName": "Ethernet2-1.0.4.zip",
      "size": 61869,
      "checksum": "SHA-256:a4df2d620376af9c5378ec32c134c03368a56876be9be3452db218758f0de745"
    },
    {
      "name": "Buffered Streams",
      "version": "1.0.1",
      "author": "Paulo Costa",
      "maintainer": "Paulo Costa \u003cme+arduino@paulo.costa.nom.br\u003e",
      "sentence": "Implementation of Arduino's Stream class which use internal ring buffers to emulate a pair of connected Streams or a Loopback Stream.",
      "paragraph": "It can be used to easily add a buffering layer to communications, to implement the communication between multiple components, or to make Serial-like objects.",
      "website": "https://github.com/paulo-raca/ArduinoBufferedStreams",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/paulo-raca/Buffered_Streams-1.0.1.zip",
      "archiveFileName": "Buffered_Streams-1.0.1.zip",
      "size": 5199,
      "checksum": "SHA-256:1ec0d3ff05cacd136dba5262e6ff892c8553e9630f7fa836ce9288726a88a086"
    },
    {
      "name": "KTMS1201",
      "version": "1.0.0",
      "author": "MCUdude",
      "maintainer": "MCUdude",
      "sentence": "High level library for use with the KTM-S1201 LCD",
      "paragraph": "Based on the Arduino print library for easy use",
      "website": "https://github.com/MCUdude/KTMS1201",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MCUdude/KTMS1201-1.0.0.zip",
      "archiveFileName": "KTMS1201-1.0.0.zip",
      "size": 9539,
      "checksum": "SHA-256:6b6a5a236fa6a3fc10104a51cbec7549a95cf410c6cd9d4178c9a0bb086ca118"
    },
    {
      "name": "KTMS1201",
      "version": "1.0.1",
      "author": "MCUdude",
      "maintainer": "MCUdude",
      "sentence": "High level library for use with the KTM-S1201 LCD",
      "paragraph": "Based on the Arduino print library for easy use",
      "website": "https://github.com/MCUdude/KTMS1201",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MCUdude/KTMS1201-1.0.1.zip",
      "archiveFileName": "KTMS1201-1.0.1.zip",
      "size": 9528,
      "checksum": "SHA-256:00d78f9494504c0360b328aa164af9225ad243b96b154640a9a7fee3947a9c7e"
    },
    {
      "name": "Volume2",
      "version": "1.0.0",
      "author": "Connor Nishijima",
      "maintainer": "Connor Nishijima \u003cconnornishijima@gmail.com\u003e",
      "sentence": "Gives tone() functionality with multiple waveforms and 8-bit volume control - with no extra parts!",
      "paragraph": "Using ultrasonic PWM frequencies, you can now generate various waveforms at any frequency at 256 volume levels - with no extra parts!",
      "website": "https://github.com/connornishijima/arduino-volume2",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/connornishijima/Volume2-1.0.0.zip",
      "archiveFileName": "Volume2-1.0.0.zip",
      "size": 21557,
      "checksum": "SHA-256:a911596bfa2c934c3e5007be7f80137e1f9095b527a45194bef424372509338b"
    },
    {
      "name": "ESP8266Scheduler",
      "version": "0.1.0",
      "author": "Nick Wiersma \u003cnick@wiersma.co.za\u003e",
      "maintainer": "Nick Wiersma \u003cnick@wiersma.co.za\u003e",
      "sentence": "ESP8266 Co-operative Multitasking",
      "paragraph": "Co-operative multitasking for ESP8266 modules.",
      "website": "https://github.com/nrwiersma/ESP8266Scheduler.git",
      "category": "Other",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nrwiersma/ESP8266Scheduler-0.1.0.zip",
      "archiveFileName": "ESP8266Scheduler-0.1.0.zip",
      "size": 4889,
      "checksum": "SHA-256:5b889a23115a0bfddd348221c1aad5ffcee22e5c3f22ba81a58b4f1a7275661f"
    },
    {
      "name": "ExodeCore",
      "version": "1.0.0",
      "author": "Lenselle Nicolas \u003clensellenicolas@gmail.com\u003e",
      "maintainer": "Lenselle Nicolas \u003clensellenicolas@gmail.com\u003e",
      "sentence": "Communication between Arduino microcontroller boards and a connected computers.",
      "paragraph": "Exode is a Python library for communication between Arduino microcontroller boards and a connected computer. Write Python script and take control on your board.",
      "website": "http://sne3ks.github.io/Exode/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sne3ks/ExodeCore-1.0.0.zip",
      "archiveFileName": "ExodeCore-1.0.0.zip",
      "size": 27395,
      "checksum": "SHA-256:cbaa6c31b508057699af81d41632779f3c6254ebb150d12bb6b3489221bda4f4"
    },
    {
      "name": "ExodeCore",
      "version": "0.3.0",
      "author": "Lenselle Nicolas \u003clensellenicolas@gmail.com\u003e",
      "maintainer": "Lenselle Nicolas \u003clensellenicolas@gmail.com\u003e",
      "sentence": "Communication between Arduino microcontroller boards and a connected computers.",
      "paragraph": "Exode is a Python library for communication between Arduino microcontroller boards and a connected computer. Write Python script and take control on your board.",
      "website": "http://sne3ks.github.io/Exode/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sne3ks/ExodeCore-0.3.0.zip",
      "archiveFileName": "ExodeCore-0.3.0.zip",
      "size": 26786,
      "checksum": "SHA-256:3514b8e94ec979d82f4cd65e1959cc87071f80defa026972f27200c08950c59c"
    },
    {
      "name": "ExodeCore",
      "version": "0.3.1",
      "author": "Lenselle Nicolas \u003clensellenicolas@gmail.com\u003e",
      "maintainer": "Lenselle Nicolas \u003clensellenicolas@gmail.com\u003e",
      "sentence": "Communication between Arduino microcontroller boards and a connected computers.",
      "paragraph": "Exode is a Python library for communication between Arduino microcontroller boards and a connected computer. Write Python script and take control on your board.",
      "website": "http://sne3ks.github.io/Exode/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sne3ks/ExodeCore-0.3.1.zip",
      "archiveFileName": "ExodeCore-0.3.1.zip",
      "size": 26790,
      "checksum": "SHA-256:f3bab68b0105fcbc8d9c628985dc77c4492cb120b6a5b49285c22f3efb8d43b7"
    },
    {
      "name": "NanoPlayBoard",
      "version": "0.1.0",
      "author": "Antonio Morales and José Juan Sánchez",
      "maintainer": "José Juan Sánchez \u003cjosejuan.sanchez@gmail.com\u003e",
      "sentence": "Enables easy access to the sensors and actuators of the Arduino NanoPlayBoard.",
      "paragraph": "NanoPlayBoard is an educational shield for Arduino Nano, which may be an excellent educational resource for those students who want to learn basic electronic and hardware programming.",
      "website": "http://github.com/josejuansanchez/NanoPlayBoard-Arduino-Library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/josejuansanchez/NanoPlayBoard-0.1.0.zip",
      "archiveFileName": "NanoPlayBoard-0.1.0.zip",
      "size": 878294,
      "checksum": "SHA-256:0ecff6c9488b160dedc82cb36f94e23e7fcfb08ab46975e96aeedca67e3c0166"
    },
    {
      "name": "NanoPlayBoard",
      "version": "0.1.1",
      "author": "Antonio Morales and José Juan Sánchez",
      "maintainer": "José Juan Sánchez \u003cjosejuan.sanchez@gmail.com\u003e",
      "sentence": "Enables easy access to the sensors and actuators of the Arduino NanoPlayBoard.",
      "paragraph": "NanoPlayBoard is an educational shield for Arduino Nano, which may be an excellent educational resource for those students who want to learn basic electronic and hardware programming.",
      "website": "http://github.com/josejuansanchez/NanoPlayBoard-Arduino-Library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/josejuansanchez/NanoPlayBoard-0.1.1.zip",
      "archiveFileName": "NanoPlayBoard-0.1.1.zip",
      "size": 878215,
      "checksum": "SHA-256:abe357c95acf202a6e95aef36fb30214006ec0dcfaebe6881dcff4a6c88f49bd"
    },
    {
      "name": "NanoPlayBoard",
      "version": "0.0.2",
      "author": "Antonio Morales and José Juan Sánchez",
      "maintainer": "José Juan Sánchez \u003cjosejuan.sanchez@gmail.com\u003e",
      "sentence": "Enables easy access to the sensors and actuators of the Arduino Nano Play Board.",
      "paragraph": "The sensors available on the board are a light sensor and a potentiometer. The actuators available on the board are a 7x5 matrix LED, a RGB LED and a piezo buzzer.",
      "website": "http://github.com/josejuansanchez/NanoPlayBoard-Arduino-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/josejuansanchez/NanoPlayBoard-0.0.2.zip",
      "archiveFileName": "NanoPlayBoard-0.0.2.zip",
      "size": 390478,
      "checksum": "SHA-256:bbdf963c9f529cc85a4f619743716c79b05252f8b1bdbd43f613a9804e585431"
    },
    {
      "name": "NanoPlayBoard",
      "version": "0.0.3",
      "author": "Antonio Morales and José Juan Sánchez",
      "maintainer": "José Juan Sánchez \u003cjosejuan.sanchez@gmail.com\u003e",
      "sentence": "Enables easy access to the sensors and actuators of the Arduino Nano Play Board.",
      "paragraph": "The sensors available on the board are a light sensor and a potentiometer. The actuators available on the board are a 7x5 matrix LED, a RGB LED and a piezo buzzer.",
      "website": "http://github.com/josejuansanchez/NanoPlayBoard-Arduino-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/josejuansanchez/NanoPlayBoard-0.0.3.zip",
      "archiveFileName": "NanoPlayBoard-0.0.3.zip",
      "size": 791884,
      "checksum": "SHA-256:9943a1efbb45d4889af03b2c14dbfbee9fa53c07c42b8d3c3a69c52de49fa132"
    },
    {
      "name": "ControleForno",
      "version": "2.0.4",
      "author": "Gustavo Voltani von Atzingen \u003cgustavo.von.atzingen@gmail.com\u003e",
      "maintainer": "Gustavo Voltani von Atzingen \u003cgustavo.von.atzingen@gmail.com\u003e",
      "sentence": "Uma biblioteca para controle e automacao de forno tipo esteira.",
      "paragraph": "Uma biblioteca para controle e automacao de forno tipo esteira.",
      "website": "http://usp.br/lafac",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Atzingen/ControleForno-2.0.4.zip",
      "archiveFileName": "ControleForno-2.0.4.zip",
      "size": 9152,
      "checksum": "SHA-256:40ad12639bec8f57001e1c005898d3273c2cd348a59462f3f778a94de50593a1"
    },
    {
      "name": "ControleForno",
      "version": "2.0.5",
      "author": "Gustavo Voltani von Atzingen \u003cgustavo.von.atzingen@gmail.com\u003e",
      "maintainer": "Gustavo Voltani von Atzingen \u003cgustavo.von.atzingen@gmail.com\u003e",
      "sentence": "Uma biblioteca para controle e automacao de forno tipo esteira.",
      "paragraph": "Uma biblioteca para controle e automacao de forno tipo esteira.",
      "website": "http://usp.br/lafac",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Atzingen/ControleForno-2.0.5.zip",
      "archiveFileName": "ControleForno-2.0.5.zip",
      "size": 9150,
      "checksum": "SHA-256:c84e6b010b3bcb4b61ee7c400385489f7f0ea374c743580657a3bf9d891f11ee"
    },
    {
      "name": "ControleForno",
      "version": "2.0.6",
      "author": "Gustavo Voltani von Atzingen \u003cgustavo.von.atzingen@gmail.com\u003e",
      "maintainer": "Gustavo Voltani von Atzingen \u003cgustavo.von.atzingen@gmail.com\u003e",
      "sentence": "Uma biblioteca para controle e automacao de forno tipo esteira.",
      "paragraph": "Uma biblioteca para controle e automacao de forno tipo esteira.",
      "website": "http://usp.br/lafac",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Atzingen/ControleForno-2.0.6.zip",
      "archiveFileName": "ControleForno-2.0.6.zip",
      "size": 9150,
      "checksum": "SHA-256:75c5c530117f63e9e406f985c8824a82756535e9345fba99ade50613ec3d7504"
    },
    {
      "name": "ControleForno",
      "version": "2.0.7",
      "author": "Gustavo Voltani von Atzingen \u003cgustavo.von.atzingen@gmail.com\u003e",
      "maintainer": "Gustavo Voltani von Atzingen \u003cgustavo.von.atzingen@gmail.com\u003e",
      "sentence": "Uma biblioteca para controle e automacao de forno tipo esteira.",
      "paragraph": "Uma biblioteca para controle e automacao de forno tipo esteira.",
      "website": "http://usp.br/lafac",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Atzingen/ControleForno-2.0.7.zip",
      "archiveFileName": "ControleForno-2.0.7.zip",
      "size": 10638,
      "checksum": "SHA-256:2e34d8d2143b569493f1a75de6bb1ff41ef3050c7a82f41fc46faab66f391a33"
    },
    {
      "name": "ControleForno",
      "version": "1.0.0",
      "author": "Gustavp Voltani von Atzingen \u003cgustavo.von.atzingen@gmail.com\u003e",
      "maintainer": "Gustavp Voltani von Atzingen \u003cgustavo.von.atzingen@gmail.com\u003e",
      "sentence": "Uma biblioteca para controle e automacao de forno tipo esteira.",
      "paragraph": "Uma biblioteca para controle e automacao de forno tipo esteira.",
      "website": "http://usp.br/lafac",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Atzingen/ControleForno-1.0.0.zip",
      "archiveFileName": "ControleForno-1.0.0.zip",
      "size": 8830,
      "checksum": "SHA-256:4a5856278286a033b1c5876cdacaad70fec012655a1270de2d1c47b88a02dd67"
    },
    {
      "name": "ControleForno",
      "version": "2.0.2",
      "author": "Gustavo Voltani von Atzingen \u003cgustavo.von.atzingen@gmail.com\u003e",
      "maintainer": "Gustavo Voltani von Atzingen \u003cgustavo.von.atzingen@gmail.com\u003e",
      "sentence": "Uma biblioteca para controle e automacao de forno tipo esteira.",
      "paragraph": "Uma biblioteca para controle e automacao de forno tipo esteira.",
      "website": "http://usp.br/lafac",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Atzingen/ControleForno-2.0.2.zip",
      "archiveFileName": "ControleForno-2.0.2.zip",
      "size": 8654,
      "checksum": "SHA-256:b45fd32a11ee91d31f57616227968bd637f851c5a95052ea88b1bc0b3031213b"
    },
    {
      "name": "ControleForno",
      "version": "2.0.3",
      "author": "Gustavo Voltani von Atzingen \u003cgustavo.von.atzingen@gmail.com\u003e",
      "maintainer": "Gustavo Voltani von Atzingen \u003cgustavo.von.atzingen@gmail.com\u003e",
      "sentence": "Uma biblioteca para controle e automacao de forno tipo esteira.",
      "paragraph": "Uma biblioteca para controle e automacao de forno tipo esteira.",
      "website": "http://usp.br/lafac",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Atzingen/ControleForno-2.0.3.zip",
      "archiveFileName": "ControleForno-2.0.3.zip",
      "size": 9150,
      "checksum": "SHA-256:63ee66b01edef29cd2430343e79064bc28004e3667d9f9d5c5b3fc999a619ce5"
    },
    {
      "name": "Brzo I2C",
      "version": "1.0.1",
      "author": "Pascal Kurtansky",
      "maintainer": "Pasko \u003cpascal@kurtansky.ch\u003e",
      "sentence": "Brzo I2C is a fast I2C Implementation written in Assembly for the esp8266",
      "paragraph": "Brzo I2C is a fast I2C Implementation written in Assembly for the esp8266",
      "website": "https://github.com/pasko-zh/brzo_i2c",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pasko-zh/Brzo_I2C-1.0.1.zip",
      "archiveFileName": "Brzo_I2C-1.0.1.zip",
      "size": 27637,
      "checksum": "SHA-256:1a9ff73377266b326a7145ea36f90aa331b041283576cbaf0c0898d91b8caf46"
    },
    {
      "name": "Brzo I2C",
      "version": "1.3.0",
      "author": "Pascal Kurtansky",
      "maintainer": "Pasko \u003cpascal@kurtansky.ch\u003e",
      "sentence": "Brzo I2C is a fast I2C Implementation written in Assembly for the esp8266",
      "paragraph": "Brzo I2C is a fast I2C Implementation written in Assembly for the esp8266",
      "website": "https://github.com/pasko-zh/brzo_i2c",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pasko-zh/Brzo_I2C-1.3.0.zip",
      "archiveFileName": "Brzo_I2C-1.3.0.zip",
      "size": 29651,
      "checksum": "SHA-256:f6d44df0adf0c7eb160a40d90af538cc2b357d30795fcd2d9f18e51614deaef3"
    },
    {
      "name": "DFRobotIRPosition",
      "version": "1.0.0",
      "author": "DFRobot",
      "maintainer": "Angelo \u003cangelo.qiao@dfrobot.com\u003e",
      "sentence": "Driver for Positioning ir camera from DFRobot",
      "paragraph": "This example get the four lightest positions of the IR sources.",
      "website": "https://github.com/DFRobot/DFRobotIRPosition",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DFRobot/DFRobotIRPosition-1.0.0.zip",
      "archiveFileName": "DFRobotIRPosition-1.0.0.zip",
      "size": 3768,
      "checksum": "SHA-256:7240fa88fc11b5494d11220f25c29233e1612aca9dc7e961d136a0539056745f"
    },
    {
      "name": "DFRobotIRPosition",
      "version": "1.0.2",
      "author": "DFRobot",
      "maintainer": "Angelo \u003cangelo.qiao@dfrobot.com\u003e",
      "sentence": "Driver for Positioning ir camera from DFRobot",
      "paragraph": "This example get the four lightest positions of the IR sources.",
      "website": "https://github.com/DFRobot/DFRobotIRPosition",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DFRobot/DFRobotIRPosition-1.0.2.zip",
      "archiveFileName": "DFRobotIRPosition-1.0.2.zip",
      "size": 3772,
      "checksum": "SHA-256:b42a021863a8846b85f039cf6762c5c0bc15f07f10a48f2ac4fa4c1c749fafc8"
    },
    {
      "name": "LiquidCrystal_PCF8574",
      "version": "1.1.0",
      "author": "Matthias Hertel",
      "maintainer": "Matthias Hertel \u003cwww.mathertel.de\u003e",
      "sentence": "A library for driving LiquidCrystal displays (LCD) by using the I2C bus and an PCF8574 I2C adapter.",
      "paragraph": "This library is derived from the original Arduino LiquidCrystal library and uses the original Wire library for communication.",
      "website": "http://www.mathertel.de/Arduino/LiquidCrystal_PCF8574.aspx",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mathertel/LiquidCrystal_PCF8574-1.1.0.zip",
      "archiveFileName": "LiquidCrystal_PCF8574-1.1.0.zip",
      "size": 7508,
      "checksum": "SHA-256:64096a56aa751d4f1cef284e0a9768c99c54649194007ea09af231a3bacd3f30"
    },
    {
      "name": "i2c_adc_ads7828",
      "version": "2.0.0",
      "author": "Doc Walker",
      "maintainer": "Doc Walker \u003c4-20ma@wvfans.net\u003e",
      "sentence": "Arduino library for the Texas Instruments ADS7828 12-bit, 8-channel I2C A/D converter.",
      "paragraph": "The ADS7828 provides a 12-bit, 8-channel A/D converter accessible via the I2C interface serial clock (SCL) and serial data (SDA).",
      "website": "https://github.com/4-20ma/i2c_adc_ads7828",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/4-20ma/i2c_adc_ads7828-2.0.0.zip",
      "archiveFileName": "i2c_adc_ads7828-2.0.0.zip",
      "size": 335394,
      "checksum": "SHA-256:cac81b41ba1fe1e76818a1f2926fe70fe72419d851dfbff57a55b4c3b832a6b3"
    },
    {
      "name": "i2c_adc_ads7828",
      "version": "2.0.1",
      "author": "Doc Walker",
      "maintainer": "Doc Walker \u003c4-20ma@wvfans.net\u003e",
      "sentence": "Arduino library for the Texas Instruments ADS7828 12-bit, 8-channel I2C A/D converter.",
      "paragraph": "The ADS7828 provides a 12-bit, 8-channel A/D converter accessible via the I2C interface serial clock (SCL) and serial data (SDA).",
      "website": "https://github.com/4-20ma/i2c_adc_ads7828",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/4-20ma/i2c_adc_ads7828-2.0.1.zip",
      "archiveFileName": "i2c_adc_ads7828-2.0.1.zip",
      "size": 335436,
      "checksum": "SHA-256:26c8a218240c7c1a9840cd5c58e1ae66498610b111e2f2d54fc937587d15b6bb"
    },
    {
      "name": "i2c_adc_ads7828",
      "version": "2.0.2",
      "author": "Doc Walker",
      "maintainer": "Doc Walker \u003c4-20ma@wvfans.net\u003e",
      "sentence": "Arduino library for the Texas Instruments ADS7828 12-bit, 8-channel I2C A/D converter.",
      "paragraph": "The ADS7828 provides a 12-bit, 8-channel A/D converter accessible via the I2C interface serial clock (SCL) and serial data (SDA).",
      "website": "https://github.com/4-20ma/i2c_adc_ads7828",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/4-20ma/i2c_adc_ads7828-2.0.2.zip",
      "archiveFileName": "i2c_adc_ads7828-2.0.2.zip",
      "size": 335472,
      "checksum": "SHA-256:d8fa9856ad2c5b4acc1231332fd5a95313c7bba9c1d9ced22e3c0160e018f61f"
    },
    {
      "name": "I2cDiscreteIoExpander",
      "version": "4.0.0",
      "author": "Doc Walker",
      "maintainer": "Doc Walker \u003c4-20ma@wvfans.net\u003e",
      "sentence": "Arduino library for the Texas Instruments PCF8575C 16-bit I2C I/O expander.",
      "paragraph": "The PCF8575C provides general-purpose remote I/O expansion for most microcontroller families via the I2C interface serial clock (SCL) and serial data (SDA).",
      "website": "https://github.com/4-20ma/I2cDiscreteIoExpander",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/4-20ma/I2cDiscreteIoExpander-4.0.0.zip",
      "archiveFileName": "I2cDiscreteIoExpander-4.0.0.zip",
      "size": 293320,
      "checksum": "SHA-256:13b4b1c3ddca9dc5a275f40a0af4cb2804aecb2893d952ed8a8b95d343e29654"
    },
    {
      "name": "I2cDiscreteIoExpander",
      "version": "4.0.1",
      "author": "Doc Walker",
      "maintainer": "Doc Walker \u003c4-20ma@wvfans.net\u003e",
      "sentence": "Arduino library for the Texas Instruments PCF8575C 16-bit I2C I/O expander.",
      "paragraph": "The PCF8575C provides general-purpose remote I/O expansion for most microcontroller families via the I2C interface serial clock (SCL) and serial data (SDA).",
      "website": "https://github.com/4-20ma/I2cDiscreteIoExpander",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/4-20ma/I2cDiscreteIoExpander-4.0.1.zip",
      "archiveFileName": "I2cDiscreteIoExpander-4.0.1.zip",
      "size": 175944,
      "checksum": "SHA-256:7a30b76828a13f2ecd75a07c2bff1cfbb8588fb34ec78d3dfba6e8f52d2e8c58"
    },
    {
      "name": "DigitalIO",
      "version": "1.0.0",
      "author": "Bill Greiman \u003cfat16lib@sbcglobal.net\u003e",
      "maintainer": "Bill Greiman \u003cfat16lib@sbcglobal.net\u003e",
      "sentence": "Fast digital IO.",
      "paragraph": "Defaults to slow digitalRead/digitalWrite for undefined architectures.",
      "website": "https://github.com/greiman/DigitalIO",
      "category": "Uncategorized",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/greiman/DigitalIO-1.0.0.zip",
      "archiveFileName": "DigitalIO-1.0.0.zip",
      "size": 485092,
      "checksum": "SHA-256:e7e2b950846ee8b1d82b97241b193c9bf3abfe8380ab42d0e08acbe39c5fd307"
    },
    {
      "name": "EasyWebServer",
      "version": "1.0.0",
      "author": "Kalle Lundberg k@llelundberg.se",
      "maintainer": "Kalle Lundberg k@llelundberg.se",
      "sentence": "An easy-to-use web server",
      "paragraph": "A web server that validates the request and supports multiple pages.",
      "website": "https://github.com/llelundberg/EasyWebServer",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/llelundberg/EasyWebServer-1.0.0.zip",
      "archiveFileName": "EasyWebServer-1.0.0.zip",
      "size": 5032,
      "checksum": "SHA-256:a2fe7bd3df22d262bab807fa2bb36ec2adaa5ada57c79263069644e524500720"
    },
    {
      "name": "ADXL362",
      "version": "1.5.0",
      "author": "Anne Mahaffey \u003canne@engineerbynight.com\u003e",
      "maintainer": "Anne Mahaffey \u003canne@engineerbynight.com\u003e",
      "sentence": "Library for ADXL362 - http://analog.com/adxl362",
      "paragraph": "See https://ez.analog.com/docs/DOC-2222 for tutorial",
      "website": "http://annem.github.io/ADXL362/",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/annem/ADXL362-1.5.0.zip",
      "archiveFileName": "ADXL362-1.5.0.zip",
      "size": 11989,
      "checksum": "SHA-256:6533cba298ae935d46c2aeebc2b2a50deaf23f09e88bf6854b0d5e93e360a0da"
    },
    {
      "name": "Yaesu FT857D CAT",
      "version": "0.2.0",
      "author": "Pavel Milanes, CO7WT, \u003cpavelmc@gmail.com\u003e",
      "maintainer": "Pavel Milanes, CO7WT, \u003cpavelmc@gmail.com\u003e",
      "sentence": "Simulate a Yaesu FT-857D radio from the CAT point of view.",
      "paragraph": "This library will make your sketch behave as a Yaesu FT-857D radio, and will give you basic control over it via CAT serial commands.",
      "website": "https://github.com/pavelmc/FT857d/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pavelmc/Yaesu_FT857D_CAT-0.2.0.zip",
      "archiveFileName": "Yaesu_FT857D_CAT-0.2.0.zip",
      "size": 22896,
      "checksum": "SHA-256:e7c4f4ae870aa6003e3813cdaf7aa91dff2dec4785c29c70596c76054d91b988"
    },
    {
      "name": "Yaesu FT857D CAT",
      "version": "0.2.2",
      "author": "Pavel Milanes, CO7WT, \u003cpavelmc@gmail.com\u003e",
      "maintainer": "Pavel Milanes, CO7WT, \u003cpavelmc@gmail.com\u003e",
      "sentence": "Simulate a Yaesu FT-857D radio from the CAT point of view.",
      "paragraph": "This library will make your sketch behave as a Yaesu FT-857D radio, and will give you basic control over it via CAT serial commands.",
      "website": "https://github.com/pavelmc/FT857d/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pavelmc/Yaesu_FT857D_CAT-0.2.2.zip",
      "archiveFileName": "Yaesu_FT857D_CAT-0.2.2.zip",
      "size": 22807,
      "checksum": "SHA-256:9725ffa27dc842b3b2f7940d4c5b57d101d848cc3b05290cb74b2488066fa95e"
    },
    {
      "name": "ESPectro",
      "version": "0.6.2",
      "author": "Andri Yadi\u003candri@dycode.com\u003e",
      "maintainer": "ESPectro Team\u003cx@dycode.com\u003e",
      "sentence": "ESPectro board \u0026 Makestro Cloud library for Arduino IDE",
      "paragraph": "The library for you to get up fast for using ESPectro Core board with Arduino IDE. ESPectro is designed by DycodeX, a leading Internet of Things (IoT) and disruptive technology company from Indonesia.",
      "website": "https://github.com/andriyadi/espx",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/andriyadi/ESPectro-0.6.2.zip",
      "archiveFileName": "ESPectro-0.6.2.zip",
      "size": 107577,
      "checksum": "SHA-256:2854228074ed261fe5424533120fa9e0597e65b39c10f0804731bd0e20e6f1f6"
    },
    {
      "name": "ESPectro",
      "version": "0.6.6",
      "author": "Andri Yadi\u003candri@dycode.com\u003e",
      "maintainer": "ESPectro Team\u003cx@dycode.com\u003e",
      "sentence": "ESPectro board \u0026 Makestro Cloud library for Arduino IDE",
      "paragraph": "The library for you to get up fast for using ESPectro Core board with Arduino IDE. ESPectro is designed by DycodeX, a leading Internet of Things (IoT) and disruptive technology company from Indonesia.",
      "website": "https://github.com/andriyadi/espx",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/andriyadi/ESPectro-0.6.6.zip",
      "archiveFileName": "ESPectro-0.6.6.zip",
      "size": 195724,
      "checksum": "SHA-256:0f96efefb5885dbd87e60f81a70aaa45ee76d4a2d8a72eef8d117d0eda17ec44"
    },
    {
      "name": "ESPectro",
      "version": "0.6.7",
      "author": "Andri Yadi\u003candri@dycode.com\u003e",
      "maintainer": "ESPectro Team\u003cx@dycode.com\u003e",
      "sentence": "ESPectro board \u0026 Makestro Cloud library for Arduino IDE",
      "paragraph": "The library for you to get up fast for using ESPectro Core board with Arduino IDE. ESPectro is designed by DycodeX, a leading Internet of Things (IoT) and disruptive technology company from Indonesia.",
      "website": "https://github.com/andriyadi/espx",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/andriyadi/ESPectro-0.6.7.zip",
      "archiveFileName": "ESPectro-0.6.7.zip",
      "size": 197421,
      "checksum": "SHA-256:0f7c21c9a3780ce3d20115e29d002012b62f54588f4cc6642223e9fd2eadedb5"
    },
    {
      "name": "ESPectro",
      "version": "0.6.9",
      "author": "Andri Yadi\u003candri@dycode.com\u003e",
      "maintainer": "ESPectro Team\u003cx@dycode.com\u003e",
      "sentence": "ESPectro board \u0026 Makestro Cloud library for Arduino IDE",
      "paragraph": "The library for you to get up fast for using ESPectro Core board with Arduino IDE. ESPectro is designed by DycodeX, a leading Internet of Things (IoT) and disruptive technology company from Indonesia.",
      "website": "https://github.com/andriyadi/espx",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/andriyadi/ESPectro-0.6.9.zip",
      "archiveFileName": "ESPectro-0.6.9.zip",
      "size": 197663,
      "checksum": "SHA-256:4ec6632ce2701fa30c25472c601a172f583fe0f6a76a4de50258b694453b43e0"
    },
    {
      "name": "ESPectro",
      "version": "0.7.0",
      "author": "Andri Yadi\u003candri@dycode.com\u003e",
      "maintainer": "ESPectro Team\u003cx@dycode.com\u003e",
      "sentence": "ESPectro development board library for Arduino IDE",
      "paragraph": "The library for you to get up fast for using ESPectro Core board with Arduino IDE. ESPectro is designed by DycodeX, a leading Internet of Things (IoT) and disruptive technology company from Indonesia.",
      "website": "https://github.com/andriyadi/espx",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/andriyadi/ESPectro-0.7.0.zip",
      "archiveFileName": "ESPectro-0.7.0.zip",
      "size": 130571,
      "checksum": "SHA-256:b435b78c71ed157497f8c362486a9390ff4fadd87f0c25af66fd02f32c8a9605"
    },
    {
      "name": "ESPectro",
      "version": "0.7.2",
      "author": "Andri Yadi\u003candri@dycode.com\u003e",
      "maintainer": "ESPectro Team\u003cx@dycode.com\u003e",
      "sentence": "ESPectro development board library for Arduino IDE",
      "paragraph": "The library for you to get up fast for using ESPectro Core board with Arduino IDE. ESPectro is designed by DycodeX, a leading Internet of Things (IoT) and disruptive technology company from Indonesia.",
      "website": "https://github.com/andriyadi/espx",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/andriyadi/ESPectro-0.7.2.zip",
      "archiveFileName": "ESPectro-0.7.2.zip",
      "size": 130842,
      "checksum": "SHA-256:514b21040bf1cb50160309d184150333780075422e33bb453f8efc8b64dc7c4e"
    },
    {
      "name": "ESPectro",
      "version": "0.7.4",
      "author": "Andri Yadi\u003candri@dycode.com\u003e",
      "maintainer": "ESPectro Team\u003cx@dycode.com\u003e",
      "sentence": "ESPectro development board library for Arduino IDE",
      "paragraph": "The library for you to get up fast for using ESPectro Core board with Arduino IDE. ESPectro is designed by DycodeX, a leading Internet of Things (IoT) and disruptive technology company from Indonesia.",
      "website": "https://github.com/andriyadi/espx",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/andriyadi/ESPectro-0.7.4.zip",
      "archiveFileName": "ESPectro-0.7.4.zip",
      "size": 132658,
      "checksum": "SHA-256:6bfc32ae4b630925129bf472cf20642be7a5b5c4f344014f011b5f81e94ad656"
    },
    {
      "name": "ESPectro",
      "version": "0.7.5",
      "author": "Andri Yadi\u003candri@dycode.com\u003e",
      "maintainer": "ESPectro Team\u003cx@dycode.com\u003e",
      "sentence": "ESPectro development board library for Arduino IDE",
      "paragraph": "The library for you to get up fast for using ESPectro Core board with Arduino IDE. ESPectro is designed by DycodeX, a leading Internet of Things (IoT) and disruptive technology company from Indonesia.",
      "website": "https://github.com/andriyadi/espx",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/andriyadi/ESPectro-0.7.5.zip",
      "archiveFileName": "ESPectro-0.7.5.zip",
      "size": 132795,
      "checksum": "SHA-256:6f622730f9f349c01a67586ef818812a50f732c4417999e5e6b626ca2d59ceb7"
    },
    {
      "name": "PmodCls",
      "version": "0.1.0",
      "author": "Job Noorman, job@noorman.info",
      "maintainer": "Job Noorman, job@noorman.info",
      "sentence": "Driver for the Digilent PmodCLS LCD device",
      "paragraph": "\"\"",
      "website": "https://github.com/JobNoorman/PmodClsArduino",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/JobNoorman/PmodCls-0.1.0.zip",
      "archiveFileName": "PmodCls-0.1.0.zip",
      "size": 5567,
      "checksum": "SHA-256:5ed9f0ee746ef5d93e84555564271102e2f5e1888d8b2079b507ad48579396ad"
    },
    {
      "name": "NDNOverUDP",
      "version": "1.0.0",
      "author": "Antonio Cardace \u003cantonio@cardace.it\u003e, Davide Aguiari \u003cgorghino@gmail.com\u003e",
      "maintainer": "Antonio Cardace \u003cantonio@cardace.it\u003e",
      "sentence": "A simpler and lighter NDN protocol for local IoT contexts.",
      "paragraph": "Named Data Networking (NDN) is a promising paradigm for the future Internet architecture which opens up new possibilities for the data exchange among routers. In order to learn NDN principles, a simpler NDN protocol has been developed in a mobile environment. The library currently works over Ethernet.",
      "website": "https://github.com/ichigo663/NDNOverUDP",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ichigo663/NDNOverUDP-1.0.0.zip",
      "archiveFileName": "NDNOverUDP-1.0.0.zip",
      "size": 135765,
      "checksum": "SHA-256:ab5f478beedceccc1edcf9e953fe97d7a07c4d01195fb44223fd70f6f191baf0"
    },
    {
      "name": "MCP9802",
      "version": "1.2.0",
      "author": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "maintainer": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "sentence": "MCP9802 Driver: 12-bit Temperature Sensor with an I2C Interface",
      "paragraph": "This library contains a robust driver for the MCP9802 that exposes its entire functionality (i.e. Configuration, Temperature, Hysteresis, Limit, and Alert Settings), allowing the user to get/set data in degrees Celsius or Fahrenheit.",
      "website": "https://github.com/nadavmatalon/MCP9802",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nadavmatalon/MCP9802-1.2.0.zip",
      "archiveFileName": "MCP9802-1.2.0.zip",
      "size": 33558,
      "checksum": "SHA-256:64fe3e5b7735956a4b897d2f029b3a8cf065ddd1594a53a592384c147ab5a239"
    },
    {
      "name": "MCP9802",
      "version": "1.3.0",
      "author": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "maintainer": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "sentence": "MCP9802 Driver: 12-bit Temperature Sensor with an I2C Interface",
      "paragraph": "This library contains a robust driver for the MCP9802 that exposes its entire functionality (i.e. Configuration, Temperature, Hysteresis, Limit, and Alert Settings), allowing the user to get/set data in degrees Celsius or Fahrenheit.",
      "website": "https://github.com/nadavmatalon/MCP9802",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nadavmatalon/MCP9802-1.3.0.zip",
      "archiveFileName": "MCP9802-1.3.0.zip",
      "size": 36165,
      "checksum": "SHA-256:2e5b55c24eaa77f3d133adac1fab2153f24dc6e88df1362ba3004bfe088ced9d"
    },
    {
      "name": "MCP9802",
      "version": "1.4.0",
      "author": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "maintainer": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "sentence": "MCP9802 Driver (12-BIT Temperature Sensor with I2C Interface)",
      "paragraph": "This library contains a robust driver for the MCP9802 that exposes its entire functionality (i.e. Configuration, Temperature, Hysteresis, Limit, and Alert Settings), allowing the user to get/set data in degrees Celsius or Fahrenheit.",
      "website": "https://github.com/nadavmatalon/MCP9802",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nadavmatalon/MCP9802-1.4.0.zip",
      "archiveFileName": "MCP9802-1.4.0.zip",
      "size": 36855,
      "checksum": "SHA-256:a031f41762bd9c02d25db85c5399e50be5029a2bc64f2d42f41e28fce49033aa"
    },
    {
      "name": "MCP9802",
      "version": "1.5.0",
      "author": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "maintainer": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "sentence": "MCP9802 Driver (12-BIT Temperature Sensor with I2C Interface)",
      "paragraph": "This library contains a complete driver for the MCP9802 that exposes its entire functionality (i.e. Configuration, Temperature, Hysteresis, Limit, and Alert Settings), allowing the user to get/set data in degrees Celsius or Fahrenheit.",
      "website": "https://github.com/nadavmatalon/MCP9802",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nadavmatalon/MCP9802-1.5.0.zip",
      "archiveFileName": "MCP9802-1.5.0.zip",
      "size": 51468,
      "checksum": "SHA-256:55c788cc99c3101392b7f0332f66a0f781805bb0fe816b2d2be3db74edb6efd4"
    },
    {
      "name": "MCP9802",
      "version": "1.0.0",
      "author": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "maintainer": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "sentence": "MCP9802 Driver: 12-bit Temperature Sensor with an I2C Interface",
      "paragraph": "This library contains a robust driver for the MCP9802 that exposes its entire functionality (i.e. Configuration, Temperature, Hysteresis, Limit, and Alert Settings), allowing the user to get/set data in degrees Celsius or Fahrenheit.",
      "website": "https://github.com/nadavmatalon/MCP9802",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nadavmatalon/MCP9802-1.0.0.zip",
      "archiveFileName": "MCP9802-1.0.0.zip",
      "size": 39656,
      "checksum": "SHA-256:69ae269bda7ddb1b1e128f82b5354e0511b37fe7c5b2112432c3457b7faa17cb"
    },
    {
      "name": "MCP9802",
      "version": "1.1.0",
      "author": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "maintainer": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "sentence": "MCP9802 Driver: 12-bit Temperature Sensor with an I2C Interface",
      "paragraph": "This library contains a robust driver for the MCP9802 that exposes its entire functionality (i.e. Configuration, Temperature, Hysteresis, Limit, and Alert Settings), allowing the user to get/set data in degrees Celsius or Fahrenheit.",
      "website": "https://github.com/nadavmatalon/MCP9802",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nadavmatalon/MCP9802-1.1.0.zip",
      "archiveFileName": "MCP9802-1.1.0.zip",
      "size": 40471,
      "checksum": "SHA-256:01206eff7d56faa4e4244e11f5c1062d5f8203e6ab5022163c0a24d72b4d43ab"
    },
    {
      "name": "HalfStepper",
      "version": "1.0.0",
      "author": "Tom Biuso \u003ctjbtech@yahoo.com\u003e",
      "maintainer": "Tom Biuso \u003ctjbtech@yahoo.com\u003e",
      "sentence": "\u003cbr/\u003eAn Arduino library to enable half-stepping and single/dual phasing for step motors.",
      "paragraph": "\u003cbr/\u003e\u003cbr/\u003eHalfStepper decorates (wraps) the Stepper library to provide half-step states and has options for single/dual phasing as well as multiple coil sequencing options.\u003cbr/\u003e\u003cbr/\u003eThis library is able to drive motors directly or through drivers with motor control or H-bridge chips, such as the L293, L298, and L9110.",
      "website": "https://github.com/FancyFoxGems/HalfStepper",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/FancyFoxGems/HalfStepper-1.0.0.zip",
      "archiveFileName": "HalfStepper-1.0.0.zip",
      "size": 28801,
      "checksum": "SHA-256:d4a270498ba205430749e344b04a698f69ff6888528669673cf3b10014401689"
    },
    {
      "name": "Pubnub",
      "version": "1.1.4",
      "author": "Vladimir Veljkovic \u003cvlada@pubnub.com\u003e",
      "maintainer": "Vladimir Veljkovic \u003cvlada@pubnub.com\u003e",
      "sentence": "Pubnub SDK for Arduino.",
      "paragraph": "Provides basic support for publish and subscribe.",
      "website": "http://github.com/pubnub/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pubnub/Pubnub-1.1.4.zip",
      "archiveFileName": "Pubnub-1.1.4.zip",
      "size": 23241,
      "checksum": "SHA-256:48bbf4b33ec3f7167ca67211a1258c30b15ee57bdeb112325c7d54aaf9eb6eff"
    },
    {
      "name": "Pubnub",
      "version": "1.1.5",
      "author": "Vladimir Veljkovic \u003cvlada@pubnub.com\u003e",
      "maintainer": "Vladimir Veljkovic \u003cvlada@pubnub.com\u003e",
      "sentence": "Pubnub SDK for Arduino.",
      "paragraph": "Provides basic support for publish and subscribe over Pubnub",
      "website": "http://github.com/pubnub/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pubnub/Pubnub-1.1.5.zip",
      "archiveFileName": "Pubnub-1.1.5.zip",
      "size": 23250,
      "checksum": "SHA-256:07d19becd063d5716fabcb7ed20605fe2fbd2e0af683fa6d1e366be0d50fac79"
    },
    {
      "name": "Pubnub",
      "version": "2.0.0",
      "author": "Vladimir Veljkovic \u003cvlada@pubnub.com\u003e",
      "maintainer": "Vladimir Veljkovic \u003cvlada@pubnub.com\u003e",
      "sentence": "Pubnub SDK for Arduino.",
      "paragraph": "Provides basic support for publish and subscribe over Pubnub",
      "website": "http://github.com/pubnub/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pubnub/Pubnub-2.0.0.zip",
      "archiveFileName": "Pubnub-2.0.0.zip",
      "size": 22270,
      "checksum": "SHA-256:493fed9d5c56407b97490456a32f788ef4317095fd5b4b36599429e270cf6823"
    },
    {
      "name": "Pubnub",
      "version": "2.0.1",
      "author": "Vladimir Veljkovic \u003cvlada@pubnub.com\u003e",
      "maintainer": "Vladimir Veljkovic \u003cvlada@pubnub.com\u003e",
      "sentence": "Pubnub SDK for Arduino.",
      "paragraph": "Provides basic support for publish and subscribe over Pubnub",
      "website": "http://github.com/pubnub/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pubnub/Pubnub-2.0.1.zip",
      "archiveFileName": "Pubnub-2.0.1.zip",
      "size": 22273,
      "checksum": "SHA-256:f5e3d525c14a6fd93f64b1e5b344c498b7a4e191fa800c5b26a7036bd45ad98c"
    },
    {
      "name": "Pubnub",
      "version": "2.0.2",
      "author": "Vladimir Veljkovic \u003cvlada@pubnub.com\u003e",
      "maintainer": "Vladimir Veljkovic \u003cvlada@pubnub.com\u003e",
      "sentence": "Pubnub SDK for Arduino.",
      "paragraph": "Provides basic support for publish and subscribe over Pubnub",
      "website": "http://github.com/pubnub/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pubnub/Pubnub-2.0.2.zip",
      "archiveFileName": "Pubnub-2.0.2.zip",
      "size": 22266,
      "checksum": "SHA-256:a1b84d59e00f63549c3eaafd682d4bdbd4c643ad5f08b79d18df51557e221c8f"
    },
    {
      "name": "Pubnub",
      "version": "2.0.3",
      "author": "Vladimir Veljkovic \u003cvlada@pubnub.com\u003e",
      "maintainer": "Vladimir Veljkovic \u003cvlada@pubnub.com\u003e",
      "sentence": "Pubnub SDK for Arduino.",
      "paragraph": "Provides basic support for publish and subscribe over Pubnub",
      "website": "http://github.com/pubnub/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pubnub/Pubnub-2.0.3.zip",
      "archiveFileName": "Pubnub-2.0.3.zip",
      "size": 22750,
      "checksum": "SHA-256:ed76018aa2d643fcd1afd596f3039d40af781080fe6cafb97182bd8be9068f99"
    },
    {
      "name": "Pubnub",
      "version": "2.1.0",
      "author": "Vladimir Veljkovic \u003cvlada@pubnub.com\u003e",
      "maintainer": "Vladimir Veljkovic \u003cvlada@pubnub.com\u003e",
      "sentence": "Pubnub SDK for Arduino.",
      "paragraph": "Provides basic support for publish and subscribe over Pubnub",
      "website": "http://github.com/pubnub/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pubnub/Pubnub-2.1.0.zip",
      "archiveFileName": "Pubnub-2.1.0.zip",
      "size": 23465,
      "checksum": "SHA-256:ad04a600db7e35f5fc4719ffccdd762c5eca6fccf4c65b1c912d0dcdc0dd819c"
    },
    {
      "name": "Pubnub",
      "version": "1.1.1",
      "author": "Vladimir Veljkovic \u003cvlada@pubnub.com\u003e",
      "maintainer": "Vladimir Veljkovic \u003cvlada@pubnub.com\u003e",
      "sentence": "Pubnub SDK for Arduino.",
      "paragraph": "Provides basic support for publish and subscribe.",
      "website": "http://github.com/pubnub/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pubnub/Pubnub-1.1.1.zip",
      "archiveFileName": "Pubnub-1.1.1.zip",
      "size": 21891,
      "checksum": "SHA-256:861552f9dbb5854f23e678d4165e40de2d32cf14f8c6bbe52a250f1391449ac6"
    },
    {
      "name": "LIDAR-Lite v3",
      "version": "1.0.0",
      "author": "Garmin \u003cwww.garmin.com\u003e",
      "maintainer": "Garmin \u003cwww.garmin.com\u003e",
      "sentence": "Arduino library for LIDAR-Lite v3.",
      "paragraph": "High-performance optical distance sensing. See product page for specs, manual, and pinout.",
      "website": "https://buy.garmin.com/en-US/US/oem/sensors-and-boards/lidar-lite-v3/prod557294.html",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/garmin/LIDAR_Lite_v3-1.0.0.zip",
      "archiveFileName": "LIDAR_Lite_v3-1.0.0.zip",
      "size": 14654,
      "checksum": "SHA-256:945c3314cd0301bff1683e22738f1f8ab9f5f1ad5713d588da002a89bb872257"
    },
    {
      "name": "LIDAR-Lite v3",
      "version": "1.0.3",
      "author": "Garmin \u003cwww.garmin.com\u003e",
      "maintainer": "Garmin \u003cwww.garmin.com\u003e",
      "sentence": "Arduino library for LIDAR-Lite v3.",
      "paragraph": "High-performance optical distance sensing. See product page for specs, manual, and pinout.",
      "website": "https://buy.garmin.com/en-US/US/oem/sensors-and-boards/lidar-lite-v3/prod557294.html",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/garmin/LIDAR_Lite_v3-1.0.3.zip",
      "archiveFileName": "LIDAR_Lite_v3-1.0.3.zip",
      "size": 14833,
      "checksum": "SHA-256:0b595b8312cc75b6f20e1028cbfb8c036ea72daaced7c0746dcbf5e81aae6df7"
    },
    {
      "name": "Ingenia Serial Servo Drive Library",
      "version": "1.0.0",
      "author": "Ingenia Motion Control",
      "maintainer": "Ingenia Motion Control \u003chello@ingeniamc.com\u003e",
      "sentence": "Arduino library for control Ingenia Servo Drivess using serial communication.",
      "paragraph": "Ingenia Serial Servo Driver Library",
      "website": "https://github.com/IngeniaMC/Ingenia-Serial-Servo-Drive-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/IngeniaMC/Ingenia_Serial_Servo_Drive_Library-1.0.0.zip",
      "archiveFileName": "Ingenia_Serial_Servo_Drive_Library-1.0.0.zip",
      "size": 13054,
      "checksum": "SHA-256:75821435291787977bb24b19a78aa013c5002366d9103edc38b215de8f97077e"
    },
    {
      "name": "Ingenia Serial Servo Drive Library",
      "version": "1.1.0",
      "author": "Ingenia Motion Control",
      "maintainer": "Ingenia Motion Control \u003chello@ingeniamc.com\u003e",
      "sentence": "Arduino library for control Ingenia Servo Drives using serial communication.",
      "paragraph": "Ingenia Serial Servo Drive Library",
      "website": "https://github.com/IngeniaMC/Ingenia-Serial-Servo-Drive-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/IngeniaMC/Ingenia_Serial_Servo_Drive_Library-1.1.0.zip",
      "archiveFileName": "Ingenia_Serial_Servo_Drive_Library-1.1.0.zip",
      "size": 13379,
      "checksum": "SHA-256:408bd7d405dfc25c6309e57cd7d72ceb8f45ea81f6ec9d11ced91a3252cb3c2c"
    },
    {
      "name": "Ingenia Serial Servo Drive Library",
      "version": "1.1.1",
      "author": "Ingenia Motion Control",
      "maintainer": "Ingenia Motion Control \u003chello@ingeniamc.com\u003e",
      "sentence": "Arduino library for control Ingenia Servo Drives using serial communication.",
      "paragraph": "Ingenia Serial Servo Drive Library",
      "website": "https://github.com/IngeniaMC/Ingenia-Serial-Servo-Drive-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/IngeniaMC/Ingenia_Serial_Servo_Drive_Library-1.1.1.zip",
      "archiveFileName": "Ingenia_Serial_Servo_Drive_Library-1.1.1.zip",
      "size": 13513,
      "checksum": "SHA-256:13a728dcf7a9223d6349445197d06e9b47dad312e760ae1d6339a83b27bcfa4f"
    },
    {
      "name": "RTCLib by NeiroN",
      "version": "1.5.0",
      "author": "JeeLabs (http://news.jeelabs.org/code/), NeiroN (neiron.nxn@gmail.com)",
      "maintainer": "NeiroN (neiron.nxn@gmail.com)",
      "sentence": "A library that makes interfacing DS1302, DS1307, DS3231, PCF8583, PCF8563, RTC_Millis Real Time Clock modules easy.",
      "paragraph": "Including temperature, alarms and memory storage if present. Includes DateTime class implementation and it conversion.",
      "website": "https://github.com/NeiroNx/RTCLib",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NeiroNx/RTCLib_by_NeiroN-1.5.0.zip",
      "archiveFileName": "RTCLib_by_NeiroN-1.5.0.zip",
      "size": 10745,
      "checksum": "SHA-256:e7b7fe8a71b4a3e3690bdbdedb7d01d58d5a25c4244f1dbaedfe212a8c78d7d2"
    },
    {
      "name": "RTCLib by NeiroN",
      "version": "1.5.2",
      "author": "JeeLabs (http://news.jeelabs.org/code/), NeiroN (neiron.nxn@gmail.com)",
      "maintainer": "NeiroN (neiron.nxn@gmail.com)",
      "sentence": "A library that makes interfacing DS1302, DS1307, DS3231, PCF8583, PCF8563, RTC_Millis Real Time Clock modules easy.",
      "paragraph": "Including temperature, alarms and memory storage if present. Includes DateTime class implementation and it conversion.",
      "website": "https://github.com/NeiroNx/RTCLib",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NeiroNx/RTCLib_by_NeiroN-1.5.2.zip",
      "archiveFileName": "RTCLib_by_NeiroN-1.5.2.zip",
      "size": 10743,
      "checksum": "SHA-256:04d6dce7573fe33aacfe185bc43e4a86b0d0c591a4b12f557d731b72f9c7ae84"
    },
    {
      "name": "arduinoVNC",
      "version": "1.0.0",
      "author": "Markus Sattler",
      "maintainer": "Markus Sattler",
      "sentence": "VNC Client for Arduino",
      "website": "https://github.com/Links2004/arduinoVNC",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Links2004/arduinoVNC-1.0.0.zip",
      "archiveFileName": "arduinoVNC-1.0.0.zip",
      "size": 245843,
      "checksum": "SHA-256:e2acf86f265822f9d315d19afe2f866f1bd144019d10de0a55f1f0c7b3133779"
    },
    {
      "name": "arduinoVNC",
      "version": "1.1.0",
      "author": "Markus Sattler",
      "maintainer": "Markus Sattler",
      "sentence": "VNC Client for Arduino",
      "website": "https://github.com/Links2004/arduinoVNC",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Links2004/arduinoVNC-1.1.0.zip",
      "archiveFileName": "arduinoVNC-1.1.0.zip",
      "size": 247835,
      "checksum": "SHA-256:207a22c6a3a42b490851d4d6a4d9d2d219ac87e312c7075c56364426655a9a02"
    },
    {
      "name": "KeyDetector",
      "version": "1.0.0",
      "author": "Alexander 'Spirik' Spiridonov \u003calexander.spirik@gmail.com\u003e",
      "maintainer": "Alexander 'Spirik' Spiridonov \u003calexander.spirik@gmail.com\u003e",
      "sentence": "A library for detecting state change on analog and digital pins.",
      "paragraph": "Listens for specified values on the analog input and sets KeyDetector object state accordingly. Detects digital pin state change as well.",
      "website": "https://github.com/Spirik/KeyDetector",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Spirik/KeyDetector-1.0.0.zip",
      "archiveFileName": "KeyDetector-1.0.0.zip",
      "size": 14867,
      "checksum": "SHA-256:21c9e7c3a7ea60d4d5d652064d921e3313ae350f0d1d8933af3154a842a8917a"
    },
    {
      "name": "SixAxisRing",
      "version": "0.0.1",
      "author": "Patrick Thomas",
      "maintainer": "Patrick Thomas",
      "sentence": "A library for communicating with the Six Axis Shield.",
      "paragraph": "Get 6 (4 for Uno) axis values from the Six Axis Shield using the read functions.",
      "website": "https://hackaday.io/project/12854-six-axis-joystick",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Patrick-Thomas/SixAxisRing-0.0.1.zip",
      "archiveFileName": "SixAxisRing-0.0.1.zip",
      "size": 2356,
      "checksum": "SHA-256:76b92d9c5a5f91c07d1147e55d65bcc9a778e94eafb156beb62d289242d7e696"
    },
    {
      "name": "SixAxisRing",
      "version": "0.0.2",
      "author": "Patrick Thomas",
      "maintainer": "Patrick Thomas",
      "sentence": "A library for communicating with the Six Axis Shield.",
      "paragraph": "Get 6 (4 for Uno) axis values from the Six Axis Shield using the read functions.",
      "website": "https://hackaday.io/project/12854-six-axis-joystick",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Patrick-Thomas/SixAxisRing-0.0.2.zip",
      "archiveFileName": "SixAxisRing-0.0.2.zip",
      "size": 3381,
      "checksum": "SHA-256:785c709b99c7e735748440e7070c309740ed8480266a14e124bc650cce4e54cc"
    },
    {
      "name": "SixAxisRing",
      "version": "0.0.3",
      "author": "Patrick Thomas",
      "maintainer": "Patrick Thomas",
      "sentence": "A library for communicating with the Six Axis Shield.",
      "paragraph": "Get 6 (4 for Uno) axis values from the Six Axis Shield using the read functions.",
      "website": "https://hackaday.io/project/12854-six-axis-joystick",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Patrick-Thomas/SixAxisRing-0.0.3.zip",
      "archiveFileName": "SixAxisRing-0.0.3.zip",
      "size": 3433,
      "checksum": "SHA-256:df492ff2b9022dc02970940fa9b90ad2c9696b1967d9fe9edab86112baa98562"
    },
    {
      "name": "ADS1110",
      "version": "1.1.0",
      "author": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "maintainer": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "sentence": "ADS1110 Driver (16-BIT ADC with Onboard Reference, PGA and I2C Interface)",
      "paragraph": "The ADS1110 is a 16-Bit Single-Channel (Single-Ended or Differential) ADC with Onboard Reference (2.048V), PGA \u0026 HW I2C capabilities. This library contains a complete driver for the ADS1110 offering full control over its Configuration Settings, as well as the ability to recieve raw data, voltage readings (in mV, to avoid floating point math) or percentage readings in either Single-Shot or Continuous mode.",
      "website": "https://github.com/nadavmatalon/ADS1110",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nadavmatalon/ADS1110-1.1.0.zip",
      "archiveFileName": "ADS1110-1.1.0.zip",
      "size": 31987,
      "checksum": "SHA-256:df28b55539ffb7fd683017f5e00b925d4ff57d2aa363bd88f7e76dfa60de6000"
    },
    {
      "name": "ADS1110",
      "version": "1.2.0",
      "author": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "maintainer": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "sentence": "ADS1110 Driver (16-BIT ADC with Onboard Reference, PGA and I2C Interface)",
      "paragraph": "The ADS1110 is a 16-Bit Single-Channel (Single-Ended or Differential) ADC with Onboard Reference (2.048V), PGA \u0026 HW I2C capabilities. This library contains a complete driver for the ADS1110 offering full control over its Configuration Settings, as well as the ability to recieve raw data, voltage readings (in mV, to avoid floating point math) or percentage readings in either Single-Shot or Continuous mode.",
      "website": "https://github.com/nadavmatalon/ADS1110",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nadavmatalon/ADS1110-1.2.0.zip",
      "archiveFileName": "ADS1110-1.2.0.zip",
      "size": 32538,
      "checksum": "SHA-256:bf542327cdb2c7c9a114fa2c0d37d31919fbc673c9f121fd16f09c60f415baa3"
    },
    {
      "name": "ADS1110",
      "version": "1.3.0",
      "author": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "maintainer": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "sentence": "ADS1110 Driver (16-BIT ADC with Onboard Reference, PGA and I2C Interface)",
      "paragraph": "The ADS1110 is a 16-Bit Single-Channel (Single-Ended or Differential) ADC with Onboard Reference (2.048V), PGA \u0026 HW I2C capabilities. This library contains a complete driver for the ADS1110 offering full control over its Configuration Settings, as well as the ability to recieve raw data, voltage readings (in mV, to avoid floating point math) or percentage readings in either Single-Shot or Continuous mode.",
      "website": "https://github.com/nadavmatalon/ADS1110",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nadavmatalon/ADS1110-1.3.0.zip",
      "archiveFileName": "ADS1110-1.3.0.zip",
      "size": 48990,
      "checksum": "SHA-256:fff3880cf6f18bc5caa2e22f8e4f036e364fd6f4be0a806b2bad9827c70f62cc"
    },
    {
      "name": "BufferUtils",
      "version": "1.0.0",
      "author": "Christopher Baker \u003cinfo@christopherbaker.net\u003e",
      "maintainer": "Christopher Baker \u003cinfo@christopherbaker.net\u003e",
      "sentence": "An Arduino library for working with Buffers.",
      "paragraph": "An Arduino library for working with Buffers.",
      "website": "https://github.com/bakercp/BufferUtils",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bakercp/BufferUtils-1.0.0.zip",
      "archiveFileName": "BufferUtils-1.0.0.zip",
      "size": 7560,
      "checksum": "SHA-256:04652112c1ea60b50dd3c2b216b701b184ebebc35754a966fd4430df33b14fcb"
    },
    {
      "name": "BufferUtils",
      "version": "1.0.2",
      "author": "Christopher Baker \u003cinfo@christopherbaker.net\u003e",
      "maintainer": "Christopher Baker \u003cinfo@christopherbaker.net\u003e",
      "sentence": "An Arduino library for working with Buffers.",
      "paragraph": "An Arduino library for working with Buffers.",
      "website": "https://github.com/bakercp/BufferUtils",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bakercp/BufferUtils-1.0.2.zip",
      "archiveFileName": "BufferUtils-1.0.2.zip",
      "size": 7948,
      "checksum": "SHA-256:185c99ee996e06a56efee55a57c9d921e3cc00d1926d0321711c84c08f36c3df"
    },
    {
      "name": "Logger",
      "version": "1.0.0",
      "author": "Christopher Baker \u003cinfo@christopherbaker.net\u003e",
      "maintainer": "Christopher Baker \u003cinfo@christopherbaker.net\u003e",
      "sentence": "An Arduino library for serial logging.",
      "paragraph": "An Arduino library for serial logging.",
      "website": "https://github.com/bakercp/Logger",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bakercp/Logger-1.0.0.zip",
      "archiveFileName": "Logger-1.0.0.zip",
      "size": 5135,
      "checksum": "SHA-256:ff3359dfb6f0f11f327415748a7eec7a7fe1a19af6dab5a2c52b32b35b493101"
    },
    {
      "name": "Logger",
      "version": "1.0.3",
      "author": "Christopher Baker \u003cinfo@christopherbaker.net\u003e",
      "maintainer": "Christopher Baker \u003cinfo@christopherbaker.net\u003e",
      "sentence": "An Arduino library for serial logging.",
      "paragraph": "An Arduino library for serial logging.",
      "website": "https://github.com/bakercp/Logger",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bakercp/Logger-1.0.3.zip",
      "archiveFileName": "Logger-1.0.3.zip",
      "size": 5132,
      "checksum": "SHA-256:5facca98e9cf676d7797a00dbb0507d2213dee9b6cdde314d61b9ec4887aec12"
    },
    {
      "name": "PacketSerial",
      "version": "1.0.0",
      "author": "Christopher Baker \u003cinfo@christopherbaker.net\u003e",
      "maintainer": "Christopher Baker \u003cinfo@christopherbaker.net\u003e",
      "sentence": "A small, efficient library for sending serial data packets.",
      "paragraph": "PacketSerial is an small, efficient, library that allows Arduinos to send and receive serial data packets that include bytes with any value (0-255). A packet is simply an array of bytes.",
      "website": "https://github.com/bakercp/PacketSerial",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bakercp/PacketSerial-1.0.0.zip",
      "archiveFileName": "PacketSerial-1.0.0.zip",
      "size": 13565,
      "checksum": "SHA-256:e57371754ebd0efd9398f50f060d5fe0ac8426088c558706bbc6c1a1ffb52965"
    },
    {
      "name": "PacketSerial",
      "version": "1.0.2",
      "author": "Christopher Baker \u003cinfo@christopherbaker.net\u003e",
      "maintainer": "Christopher Baker \u003cinfo@christopherbaker.net\u003e",
      "sentence": "A small, efficient library for sending serial data packets.",
      "paragraph": "PacketSerial is an small, efficient, library that allows Arduinos to send and receive serial data packets that include bytes with any value (0-255). A packet is simply an array of bytes.",
      "website": "https://github.com/bakercp/PacketSerial",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bakercp/PacketSerial-1.0.2.zip",
      "archiveFileName": "PacketSerial-1.0.2.zip",
      "size": 13600,
      "checksum": "SHA-256:b7383bf06f3d7d0e6a9ff2dcc49c84c7d9186202be9046c605610c5767d38041"
    },
    {
      "name": "CD74HC4067",
      "version": "1.0.0",
      "author": "Patrick Wasp \u003cpatrickwasp@gmail.com\u003e",
      "maintainer": "Patrick Wasp \u003cpatrickwasp@gmail.com\u003e",
      "sentence": "A library for interfacing with the CD74HC4067 Mux.",
      "paragraph": "Easily select which channel to read or write to on your multiplexer.",
      "website": "https://github.com/waspinator/CD74HC4067",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/waspinator/CD74HC4067-1.0.0.zip",
      "archiveFileName": "CD74HC4067-1.0.0.zip",
      "size": 3569,
      "checksum": "SHA-256:deaf2eed237f7a91f953678ab744a63eb591ab1b05485b386a00cdc6cd0d124a"
    },
    {
      "name": "CRC32",
      "version": "1.0.0",
      "author": "Christopher Baker \u003cinfo@christopherbaker.net\u003e",
      "maintainer": "Christopher Baker \u003cinfo@christopherbaker.net\u003e",
      "sentence": "An Arduino library for calculating a CRC32 checksum.",
      "paragraph": "An Arduino library for calculating a CRC32 checksum.",
      "website": "https://github.com/bakercp/CRC32",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bakercp/CRC32-1.0.0.zip",
      "archiveFileName": "CRC32-1.0.0.zip",
      "size": 3849,
      "checksum": "SHA-256:b77fd8c0cb563bab06f13dcc5b5429d6c177eb76972601760ac9acb4d058cd8d"
    },
    {
      "name": "CRC32",
      "version": "1.0.2",
      "author": "Christopher Baker \u003cinfo@christopherbaker.net\u003e",
      "maintainer": "Christopher Baker \u003cinfo@christopherbaker.net\u003e",
      "sentence": "An Arduino library for calculating a CRC32 checksum.",
      "paragraph": "An Arduino library for calculating a CRC32 checksum.",
      "website": "https://github.com/bakercp/CRC32",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bakercp/CRC32-1.0.2.zip",
      "archiveFileName": "CRC32-1.0.2.zip",
      "size": 4147,
      "checksum": "SHA-256:073878aa9c0ef01ce65994896b54eda830ecc81d72e69d0d99af32a7b04dff20"
    },
    {
      "name": "CRC32",
      "version": "1.1.0",
      "author": "Christopher Baker \u003cinfo@christopherbaker.net\u003e",
      "maintainer": "Christopher Baker \u003cinfo@christopherbaker.net\u003e",
      "sentence": "An Arduino library for calculating a CRC32 checksum.",
      "paragraph": "An Arduino library for calculating a CRC32 checksum.",
      "website": "https://github.com/bakercp/CRC32",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bakercp/CRC32-1.1.0.zip",
      "archiveFileName": "CRC32-1.1.0.zip",
      "size": 4902,
      "checksum": "SHA-256:d58ea8965792d9ea83901e3888bd9699ca5a4637d86b907b8c05cc1ba6bb20f0"
    },
    {
      "name": "MAX30100",
      "version": "1.0.0",
      "author": "Connor Huffine \u003cchuffine@gmail.com\u003e",
      "maintainer": "Connor Huffine \u003cchuffine@gmail.com\u003e",
      "sentence": "This Library supports the MAX30100 Pulse Oximetry IC",
      "paragraph": "Pulse measurement with the MAX30100 IC",
      "website": "https://github.com/kontakt/MAX30100",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/kontakt/MAX30100-1.0.0.zip",
      "archiveFileName": "MAX30100-1.0.0.zip",
      "size": 6850,
      "checksum": "SHA-256:f9cfaa919101375d4ecf16e58efd653d738a5ed15a146acec40f683c2d70112f"
    },
    {
      "name": "GhostLab42Reboot",
      "version": "1.0.1",
      "author": "jaredpetersen",
      "maintainer": "Jared Petersen \u003cjaredtoddpetersen@gmail.com\u003e",
      "sentence": "Arduino library for GhostLab42's Reboot Triple-Display Board Set",
      "paragraph": "This is a library for the GhostLab42 Reboot Triple-Display board, which is a hobbyist's kit for the proton pack displays featured in the Ghostbusters (2016) movie",
      "website": "https://github.com/jaredpetersen/ghostlab42reboot",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jaredpetersen/GhostLab42Reboot-1.0.1.zip",
      "archiveFileName": "GhostLab42Reboot-1.0.1.zip",
      "size": 10700074,
      "checksum": "SHA-256:5dee80c6853662ef9116c147dc8137b7aeddb5f58dd77c6c091d147d096a73cd"
    },
    {
      "name": "Arduino Learning Board",
      "version": "1.0.0",
      "author": "Jeff Shapiro (http://www.ArduinoLearningBoard.com)",
      "maintainer": "Jeff Shapiro (Jeff@ArduinoLearningBoard.com)",
      "sentence": "A combined library created to support the Arduino Learning Board project",
      "paragraph": "Includes libraries and examples for all projects including LCD Display (16 Character by 2 Line), Temperature/Humidity Sensor, Dual Axis Joystick, 5V Relay Module, 4-Button Touch Sensor, 3-Axis Gyro, Sonar Range Sensor, Real-Time Clock, Sound Sensor, Servo Motor, Stepper Motor and Controller, 7-Segment Display, Quad 7-Segment Display, Tilt Sensor, RFID Kit, Passive Buzzer",
      "website": "http://www.ArduinoLearningBoard.com/",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/JeffShapiro/Arduino_Learning_Board-1.0.0.zip",
      "archiveFileName": "Arduino_Learning_Board-1.0.0.zip",
      "size": 152709,
      "checksum": "SHA-256:66e7c7cd3736ce1af93d73ea5a75c9408fca575a24e85244127efc3238362919"
    },
    {
      "name": "sevenSegmentDisplay",
      "version": "1.0.0",
      "author": "Giuseppe Masino \u003chttp://www.facebook.com/peppe.masino1\u003e",
      "maintainer": "Giuseppe Masino \u003chttp://www.facebook.com/peppe.masino1\u003e",
      "sentence": "Allow to control both common-anode or common-cathode 7 segment displays",
      "website": "https://github.com/HackerInside0/Arduino_sevenSegmentDisplay.git",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/HackerInside0/sevenSegmentDisplay-1.0.0.zip",
      "archiveFileName": "sevenSegmentDisplay-1.0.0.zip",
      "size": 94682,
      "checksum": "SHA-256:8d31161eacb9c92301cf10cd5079a9c9b66c6d867cdecab1b2819dd25f7bd590"
    },
    {
      "name": "ClosedCube OPT3001",
      "version": "1.1.1",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Texas Instruments OPT3001 Digital Ambient Light Sensor (ALS)",
      "paragraph": "Arduino library for Texas Instruments OPT3001 Digital Ambient Light Sensor (ALS)",
      "website": "https://github.com/closedcube/ClosedCube_OPT3001_Arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/closedcube/ClosedCube_OPT3001-1.1.1.zip",
      "archiveFileName": "ClosedCube_OPT3001-1.1.1.zip",
      "size": 6356,
      "checksum": "SHA-256:d9986f34c31507597ade7b7e4961ffc70de1f393f1bcaa681cdfbc976d50b19f"
    },
    {
      "name": "ClosedCube OPT3001",
      "version": "1.1.2",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Texas Instruments OPT3001 Digital Ambient Light Sensor (ALS)",
      "paragraph": "Arduino library for Texas Instruments OPT3001 Digital Ambient Light Sensor (ALS)",
      "website": "https://github.com/closedcube/ClosedCube_OPT3001_Arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/closedcube/ClosedCube_OPT3001-1.1.2.zip",
      "archiveFileName": "ClosedCube_OPT3001-1.1.2.zip",
      "size": 150903,
      "checksum": "SHA-256:2dbda0a76458ddfa8e09a15665978d4966341f8b97d8aeedb6d8c9ae19fee7b8"
    },
    {
      "name": "ClosedCube OPT3002",
      "version": "1.1.1",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Texas Instruments OPT3002 Light to Digital Sensor",
      "paragraph": "Arduino library for Texas Instruments OPT3002 Light to Digital Sensor",
      "website": "https://github.com/closedcube/ClosedCube_OPT3002_Arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/closedcube/ClosedCube_OPT3002-1.1.1.zip",
      "archiveFileName": "ClosedCube_OPT3002-1.1.1.zip",
      "size": 149032,
      "checksum": "SHA-256:f64cde1bdd291d4b4141c50530dd4afc9c5ae22357a1f3f4b9ac7232114873a4"
    },
    {
      "name": "ClosedCube OPT3002",
      "version": "1.1.2",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Texas Instruments OPT3002 Light to Digital Sensor",
      "paragraph": "Arduino library for Texas Instruments OPT3002 Light to Digital Sensor",
      "website": "https://github.com/closedcube/ClosedCube_OPT3002_Arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/closedcube/ClosedCube_OPT3002-1.1.2.zip",
      "archiveFileName": "ClosedCube_OPT3002-1.1.2.zip",
      "size": 149053,
      "checksum": "SHA-256:e614aeff10df642e68b88b40419c98223d8de44a271d8aaaec77c4929a33b57d"
    },
    {
      "name": "ClosedCube LPS25HB",
      "version": "1.0.1",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for STMicroelectronics LPS25HB MEMS pressure sensor: 260-1260 hPa absolute digital output barometer",
      "paragraph": "Arduino library for STMicroelectronics LPS25HB MEMS pressure sensor: 260-1260 hPa absolute digital output barometer",
      "website": "https://github.com/closedcube/ClosedCube_LPS25HB_Arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/closedcube/ClosedCube_LPS25HB-1.0.1.zip",
      "archiveFileName": "ClosedCube_LPS25HB-1.0.1.zip",
      "size": 167088,
      "checksum": "SHA-256:56285a28a38328472da0d9aaebd80084b88c110762b6632c124ef40b25d98375"
    },
    {
      "name": "ClosedCube Si7055",
      "version": "1.0.1",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Silicon Labs Si7055 ±0.5°C Digital Temperature Sensor breakout board",
      "paragraph": "Arduino library for Silicon Labs Si7055 ±0.5°C Digital Temperature Sensor breakout board",
      "website": "https://github.com/closedcube/ClosedCube_Si7055_Arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/closedcube/ClosedCube_Si7055-1.0.1.zip",
      "archiveFileName": "ClosedCube_Si7055-1.0.1.zip",
      "size": 174068,
      "checksum": "SHA-256:bf57e1417c73fadbafe03e9b17e0b2aa6c4ad5d2b9e3cb2d4fe2a8098bb72d7c"
    },
    {
      "name": "ClosedCube Si7055",
      "version": "1.0.2",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Silicon Labs Si7055 ±0.5°C Digital Temperature Sensor breakout board",
      "paragraph": "Arduino library for Silicon Labs Si7055 ±0.5°C Digital Temperature Sensor breakout board",
      "website": "https://github.com/closedcube/ClosedCube_Si7055_Arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/closedcube/ClosedCube_Si7055-1.0.2.zip",
      "archiveFileName": "ClosedCube_Si7055-1.0.2.zip",
      "size": 174072,
      "checksum": "SHA-256:2ced5dab757e3b4975ce174cdb9d06f32da98a56e3eb1a856817b665ce997ef2"
    },
    {
      "name": "ClosedCube Si7051",
      "version": "1.0.1",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Silicon Labs Si7051 ±0.1°C Digital Temperature Sensor breakout board",
      "paragraph": "Arduino library for Silicon Labs Si7051 ±0.1°C Digital Temperature Sensor breakout board",
      "website": "https://github.com/closedcube/ClosedCube_Si7051_Arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/closedcube/ClosedCube_Si7051-1.0.1.zip",
      "archiveFileName": "ClosedCube_Si7051-1.0.1.zip",
      "size": 147751,
      "checksum": "SHA-256:513248dff415583000fbf222b5bdf3462eeef799c6e4439d417a8f50b70d9c86"
    },
    {
      "name": "ClosedCube Si7051",
      "version": "1.0.2",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Silicon Labs Si7051 ±0.1°C Digital Temperature Sensor breakout board",
      "paragraph": "Arduino library for Silicon Labs Si7051 ±0.1°C Digital Temperature Sensor breakout board",
      "website": "https://github.com/closedcube/ClosedCube_Si7051_Arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/closedcube/ClosedCube_Si7051-1.0.2.zip",
      "archiveFileName": "ClosedCube_Si7051-1.0.2.zip",
      "size": 147755,
      "checksum": "SHA-256:77b445e53fe99dccf39efe80820b02b3ebdf97f2d213caea19f23443a7cf40ff"
    },
    {
      "name": "ClosedCube HDC1010",
      "version": "1.0.1",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Texas Instruments HDC1010 Low Power, High Accuracy Digital Humidity Sensor with Temperature Sensor",
      "paragraph": "Arduino library for Texas Instruments HDC1010 Low Power, High Accuracy Digital Humidity Sensor with Temperature Sensor",
      "website": "https://github.com/closedcube/ClosedCube_HDC1010_Arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/closedcube/ClosedCube_HDC1010-1.0.1.zip",
      "archiveFileName": "ClosedCube_HDC1010-1.0.1.zip",
      "size": 188401,
      "checksum": "SHA-256:e84445309358a321c3e4be069de0ec6b06272d7125d46c0598554aa10e84eff7"
    },
    {
      "name": "ClosedCube HDC1010",
      "version": "1.1.1",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Texas Instruments HDC1010 Low Power, High Accuracy Digital Humidity Sensor with Temperature Sensor",
      "paragraph": "Arduino library for Texas Instruments HDC1010 Low Power, High Accuracy Digital Humidity Sensor with Temperature Sensor",
      "website": "https://github.com/closedcube/ClosedCube_HDC1010_Arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/closedcube/ClosedCube_HDC1010-1.1.1.zip",
      "archiveFileName": "ClosedCube_HDC1010-1.1.1.zip",
      "size": 189051,
      "checksum": "SHA-256:70232f831f9f8e5f76b938c0ae80639a2744bb9fe896d7b59aba1062a8f22dbd"
    },
    {
      "name": "ClosedCube HDC1010",
      "version": "1.2.0",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Texas Instruments HDC1010 Low Power, High Accuracy Digital Humidity Sensor with Temperature Sensor",
      "paragraph": "Arduino library for Texas Instruments HDC1010 Low Power, High Accuracy Digital Humidity Sensor with Temperature Sensor",
      "website": "https://github.com/closedcube/ClosedCube_HDC1010_Arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/closedcube/ClosedCube_HDC1010-1.2.0.zip",
      "archiveFileName": "ClosedCube_HDC1010-1.2.0.zip",
      "size": 190128,
      "checksum": "SHA-256:860abeb783fe2c80f00ab2b292b1d24063bf3f934bef67b65816bbdc997561cf"
    },
    {
      "name": "ClosedCube HDC1010",
      "version": "1.2.1",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Texas Instruments HDC1010 Low Power, High Accuracy Digital Humidity Sensor with Temperature Sensor",
      "paragraph": "Arduino library for Texas Instruments HDC1010 Low Power, High Accuracy Digital Humidity Sensor with Temperature Sensor",
      "website": "https://github.com/closedcube/ClosedCube_HDC1010_Arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/closedcube/ClosedCube_HDC1010-1.2.1.zip",
      "archiveFileName": "ClosedCube_HDC1010-1.2.1.zip",
      "size": 190183,
      "checksum": "SHA-256:11b6db1a50b9e695189cc4ba2fe175ff8db475a71745efd58b5351cd1e4c9d10"
    },
    {
      "name": "ClosedCube HDC1010",
      "version": "1.2.2",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Texas Instruments HDC1010 Low Power, High Accuracy Digital Humidity Sensor with Temperature Sensor",
      "paragraph": "Arduino library for Texas Instruments HDC1010 Low Power, High Accuracy Digital Humidity Sensor with Temperature Sensor",
      "website": "https://github.com/closedcube/ClosedCube_HDC1010_Arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/closedcube/ClosedCube_HDC1010-1.2.2.zip",
      "archiveFileName": "ClosedCube_HDC1010-1.2.2.zip",
      "size": 190201,
      "checksum": "SHA-256:aa589c7f3798ffb8e49820f4473d10eb908c024922a30e958c883a61aec3495f"
    },
    {
      "name": "ToneLibrary",
      "version": "1.7.0",
      "author": "Brett Hagman \u003cbhagman@roguerobotics.com\u003e, Daniel Centore \u003cdaniel.centore@gmail.com\u003e",
      "maintainer": "Daniel Centore \u003cdaniel.centore@gmail.com\u003e",
      "sentence": "This is an Arduino Library to produce a tone on any Arduino pin.",
      "paragraph": "Produces a square-wave of the specified frequency (and 50% duty cycle) on any Arduino pin.",
      "website": "https://github.com/daniel-centore/arduino-tone-library",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/daniel-centore/ToneLibrary-1.7.0.zip",
      "archiveFileName": "ToneLibrary-1.7.0.zip",
      "size": 24222,
      "checksum": "SHA-256:f04fc9c2c34d8d53586399c55127271ebc0d10fdbf773a9eaf189181e56b2064"
    },
    {
      "name": "ToneLibrary",
      "version": "1.7.1",
      "author": "Brett Hagman \u003cbhagman@roguerobotics.com\u003e, Daniel Centore \u003cdaniel.centore@gmail.com\u003e",
      "maintainer": "Daniel Centore \u003cdaniel.centore@gmail.com\u003e",
      "sentence": "This is an Arduino Library to produce a tone on any Arduino pin.",
      "paragraph": "Produces a square-wave of the specified frequency (and 50% duty cycle) on any Arduino pin.",
      "website": "https://github.com/daniel-centore/arduino-tone-library",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/daniel-centore/ToneLibrary-1.7.1.zip",
      "archiveFileName": "ToneLibrary-1.7.1.zip",
      "size": 24235,
      "checksum": "SHA-256:cf6ce26ce56984f55d86a959505aab2cae4d9dbd6d78e2e09532a9e2e49a9e7a"
    },
    {
      "name": "GadgetBox",
      "version": "1.0.0",
      "author": "Jack Gassett",
      "maintainer": "Jack Gassett",
      "sentence": "Enclosure and Universal Hardware for IoT Gadgets.",
      "paragraph": "GadgetBox tackles the biggest problems with current IoT devices � shield stacking, easily adding hardware, hardware compatibility, and an enclosure for your project. There are lots of IoT hardware options out there but none of them have thought the problem all the way through, so what we end up with is either a crazy tower of shields or peripherals soldered on with jumper wires. Not something we can proudly show our friends and family, let alone put into use in our homes.",
      "website": "https://hackaday.io/project/12426-gadgetbox-no-more-shield-stacking-or-ugly-wires",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/GadgetFactory/GadgetBox-1.0.0.zip",
      "archiveFileName": "GadgetBox-1.0.0.zip",
      "size": 8847,
      "checksum": "SHA-256:09bb81539748f733d7bc3b8d984ca99156e0da1d1f089923c3cd92f848234d9d"
    },
    {
      "name": "GadgetBox",
      "version": "1.0.1",
      "author": "Jack Gassett",
      "maintainer": "Jack Gassett",
      "sentence": "Enclosure and Universal Hardware for IoT Gadgets.",
      "paragraph": "GadgetBox tackles the biggest problems with current IoT devices – shield stacking, easily adding hardware, hardware compatibility, and an enclosure for your project. There are lots of IoT hardware options out there but none of them have thought the problem all the way through, so what we end up with is either a crazy tower of shields or peripherals soldered on with jumper wires. Not something we can proudly show our friends and family, let alone put into use in our homes.",
      "website": "https://hackaday.io/project/12426-gadgetbox-no-more-shield-stacking-or-ugly-wires",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/GadgetFactory/GadgetBox-1.0.1.zip",
      "archiveFileName": "GadgetBox-1.0.1.zip",
      "size": 9659,
      "checksum": "SHA-256:06efcf42044448833cfd6a501617e173607b18fa1bbc9f0db094b1c5a18cb45a"
    },
    {
      "name": "GadgetBox",
      "version": "1.0.2",
      "author": "Jack Gassett",
      "maintainer": "Jack Gassett",
      "sentence": "Enclosure and Universal Hardware for IoT Gadgets.",
      "paragraph": "GadgetBox tackles the biggest problems with current IoT devices – shield stacking, easily adding hardware, hardware compatibility, and an enclosure for your project. There are lots of IoT hardware options out there but none of them have thought the problem all the way through, so what we end up with is either a crazy tower of shields or peripherals soldered on with jumper wires. Not something we can proudly show our friends and family, let alone put into use in our homes.",
      "website": "https://hackaday.io/project/12426-gadgetbox-no-more-shield-stacking-or-ugly-wires",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/GadgetFactory/GadgetBox-1.0.2.zip",
      "archiveFileName": "GadgetBox-1.0.2.zip",
      "size": 9624,
      "checksum": "SHA-256:192d6f9b57754ef33ecac8c5d2601b7cb57058a4bfb9301c42110241051b5adc"
    },
    {
      "name": "GadgetBox",
      "version": "1.0.6",
      "author": "Jack Gassett",
      "maintainer": "Jack Gassett",
      "sentence": "Enclosure and Universal Hardware for IoT Gadgets.",
      "paragraph": "GadgetBox tackles the biggest problems with current IoT devices – shield stacking, easily adding hardware, hardware compatibility, and an enclosure for your project. There are lots of IoT hardware options out there but none of them have thought the problem all the way through, so what we end up with is either a crazy tower of shields or peripherals soldered on with jumper wires. Not something we can proudly show our friends and family, let alone put into use in our homes.",
      "website": "https://hackaday.io/project/12426-gadgetbox-no-more-shield-stacking-or-ugly-wires",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/GadgetFactory/GadgetBox-1.0.6.zip",
      "archiveFileName": "GadgetBox-1.0.6.zip",
      "size": 25790,
      "checksum": "SHA-256:492f879af54bc4509d6debfb3f1ec76a95faae544224a9c5d52c7fa87c827988"
    },
    {
      "name": "ArduinoSerialToTCPBridgeClient",
      "version": "1.0.0",
      "author": "Roan Brand \u003cbrandroan@gmail.com\u003e",
      "maintainer": "Roan Brand \u003cbrandroan@gmail.com\u003e",
      "sentence": "Open a TCP connection to a server from the Arduino using just serial. (No shields or network HW)",
      "paragraph": "INSTALL DEPENDENCIES! The Protocol Gateway service runs on the host, listens on a COM port connected to the Arduino, and opens TCP connections on behalf of the Protocol Client runnning on the Arduino, forwarding traffic bi-directionally. The protocol provides the app an in order, duplicates free and error checked byte stream by adding a CRC32 and simple retry mechanism.",
      "website": "https://github.com/RoanBrand/ArduinoSerialToTCPBridgeClient",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/RoanBrand/ArduinoSerialToTCPBridgeClient-1.0.0.zip",
      "archiveFileName": "ArduinoSerialToTCPBridgeClient-1.0.0.zip",
      "size": 5902,
      "checksum": "SHA-256:c1ade239e41d4cad8abbb157e2c98026b02c8993db017cbdebd23e1a81f20f73"
    },
    {
      "name": "EEPROMWearLevel",
      "version": "1.0.0",
      "author": "Pete \u003carduino@pete.ch\u003e",
      "maintainer": "Pete \u003carduino@pete.ch\u003e",
      "sentence": "EEPROMWearLevel reduces EEPROM wear by writting a new value to an other EEPROM location.",
      "paragraph": "EEPROMWearLevel bases on the EEPROM library included in the Android framework. It reduces EEPROM wear by writting a new value to an other EEPROM location. The current location is stored by writing a single bit for every EEPROM location. When all are used, it starts again on the first location.",
      "website": "https://github.com/PRosenb/EEPROMWearLevel",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/PRosenb/EEPROMWearLevel-1.0.0.zip",
      "archiveFileName": "EEPROMWearLevel-1.0.0.zip",
      "size": 16104,
      "checksum": "SHA-256:57d1d816d5c47bb33f43584f090ee718a18da774c3988de564562ed9d8465ff8"
    },
    {
      "name": "PCA9536",
      "version": "1.0.0",
      "author": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "maintainer": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "sentence": "PCA9536 Driver (4-Channel GPIO I2C Expander)",
      "paragraph": "This library contains a complete driver for the PCA9536 exposing all its functionality so that its 4 channels (or IO pins) can be controlled as a single unit or individually in terms of their Mode (INPUT /OUTPUT) and Polarity (NON-INVERTED / INVERTED). The pins' states (LOW / HIGH) can be read (in INPUT mode) or written (in OUTPUT mode).",
      "website": "https://github.com/nadavmatalon/PCA9536",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nadavmatalon/PCA9536-1.0.0.zip",
      "archiveFileName": "PCA9536-1.0.0.zip",
      "size": 14234,
      "checksum": "SHA-256:8f790af2bece1a0562a0997d2fffe31af43e998479321d269d311a931296d931"
    },
    {
      "name": "RGBLEDBlender",
      "version": "1.0.0",
      "author": "Erik Sikich \u003cerik.sikich@gmail.com\u003e",
      "maintainer": "Erik Sikich \u003cerik.sikich@gmail.com\u003e",
      "sentence": "A basic RGB LED blending library.",
      "paragraph": "Aims to make blending colors simple.  Add custom colors to Colors.h.",
      "website": "https://github.com/ESikich/RGBLEDBlender",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ESikich/RGBLEDBlender-1.0.0.zip",
      "archiveFileName": "RGBLEDBlender-1.0.0.zip",
      "size": 35981,
      "checksum": "SHA-256:eff6db59d5eea5d948eb6e5460c605a71f6b751a60c4a93e09f09be44d49dd88"
    },
    {
      "name": "RGBLEDBlender",
      "version": "1.1.2",
      "author": "Erik Sikich \u003cerik.sikich@gmail.com\u003e",
      "maintainer": "Erik Sikich \u003cerik.sikich@gmail.com\u003e",
      "sentence": "A basic RGB LED blending library.",
      "paragraph": "Aims to make blending colors simple.  Add custom colors to Colors.h.",
      "website": "https://github.com/ESikich/RGBLEDBlender",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ESikich/RGBLEDBlender-1.1.2.zip",
      "archiveFileName": "RGBLEDBlender-1.1.2.zip",
      "size": 35126,
      "checksum": "SHA-256:0d707f2667d134511013c9187bbe5cb5711424d14d794cc3d364b0b7f01f4192"
    },
    {
      "name": "EmonLib",
      "version": "1.1.0",
      "author": "OpenEnergyMonitor",
      "maintainer": "OpenEnergyMonitor",
      "sentence": "Energy Monitoring Library",
      "paragraph": "Energy Monitoring Library",
      "website": "https://github.com/openenergymonitor/EmonLib.git",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/openenergymonitor/EmonLib-1.1.0.zip",
      "archiveFileName": "EmonLib-1.1.0.zip",
      "size": 7088,
      "checksum": "SHA-256:0ff17ee50164b0bd61b7074f7e364ea91bbdbc7adf762a5cd47d56e5b4f5ac20"
    },
    {
      "name": "ArduboyTones",
      "version": "1.0.0",
      "author": "Scott Allen",
      "maintainer": "Scott Allen saydisp-git@yahoo.ca",
      "sentence": "A library for playing a sequence of tones, intended for use with the Arduboy game system.",
      "paragraph": "Plays one or more tones in sequence. Driven by interrupts, so audio plays in the background while the \"real\" program runs in the foreground. Written to minimize code size by specifically targeting the processor and pins of the Arduboy.",
      "website": "https://github.com/MLXXXp/ArduboyTones",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MLXXXp/ArduboyTones-1.0.0.zip",
      "archiveFileName": "ArduboyTones-1.0.0.zip",
      "size": 16156,
      "checksum": "SHA-256:91bdba89fffa895fb8e5124076f7bb8de8791aed442b67e10415fcb26ecc6e0e"
    },
    {
      "name": "ArduboyTones",
      "version": "1.0.1",
      "author": "Scott Allen",
      "maintainer": "Scott Allen saydisp-git@yahoo.ca",
      "sentence": "A library for playing a sequence of tones, intended for use with the Arduboy game system.",
      "paragraph": "Plays one or more tones in sequence. Driven by interrupts, so audio plays in the background while the \"real\" program runs in the foreground. Written to minimize code size by specifically targeting the processor and pins of the Arduboy.",
      "website": "https://github.com/MLXXXp/ArduboyTones",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MLXXXp/ArduboyTones-1.0.1.zip",
      "archiveFileName": "ArduboyTones-1.0.1.zip",
      "size": 19529,
      "checksum": "SHA-256:78c23f2c86eb21f943419fb43bfb4fa4a8d1537405e62310a74ec4e388f8166b"
    },
    {
      "name": "ArduboyTones",
      "version": "1.0.2",
      "author": "Scott Allen",
      "maintainer": "Scott Allen \u003csaydisp-git@yahoo.ca\u003e",
      "sentence": "A library for playing a sequence of tones, intended for use with the Arduboy game system.",
      "paragraph": "Plays one or more tones in sequence. Driven by interrupts, so audio plays in the background while the \"real\" program runs in the foreground. Written to minimize code size by specifically targeting the processor and pins of the Arduboy.",
      "website": "https://github.com/MLXXXp/ArduboyTones",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MLXXXp/ArduboyTones-1.0.2.zip",
      "archiveFileName": "ArduboyTones-1.0.2.zip",
      "size": 19870,
      "checksum": "SHA-256:cb8daaebe7db13d4b8042f8faaa3471c54acc27970b20c3317903de546d1e5c0"
    },
    {
      "name": "MIDI Library",
      "version": "4.2.0",
      "author": "Forty Seven Effects",
      "maintainer": "Francois Best \u003cfrancois.best@fortyseveneffects.com\u003e",
      "sentence": "MIDI I/Os for Arduino",
      "paragraph": "Read \u0026 send MIDI messages to interface with your controllers and synths",
      "website": "https://github.com/FortySevenEffects/arduino_midi_library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/FortySevenEffects/MIDI_Library-4.2.0.zip",
      "archiveFileName": "MIDI_Library-4.2.0.zip",
      "size": 103005,
      "checksum": "SHA-256:03aaff31cf09252051fcaa0358c94115358928d60662adaa5e7e36a3227358c6"
    },
    {
      "name": "MIDI Library",
      "version": "4.3.1",
      "author": "Forty Seven Effects",
      "maintainer": "Francois Best \u003cfrancois.best@fortyseveneffects.com\u003e",
      "sentence": "MIDI I/Os for Arduino",
      "paragraph": "Read \u0026 send MIDI messages to interface with your controllers and synths",
      "website": "https://github.com/FortySevenEffects/arduino_midi_library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/FortySevenEffects/MIDI_Library-4.3.1.zip",
      "archiveFileName": "MIDI_Library-4.3.1.zip",
      "size": 102859,
      "checksum": "SHA-256:f9a6826d5b0bc46bc037b15ac33f985d89392cfdb3831d1b04332926b70be3be"
    },
    {
      "name": "SmartEverything Lion RN2483",
      "version": "1.0.0",
      "author": "development",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for the Microchip RN2483 LoaraWAN Module",
      "paragraph": "\u003cbr\u003eThe RN2483 module provides LoRaWAN protocol connectivity using a simple UART interface.",
      "website": "https://github.com/axelelettronica/sme-RN2483-library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/axelelettronica/SmartEverything_Lion_RN2483-1.0.0.zip",
      "archiveFileName": "SmartEverything_Lion_RN2483-1.0.0.zip",
      "size": 20251,
      "checksum": "SHA-256:b774239b9c65b8a2ed37ae45c3db4f4b106cb7f83467f03f55f564dc94008f5c"
    },
    {
      "name": "SmartEverything Lion RN2483",
      "version": "1.1.0",
      "author": "development",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for the Microchip RN2483 LoaraWAN Module",
      "paragraph": "\u003cbr\u003eThe RN2483 module provides LoRaWAN protocol connectivity using a simple UART interface.",
      "website": "https://github.com/axelelettronica/sme-RN2483-library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/axelelettronica/SmartEverything_Lion_RN2483-1.1.0.zip",
      "archiveFileName": "SmartEverything_Lion_RN2483-1.1.0.zip",
      "size": 18693,
      "checksum": "SHA-256:12cde311a7214ef464551a810cd320f854868e96b658ac3a8d6d01d38ec9bb22"
    },
    {
      "name": "SmartEverything Lion RN2483",
      "version": "1.3.0",
      "author": "development",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for the Microchip RN2483 LoaraWAN Module",
      "paragraph": "\u003cbr\u003eThe RN2483 module provides LoRaWAN protocol connectivity using a simple UART interface.",
      "website": "https://github.com/axelelettronica/sme-RN2483-library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/axelelettronica/SmartEverything_Lion_RN2483-1.3.0.zip",
      "archiveFileName": "SmartEverything_Lion_RN2483-1.3.0.zip",
      "size": 26025,
      "checksum": "SHA-256:9eccaf20482d663fab7548c46f74fdadbe792081ff20ac9e44e50df4ef4e3ef5"
    },
    {
      "name": "Arduboy2",
      "version": "2.0.0",
      "author": "Chris J. Martinez, Kevin Bates, Josh Goebel, Scott Allen, Ross O. Shoger",
      "maintainer": "Scott Allen saydisp-git@yahoo.ca",
      "sentence": "An alternative library for use with the Arduboy game system.",
      "paragraph": "This is a fork of the Arduboy library, with a main goal of providing ways in which more code space can be freed for use by large sketches. It remains substantially compatible with Arduboy library V1.1, with the main API difference being that the \"tones\" subclass has been removed and its functionality made available in a separate ArduboyPlaytune library. Removal of \"tones\" also allows other audio functions and libraries to be used.",
      "website": "https://github.com/MLXXXp/Arduboy2",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MLXXXp/Arduboy2-2.0.0.zip",
      "archiveFileName": "Arduboy2-2.0.0.zip",
      "size": 44454,
      "checksum": "SHA-256:b493cbae9acd42765e27bb0644e6c4edf4184326f28d0a4c7ef7d2fcfebc83df"
    },
    {
      "name": "Arduboy2",
      "version": "2.0.1",
      "author": "Chris J. Martinez, Kevin Bates, Josh Goebel, Scott Allen, Ross O. Shoger",
      "maintainer": "Scott Allen saydisp-git@yahoo.ca",
      "sentence": "An alternative library for use with the Arduboy game system.",
      "paragraph": "This is a fork of the Arduboy library, with a main goal of providing ways in which more code space can be freed for use by large sketches. It remains substantially compatible with Arduboy library V1.1, with the main API difference being that the \"tones\" subclass has been removed and its functionality made available in a separate ArduboyPlaytune library. Removal of \"tones\" also allows other audio functions and libraries to be used.",
      "website": "https://github.com/MLXXXp/Arduboy2",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MLXXXp/Arduboy2-2.0.1.zip",
      "archiveFileName": "Arduboy2-2.0.1.zip",
      "size": 44657,
      "checksum": "SHA-256:46df8ea96e88507930d3a8128ae25d95bf815fe5bc46013f38126c77bab89339"
    },
    {
      "name": "Arduboy2",
      "version": "2.0.2",
      "author": "Chris J. Martinez, Kevin Bates, Josh Goebel, Scott Allen, Ross O. Shoger",
      "maintainer": "Scott Allen saydisp-git@yahoo.ca",
      "sentence": "An alternative library for use with the Arduboy game system.",
      "paragraph": "This is a fork of the Arduboy library, with a main goal of providing ways in which more code space can be freed for use by large sketches. It remains substantially compatible with Arduboy library V1.1, with the main API difference being that the \"tones\" subclass has been removed and its functionality made available in a separate ArduboyPlaytune library. Removal of \"tones\" also allows other audio functions and libraries to be used.",
      "website": "https://github.com/MLXXXp/Arduboy2",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MLXXXp/Arduboy2-2.0.2.zip",
      "archiveFileName": "Arduboy2-2.0.2.zip",
      "size": 44679,
      "checksum": "SHA-256:dc053043d6b2772ea61313ab5275619ab6bc2e23c95d96f01bf885ca489eea3e"
    },
    {
      "name": "Arduboy2",
      "version": "2.0.3",
      "author": "Chris J. Martinez, Kevin Bates, Josh Goebel, Scott Allen, Ross O. Shoger",
      "maintainer": "Scott Allen saydisp-git@yahoo.ca",
      "sentence": "An alternative library for use with the Arduboy game system.",
      "paragraph": "This is a fork of the Arduboy library, with a main goal of providing ways in which more code space can be freed for use by large sketches. It remains substantially compatible with Arduboy library V1.1, with the main API difference being that the \"tones\" subclass has been removed and its functionality made available in a separate ArduboyPlaytune library. Removal of \"tones\" also allows other audio functions and libraries to be used.",
      "website": "https://github.com/MLXXXp/Arduboy2",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MLXXXp/Arduboy2-2.0.3.zip",
      "archiveFileName": "Arduboy2-2.0.3.zip",
      "size": 44300,
      "checksum": "SHA-256:fce801f6460efaaca6f02928a8a924968cfcec7cc1a560e5c1d0e62b4c622d9a"
    },
    {
      "name": "Arduboy2",
      "version": "2.0.4",
      "author": "Chris J. Martinez, Kevin Bates, Josh Goebel, Scott Allen, Ross O. Shoger",
      "maintainer": "Scott Allen saydisp-git@yahoo.ca",
      "sentence": "An alternative library for use with the Arduboy game system.",
      "paragraph": "This is a fork of the Arduboy library, with a main goal of providing ways in which more code space can be freed for use by large sketches. It remains substantially compatible with Arduboy library V1.1, with the main API difference being that the \"tones\" subclass has been removed and its functionality made available in a separate ArduboyPlaytune library. Removal of \"tones\" also allows other audio functions and libraries to be used.",
      "website": "https://github.com/MLXXXp/Arduboy2",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MLXXXp/Arduboy2-2.0.4.zip",
      "archiveFileName": "Arduboy2-2.0.4.zip",
      "size": 43967,
      "checksum": "SHA-256:aed9fcb453fadd70d972adcdfa5d0ab18087a18ae12795b88cc971e54c253860"
    },
    {
      "name": "Arduboy2",
      "version": "2.0.5",
      "author": "Chris J. Martinez, Kevin Bates, Josh Goebel, Scott Allen, Ross O. Shoger",
      "maintainer": "Scott Allen saydisp-git@yahoo.ca",
      "sentence": "An alternative library for use with the Arduboy game system.",
      "paragraph": "This is a fork of the Arduboy library, with a main goal of providing ways in which more code space can be freed for use by large sketches. It remains substantially compatible with Arduboy library V1.1, with the main API difference being that the \"tones\" subclass has been removed and its functionality made available in a separate ArduboyPlaytune library. Removal of \"tones\" also allows other audio functions and libraries to be used.",
      "website": "https://github.com/MLXXXp/Arduboy2",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MLXXXp/Arduboy2-2.0.5.zip",
      "archiveFileName": "Arduboy2-2.0.5.zip",
      "size": 42656,
      "checksum": "SHA-256:2e33704f0dc84e16ab684e2b167fce0f90886a82b64ff0f97ec895a106c24c2c"
    },
    {
      "name": "Arduboy2",
      "version": "2.1.0",
      "author": "Chris J. Martinez, Kevin Bates, Josh Goebel, Scott Allen, Ross O. Shoger",
      "maintainer": "Scott Allen saydisp-git@yahoo.ca",
      "sentence": "An alternative library for use with the Arduboy game system.",
      "paragraph": "This is a fork of the Arduboy library, with a main goal of providing ways in which more code space can be freed for use by large sketches. It remains substantially compatible with Arduboy library V1.1, with the main API difference being that the \"tones\" subclass has been removed and its functionality made available in a separate ArduboyPlaytune library. Removal of \"tones\" also allows other audio functions and libraries to be used.",
      "website": "https://github.com/MLXXXp/Arduboy2",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MLXXXp/Arduboy2-2.1.0.zip",
      "archiveFileName": "Arduboy2-2.1.0.zip",
      "size": 48193,
      "checksum": "SHA-256:afcdbecd5ead58558d114c7fd0b0f8d76f680b687f8026240bec5948acda5bcb"
    },
    {
      "name": "Arduboy2",
      "version": "3.0.0",
      "author": "Chris J. Martinez, Kevin Bates, Josh Goebel, Scott Allen, Ross O. Shoger",
      "maintainer": "Scott Allen saydisp-git@yahoo.ca",
      "sentence": "An alternative library for use with the Arduboy game system.",
      "paragraph": "This is a fork of the Arduboy library, with a main goal of providing ways in which more code space can be freed for use by large sketches. It remains substantially compatible with Arduboy library V1.1, with the main API difference being that the \"tones\" subclass has been removed and its functionality made available in a separate ArduboyPlaytune library. Removal of \"tones\" also allows other audio functions and libraries to be used, such as ArduboyTones.",
      "website": "https://github.com/MLXXXp/Arduboy2",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MLXXXp/Arduboy2-3.0.0.zip",
      "archiveFileName": "Arduboy2-3.0.0.zip",
      "size": 61118,
      "checksum": "SHA-256:b1a9d868a206600fee2e0d57368324730271ebdd6f3d361b469463120eac80f3"
    },
    {
      "name": "Arduboy2",
      "version": "3.1.0",
      "author": "Chris J. Martinez, Kevin Bates, Josh Goebel, Scott Allen, Ross O. Shoger",
      "maintainer": "Scott Allen \u003csaydisp-git@yahoo.ca\u003e",
      "sentence": "An alternative library for use with the Arduboy game system.",
      "paragraph": "This is a fork of the Arduboy library, with a main goal of providing ways in which more code space can be freed for use by large sketches. It remains substantially compatible with Arduboy library V1.1, with the main API difference being that the \"tones\" subclass has been removed and its functionality made available in a separate ArduboyPlaytune library. Removal of \"tones\" also allows other audio functions and libraries to be used, such as ArduboyTones.",
      "website": "https://github.com/MLXXXp/Arduboy2",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MLXXXp/Arduboy2-3.1.0.zip",
      "archiveFileName": "Arduboy2-3.1.0.zip",
      "size": 69714,
      "checksum": "SHA-256:3fad7a56e21df30d2455c331aeab4a5712f7b3ba90ba8c567f9cc1b3609e38ad"
    },
    {
      "name": "Arduboy2",
      "version": "3.1.1",
      "author": "Chris J. Martinez, Kevin Bates, Josh Goebel, Scott Allen, Ross O. Shoger",
      "maintainer": "Scott Allen \u003csaydisp-git@yahoo.ca\u003e",
      "sentence": "An alternative library for use with the Arduboy game system.",
      "paragraph": "This is a fork of the Arduboy library, with a main goal of providing ways in which more code space can be freed for use by large sketches. It remains substantially compatible with Arduboy library V1.1, with the main API difference being that the \"tones\" subclass has been removed and its functionality made available in a separate ArduboyPlaytune library. Removal of \"tones\" also allows other audio functions and libraries to be used, such as ArduboyTones.",
      "website": "https://github.com/MLXXXp/Arduboy2",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MLXXXp/Arduboy2-3.1.1.zip",
      "archiveFileName": "Arduboy2-3.1.1.zip",
      "size": 69851,
      "checksum": "SHA-256:496e39235d5a22c85e7b0e27695ef58a43850ec74a787b834107a6cb46340c03"
    },
    {
      "name": "Arduboy2",
      "version": "4.0.0",
      "author": "Chris J. Martinez, Kevin Bates, Josh Goebel, Scott Allen, Ross O. Shoger",
      "maintainer": "Scott Allen \u003csaydisp-git@yahoo.ca\u003e",
      "sentence": "An alternative library for use with the Arduboy game system.",
      "paragraph": "This is a fork of the Arduboy library, with a main goal of providing ways in which more code space can be freed for use by large sketches. It remains substantially compatible with Arduboy library V1.1, with the main API difference being that the \"tones\" subclass has been removed and its functionality made available in a separate ArduboyPlaytune library. Removal of \"tones\" also allows other audio functions and libraries to be used, such as ArduboyTones.",
      "website": "https://github.com/MLXXXp/Arduboy2",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MLXXXp/Arduboy2-4.0.0.zip",
      "archiveFileName": "Arduboy2-4.0.0.zip",
      "size": 75737,
      "checksum": "SHA-256:e9dcf392da2e820bfed6bf0eeada6d9d8051cd3e9273014e76f61751d22552d8"
    },
    {
      "name": "SmartEverything LSM6DS3",
      "version": "1.0.0",
      "author": "Zero-2",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for LSM6DS3 iNEMO inertial module:3D accelerometer, 3D gyroscope",
      "paragraph": "The LSM6DS3 is a system-in-package featuring a 3D digital linear acceleration sensor, a 3D digital angular rate sensor.\u003cbr\u003eThe LSM6DS3 has a linear acceleration full scale of ±2g/±4g/±8/±16 g, a magnetic field full scale of ±4/±8/±12/±16 gauss and an angular rate of ±245/±500/±2000 dps.\u003cbr\u003eThe LSM9DS1 includes an I2C serial bus interface supporting standard and fast mode (100 kHz and 400 kHz) and an SPI serial standard interface.\u003cbr\u003eMagnetic, accelerometer and gyroscope sensing can be enabled or set in power-down mode separately for smart power management.",
      "website": "https://github.com/axelelettronica/sme-lsm6ds3-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/axelelettronica/SmartEverything_LSM6DS3-1.0.0.zip",
      "archiveFileName": "SmartEverything_LSM6DS3-1.0.0.zip",
      "size": 19220,
      "checksum": "SHA-256:d9e1b692b8b8ec406bb1d39a8366652aa2d382a4f996eb2656a1bc8dbc37005a"
    },
    {
      "name": "SmartEverything LSM6DS3",
      "version": "1.0.1",
      "author": "Zero-2",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for LSM6DS3 iNEMO inertial module:3D accelerometer, 3D gyroscope",
      "paragraph": "The LSM6DS3 is a system-in-package featuring a 3D digital linear acceleration sensor, a 3D digital angular rate sensor.\u003cbr\u003eThe LSM6DS3 has a linear acceleration full scale of ±2g/±4g/±8/±16 g, a magnetic field full scale of ±4/±8/±12/±16 gauss and an angular rate of ±245/±500/±2000 dps.\u003cbr\u003eThe LSM6DS3 includes an I2C serial bus interface supporting standard and fast mode (100 kHz and 400 kHz) and an SPI serial standard interface.\u003cbr\u003eAccelerometer and gyroscope sensing can be enabled or set in power-down mode separately for smart power management.",
      "website": "https://github.com/axelelettronica/sme-lsm6ds3-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/axelelettronica/SmartEverything_LSM6DS3-1.0.1.zip",
      "archiveFileName": "SmartEverything_LSM6DS3-1.0.1.zip",
      "size": 19212,
      "checksum": "SHA-256:f7aa349699d6cc937f66815077606d5b63fdeae980d1acfbd976ed3655678219"
    },
    {
      "name": "SmartEverything NXP-ST Shield",
      "version": "1.0.0",
      "author": "axelelettronica",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for the Arrow SmartEverything Sensor Shield",
      "paragraph": "\u003cbr\u003eThis librry contains the main function to handle the components (Led \u0026 Button) present on the Shield.\u003cbr\u003e To manage the sensors refer to the specific Arrow SmartEverything libraries.",
      "website": "https://github.com/axelelettronica/sme-SensorShiel-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/axelelettronica/SmartEverything_NXP_ST_Shield-1.0.0.zip",
      "archiveFileName": "SmartEverything_NXP_ST_Shield-1.0.0.zip",
      "size": 5251,
      "checksum": "SHA-256:580eee86481ffd4ab8a56b154ddcdadba8566c69149bf27c816ecd8aa7902a23"
    },
    {
      "name": "ClosedCube TCA9538",
      "version": "1.1.1",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Texas Instruments TCA9538 Remote 8-Bit I2C and SMBus Low-Power I/O Expander",
      "paragraph": "Arduino library for Texas Instruments TCA9538 Remote 8-Bit I2C and SMBus Low-Power I/O Expander",
      "website": "https://github.com/closedcube/ClosedCube_TCA9538_Arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/closedcube/ClosedCube_TCA9538-1.1.1.zip",
      "archiveFileName": "ClosedCube_TCA9538-1.1.1.zip",
      "size": 134007,
      "checksum": "SHA-256:4cdb2825fa9840bd2624ca8ebedbfeb166de4f3a250b31feb59965b60eeaab7b"
    },
    {
      "name": "ClosedCube TCA9538",
      "version": "1.1.3",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Texas Instruments TCA9538 Remote 8-Bit I2C and SMBus Low-Power I/O Expander",
      "paragraph": "Arduino library for Texas Instruments TCA9538 Remote 8-Bit I2C and SMBus Low-Power I/O Expander",
      "website": "https://github.com/closedcube/ClosedCube_TCA9538_Arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/closedcube/ClosedCube_TCA9538-1.1.3.zip",
      "archiveFileName": "ClosedCube_TCA9538-1.1.3.zip",
      "size": 135549,
      "checksum": "SHA-256:6bee3c3823200f2c48067757b0d5ee56a3ea059bfcc564c54f5cd765d10e9925"
    },
    {
      "name": "Webbino",
      "version": "0.9.0",
      "author": "SukkoPera \u003csoftware@sukkology.net\u003e",
      "maintainer": "SukkoPera \u003csoftware@sukkology.net\u003e",
      "sentence": "Advanced webserver for Arduino.",
      "paragraph": "Compatible with many network interfaces. Webpages can either be embedded in the code and/or stored on an SD card (with long filenames!). Supports GET requests and allows easy embedding of dynamic contents.",
      "website": "https://github.com/SukkoPera/Webbino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SukkoPera/Webbino-0.9.0.zip",
      "archiveFileName": "Webbino-0.9.0.zip",
      "size": 64867,
      "checksum": "SHA-256:1de52325c4d00ad8dc937601761681a445aa2a4a26f5da3da70ddf2ef9dff2a3"
    },
    {
      "name": "Adafruit IS31FL3731 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the Adafruit IS31FL3731 Charlieplex LED driver and CharliePlex FeatherWing.",
      "paragraph": "Arduino library for the Adafruit IS31FL3731 Charlieplex LED driver and CharliePlex FeatherWing.",
      "website": "https://github.com/adafruit/Adafruit_IS31FL3731",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_IS31FL3731_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_IS31FL3731_Library-1.0.0.zip",
      "size": 5542,
      "checksum": "SHA-256:7245fe84ecb908f050573cbd9532ed132c6f457d90cc6649731ba46b3e9eb26f"
    },
    {
      "name": "Adafruit IS31FL3731 Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the Adafruit IS31FL3731 Charlieplex LED driver and CharliePlex FeatherWing.",
      "paragraph": "Arduino library for the Adafruit IS31FL3731 Charlieplex LED driver and CharliePlex FeatherWing.",
      "website": "https://github.com/adafruit/Adafruit_IS31FL3731",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_IS31FL3731_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_IS31FL3731_Library-1.0.1.zip",
      "size": 5539,
      "checksum": "SHA-256:6ad991f6693a894584d3d5c06bd26f8faa6e8de09563884d438ff5fb383000d8"
    },
    {
      "name": "AutoAnalogAudio",
      "version": "1.0.0",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "Automated analog reads and analog output (streaming) using Arduino Due DAC, ADC and Timers",
      "paragraph": "Plays and records analog (wav/pcm audio) data using onboard DAC and ADC. Timers are adjusted automatically based on the rate of data delivery, to ensure smooth playback.DMA transfers used to maximize efficiency.",
      "website": "https://github.com/TMRh20/AutoAnalogAudio",
      "category": "Signal Input/Output",
      "architectures": [
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/AutoAnalogAudio-1.0.0.zip",
      "archiveFileName": "AutoAnalogAudio-1.0.0.zip",
      "size": 41752,
      "checksum": "SHA-256:b006b22a182cb60fa7a88f13ea4d5313eb975861c2395e9194df77a71c7ff52f"
    },
    {
      "name": "AutoAnalogAudio",
      "version": "1.1.0",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "Automated analog reads and analog output (streaming) using Arduino Due DAC, ADC and Timers",
      "paragraph": "Plays and records analog (wav/pcm audio) data using onboard DAC and ADC. Timers are adjusted automatically based on the rate of data delivery, to ensure smooth playback.DMA transfers used to maximize efficiency.",
      "website": "https://github.com/TMRh20/AutoAnalogAudio",
      "category": "Signal Input/Output",
      "architectures": [
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/AutoAnalogAudio-1.1.0.zip",
      "archiveFileName": "AutoAnalogAudio-1.1.0.zip",
      "size": 42406,
      "checksum": "SHA-256:d46cbd00fd363c37564a43f3e0a61da68c8fe24700173794e438bfd0e228f244"
    },
    {
      "name": "AutoAnalogAudio",
      "version": "1.2.0",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "Automated analog reads and analog output (streaming) using Arduino Due DAC, ADC and Timers",
      "paragraph": "Simplified API for Arduino Due DAC, ADC, Timers \u0026 DMA, designed with radio \u0026 wireless communication in mind. Easily create a wide variety of audio related applications.",
      "website": "https://github.com/TMRh20/AutoAnalogAudio",
      "category": "Signal Input/Output",
      "architectures": [
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/AutoAnalogAudio-1.2.0.zip",
      "archiveFileName": "AutoAnalogAudio-1.2.0.zip",
      "size": 102624900,
      "checksum": "SHA-256:232a433aa7886755285af1a642c97d381fa0074d3a8914d793609ac284f45679"
    },
    {
      "name": "AutoAnalogAudio",
      "version": "1.3.0",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "Automated analog reads and analog output (streaming) using Arduino DAC(or PWM), ADC, DMA and Timers",
      "paragraph": "Simplified API for Arduino DAC, ADC, Timers \u0026 DMA, designed with radio \u0026 wireless communication in mind. Easily create a wide variety of audio related applications.",
      "website": "https://github.com/TMRh20/AutoAnalogAudio",
      "category": "Signal Input/Output",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TMRh20/AutoAnalogAudio-1.3.0.zip",
      "archiveFileName": "AutoAnalogAudio-1.3.0.zip",
      "size": 102633081,
      "checksum": "SHA-256:d4490e0f6b09012ef413c54e2de30a3527a8ecb77ea7c619c5c0a62332a47f21"
    },
    {
      "name": "SparkFun LP55231 Breakout",
      "version": "1.0.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "A library to control the Texas Instruments LP55231 9-channel LED driver.",
      "paragraph": "Provides interface class for LP55231, implementing direct control over LED outputs, as well as a more sophisticated interface to the independent execution engines.",
      "website": "https://github.com/sparkfun/SparkFun_LP55231_Arduino_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_LP55231_Breakout-1.0.0.zip",
      "archiveFileName": "SparkFun_LP55231_Breakout-1.0.0.zip",
      "size": 27263,
      "checksum": "SHA-256:5d4755dd15a47a6dd4288a87df16a50bd79920f747ebfb95b3ebdeaabc99f430"
    },
    {
      "name": "NeoGPS",
      "version": "3.1.1",
      "author": "SlashDevin",
      "maintainer": "SlashDevin",
      "sentence": "NMEA and ublox GPS parser, configurable to use as few as 10 bytes of RAM",
      "paragraph": "Faster and smaller than all other GPS parsers",
      "website": "https://github.com/SlashDevin/NeoGPS",
      "category": "Communication",
      "architectures": [
        "avr",
        "SAMD",
        "SAM"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SlashDevin/NeoGPS-3.1.1.zip",
      "archiveFileName": "NeoGPS-3.1.1.zip",
      "size": 272764,
      "checksum": "SHA-256:39b416a2298655c927a93ff241e48ad7f44906f9e9219993248ab7334bc95419"
    },
    {
      "name": "NeoGPS",
      "version": "3.1.2",
      "author": "SlashDevin",
      "maintainer": "SlashDevin",
      "sentence": "NMEA and ublox GPS parser, configurable to use as few as 10 bytes of RAM",
      "paragraph": "Faster and smaller than all other GPS parsers",
      "website": "https://github.com/SlashDevin/NeoGPS",
      "category": "Communication",
      "architectures": [
        "avr",
        "SAMD",
        "SAM"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SlashDevin/NeoGPS-3.1.2.zip",
      "archiveFileName": "NeoGPS-3.1.2.zip",
      "size": 273322,
      "checksum": "SHA-256:ea27a8f2014e4133171a5d8b98cc0e3f882e2f4fffb790128713c2a18948d095"
    },
    {
      "name": "NeoGPS",
      "version": "4.1.0",
      "author": "SlashDevin",
      "maintainer": "SlashDevin",
      "sentence": "NMEA and ublox GPS parser, configurable to use as few as 10 bytes of RAM",
      "paragraph": "Faster and smaller than all other GPS parsers",
      "website": "https://github.com/SlashDevin/NeoGPS",
      "category": "Communication",
      "architectures": [
        "avr",
        "SAMD",
        "SAM"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SlashDevin/NeoGPS-4.1.0.zip",
      "archiveFileName": "NeoGPS-4.1.0.zip",
      "size": 270854,
      "checksum": "SHA-256:9955d51219fe7e84a0f1c43347682c44524b7f73ebb3224c1cf8a7c206a1912a"
    },
    {
      "name": "NeoGPS",
      "version": "4.1.3",
      "author": "SlashDevin",
      "maintainer": "SlashDevin",
      "sentence": "NMEA and ublox GPS parser, configurable to use as few as 10 bytes of RAM",
      "paragraph": "Faster and smaller than all other GPS parsers",
      "website": "https://github.com/SlashDevin/NeoGPS",
      "category": "Communication",
      "architectures": [
        "avr",
        "samd",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SlashDevin/NeoGPS-4.1.3.zip",
      "archiveFileName": "NeoGPS-4.1.3.zip",
      "size": 271598,
      "checksum": "SHA-256:b5b625b4a1c7bde1b052ec82b2bba066b44fe122e879a969592826105510e0d7"
    },
    {
      "name": "NeoGPS",
      "version": "4.1.7",
      "author": "SlashDevin",
      "maintainer": "SlashDevin",
      "sentence": "NMEA and ublox GPS parser, configurable to use as few as 10 bytes of RAM",
      "paragraph": "Faster and smaller than all other GPS parsers",
      "website": "https://github.com/SlashDevin/NeoGPS",
      "category": "Communication",
      "architectures": [
        "avr",
        "samd",
        "sam",
        "esp8266",
        "arc32"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SlashDevin/NeoGPS-4.1.7.zip",
      "archiveFileName": "NeoGPS-4.1.7.zip",
      "size": 280328,
      "checksum": "SHA-256:928e52a4cdba36fac9c5d88d6ccbd62443410aff54b8fa2a7d7ef8e4dfc7b950"
    },
    {
      "name": "HamShield",
      "version": "1.0.5",
      "author": "Morgan Redfield \u003cmorgan@enhancedradio.com\u003e, Casey Halverson \u003ccasey@enhancedradio.com\u003e",
      "maintainer": "Morgan Redfield \u003cmorgan@enhancedradio.com\u003e",
      "sentence": "A library for use with HamShield by Enhanced Radio Devices.",
      "website": "http://www.hamshield.com",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/EnhancedRadioDevices/HamShield-1.0.5.zip",
      "archiveFileName": "HamShield-1.0.5.zip",
      "size": 384668,
      "checksum": "SHA-256:86e8b9190453b6c532f0f8168db3d3a534e8e013e3dd8465c14b05c8f25f993c"
    },
    {
      "name": "HamShield",
      "version": "1.0.2",
      "author": "Morgan Redfield \u003cmorgan@enhancedradio.com\u003e, Casey Halverson \u003ccasey@enhancedradio.com\u003e",
      "maintainer": "Morgan Redfield \u003cmorgan@enhancedradio.com\u003e",
      "sentence": "A library for use with HamShield by Enhanced Radio Devices.",
      "website": "http://www.hamshield.com",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/EnhancedRadioDevices/HamShield-1.0.2.zip",
      "archiveFileName": "HamShield-1.0.2.zip",
      "size": 383244,
      "checksum": "SHA-256:b8d505e52915d867011ce467c40720dde262c459d9197d144d6494e794656f62"
    },
    {
      "name": "HamShield",
      "version": "1.0.3",
      "author": "Morgan Redfield \u003cmorgan@enhancedradio.com\u003e, Casey Halverson \u003ccasey@enhancedradio.com\u003e",
      "maintainer": "Morgan Redfield \u003cmorgan@enhancedradio.com\u003e",
      "sentence": "A library for use with HamShield by Enhanced Radio Devices.",
      "website": "http://www.hamshield.com",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/EnhancedRadioDevices/HamShield-1.0.3.zip",
      "archiveFileName": "HamShield-1.0.3.zip",
      "size": 384229,
      "checksum": "SHA-256:a94be4e9313e4062ffe0dfdcbc3e13db86c7b5af76cab375099ec06eba7163f5"
    },
    {
      "name": "HamShield",
      "version": "1.0.4",
      "author": "Morgan Redfield \u003cmorgan@enhancedradio.com\u003e, Casey Halverson \u003ccasey@enhancedradio.com\u003e",
      "maintainer": "Morgan Redfield \u003cmorgan@enhancedradio.com\u003e",
      "sentence": "A library for use with HamShield by Enhanced Radio Devices.",
      "website": "http://www.hamshield.com",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/EnhancedRadioDevices/HamShield-1.0.4.zip",
      "archiveFileName": "HamShield-1.0.4.zip",
      "size": 384637,
      "checksum": "SHA-256:21257f28aec931ec435fac492e0cb0b939c6ec05097b65052e00488e8ece9235"
    },
    {
      "name": "HamShield_KISS",
      "version": "1.0.2",
      "author": "Morgan Redfield \u003cmorgan@enhancedradio.com\u003e, Casey Halverson \u003ccasey@enhancedradio.com\u003e",
      "maintainer": "Morgan Redfield \u003cmorgan@enhancedradio.com\u003e",
      "sentence": "A library for use with HamShield by Enhanced Radio Devices.",
      "paragraph": "See the HamShield library by Enhanced Radio Devices for examples.",
      "website": "http://www.hamshield.com",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/EnhancedRadioDevices/HamShield_KISS-1.0.2.zip",
      "archiveFileName": "HamShield_KISS-1.0.2.zip",
      "size": 25756,
      "checksum": "SHA-256:89c0c705fe36322755cbf5d2d299613d01d6a06f07e6eb831af9fe9593256d57"
    },
    {
      "name": "HamShield_KISS",
      "version": "1.0.3",
      "author": "Morgan Redfield \u003cmorgan@enhancedradio.com\u003e, Casey Halverson \u003ccasey@enhancedradio.com\u003e",
      "maintainer": "Morgan Redfield \u003cmorgan@enhancedradio.com\u003e",
      "sentence": "A library for use with HamShield by Enhanced Radio Devices.",
      "paragraph": "See the HamShield library by Enhanced Radio Devices for examples.",
      "website": "http://www.hamshield.com",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/EnhancedRadioDevices/HamShield_KISS-1.0.3.zip",
      "archiveFileName": "HamShield_KISS-1.0.3.zip",
      "size": 25597,
      "checksum": "SHA-256:1ecaae0d44780c6914e5bfdc6070e32882d9cc34b11b737b24dc9b12c753cc2a"
    },
    {
      "name": "HamShield_KISS",
      "version": "1.0.4",
      "author": "Morgan Redfield \u003cmorgan@enhancedradio.com\u003e, Casey Halverson \u003ccasey@enhancedradio.com\u003e",
      "maintainer": "Morgan Redfield \u003cmorgan@enhancedradio.com\u003e",
      "sentence": "A library for use with HamShield by Enhanced Radio Devices.",
      "paragraph": "See the HamShield library by Enhanced Radio Devices for examples.",
      "website": "http://www.hamshield.com",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/EnhancedRadioDevices/HamShield_KISS-1.0.4.zip",
      "archiveFileName": "HamShield_KISS-1.0.4.zip",
      "size": 25606,
      "checksum": "SHA-256:7cce51dced75d3a52479e0f084a1e54b03a2f167d2f4aaa88638eb26122ef687"
    },
    {
      "name": "DDS",
      "version": "1.0.2",
      "author": "Morgan Redfield \u003cmorgan@enhancedradio.com\u003e, Casey Halverson \u003ccasey@enhancedradio.com\u003e",
      "maintainer": "Morgan Redfield \u003cmorgan@enhancedradio.com\u003e",
      "sentence": "A library for use with HamShield by Enhanced Radio Devices.",
      "website": "http://www.hamshield.com",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/EnhancedRadioDevices/DDS-1.0.2.zip",
      "archiveFileName": "DDS-1.0.2.zip",
      "size": 19458,
      "checksum": "SHA-256:9a6f034a297b744e547f0cc29a73f595fcf33eaf2a503d873888b42b257d2e5e"
    },
    {
      "name": "CayenneMQTT",
      "version": "1.0.0",
      "author": "myDevices",
      "maintainer": "myDevices",
      "sentence": "Connect a device to the Cayenne dashboard using MQTT.",
      "paragraph": "The Cayenne MQTT Arduino Library provides functions to easily connect to the Cayenne IoT project builder. This library bundles the Eclipse Paho MQTT C/C++ client library for MQTT support. http://www.cayenne-mydevices.com/",
      "website": "http://www.cayenne-mydevices.com/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/myDevicesIoT/CayenneMQTT-1.0.0.zip",
      "archiveFileName": "CayenneMQTT-1.0.0.zip",
      "size": 85361,
      "checksum": "SHA-256:eb2467c4f76977a1a4d6661595cc5788ae06c697d4bad51df7da549efde726da"
    },
    {
      "name": "Volume 3",
      "version": "1.0.0",
      "author": "Connor Nishijima",
      "maintainer": "Connor Nishijima \u003cconnornishijima@gmail.com\u003e",
      "sentence": "Gives tone functionality with 10-bit volume control with no extra parts!",
      "paragraph": "Using ultrasonic PWM frequencies, you can now generate square wave tones at any frequency - and 1023 smooth volume levels - with no extra parts!",
      "website": "https://github.com/connornishijima/arduino-volume3",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/connornishijima/Volume_3-1.0.0.zip",
      "archiveFileName": "Volume_3-1.0.0.zip",
      "size": 24819,
      "checksum": "SHA-256:38459a8fd840415585226cc841f2d947788cefea8cc92bc6085e88ac3162d4e7"
    },
    {
      "name": "MySensors",
      "version": "2.0.0",
      "author": "The MySensors Team",
      "maintainer": "The MySensors Team",
      "sentence": "Home Automation Framework",
      "paragraph": "Create your own wireless sensor mesh using NRF24L01+ and RFM69 radios running on Arduino or ESP8266. Over-the-air updates and MySensors support in 16+ home automation controllers.",
      "website": "http://www.mysensors.org",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mysensors/MySensors-2.0.0.zip",
      "archiveFileName": "MySensors-2.0.0.zip",
      "size": 821525,
      "checksum": "SHA-256:045090bd93ad76eb32d565834c189fdf6a0401f60a079f77b7d5996b18899056"
    },
    {
      "name": "MySensors",
      "version": "2.1.0",
      "author": "The MySensors Team",
      "maintainer": "The MySensors Team",
      "sentence": "Home Automation Framework",
      "paragraph": "Create your own wireless sensor mesh using NRF24L01+, RFM69 and RFM95 radios running on Arduino, SAMD and ESP8266. Allows over-the-air updates of nodes. Supported by 20+ home automation controllers.",
      "website": "https://www.mysensors.org",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mysensors/MySensors-2.1.0.zip",
      "archiveFileName": "MySensors-2.1.0.zip",
      "size": 862634,
      "checksum": "SHA-256:69d66de26c6c88ae6fde18c4bd119da2a70576742d56c8ef0d2b2b5aa3a4e301"
    },
    {
      "name": "MySensors",
      "version": "2.1.1",
      "author": "The MySensors Team",
      "maintainer": "The MySensors Team",
      "sentence": "Home Automation Framework",
      "paragraph": "Create your own wireless sensor mesh using NRF24L01+, RFM69 and RFM95 radios running on Arduino, SAMD and ESP8266. Allows over-the-air updates of nodes. Supported by 20+ home automation controllers.",
      "website": "https://www.mysensors.org",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mysensors/MySensors-2.1.1.zip",
      "archiveFileName": "MySensors-2.1.1.zip",
      "size": 872895,
      "checksum": "SHA-256:ea3e4a7b3eceb9a108d33199ca75ac4caffc70fe9fa35193b479b29c7caaf565"
    },
    {
      "name": "PCA9536_RGB",
      "version": "1.0.0",
      "author": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "maintainer": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "sentence": "PCA9536 RGB LED Driver",
      "paragraph": "This library provides an API for controlling a single RGB Led (Common-Cathode or Common-Anode) via the I2C Bus. Communication between the Arduino (master) and the RGB Led (slave) is handled by the PCA9536, a 4-Channel I2C GPIO (General Purpose I/O) Expander. The basis of the current API comes from the PCA9536 Library (https://github.com/nadavmatalon/PCA9536), which is expanded here to include the relevant functions, including: Turning on a specific color (or all colors) on and off, Toggling a color, and an independent Blinking functionality for each color which doesn't make use of delays and therefore does not interrupt other routines running simultaniously in the code.",
      "website": "https://github.com/nadavmatalon/PCA9536_RGB",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nadavmatalon/PCA9536_RGB-1.0.0.zip",
      "archiveFileName": "PCA9536_RGB-1.0.0.zip",
      "size": 32287,
      "checksum": "SHA-256:5285b1c653b5e8fd73f15a820a94fa116d1ce1061670f87b046e2ac5c8d20e66"
    },
    {
      "name": "PCA9536_RGB",
      "version": "1.1.0",
      "author": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "maintainer": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "sentence": "PCA9536 RGB LED Driver",
      "paragraph": "This library provides an API for controlling a single RGB Led (Common-Cathode or Common-Anode) via the I2C Bus. Communication between the Arduino (master) and the RGB Led (slave) is handled by the PCA9536, a 4-Channel I2C GPIO (General Purpose I/O) Expander. The basis of the current API comes from the PCA9536 Library (https://github.com/nadavmatalon/PCA9536), which is expanded here to include the relevant functions, including: Turning on a specific color (or all colors) on and off, Toggling a color, and an independent Blinking functionality for each color which doesn't make use of delays and therefore does not interrupt other routines running simultaniously in the code.",
      "website": "https://github.com/nadavmatalon/PCA9536_RGB",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nadavmatalon/PCA9536_RGB-1.1.0.zip",
      "archiveFileName": "PCA9536_RGB-1.1.0.zip",
      "size": 34637,
      "checksum": "SHA-256:d146d88604997aecb2fd0f3b2dd635b57d1bfbb8c55912d7ae28cbf9c5b73a43"
    },
    {
      "name": "PCA9536_RGB",
      "version": "1.2.0",
      "author": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "maintainer": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "sentence": "PCA9536 RGB LED Driver",
      "paragraph": "This library provides an API for controlling a single RGB Led (Common-Cathode or Common-Anode) via the I2C Bus. Communication between the Arduino (master) and the RGB Led (slave) is handled by the PCA9536, a 4-Channel I2C GPIO (General Purpose I/O) Expander. The basis of the current API comes from the PCA9536 Library (https://github.com/nadavmatalon/PCA9536), which is expanded here to include the relevant functions, including: Turning on a specific color (or all colors) on and off, Toggling a color, and an independent Blinking functionality for each color which doesn't make use of delays and therefore does not interrupt other routines running simultaniously in the code.",
      "website": "https://github.com/nadavmatalon/PCA9536_RGB",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nadavmatalon/PCA9536_RGB-1.2.0.zip",
      "archiveFileName": "PCA9536_RGB-1.2.0.zip",
      "size": 40005,
      "checksum": "SHA-256:0a9e175bf04b7995538390a5b387bec83c43cdbceb87203560d9e336f9918eb3"
    },
    {
      "name": "Gamebuino",
      "version": "0.4.0",
      "author": "Aurelien Rodot",
      "maintainer": "Aurelien Rodot \u003crodot@gamebuino.com\u003e",
      "sentence": "Create your own games on a fun and retro console.",
      "paragraph": "See more on http://gamebuino.com",
      "website": "https://github.com/Rodot/Gamebuino",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Rodot/Gamebuino-0.4.0.zip",
      "archiveFileName": "Gamebuino-0.4.0.zip",
      "size": 96496,
      "checksum": "SHA-256:bd04a9ab4c1f06848b45a3d7868c3494981ad687675556b26fd86597211fb1ee"
    },
    {
      "name": "Automaton-Esp8266",
      "version": "0.1.0",
      "author": "Tinkerspy \u003ctinkerspy@myown.mailcan.com\u003e",
      "maintainer": "Tinkerspy \u003ctinkerspy@myown.mailcan.com\u003e",
      "sentence": "Esp8266 State Machines for the Automaton Framework",
      "paragraph": "Esp8266 State Machines for the Automaton Framework",
      "website": "https://github.com/tinkerspy/Automaton-Esp8266",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/tinkerspy/Automaton_Esp8266-0.1.0.zip",
      "archiveFileName": "Automaton_Esp8266-0.1.0.zip",
      "size": 15086,
      "checksum": "SHA-256:81bd2a5665cbf8721ca876b3fc1f81fd8017d65e1c66a8217180675b7d542f18"
    },
    {
      "name": "FanController",
      "version": "0.1.0",
      "author": "Giorgio Aresu \u003cgiorgioaresu@gmail.com\u003e",
      "maintainer": "Giorgio Aresu \u003cgiorgioaresu@gmail.com\u003e",
      "sentence": "Arduino Library for controlling PC fans",
      "paragraph": "Supports 3 pins and 4 pins (PWM) fans",
      "website": "https://github.com/GiorgioAresu/FanController",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/GiorgioAresu/FanController-0.1.0.zip",
      "archiveFileName": "FanController-0.1.0.zip",
      "size": 4230,
      "checksum": "SHA-256:8a8a95bf91f271d6522060be6bacb60a924bdbaef9aded7dd67ce5d7d2445ab2"
    },
    {
      "name": "FanController",
      "version": "0.1.1",
      "author": "Giorgio Aresu \u003cgiorgioaresu@gmail.com\u003e",
      "maintainer": "Giorgio Aresu \u003cgiorgioaresu@gmail.com\u003e",
      "sentence": "Arduino Library for controlling PC fans",
      "paragraph": "Supports 3 pins and 4 pins (PWM) fans",
      "website": "https://github.com/GiorgioAresu/FanController",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/GiorgioAresu/FanController-0.1.1.zip",
      "archiveFileName": "FanController-0.1.1.zip",
      "size": 4237,
      "checksum": "SHA-256:ffeda9a5f2fb7e58b58e42b328939d8311f5cb7652c9deae51df4ad98dc117af"
    },
    {
      "name": "FanController",
      "version": "0.1.4",
      "author": "Giorgio Aresu \u003cgiorgioaresu@gmail.com\u003e",
      "maintainer": "Giorgio Aresu \u003cgiorgioaresu@gmail.com\u003e",
      "sentence": "Arduino Library for controlling PC fans",
      "paragraph": "Supports 3 pins and 4 pins (PWM) fans",
      "website": "https://github.com/GiorgioAresu/FanController",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/GiorgioAresu/FanController-0.1.4.zip",
      "archiveFileName": "FanController-0.1.4.zip",
      "size": 4318,
      "checksum": "SHA-256:4b7e1af0e1f8821d8d47bcd7927a28fd43cb67b2ff2d6adb7167c7a6973cd01a"
    },
    {
      "name": "FanController",
      "version": "1.0.0",
      "author": "Giorgio Aresu \u003cgiorgioaresu@gmail.com\u003e",
      "maintainer": "Giorgio Aresu \u003cgiorgioaresu@gmail.com\u003e",
      "sentence": "Arduino Library for controlling PC fans",
      "paragraph": "Supports 3 pins and 4 pins (PWM) fans",
      "website": "https://github.com/GiorgioAresu/FanController",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/GiorgioAresu/FanController-1.0.0.zip",
      "archiveFileName": "FanController-1.0.0.zip",
      "size": 5553,
      "checksum": "SHA-256:e3b5ebec8341a499a7d49229b7bcbd8a93541cc1d3023634ce5430e59e9cbe2a"
    },
    {
      "name": "FanController",
      "version": "1.0.1",
      "author": "Giorgio Aresu \u003cgiorgioaresu@gmail.com\u003e",
      "maintainer": "Giorgio Aresu \u003cgiorgioaresu@gmail.com\u003e",
      "sentence": "Arduino Library for controlling PC fans",
      "paragraph": "Supports 3 pins and 4 pins (PWM) fans",
      "website": "https://github.com/GiorgioAresu/FanController",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/GiorgioAresu/FanController-1.0.1.zip",
      "archiveFileName": "FanController-1.0.1.zip",
      "size": 5557,
      "checksum": "SHA-256:ca2e8a178e499264630c130bd5761ce4e5216b0b18156bb1bf2de5bcec0cb5fa"
    },
    {
      "name": "Stepper_28BYJ_48",
      "version": "1.0.0",
      "author": "Thomas O Fredericks",
      "maintainer": "Thomas O Fredericks (tof@t-o-f.info)",
      "sentence": "Stepper Library for 5V Stepper Motors 28BYJ-48 with ULN2003 Driver",
      "paragraph": "Stepper Library for 5V Stepper Motors 28BYJ-48 with ULN2003 Driver",
      "website": "https://github.com/thomasfredericks/Stepper_28BYJ_48/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thomasfredericks/Stepper_28BYJ_48-1.0.0.zip",
      "archiveFileName": "Stepper_28BYJ_48-1.0.0.zip",
      "size": 328347,
      "checksum": "SHA-256:c271b6bb219bdb3ae80c6dd9b4b71b9d32840ba4897e995e33c0b039362edc4d"
    },
    {
      "name": "keybrd",
      "version": "0.5.0",
      "author": "Wolfram Volpi",
      "maintainer": "Wolfram Volpi",
      "sentence": "A library for creating custom-keyboard firmware.",
      "paragraph": "\u003cbr\u003eCreate keyboards with any configuration:\u003cbr\u003eone-piece, split with I/O expander, single-layer, multiple-layer",
      "website": "https://github.com/wolfv6/keybrd",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/wolfv6/keybrd-0.5.0.zip",
      "archiveFileName": "keybrd-0.5.0.zip",
      "size": 1019315,
      "checksum": "SHA-256:5620d6d2588ce03938bd20ca1d34f9e63126fb32394a5fc83ae5158a83889441"
    },
    {
      "name": "keybrd",
      "version": "0.6.3",
      "author": "Wolfram Volpi",
      "maintainer": "Wolfram Volpi",
      "sentence": "A library for creating custom-keyboard firmware.",
      "paragraph": "\u003cbr\u003eSupports split keyboard and multiple-layer configurations.",
      "website": "https://github.com/wolfv6/keybrd",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/wolfv6/keybrd-0.6.3.zip",
      "archiveFileName": "keybrd-0.6.3.zip",
      "size": 4895624,
      "checksum": "SHA-256:eca69114d5b8e84942a59d56ef7cc679aaf141150c8e756d4581e5f1a6178194"
    },
    {
      "name": "keybrd",
      "version": "0.6.6",
      "author": "Wolfram Volpi",
      "maintainer": "Wolfram Volpi",
      "sentence": "A library for creating custom-keyboard firmware.",
      "paragraph": "\u003cbr\u003eSupports split keyboard and multiple-layer configurations.",
      "website": "https://github.com/wolfv6/keybrd",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/wolfv6/keybrd-0.6.6.zip",
      "archiveFileName": "keybrd-0.6.6.zip",
      "size": 4400473,
      "checksum": "SHA-256:83157707a54d5809cb019272b9f77f99b6dc2d290b3a727e3981115d23453de7"
    },
    {
      "name": "keybrd",
      "version": "0.6.7",
      "author": "Wolfram Volpi",
      "maintainer": "Wolfram Volpi",
      "sentence": "A library for creating custom-keyboard firmware.",
      "paragraph": "\u003cbr\u003eSupports split keyboard and multiple-layer configurations.",
      "website": "https://github.com/wolfv6/keybrd",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/wolfv6/keybrd-0.6.7.zip",
      "archiveFileName": "keybrd-0.6.7.zip",
      "size": 5415575,
      "checksum": "SHA-256:572379291165250de4a5aa286af610500052743e3d41fa0f7571eb9e0b737cdb"
    },
    {
      "name": "SomeSerial",
      "version": "1.0.0",
      "author": "Asuki Kono",
      "maintainer": "Asuki Kono",
      "sentence": "A library to wrap HardwareSerial, SoftwareSerial or USBAPI Serial_.",
      "paragraph": "It can call streaming methods even if it is HardwareSerial, SoftwareSerial or USBAPI Serial_.",
      "website": "https://github.com/asukiaaa/SomeSerial",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/asukiaaa/SomeSerial-1.0.0.zip",
      "archiveFileName": "SomeSerial-1.0.0.zip",
      "size": 3438,
      "checksum": "SHA-256:89dd06ed1d426167cb856dd8d892ea0053c35dd031379db42e19ca3668c52aeb"
    },
    {
      "name": "simpleDSTadjust",
      "version": "1.0.0",
      "author": "neptune2",
      "maintainer": "neptune2",
      "sentence": "Automatic Daylight Saving Time adjust functionality for Arduino/ESP8266",
      "paragraph": "Universal rule based automatic Daylight Saving Time adjust library that implements DST aware version of the esp8266 time() function.",
      "website": "https://github.com/neptune2/simpleDSTadjust",
      "category": "Timing",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/neptune2/simpleDSTadjust-1.0.0.zip",
      "archiveFileName": "simpleDSTadjust-1.0.0.zip",
      "size": 7246,
      "checksum": "SHA-256:1be09d799f4f138de25e6129438685b716cc7921dfc67395b2a2a21beb9455c7"
    },
    {
      "name": "simpleDSTadjust",
      "version": "1.1.0",
      "author": "neptune2",
      "maintainer": "neptune2",
      "sentence": "Automatic Daylight Saving Time adjust functionality for Arduino/ESP8266",
      "paragraph": "Universal rule based automatic Daylight Saving Time adjust library that implements DST aware version of the esp8266 time() function.",
      "website": "https://github.com/neptune2/simpleDSTadjust",
      "category": "Timing",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/neptune2/simpleDSTadjust-1.1.0.zip",
      "archiveFileName": "simpleDSTadjust-1.1.0.zip",
      "size": 7241,
      "checksum": "SHA-256:1ba93c6c4783e3e0615eb6bce43f7351c79b5bd2fef5a2b101710a4d0ffd2a11"
    },
    {
      "name": "simpleDSTadjust",
      "version": "1.2.0",
      "author": "neptune2",
      "maintainer": "neptune2",
      "sentence": "Automatic Daylight Saving Time adjust functionality for Arduino/ESP8266",
      "paragraph": "Universal rule based automatic Daylight Saving Time adjust library that implements DST aware version of the esp8266 time() function.",
      "website": "https://github.com/neptune2/simpleDSTadjust",
      "category": "Timing",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/neptune2/simpleDSTadjust-1.2.0.zip",
      "archiveFileName": "simpleDSTadjust-1.2.0.zip",
      "size": 7237,
      "checksum": "SHA-256:7ec597828bf6afcef1791b811d53a37b9850381075c2ed02333c52e67b2f6ca7"
    },
    {
      "name": "ShiftDisplay",
      "version": "1.0.0",
      "author": "Pyntoo",
      "maintainer": "Pyntoo \u003cr.pynto@gmail.com\u003e",
      "sentence": "Arduino library for driving multiple digit 7-segment displays using shift registers",
      "paragraph": "Arduino library for driving multiple digit 7-segment displays using shift registers",
      "website": "https://github.com/Pyntoo/ShiftDisplay/",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MiguelPynto/ShiftDisplay-1.0.0.zip",
      "archiveFileName": "ShiftDisplay-1.0.0.zip",
      "size": 474439,
      "checksum": "SHA-256:d72650eac8e038871a2fb0389b3ab67ae89643d3087ce0c6fbbb16c2d2587e3c"
    },
    {
      "name": "ShiftDisplay",
      "version": "2.0.0",
      "author": "Pyntoo",
      "maintainer": "Pyntoo \u003cr.pynto@gmail.com\u003e",
      "sentence": "Arduino library for driving multiple digit 7-segment displays using shift registers",
      "paragraph": "Arduino library for driving multiple digit 7-segment displays using shift registers",
      "website": "https://github.com/Pyntoo/ShiftDisplay/",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MiguelPynto/ShiftDisplay-2.0.0.zip",
      "archiveFileName": "ShiftDisplay-2.0.0.zip",
      "size": 478047,
      "checksum": "SHA-256:0e8a7735bba750c379e523ad549e274d38ae73af5e78895174666feb3d4ac4c8"
    },
    {
      "name": "ShiftDisplay",
      "version": "3.0.0",
      "author": "Miguel Pynto \u003cmiguel@pynto.me\u003e",
      "maintainer": "Miguel Pynto \u003cmiguel@pynto.me\u003e",
      "sentence": "Arduino library for driving multiple-digit 7-segment LED displays using 74HC595 shift registers.",
      "paragraph": "Show numbers and text. Concatenate multiple displays as one, for a maximum of 8 digits. Compatible with common cathode and common anode. Only 3 pins used on Arduino.",
      "website": "https://github.com/MiguelPynto/ShiftDisplay",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MiguelPynto/ShiftDisplay-3.0.0.zip",
      "archiveFileName": "ShiftDisplay-3.0.0.zip",
      "size": 427458,
      "checksum": "SHA-256:551e61f7ce0a67f259b40c2a6fd1e42980deb5f2ce0a40ccd68cc852b32fa455"
    },
    {
      "name": "ShiftDisplay",
      "version": "3.2.1",
      "author": "Miguel Pynto \u003cmiguel@pynto.me\u003e",
      "maintainer": "Miguel Pynto \u003cmiguel@pynto.me\u003e",
      "sentence": "Arduino library for driving multiple-digit 7-segment LED displays using 74HC595 shift registers.",
      "paragraph": "Show numbers and text. Concatenate multiple displays as one, for a maximum of 8 digits. Compatible with common cathode and common anode. Only 3 pins used on Arduino.",
      "website": "https://github.com/MiguelPynto/ShiftDisplay",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MiguelPynto/ShiftDisplay-3.2.1.zip",
      "archiveFileName": "ShiftDisplay-3.2.1.zip",
      "size": 429107,
      "checksum": "SHA-256:469edf5ab05e9135167329e8917972f2443c35b4be826e2e4d66623f904191d1"
    },
    {
      "name": "ShiftDisplay",
      "version": "3.2.2",
      "author": "Miguel Pynto \u003cmiguel@pynto.me\u003e",
      "maintainer": "Miguel Pynto \u003cmiguel@pynto.me\u003e",
      "sentence": "Arduino library for driving multiple-digit 7-segment LED displays using 74HC595 shift registers.",
      "paragraph": "Show numbers and text. Concatenate multiple displays as one, for a maximum of 8 digits. Compatible with common cathode and common anode. Only 3 pins used on Arduino.",
      "website": "http://pynto.me/ShiftDisplay/",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MiguelPynto/ShiftDisplay-3.2.2.zip",
      "archiveFileName": "ShiftDisplay-3.2.2.zip",
      "size": 429045,
      "checksum": "SHA-256:1279599091d30f6337bad7a370ac155ff7cadf4a67f60c03148f2532b2497064"
    },
    {
      "name": "ShiftDisplay",
      "version": "3.2.3",
      "author": "Miguel Pynto \u003cmiguel@pynto.me\u003e",
      "maintainer": "Miguel Pynto \u003cmiguel@pynto.me\u003e",
      "sentence": "Arduino library for driving multiple-digit 7-segment LED displays using 74HC595 shift registers.",
      "paragraph": "Show numbers and text. Concatenate multiple displays as one, for a maximum of 8 digits. Compatible with common cathode and common anode. Only 3 pins used on Arduino.",
      "website": "http://pynto.me/ShiftDisplay/",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MiguelPynto/ShiftDisplay-3.2.3.zip",
      "archiveFileName": "ShiftDisplay-3.2.3.zip",
      "size": 428933,
      "checksum": "SHA-256:4c1e9753a250d34acb46f1b449f15d2d82fc867ef7bf9ecae1db02a462b2cabc"
    },
    {
      "name": "ShiftDisplay",
      "version": "3.3.0",
      "author": "Miguel Pynto \u003cmiguel@pynto.me\u003e",
      "maintainer": "Miguel Pynto \u003cmiguel@pynto.me\u003e",
      "sentence": "Arduino library for driving multiple-digit 7-segment LED displays using 74HC595 shift registers.",
      "paragraph": "Show numbers and text. Concatenate multiple displays as one, for a maximum of 8 digits. Compatible with common cathode and common anode. Only 3 pins used on Arduino.",
      "website": "http://pynto.me/ShiftDisplay/",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MiguelPynto/ShiftDisplay-3.3.0.zip",
      "archiveFileName": "ShiftDisplay-3.3.0.zip",
      "size": 429600,
      "checksum": "SHA-256:fff4f2e053a1ee58026ebacc06f11f1d0d361d62cdc4fdd50eceef6694f69421"
    },
    {
      "name": "ShiftDisplay",
      "version": "3.3.1",
      "author": "Miguel Pynto \u003cmiguel@pynto.me\u003e",
      "maintainer": "Miguel Pynto \u003cmiguel@pynto.me\u003e",
      "sentence": "Arduino library for driving multiple-digit 7-segment LED displays using 74HC595 shift registers.",
      "paragraph": "Show numbers and text. Concatenate multiple displays as one, for a maximum of 8 digits. Compatible with common cathode and common anode. Only 3 pins used on Arduino.",
      "website": "http://pynto.me/ShiftDisplay/",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MiguelPynto/ShiftDisplay-3.3.1.zip",
      "archiveFileName": "ShiftDisplay-3.3.1.zip",
      "size": 429684,
      "checksum": "SHA-256:180e6730d768ef8cd39ce46c6b4c7a8df0ae138c5358b7832ab041ee77fb322e"
    },
    {
      "name": "ShiftDisplay",
      "version": "3.3.2",
      "author": "Miguel Pynto \u003cmiguel@pynto.me\u003e",
      "maintainer": "Miguel Pynto \u003cmiguel@pynto.me\u003e",
      "sentence": "Arduino library for driving multiple-digit 7-segment LED displays using 74HC595 shift registers.",
      "paragraph": "Show numbers and text. Concatenate multiple displays as one, for a maximum of 8 digits. Compatible with common cathode and common anode. Only 3 pins used on Arduino.",
      "website": "http://pynto.me/ShiftDisplay/",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MiguelPynto/ShiftDisplay-3.3.2.zip",
      "archiveFileName": "ShiftDisplay-3.3.2.zip",
      "size": 429939,
      "checksum": "SHA-256:b5d896a269a2d7f690ec632acd8ed682eb6313a1b550972886a015000016f7d5"
    },
    {
      "name": "ShiftDisplay",
      "version": "3.3.3",
      "author": "MiguelPynto \u003cmiguelpynto@outlook.com\u003e",
      "maintainer": "MiguelPynto \u003cmiguelpynto@outlook.com\u003e",
      "sentence": "Arduino library for driving multiple-digit 7-segment LED displays using 74HC595 shift registers.",
      "paragraph": "Show numbers and text. Concatenate multiple displays as one, for a maximum of 8 digits. Compatible with common cathode and common anode. Only 3 pins used on Arduino.",
      "website": "https://miguelpynto.github.io/ShiftDisplay/",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MiguelPynto/ShiftDisplay-3.3.3.zip",
      "archiveFileName": "ShiftDisplay-3.3.3.zip",
      "size": 430047,
      "checksum": "SHA-256:9cc651ecc920a883ab7c24701e67cde5e37e2e3fd90431be8f77fb8f41b321b1"
    },
    {
      "name": "RingBufCPP",
      "version": "1.0.0",
      "author": "D. Aaron Wisner (daw268@cornell.edu)",
      "maintainer": "D. Aaron Wisner (daw268@cornell.edu)",
      "sentence": "A library for buffering items into a ring (circular/FIFO) buffer",
      "paragraph": "This library is perfect for capturing pin states, timestamps, etc.. during an ISR. Then in void loop(), the buffer can be asynchronously processed whenever your program has free time.",
      "website": "https://github.com/wizard97/ArduinoRingBuffer",
      "category": "Data Storage",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/wizard97/RingBufCPP-1.0.0.zip",
      "archiveFileName": "RingBufCPP-1.0.0.zip",
      "size": 5312,
      "checksum": "SHA-256:58bbf7d11f48169edf57c95f403f9f65cd2b37a1a96dd0b2810594c7702bb6e2"
    },
    {
      "name": "RingBufCPP",
      "version": "1.1.0",
      "author": "D. Aaron Wisner (daw268@cornell.edu)",
      "maintainer": "D. Aaron Wisner (daw268@cornell.edu)",
      "sentence": "A library for buffering items into a ring (circular/FIFO) buffer",
      "paragraph": "This library is perfect for capturing pin states, timestamps, etc.. during an ISR. Then in void loop(), the buffer can be asynchronously processed whenever your program has free time.",
      "website": "https://github.com/wizard97/ArduinoRingBuffer",
      "category": "Data Storage",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/wizard97/RingBufCPP-1.1.0.zip",
      "archiveFileName": "RingBufCPP-1.1.0.zip",
      "size": 6605,
      "checksum": "SHA-256:08b5062238a12c10030764c82aae2beba8cf1e6822102d1327ad372c28c64005"
    },
    {
      "name": "rc-switch",
      "version": "2.6.0",
      "author": "sui77",
      "maintainer": "sui77,fingolfin \u003cnoreply@sui.li\u003e",
      "sentence": "Operate 433/315Mhz devices.",
      "paragraph": "Use your Arduino or Raspberry Pi to operate remote radio controlled devices. This will most likely work with all popular low cost power outlet sockets.",
      "website": "https://github.com/sui77/rc-switch",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sui77/rc_switch-2.6.0.zip",
      "archiveFileName": "rc_switch-2.6.0.zip",
      "size": 17346,
      "checksum": "SHA-256:258010cdcf7d7b93bd7040c3eea1e437a635d44001c0073be68d6d1d1a9024d1"
    },
    {
      "name": "rc-switch",
      "version": "2.6.2",
      "author": "sui77",
      "maintainer": "sui77,fingolfin \u003cnoreply@sui.li\u003e",
      "sentence": "Operate 433/315Mhz devices.",
      "paragraph": "Use your Arduino or Raspberry Pi to operate remote radio controlled devices. This will most likely work with all popular low cost power outlet sockets.",
      "website": "https://github.com/sui77/rc-switch",
      "category": "Device Control",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sui77/rc_switch-2.6.2.zip",
      "archiveFileName": "rc_switch-2.6.2.zip",
      "size": 17342,
      "checksum": "SHA-256:56a14f71ebafff1e95cc66b94b3df3958d00d12fc5c80bc785f8932a2a1c0c90"
    },
    {
      "name": "LocoNet",
      "version": "1.0.1",
      "author": "Alex Shepherd, John Plocher, Damian Philipp, Tom Knox",
      "maintainer": "Alex Shepherd \u003ckiwi64ajs@gmail.com\u003e",
      "sentence": "Enables Digitrax LocoNet Communication",
      "paragraph": "This library allows you to interface to a LocoNet network and send/receive LocoNet commands. The library currently supports the AVR ATTiny84 \u0026 ATMega88/168/328/32u4 using the 16-Bit Timer1 and ICP1. It also supports the Mega2560 using Timer5 and ICP5",
      "website": "http://mrrwa.org/loconet-interface/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrrwa/LocoNet-1.0.1.zip",
      "archiveFileName": "LocoNet-1.0.1.zip",
      "size": 67813,
      "checksum": "SHA-256:a772f3febed6b2c948551ff30728fdf327a6c7fa73f2b8bdf601acac70f45a89"
    },
    {
      "name": "LocoNet",
      "version": "1.0.2",
      "author": "Alex Shepherd, John Plocher, Damian Philipp, Tom Knox",
      "maintainer": "Alex Shepherd \u003ckiwi64ajs@gmail.com\u003e",
      "sentence": "Enables Digitrax LocoNet Communication",
      "paragraph": "This library allows you to interface to a LocoNet network and send/receive LocoNet commands. The library currently supports the AVR ATTiny84 \u0026 ATMega88/168/328/32u4 using the 16-Bit Timer1 and ICP1. It also supports the Mega2560 using Timer5 and ICP5",
      "website": "http://mrrwa.org/loconet-interface/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrrwa/LocoNet-1.0.2.zip",
      "archiveFileName": "LocoNet-1.0.2.zip",
      "size": 67849,
      "checksum": "SHA-256:7238859f530eb403c62eceb6b1b96c77053c678d9571ce5c685616ac0080ba6d"
    },
    {
      "name": "LocoNet",
      "version": "1.0.3",
      "author": "Alex Shepherd, John Plocher, Damian Philipp, Tom Knox",
      "maintainer": "Alex Shepherd \u003ckiwi64ajs@gmail.com\u003e",
      "sentence": "Enables Digitrax LocoNet Communication",
      "paragraph": "This library allows you to interface to a LocoNet network and send/receive LocoNet commands. The library currently supports the AVR ATTiny84 \u0026 ATMega88/168/328/32u4 using the 16-Bit Timer1 and ICP1. It also supports the Mega2560 using Timer5 and ICP5",
      "website": "http://mrrwa.org/loconet-interface/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrrwa/LocoNet-1.0.3.zip",
      "archiveFileName": "LocoNet-1.0.3.zip",
      "size": 67841,
      "checksum": "SHA-256:f476f119aa18fd6f46b62d8dbdf73817429d0864cd6d8964042f4ec50ec22353"
    },
    {
      "name": "LocoNet",
      "version": "1.0.4",
      "author": "Alex Shepherd, John Plocher, Damian Philipp, Tom Knox",
      "maintainer": "Alex Shepherd \u003ckiwi64ajs@gmail.com\u003e",
      "sentence": "Enables Digitrax LocoNet Communication",
      "paragraph": "This library allows you to interface to a LocoNet network and send/receive LocoNet commands. The library currently supports the AVR ATTiny84 \u0026 ATMega88/168/328/32u4 using the 16-Bit Timer1 and ICP1. It also supports the Mega2560 using Timer5 and ICP5",
      "website": "http://mrrwa.org/loconet-interface/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mrrwa/LocoNet-1.0.4.zip",
      "archiveFileName": "LocoNet-1.0.4.zip",
      "size": 68227,
      "checksum": "SHA-256:a3b22023ce8a659d239e479320ffba400858edf7d47c52943a5fd76b2345c721"
    },
    {
      "name": "LedBlinky",
      "version": "1.0.4",
      "author": "BiagioMkr",
      "maintainer": "Biagio Montaruli \u003cbiagio.hkr@gmail.com\u003e",
      "sentence": "Allows an Arduino/Genuino board to use the builtin led and external leds.",
      "paragraph": "Supports many methods to control leds attached to your Arduino/Genuino board",
      "website": "https://github.com/biagiom/Led",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/biagiom/LedBlinky-1.0.4.zip",
      "archiveFileName": "LedBlinky-1.0.4.zip",
      "size": 5480,
      "checksum": "SHA-256:b29c8108f996c1ebc9b2a7865ff4e73c039240640bdcb3209bdd5db2b5657c4c"
    },
    {
      "name": "LedBlinky",
      "version": "1.1.0",
      "author": "BiagioMkr",
      "maintainer": "Biagio Montaruli \u003cbiagio.hkr@gmail.com\u003e",
      "sentence": "Allows an Arduino/Genuino board to use the builtin led and external leds.",
      "paragraph": "Supports many methods to control leds attached to your Arduino/Genuino board",
      "website": "https://github.com/biagiom/Led",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/biagiom/LedBlinky-1.1.0.zip",
      "archiveFileName": "LedBlinky-1.1.0.zip",
      "size": 9420,
      "checksum": "SHA-256:046228cf24e9c72066fa146455e76c69642a3e8d961f5c0510dc830f608b226b"
    },
    {
      "name": "LedBlinky",
      "version": "1.1.1",
      "author": "BiagioMkr",
      "maintainer": "Biagio Montaruli \u003cbiagio.hkr@gmail.com\u003e",
      "sentence": "Allows an Arduino/Genuino board to use the builtin led and external leds.",
      "paragraph": "Supports many methods to control leds attached to your Arduino/Genuino board",
      "website": "https://github.com/biagiom/Arduino-Led",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/biagiom/LedBlinky-1.1.1.zip",
      "archiveFileName": "LedBlinky-1.1.1.zip",
      "size": 9494,
      "checksum": "SHA-256:c46f49cbf4d83ea8356fbb428a54f2783b1740995a02ef68bc7e8e29feab7339"
    },
    {
      "name": "LedBlinky",
      "version": "1.3.1",
      "author": "BiagioMkr",
      "maintainer": "Biagio Montaruli \u003cbiagio.hkr@gmail.com\u003e",
      "sentence": "Allows an Arduino/Genuino board to control the builtin led and external leds.",
      "paragraph": "Supports many methods to control leds attached to your Arduino/Genuino board",
      "website": "https://github.com/biagiom/LedBlinky",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/biagiom/LedBlinky-1.3.1.zip",
      "archiveFileName": "LedBlinky-1.3.1.zip",
      "size": 9722,
      "checksum": "SHA-256:3f0f6c269b07720cef08511bbbbe3ad4aaf95034154e04531d18d87777640a6d"
    },
    {
      "name": "ATMlib",
      "version": "1.2.1",
      "author": "TEAM a.r.g., Davey Taylor aka STG, Joeri Gantois aka JO3RI",
      "maintainer": "info@TEAM_arg.org",
      "sentence": "The Arduboy Tracker Music library.",
      "paragraph": "A library for playing 4 channel chiptune music and oscilator sounds, intended for use with the Arduboy game system",
      "website": "https://github.com/TEAMarg/ATMlib",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TEAMarg/ATMlib-1.2.1.zip",
      "archiveFileName": "ATMlib-1.2.1.zip",
      "size": 84977,
      "checksum": "SHA-256:779c0ac02d664f126cb21c2d2d988703b379e7457926965dffecb34731a7e909"
    },
    {
      "name": "ATMlib",
      "version": "1.0.0",
      "author": "TEAM a.r.g., Davey Taylor aka, Joeri Gantois aka JO3RI",
      "maintainer": "info@TEAM_arg.org",
      "sentence": "The Arduboy Tracker Music library.",
      "paragraph": "A library for playing 4 channel chiptune music and oscilator sounds, intended for use with the Arduboy game system",
      "website": "https://github.com/TEAMarg/ATMlib",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TEAMarg/ATMlib-1.0.0.zip",
      "archiveFileName": "ATMlib-1.0.0.zip",
      "size": 392785,
      "checksum": "SHA-256:ff7dd59b6815f117a0fde97d9edc669c39b8281b39d6bc90b4fe2b816ef5d748"
    },
    {
      "name": "ATMlib",
      "version": "1.1.0",
      "author": "TEAM a.r.g., Davey Taylor aka STG, Joeri Gantois aka JO3RI",
      "maintainer": "info@TEAM_arg.org",
      "sentence": "The Arduboy Tracker Music library.",
      "paragraph": "A library for playing 4 channel chiptune music and oscilator sounds, intended for use with the Arduboy game system",
      "website": "https://github.com/TEAMarg/ATMlib",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TEAMarg/ATMlib-1.1.0.zip",
      "archiveFileName": "ATMlib-1.1.0.zip",
      "size": 392773,
      "checksum": "SHA-256:4a8c6b6091b6c1fd139c8378a9ffa2ae8a211f33746eb8f3c0ba7e96a343d1d4"
    },
    {
      "name": "ATMlib",
      "version": "1.1.2",
      "author": "TEAM a.r.g., Davey Taylor aka STG, Joeri Gantois aka JO3RI",
      "maintainer": "info@TEAM_arg.org",
      "sentence": "The Arduboy Tracker Music library.",
      "paragraph": "A library for playing 4 channel chiptune music and oscilator sounds, intended for use with the Arduboy game system",
      "website": "https://github.com/TEAMarg/ATMlib",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TEAMarg/ATMlib-1.1.2.zip",
      "archiveFileName": "ATMlib-1.1.2.zip",
      "size": 73713,
      "checksum": "SHA-256:bde07699de9c893a166e43b56a582c0eb7bbc128618d08aba6391d624c4c4c8d"
    },
    {
      "name": "ATMlib",
      "version": "1.1.3",
      "author": "TEAM a.r.g., Davey Taylor aka STG, Joeri Gantois aka JO3RI",
      "maintainer": "info@TEAM_arg.org",
      "sentence": "The Arduboy Tracker Music library.",
      "paragraph": "A library for playing 4 channel chiptune music and oscilator sounds, intended for use with the Arduboy game system",
      "website": "https://github.com/TEAMarg/ATMlib",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TEAMarg/ATMlib-1.1.3.zip",
      "archiveFileName": "ATMlib-1.1.3.zip",
      "size": 73723,
      "checksum": "SHA-256:374c55f8bea4f8c4d7096127b029e62911e885cec1030cd840150f0481ab2e8d"
    },
    {
      "name": "ATMlib",
      "version": "1.1.4",
      "author": "TEAM a.r.g., Davey Taylor aka STG, Joeri Gantois aka JO3RI",
      "maintainer": "info@TEAM_arg.org",
      "sentence": "The Arduboy Tracker Music library.",
      "paragraph": "A library for playing 4 channel chiptune music and oscilator sounds, intended for use with the Arduboy game system",
      "website": "https://github.com/TEAMarg/ATMlib",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TEAMarg/ATMlib-1.1.4.zip",
      "archiveFileName": "ATMlib-1.1.4.zip",
      "size": 76409,
      "checksum": "SHA-256:381e5fe4e6d14226dec35b9161fe69de903e3a69a35a7b790f4770b65b3a6c1e"
    },
    {
      "name": "ATMlib",
      "version": "1.1.5",
      "author": "TEAM a.r.g., Davey Taylor aka STG, Joeri Gantois aka JO3RI",
      "maintainer": "info@TEAM_arg.org",
      "sentence": "The Arduboy Tracker Music library.",
      "paragraph": "A library for playing 4 channel chiptune music and oscilator sounds, intended for use with the Arduboy game system",
      "website": "https://github.com/TEAMarg/ATMlib",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TEAMarg/ATMlib-1.1.5.zip",
      "archiveFileName": "ATMlib-1.1.5.zip",
      "size": 82274,
      "checksum": "SHA-256:8fa3d99d0dfcfd0d1ce4c3af58d9c6bb32f39853867f198d328600d6f61dac52"
    },
    {
      "name": "ATMlib",
      "version": "1.1.6",
      "author": "TEAM a.r.g., Davey Taylor aka STG, Joeri Gantois aka JO3RI",
      "maintainer": "info@TEAM_arg.org",
      "sentence": "The Arduboy Tracker Music library.",
      "paragraph": "A library for playing 4 channel chiptune music and oscilator sounds, intended for use with the Arduboy game system",
      "website": "https://github.com/TEAMarg/ATMlib",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TEAMarg/ATMlib-1.1.6.zip",
      "archiveFileName": "ATMlib-1.1.6.zip",
      "size": 82367,
      "checksum": "SHA-256:08f413441ab98f2d2f635693664b19e7d8804f61481beee870bc402dd716e650"
    },
    {
      "name": "ATMlib",
      "version": "1.2.0",
      "author": "TEAM a.r.g., Davey Taylor aka STG, Joeri Gantois aka JO3RI",
      "maintainer": "info@TEAM_arg.org",
      "sentence": "The Arduboy Tracker Music library.",
      "paragraph": "A library for playing 4 channel chiptune music and oscilator sounds, intended for use with the Arduboy game system",
      "website": "https://github.com/TEAMarg/ATMlib",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TEAMarg/ATMlib-1.2.0.zip",
      "archiveFileName": "ATMlib-1.2.0.zip",
      "size": 84978,
      "checksum": "SHA-256:c95b0baec55a5fc9f5e125851b4fa4ba0a05e062985429d506b3785c0dea07b3"
    },
    {
      "name": "ATMlib",
      "version": "1.2.2",
      "author": "TEAM a.r.g., Davey Taylor aka STG, Joeri Gantois aka JO3RI",
      "maintainer": "info@TEAM_arg.org",
      "sentence": "The Arduboy Tracker Music library.",
      "paragraph": "A library for playing 4 channel chiptune music and oscilator sounds, intended for use with the Arduboy game system",
      "website": "https://github.com/TEAMarg/ATMlib",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TEAMarg/ATMlib-1.2.2.zip",
      "archiveFileName": "ATMlib-1.2.2.zip",
      "size": 84980,
      "checksum": "SHA-256:3767dcadee70136bc0e929aca6f037e140d0b6d1d778af0cfe2060004ef16785"
    },
    {
      "name": "ATMlib",
      "version": "1.2.3",
      "author": "TEAM a.r.g., Davey Taylor aka STG, Joeri Gantois aka JO3RI",
      "maintainer": "info@TEAM_arg.org",
      "sentence": "The Arduboy Tracker Music library.",
      "paragraph": "A library for playing 4 channel chiptune music and oscilator sounds, intended for use with the Arduboy game system",
      "website": "https://github.com/TEAMarg/ATMlib",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TEAMarg/ATMlib-1.2.3.zip",
      "archiveFileName": "ATMlib-1.2.3.zip",
      "size": 84992,
      "checksum": "SHA-256:e92422c795cc7295ccb4c53f3a5a0250021c4d4fd236ffe8155d02336cadc401"
    },
    {
      "name": "StringSplitter",
      "version": "1.0.0",
      "author": "Harsha Alva",
      "maintainer": "Harsha Alva \u003caharshac@gmail.com\u003e",
      "sentence": "Arduino String Splitter Library",
      "paragraph": "A library that adds string splitting functionality to character delimited C++ strings.",
      "website": "https://github.com/aharshac/StringSplitter",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/aharshac/StringSplitter-1.0.0.zip",
      "archiveFileName": "StringSplitter-1.0.0.zip",
      "size": 15877,
      "checksum": "SHA-256:2b50274adc261e93c7b7897e2c65bacb98b531315e62936b04e223b446753305"
    },
    {
      "name": "SparkFun MAX3010x Pulse and Proximity Sensor Library",
      "version": "1.0.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library for the MAX30102 Pulse and MAX30105 Proximity Breakout",
      "paragraph": "An Arduino Library for the MAX3015 particle sensor and MAX30102 Pulse Ox sensor",
      "website": "https://github.com/sparkfun/SparkFun_MAX3010x_Sensor_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_MAX3010x_Pulse_and_Proximity_Sensor_Library-1.0.0.zip",
      "archiveFileName": "SparkFun_MAX3010x_Pulse_and_Proximity_Sensor_Library-1.0.0.zip",
      "size": 54604,
      "checksum": "SHA-256:1a3bbf842da7a2b9b1e9155a8ec4281af27963aec9fe231774d379d0e01a875e"
    },
    {
      "name": "MCP3221",
      "version": "1.0.0",
      "author": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "maintainer": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "sentence": "MCP3221 Driver (12-bit ADC with hardware I2C Interface)",
      "paragraph": "The __MCP3221__ is a 12-Bit Single-Channel ADC with hardware I2C interface. This library contains a complete driver for the MCP3221 exposing all its available features. The library also contains configurable functions for obtaining either data or voltage reading from the device, as well as applying smoothing methods (Rolling-Average / Exponential-Moving-Average) to the said data/voltage readings. In addition, the library offers a built-in mechanism for calculating input from either 5V or 12V sources (the latter requiring a hardware voltage divider as the AIN pin of the MCP3221 cannot take more than 5.5V).",
      "website": "https://github.com/nadavmatalon/MCP3221",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nadavmatalon/MCP3221-1.0.0.zip",
      "archiveFileName": "MCP3221-1.0.0.zip",
      "size": 48702,
      "checksum": "SHA-256:0b7dcd20039f4f4c01c4605e13d2ce2d7d226040bc70ae44e66be94963eccbb5"
    },
    {
      "name": "StreamDebugger",
      "version": "1.0.0",
      "author": "Volodymyr Shymanskyy",
      "maintainer": "Volodymyr Shymanskyy",
      "sentence": "Debugger for Arduino Stream-based communication",
      "paragraph": "This class wraps around an Arduino Stream, and dumps all data to another Stream for debug purposes.",
      "website": "https://github.com/vshymanskyy/StreamDebugger",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/vshymanskyy/StreamDebugger-1.0.0.zip",
      "archiveFileName": "StreamDebugger-1.0.0.zip",
      "size": 2630,
      "checksum": "SHA-256:472d008043ee5d80ee37648d30258c8493cfcbc384ae2994cfab1611ce4406e4"
    },
    {
      "name": "StreamDebugger",
      "version": "1.0.1",
      "author": "Volodymyr Shymanskyy",
      "maintainer": "Volodymyr Shymanskyy",
      "sentence": "Debugger for Arduino Stream-based communication",
      "paragraph": "This class is an Arduino Stream, that dumps all data to another Stream for debug purposes.",
      "website": "https://github.com/vshymanskyy/StreamDebugger",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/vshymanskyy/StreamDebugger-1.0.1.zip",
      "archiveFileName": "StreamDebugger-1.0.1.zip",
      "size": 3101,
      "checksum": "SHA-256:076a3ee98705f4acd07773596ca7836d0cd5fe3adbddfe7fc610fe32a9e32d5b"
    },
    {
      "name": "TinyGSM",
      "version": "0.1.3",
      "author": "Volodymyr Shymanskyy",
      "maintainer": "Volodymyr Shymanskyy",
      "sentence": "A small Arduino library for GPRS modules, that just works.",
      "paragraph": "Includes examples for Blynk, MQTT, File Download, and Web Client. Supports GSM modules with AT command interface: SIM800, SIM800A, SIM800C, SIM800L, SIM800H, SIM808, SIM868, SIM900, SIM900A, SIM900D, SIM908, SIM968",
      "website": "https://github.com/vshymanskyy/TinyGSM",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/vshymanskyy/TinyGSM-0.1.3.zip",
      "archiveFileName": "TinyGSM-0.1.3.zip",
      "size": 1374200,
      "checksum": "SHA-256:3a95fbcbf00d8b49bbac7f3135d331f108358e32d87079f61755b4d5b6e1f25d"
    },
    {
      "name": "TinyGSM",
      "version": "0.1.0",
      "author": "Volodymyr Shymanskyy",
      "maintainer": "Volodymyr Shymanskyy",
      "sentence": "A small Arduino library for GPRS modules, that just works.",
      "paragraph": "Includes examples for Blynk, MQTT, File Download, and Web Client. Supports GSM modules, that work over AT command interface: SIM800, SIM800L, SIM900",
      "website": "https://github.com/vshymanskyy/TinyGSM",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/vshymanskyy/TinyGSM-0.1.0.zip",
      "archiveFileName": "TinyGSM-0.1.0.zip",
      "size": 5184916,
      "checksum": "SHA-256:5e8640cbfc22f2cf2423f5d7c426849e04af732914237f502473b659d4fbe40b"
    },
    {
      "name": "TinyGSM",
      "version": "0.1.1",
      "author": "Volodymyr Shymanskyy",
      "maintainer": "Volodymyr Shymanskyy",
      "sentence": "A small Arduino library for GPRS modules, that just works.",
      "paragraph": "Includes examples for Blynk, MQTT, File Download, and Web Client. Supports GSM modules, that work over AT command interface: SIM800, SIM800L, SIM900",
      "website": "https://github.com/vshymanskyy/TinyGSM",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/vshymanskyy/TinyGSM-0.1.1.zip",
      "archiveFileName": "TinyGSM-0.1.1.zip",
      "size": 8360243,
      "checksum": "SHA-256:1f0562efa2e9627a44764418e8a674955c359b06c142ad0c8c1504b9d57123f6"
    },
    {
      "name": "TinyGSM",
      "version": "0.1.2",
      "author": "Volodymyr Shymanskyy",
      "maintainer": "Volodymyr Shymanskyy",
      "sentence": "A small Arduino library for GPRS modules, that just works.",
      "paragraph": "Includes examples for Blynk, MQTT, File Download, and Web Client. Supports GSM modules with AT command interface: SIM800, SIM800A, SIM800C, SIM800L, SIM800H, SIM808, SIM868, SIM900, SIM900A, SIM900D, SIM908, SIM968",
      "website": "https://github.com/vshymanskyy/TinyGSM",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/vshymanskyy/TinyGSM-0.1.2.zip",
      "archiveFileName": "TinyGSM-0.1.2.zip",
      "size": 1231158,
      "checksum": "SHA-256:443181e0bb28efa558a7a074d1ad73a2eec18ed3e78113287b360157472111fe"
    },
    {
      "name": "TinyGSM",
      "version": "0.1.4",
      "author": "Volodymyr Shymanskyy",
      "maintainer": "Volodymyr Shymanskyy",
      "sentence": "A small Arduino library for GPRS modules, that just works.",
      "paragraph": "Includes examples for Blynk, MQTT, File Download, and Web Client. Supports GSM modules with AT command interface: SIM800, SIM800A, SIM800C, SIM800L, SIM800H, SIM808, SIM868, SIM900, SIM900A, SIM900D, SIM908, SIM968",
      "website": "https://github.com/vshymanskyy/TinyGSM",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/vshymanskyy/TinyGSM-0.1.4.zip",
      "archiveFileName": "TinyGSM-0.1.4.zip",
      "size": 1375345,
      "checksum": "SHA-256:fa80fda2018dba5cbd6062b284dbaee138b3fef3598545db6f565e3f0506ef17"
    },
    {
      "name": "TinyGSM",
      "version": "0.1.5",
      "author": "Volodymyr Shymanskyy",
      "maintainer": "Volodymyr Shymanskyy",
      "sentence": "A small Arduino library for GPRS modules, that just works.",
      "paragraph": "Includes examples for Blynk, MQTT, File Download, and Web Client. Supports GSM modules with AT command interface: SIM800, SIM800A, SIM800C, SIM800L, SIM800H, SIM808, SIM868, SIM900, SIM900A, SIM900D, SIM908, SIM968",
      "website": "https://github.com/vshymanskyy/TinyGSM",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/vshymanskyy/TinyGSM-0.1.5.zip",
      "archiveFileName": "TinyGSM-0.1.5.zip",
      "size": 1375384,
      "checksum": "SHA-256:bd2834476ca1846971ac01032ae7b70998a0c34c94a4cfe49e04458c599470c0"
    },
    {
      "name": "TinyGSM",
      "version": "0.1.6",
      "author": "Volodymyr Shymanskyy",
      "maintainer": "Volodymyr Shymanskyy",
      "sentence": "A small Arduino library for GPRS modules, that just works.",
      "paragraph": "Includes examples for Blynk, MQTT, File Download, and Web Client. Supports GSM modules with AT command interface: SIM800, SIM800A, SIM800C, SIM800L, SIM800H, SIM808, SIM868, SIM900, SIM900A, SIM900D, SIM908, SIM968",
      "website": "https://github.com/vshymanskyy/TinyGSM",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/vshymanskyy/TinyGSM-0.1.6.zip",
      "archiveFileName": "TinyGSM-0.1.6.zip",
      "size": 1385153,
      "checksum": "SHA-256:9d9d4b347cc1d284cc4e1fff4a304c0538440dea64df46e863cb02cc71838e3c"
    },
    {
      "name": "TinyGSM",
      "version": "0.1.7",
      "author": "Volodymyr Shymanskyy",
      "maintainer": "Volodymyr Shymanskyy",
      "sentence": "A small Arduino library for GPRS modules, that just works.",
      "paragraph": "Includes examples for Blynk, MQTT, File Download, and Web Client. Supports GSM modules with AT command interface: SIM800, SIM800A, SIM800C, SIM800L, SIM800H, SIM808, SIM868, SIM900, SIM900A, SIM900D, SIM908, SIM968",
      "website": "https://github.com/vshymanskyy/TinyGSM",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/vshymanskyy/TinyGSM-0.1.7.zip",
      "archiveFileName": "TinyGSM-0.1.7.zip",
      "size": 1389343,
      "checksum": "SHA-256:9c885b159c91f740a7ea8adcf7bee8d6f25e686f7ca81b6ddeec0685b1535efb"
    },
    {
      "name": "IndustrialShields",
      "version": "1.0.0",
      "author": "Boot\u0026Work Corp, S.L.",
      "maintainer": "Industrial Shields \u003cindustrialshields@industrialshields.com\u003e",
      "sentence": "Industrial Shields devices library",
      "paragraph": "Industrial Shields devices library",
      "website": "http://www.industrialshields.com",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/IndustrialShields/IndustrialShields-1.0.0.zip",
      "archiveFileName": "IndustrialShields-1.0.0.zip",
      "size": 27109,
      "checksum": "SHA-256:f5be856e2963d8d2dd78a8255d728c5bb31b678ac5d8d249d726595346622395"
    },
    {
      "name": "IndustrialShields",
      "version": "1.2.0",
      "author": "Boot\u0026Work Corp, S.L.",
      "maintainer": "Industrial Shields \u003cindustrialshields@industrialshields.com\u003e",
      "sentence": "Industrial Shields devices library",
      "paragraph": "Industrial Shields devices library",
      "website": "http://www.industrialshields.com",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/IndustrialShields/IndustrialShields-1.2.0.zip",
      "archiveFileName": "IndustrialShields-1.2.0.zip",
      "size": 29676,
      "checksum": "SHA-256:f42cd5dbe2b8dc8f3eee0a6155e88f501ee9dd959d87d38c2a54195194ca6b30"
    },
    {
      "name": "IndustrialShields",
      "version": "1.3.0",
      "author": "Boot\u0026Work Corp, S.L.",
      "maintainer": "Industrial Shields \u003cindustrialshields@industrialshields.com\u003e",
      "sentence": "Industrial Shields devices library",
      "paragraph": "Industrial Shields devices library",
      "website": "http://www.industrialshields.com",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/IndustrialShields/IndustrialShields-1.3.0.zip",
      "archiveFileName": "IndustrialShields-1.3.0.zip",
      "size": 29726,
      "checksum": "SHA-256:f2dec639f3e79376532c28ac9ca98277aac3b975581c932208f839ae0fdf1fff"
    },
    {
      "name": "BridgeHttpClient",
      "version": "2.0.0",
      "author": "Imre Horvath \u003cimi.horvath@gmail.com\u003e",
      "maintainer": "Imre Horvath \u003cimi.horvath@gmail.com\u003e",
      "sentence": "A practical and easy to use generic HTTP client library for the Yun.",
      "paragraph": "GET/POST/PUT/DELETE, sync/async requests, request/response headers, basic auth and more.",
      "website": "https://github.com/imrehorvath/BridgeHttpClient",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/imrehorvath/BridgeHttpClient-2.0.0.zip",
      "archiveFileName": "BridgeHttpClient-2.0.0.zip",
      "size": 7557,
      "checksum": "SHA-256:5218de7106e6b8e783506f81c5b501ca83e43c2ae0e3143b578eb1c5aeef81ec"
    },
    {
      "name": "BridgeHttpClient",
      "version": "3.0.0",
      "author": "Imre Horvath \u003cimi.horvath@gmail.com\u003e",
      "maintainer": "Imre Horvath \u003cimi.horvath@gmail.com\u003e",
      "sentence": "A practical and easy to use generic HTTP client library for the Yun.",
      "paragraph": "GET/POST/PUT/DELETE, sync/async requests, request/response headers, basic auth and more.",
      "website": "https://github.com/imrehorvath/BridgeHttpClient",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/imrehorvath/BridgeHttpClient-3.0.0.zip",
      "archiveFileName": "BridgeHttpClient-3.0.0.zip",
      "size": 8139,
      "checksum": "SHA-256:5fd9a5b636a817494baf8cbc3e6116e44ed9feb312097b079be04608bf213317"
    },
    {
      "name": "BridgeHttpClient",
      "version": "3.0.3",
      "author": "Imre Horvath \u003cimi.horvath@gmail.com\u003e",
      "maintainer": "Imre Horvath \u003cimi.horvath@gmail.com\u003e",
      "sentence": "A practical and easy to use generic HTTP client library for the Yun.",
      "paragraph": "GET/POST/PUT/DELETE, sync/async requests, request/response headers, basic auth and more.",
      "website": "https://github.com/imrehorvath/BridgeHttpClient",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/imrehorvath/BridgeHttpClient-3.0.3.zip",
      "archiveFileName": "BridgeHttpClient-3.0.3.zip",
      "size": 10182,
      "checksum": "SHA-256:3656460d8c8ce00a579edb51c27d2372d221c08f270b93de311f41f339a0ae2d"
    },
    {
      "name": "BridgeHttpClient",
      "version": "3.0.4",
      "author": "Imre Horvath \u003cimi.horvath@gmail.com\u003e",
      "maintainer": "Imre Horvath \u003cimi.horvath@gmail.com\u003e",
      "sentence": "A practical and easy to use generic HTTP client library for the Yun.",
      "paragraph": "GET/POST/PUT/DELETE, sync/async requests, request/response headers, basic auth and more.",
      "website": "https://github.com/imrehorvath/BridgeHttpClient",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/imrehorvath/BridgeHttpClient-3.0.4.zip",
      "archiveFileName": "BridgeHttpClient-3.0.4.zip",
      "size": 10493,
      "checksum": "SHA-256:3f36480ccecc7c68738bbd4922a2b37bfa170d4315e1021804d0679d455bac2f"
    },
    {
      "name": "BridgeHttpClient",
      "version": "3.1.0",
      "author": "Imre Horvath \u003cimi.horvath@gmail.com\u003e",
      "maintainer": "Imre Horvath \u003cimi.horvath@gmail.com\u003e",
      "sentence": "A practical and easy to use generic HTTP client library for the Yun.",
      "paragraph": "GET/POST/PUT/DELETE, sync/async requests, request/response headers, basic auth and more.",
      "website": "https://github.com/imrehorvath/BridgeHttpClient",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/imrehorvath/BridgeHttpClient-3.1.0.zip",
      "archiveFileName": "BridgeHttpClient-3.1.0.zip",
      "size": 10566,
      "checksum": "SHA-256:22988e5b611ce8725297b78b58e2f2adbda9e7e506a9728737b4f06e5bd6b690"
    },
    {
      "name": "BridgeHttpClient",
      "version": "1.0.0",
      "author": "Imre Horvath \u003cimi.horvath@gmail.com\u003e",
      "maintainer": "Imre Horvath \u003cimi.horvath@gmail.com\u003e",
      "sentence": "A practical and easy to use generic HTTP client library for the Yun.",
      "paragraph": "GET/POST/PUT/DELETE, sync/async requests, request/response headers, basic auth and more.",
      "website": "https://github.com/imrehorvath/BridgeHttpClient",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/imrehorvath/BridgeHttpClient-1.0.0.zip",
      "archiveFileName": "BridgeHttpClient-1.0.0.zip",
      "size": 8118,
      "checksum": "SHA-256:e2c11655cf8bb8a6a4816209e296cc36d139535e68ec170e4d372f88ab16a645"
    },
    {
      "name": "Pablo",
      "version": "1.0.0",
      "author": "Etienne Deleflie \u003cetienne@polygondoor.com.au\u003e, Mat Wall-Smith \u003cmat@polygondoor.com.au\u003e",
      "maintainer": "Etienne Deleflie \u003cetienne@polygondoor.com.au\u003e",
      "sentence": "A library to run Pablo, an Arduino based drawing machine",
      "paragraph": "Pablo drives 2 stepper motors using the AccelStepper library.",
      "website": "http://polygondoor.com.au/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/polygondoor/Pablo-1.0.0.zip",
      "archiveFileName": "Pablo-1.0.0.zip",
      "size": 24331,
      "checksum": "SHA-256:b870b909f642d1bdb3ed1657f1d447efe2e110f02b741318f622b3778267e818"
    },
    {
      "name": "Pablo",
      "version": "1.1.0",
      "author": "Etienne Deleflie \u003cetienne@polygondoor.com.au\u003e, Mat Wall-Smith \u003cmat@polygondoor.com.au\u003e",
      "maintainer": "Etienne Deleflie \u003cetienne@polygondoor.com.au\u003e",
      "sentence": "A library to run Pablo, an Arduino based drawing machine",
      "paragraph": "Pablo drives 2 stepper motors using the AccelStepper library.",
      "website": "http://polygondoor.com.au/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/polygondoor/Pablo-1.1.0.zip",
      "archiveFileName": "Pablo-1.1.0.zip",
      "size": 24700,
      "checksum": "SHA-256:657cc16308d3bff179a334f136cadec2bda375cdb79bac93854d2807b9c460aa"
    },
    {
      "name": "Pablo",
      "version": "1.1.2",
      "author": "Etienne Deleflie \u003cetienne@polygondoor.com.au\u003e, Mat Wall-Smith \u003cmat@polygondoor.com.au\u003e",
      "maintainer": "Etienne Deleflie \u003cetienne@polygondoor.com.au\u003e",
      "sentence": "A library to run Pablo, an Arduino based drawing machine",
      "paragraph": "Pablo drives 2 stepper motors using the AccelStepper library.",
      "website": "http://polygondoor.com.au/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/polygondoor/Pablo-1.1.2.zip",
      "archiveFileName": "Pablo-1.1.2.zip",
      "size": 24738,
      "checksum": "SHA-256:98a65abb8b737a0ba4f5f90c633a81a0fba6e7b076e8288670ad3118740643c5"
    },
    {
      "name": "Pablo",
      "version": "1.1.3",
      "author": "Etienne Deleflie \u003cetienne@polygondoor.com.au\u003e, Mat Wall-Smith \u003cmat@polygondoor.com.au\u003e",
      "maintainer": "Etienne Deleflie \u003cetienne@polygondoor.com.au\u003e",
      "sentence": "A library to run Pablo, an Arduino based drawing machine",
      "paragraph": "Pablo drives 2 stepper motors using the AccelStepper library.",
      "website": "http://polygondoor.com.au/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/polygondoor/Pablo-1.1.3.zip",
      "archiveFileName": "Pablo-1.1.3.zip",
      "size": 31833,
      "checksum": "SHA-256:b3ae1c241790dc91859bc4c53320842e89e511c11ff0fd31b26aeae3732c1c08"
    },
    {
      "name": "Pablo",
      "version": "1.1.5",
      "author": "Etienne Deleflie \u003cetienne@polygondoor.com.au\u003e, Mat Wall-Smith \u003cmat@polygondoor.com.au\u003e",
      "maintainer": "Etienne Deleflie \u003cetienne@polygondoor.com.au\u003e",
      "sentence": "A library to run Pablo, an Arduino based drawing machine",
      "paragraph": "Pablo drives 2 stepper motors using the AccelStepper library.",
      "website": "http://polygondoor.com.au/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/polygondoor/Pablo-1.1.5.zip",
      "archiveFileName": "Pablo-1.1.5.zip",
      "size": 31831,
      "checksum": "SHA-256:79e54617290cdd3eb66c70045f189d20e0e3a44316f797c61bf608af7400b54c"
    },
    {
      "name": "Pablo",
      "version": "1.1.6",
      "author": "Etienne Deleflie \u003cetienne@polygondoor.com.au\u003e, Mat Wall-Smith \u003cmat@polygondoor.com.au\u003e",
      "maintainer": "Etienne Deleflie \u003cetienne@polygondoor.com.au\u003e",
      "sentence": "A library to run Pablo, an Arduino based drawing machine",
      "paragraph": "Pablo drives 2 stepper motors using the AccelStepper library.",
      "website": "http://polygondoor.com.au/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/polygondoor/Pablo-1.1.6.zip",
      "archiveFileName": "Pablo-1.1.6.zip",
      "size": 32157,
      "checksum": "SHA-256:e7df51d831752aec1306ac2b9ee150b207e72d1d9c81351aa295145be73610b7"
    },
    {
      "name": "Pablo",
      "version": "1.1.7",
      "author": "Etienne Deleflie \u003cetienne@polygondoor.com.au\u003e, Mat Wall-Smith \u003cmat@polygondoor.com.au\u003e",
      "maintainer": "Etienne Deleflie \u003cetienne@polygondoor.com.au\u003e",
      "sentence": "A library to run Pablo, an Arduino based drawing machine",
      "paragraph": "Pablo drives 2 stepper motors using the AccelStepper library.",
      "website": "http://polygondoor.com.au/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/polygondoor/Pablo-1.1.7.zip",
      "archiveFileName": "Pablo-1.1.7.zip",
      "size": 33486,
      "checksum": "SHA-256:b687c7930961eeef533e57783ee38f1a65be478500a0d778e68d4846f3be6459"
    },
    {
      "name": "IoTtweet",
      "version": "0.2.0",
      "author": "Isaranu Janthong \u003cisaranujanthong@gmail.com\u003e",
      "maintainer": "Isaranu Janthong \u003cisaranujanthong@gmail.com\u003e",
      "sentence": "A library that makes Internet of Things send data and control on IoTtweet.com.",
      "paragraph": "Support ESP8266WiFi.h.",
      "website": "http://www.iottweet.com/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Isaranu/IoTtweet-0.2.0.zip",
      "archiveFileName": "IoTtweet-0.2.0.zip",
      "size": 8479,
      "checksum": "SHA-256:5f90cf62a3b2ecea85e9221bf8c5dc02a5369f685a8910d00fa34f45a8177b7e"
    },
    {
      "name": "IoTtweet",
      "version": "0.2.9",
      "author": "Isaranu Janthong \u003cisaranujanthong@gmail.com\u003e",
      "maintainer": "Isaranu Janthong \u003cisaranujanthong@gmail.com\u003e",
      "sentence": "A library that makes Internet of Things send data and control on IoTtweet.com.",
      "paragraph": "Support ESP8266WiFi.h.",
      "website": "http://www.iottweet.com/",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Isaranu/IoTtweet-0.2.9.zip",
      "archiveFileName": "IoTtweet-0.2.9.zip",
      "size": 8642,
      "checksum": "SHA-256:86c0e5ea80a114d65c2da1d25dd0124c964c45595a4536b54cfa479300f05a41"
    },
    {
      "name": "IoTtweet",
      "version": "0.3.1",
      "author": "Isaranu Janthong \u003cisaranujanthong@gmail.com\u003e",
      "maintainer": "Isaranu Janthong \u003cisaranujanthong@gmail.com\u003e",
      "sentence": "A library that makes Internet of Things send data and control on IoTtweet.com.",
      "paragraph": "Support ESP8266WiFi.h.",
      "website": "http://www.iottweet.com/",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Isaranu/IoTtweet-0.3.1.zip",
      "archiveFileName": "IoTtweet-0.3.1.zip",
      "size": 8768,
      "checksum": "SHA-256:31fac923e14d3c67a491888170ba4f04f0ef01d4ae43f5845f655fbfacbd5fed"
    },
    {
      "name": "IoTtweet",
      "version": "0.3.2",
      "author": "Isaranu Janthong \u003cisaranujanthong@gmail.com\u003e",
      "maintainer": "Isaranu Janthong \u003cisaranujanthong@gmail.com\u003e",
      "sentence": "A library that makes Internet of Things send data and control on IoTtweet.com.",
      "paragraph": "Support ESP8266WiFi.h.",
      "website": "http://www.iottweet.com/",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Isaranu/IoTtweet-0.3.2.zip",
      "archiveFileName": "IoTtweet-0.3.2.zip",
      "size": 8739,
      "checksum": "SHA-256:e86ff869f969ffdcb3ddf8fe6cb537ff20d43bfb4655adfa44b75b411d02e354"
    },
    {
      "name": "ConnectThings_ESP8266",
      "version": "0.0.1",
      "author": "Francisco Calaça \u003cchicocx@gmail.com\u003e",
      "maintainer": "Francisco Calaça \u003cchicocx@gmail.com\u003e",
      "sentence": "Allows communication with WiFi network for all Arduino boards.",
      "paragraph": "This library allows an Arduino board connect in WiFi network easily",
      "website": "https://github.com/connect-things/ConnectThings_ESP8266",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/connect-things/ConnectThings_ESP8266-0.0.1.zip",
      "archiveFileName": "ConnectThings_ESP8266-0.0.1.zip",
      "size": 3800,
      "checksum": "SHA-256:819ef8191491ed5e42e73cb44fba1eb5de996e50b0577fa4a356ac8d4a93d044"
    },
    {
      "name": "Aspen SIM800",
      "version": "1.0.1",
      "author": "Mattias Aabmets",
      "maintainer": "Mattias Aabmets",
      "sentence": "A comprehensive SIM800 Series library for simplified and in-depth chip access.",
      "paragraph": "This library provides wrapper methods for all AT commands defined in the official SIM800L manual, many helper methods to work with returned replies, advanced serial timeout functionalities, and also methods to directly communicate with the chip. Full library documentation and numerous examples are also provided.",
      "website": "https://github.com/aspenforest/SIM800",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/aspenforest/Aspen_SIM800-1.0.1.zip",
      "archiveFileName": "Aspen_SIM800-1.0.1.zip",
      "size": 138564,
      "checksum": "SHA-256:e5e981d489e53110bc6a2ab1caa0622277f460117b621c1ca06f974cd6640f5f"
    },
    {
      "name": "Lixie",
      "version": "1.0.0",
      "author": "Connor Nishijima",
      "maintainer": "Connor Nishijima \u003cconnornishijima@gmail.com\u003e",
      "sentence": "Allows for easy writing to Lixie Digit displays!",
      "paragraph": "This library takes care of all the Lixie LED addressing and updating for you! All you have to do is write a number to the displays!",
      "website": "https://github.com/connornishijima/Lixie-arduino",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/connornishijima/Lixie-1.0.0.zip",
      "archiveFileName": "Lixie-1.0.0.zip",
      "size": 17696,
      "checksum": "SHA-256:37a9bf5ca7dc7bbf8a22f5d4eb7fb4624f1557bde62de9f04c5930a5b661faea"
    },
    {
      "name": "Lixie",
      "version": "1.1.0",
      "author": "Connor Nishijima",
      "maintainer": "Connor Nishijima \u003cconnornishijima@gmail.com\u003e",
      "sentence": "Allows for easy writing to Lixie Digit displays!",
      "paragraph": "This library takes care of all the Lixie LED addressing and updating for you! All you have to do is write a number to the displays!",
      "website": "https://github.com/connornishijima/Lixie-arduino",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/connornishijima/Lixie-1.1.0.zip",
      "archiveFileName": "Lixie-1.1.0.zip",
      "size": 17280,
      "checksum": "SHA-256:1b18a07e0e897ed53186d974c89454a3ba4ce1bf345a91ddeafabf0d03295ea8"
    },
    {
      "name": "Lixie",
      "version": "1.1.1",
      "author": "Connor Nishijima",
      "maintainer": "Connor Nishijima \u003cconnornishijima@gmail.com\u003e",
      "sentence": "Allows for easy writing to Lixie Digit displays!",
      "paragraph": "This library takes care of all the Lixie LED addressing and updating for you! All you have to do is write a number to the displays!",
      "website": "https://github.com/connornishijima/Lixie-arduino",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/connornishijima/Lixie-1.1.1.zip",
      "archiveFileName": "Lixie-1.1.1.zip",
      "size": 18144,
      "checksum": "SHA-256:813bdbd5ba3734f01e10b8087db4a461d547cc12880b191e9cc79d64761964d2"
    },
    {
      "name": "Lixie",
      "version": "1.2.0",
      "author": "Connor Nishijima",
      "maintainer": "Connor Nishijima \u003cconnornishijima@gmail.com\u003e",
      "sentence": "Allows for easy writing to Lixie Digit displays!",
      "paragraph": "This library takes care of all the Lixie LED addressing and updating for you! All you have to do is write a number to the displays!",
      "website": "https://github.com/connornishijima/Lixie-arduino",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/connornishijima/Lixie-1.2.0.zip",
      "archiveFileName": "Lixie-1.2.0.zip",
      "size": 34540,
      "checksum": "SHA-256:278e58b9d0f1fc58322b1897d5b2dd0507016675afaf799bc382a0e3596f53f7"
    },
    {
      "name": "Lixie",
      "version": "1.2.2",
      "author": "Connor Nishijima",
      "maintainer": "Connor Nishijima \u003cconnornishijima@gmail.com\u003e",
      "sentence": "Allows for easy writing to Lixie Digit displays!",
      "paragraph": "This library takes care of all the Lixie LED addressing and updating for you! All you have to do is write a number to the displays!",
      "website": "https://github.com/connornishijima/Lixie-arduino",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/connornishijima/Lixie-1.2.2.zip",
      "archiveFileName": "Lixie-1.2.2.zip",
      "size": 38577,
      "checksum": "SHA-256:1d57c154cd065af243972c7f4135f2e06be24bd8f52f9271a78c0275b8175271"
    },
    {
      "name": "A4963",
      "version": "0.1.0",
      "author": "Adrien Descamps \u003cadrien.descamps@gmail.com\u003e",
      "maintainer": "Adrien Descamps \u003cadrien.descamps@gmail.com\u003e",
      "sentence": "Library for A4963 brushless motor controler",
      "website": "https://github.com/descampsa/A4963",
      "category": "Device Control",
      "architectures": [
        ""
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/descampsa/A4963-0.1.0.zip",
      "archiveFileName": "A4963-0.1.0.zip",
      "size": 7087,
      "checksum": "SHA-256:f701e13108bb00fbd801cc5be2d7cf6b6a38b4f95acec4b5b5736ed5193da13f"
    },
    {
      "name": "A4963",
      "version": "0.2.0",
      "author": "Adrien Descamps \u003cadrien.descamps@gmail.com\u003e",
      "maintainer": "Adrien Descamps \u003cadrien.descamps@gmail.com\u003e",
      "sentence": "Library for A4963 brushless motor controler",
      "website": "https://github.com/descampsa/A4963",
      "category": "Device Control",
      "architectures": [
        ""
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/descampsa/A4963-0.2.0.zip",
      "archiveFileName": "A4963-0.2.0.zip",
      "size": 7086,
      "checksum": "SHA-256:894a43b03a03526b0c6c208452107ff4ea577661eea4ad55987d225fea93c95e"
    },
    {
      "name": "DFRobotDFPlayerMini",
      "version": "1.0.0",
      "author": "DFRobot",
      "maintainer": "Angelo \u003cangelo.qiao@dfrobot.com\u003e",
      "sentence": "Driver for DFPlayer Mini from DFRobot",
      "paragraph": "Easy-to-use and reliable library for DFPlayer Mini",
      "website": "https://github.com/DFRobot/DFRobotDFPlayerMini",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DFRobot/DFRobotDFPlayerMini-1.0.0.zip",
      "archiveFileName": "DFRobotDFPlayerMini-1.0.0.zip",
      "size": 8346,
      "checksum": "SHA-256:b3569af5b5ac714b0d6cb80e053589b82177a50538746a365963121e57f334bb"
    },
    {
      "name": "DFRobotDFPlayerMini",
      "version": "1.0.1",
      "author": "DFRobot",
      "maintainer": "Angelo \u003cangelo.qiao@dfrobot.com\u003e",
      "sentence": "Driver for DFPlayer Mini from DFRobot",
      "paragraph": "Easy-to-use and reliable library for DFPlayer Mini",
      "website": "https://github.com/DFRobot/DFRobotDFPlayerMini",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DFRobot/DFRobotDFPlayerMini-1.0.1.zip",
      "archiveFileName": "DFRobotDFPlayerMini-1.0.1.zip",
      "size": 8315,
      "checksum": "SHA-256:d6b4f42fac3b5d63a9dd05cdedea493a26f1f378d1e9cbea4f30301378a30b43"
    },
    {
      "name": "EduShield",
      "version": "1.0.0",
      "author": "Martin Maly",
      "maintainer": "Martin Maly",
      "sentence": "Display library for Arduino101.cz EDUshield",
      "website": "http://playground.arduino.cc/code/time",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/maly/EduShield-1.0.0.zip",
      "archiveFileName": "EduShield-1.0.0.zip",
      "size": 4626835,
      "checksum": "SHA-256:4fa2e1c981aedaca4aa1f61e9e6f3b8961fb476cf05906f21abc85a2a77b41e1"
    },
    {
      "name": "EduShield",
      "version": "1.0.2",
      "author": "Martin Maly \u003cmaly@maly.cz\u003e",
      "maintainer": "Martin Maly \u003cmaly@maly.cz\u003e",
      "sentence": "Display library for Arduino101.cz EDUshield",
      "paragraph": "Basic library and examples for EduShield by http://nic.cz",
      "website": "https://github.com/maly/edushield",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/maly/EduShield-1.0.2.zip",
      "archiveFileName": "EduShield-1.0.2.zip",
      "size": 4027722,
      "checksum": "SHA-256:f1f5de4a26c0af7a96d1c8724e345fdb6bec183c868b419e59711c4d21c3ce0d"
    },
    {
      "name": "EduShield",
      "version": "1.0.5",
      "author": "Martin Maly \u003cmaly@maly.cz\u003e",
      "maintainer": "Martin Maly \u003cmaly@maly.cz\u003e",
      "sentence": "Display library for Arduino101.cz EDUshield",
      "paragraph": "Basic library and examples for EduShield by http://nic.cz",
      "website": "https://github.com/maly/edushield",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/maly/EduShield-1.0.5.zip",
      "archiveFileName": "EduShield-1.0.5.zip",
      "size": 4038643,
      "checksum": "SHA-256:52f303841ec80615ff0b7b41840c4ee5e5a9c46080bfbca076e639a5f28dc7f0"
    },
    {
      "name": "pinduino",
      "version": "1.0.0",
      "author": "Eric Lyons and Wes Sparks",
      "maintainer": "Eric Lyons and Wes Sparks",
      "sentence": "A library for the pinduino shield",
      "paragraph": "This library montiors states of coils/flashers on pinball machines with a pinduino shield attached and then program a variety of lighting effects using addressable LEDs (WS2812B).  This library has functions to help with monitoring J6 and J7 on STERN SAM/Whitestar systems, and J126 on WPC systems.  It can easily be modified to work to montior other plugs on other power driver boards.",
      "website": "https://github.com/elyons/professor_pinball_pinduino_sketches",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/elyons/pinduino-1.0.0.zip",
      "archiveFileName": "pinduino-1.0.0.zip",
      "size": 42029,
      "checksum": "SHA-256:55f65ae835acc633b6ff59e239f381d44eb7c33e3a302ebb3e0236a0480206ec"
    },
    {
      "name": "WatchDog",
      "version": "1.0.0",
      "author": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "maintainer": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "sentence": "WatchDog Timer Functions",
      "paragraph": "WatchDog Timer Functions",
      "website": "https://github.com/nadavmatalon/WatchDog",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nadavmatalon/WatchDog-1.0.0.zip",
      "archiveFileName": "WatchDog-1.0.0.zip",
      "size": 10036,
      "checksum": "SHA-256:dc03188e7721b9109c4d9d0299ecf8c34846b5b71cb48e5e94786e8c4ff32db0"
    },
    {
      "name": "WatchDog",
      "version": "1.1.0",
      "author": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "maintainer": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "sentence": "WatchDog Timer Functions",
      "paragraph": "WatchDog Timer Functions",
      "website": "https://github.com/nadavmatalon/WatchDog",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nadavmatalon/WatchDog-1.1.0.zip",
      "archiveFileName": "WatchDog-1.1.0.zip",
      "size": 14153,
      "checksum": "SHA-256:f88eb62d10ece6c72395db689b60b64b22c9ff82511ed3f542f88aa28cb53127"
    },
    {
      "name": "WatchDog",
      "version": "1.2.0",
      "author": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "maintainer": "Nadav Matalon \u003cnadav.matalon@gmail.com\u003e",
      "sentence": "WatchDog Timer Functions",
      "paragraph": "WatchDog Timer Functions",
      "website": "https://github.com/nadavmatalon/WatchDog",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nadavmatalon/WatchDog-1.2.0.zip",
      "archiveFileName": "WatchDog-1.2.0.zip",
      "size": 16976,
      "checksum": "SHA-256:1735b5127f28cd9d312543358c93a8ce680277828cfc5b3af1cb85348ecb6498"
    },
    {
      "name": "Constellation",
      "version": "2.1.16308",
      "author": "Sebastien Warin",
      "maintainer": "Sebastien Warin",
      "sentence": "Arduino/ESP library for Constellation 1.8",
      "paragraph": "Arduino/ESP library for Constellation 1.8. This library use the Arduino JSON library (https://github.com/bblanchon/ArduinoJson) to encode \u0026 decode JSON.",
      "website": "https://developer.myconstellation.io",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/myconstellation/Constellation-2.1.16308.zip",
      "archiveFileName": "Constellation-2.1.16308.zip",
      "size": 27038,
      "checksum": "SHA-256:57e102ef98776ea56e4ac495ceff784e41a1b018d858acb2a9654406d3e65eb7"
    },
    {
      "name": "Constellation",
      "version": "2.2.16341",
      "author": "Sebastien Warin",
      "maintainer": "Sebastien Warin",
      "sentence": "Arduino/ESP library for Constellation 1.8",
      "paragraph": "Arduino/ESP library for Constellation 1.8. This library use the Arduino JSON library (https://github.com/bblanchon/ArduinoJson) to encode \u0026 decode JSON.",
      "website": "https://developer.myconstellation.io",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/myconstellation/Constellation-2.2.16341.zip",
      "archiveFileName": "Constellation-2.2.16341.zip",
      "size": 27310,
      "checksum": "SHA-256:93ef27aec041b545d9e60d9a6091b6fca7e71f69fd1cbb8aa24b7c5c2a7b72bc"
    },
    {
      "name": "SakuraIO",
      "version": "1.0.0",
      "author": "SAKURA Internet Inc. \u003csupport@sakura.ad.jp\u003e",
      "maintainer": "chibiegg \u003cy-egusa@sakura.ad.jp\u003e",
      "sentence": "Library for Sakura Communication Module (https://iot.sakura.ad.jp/)",
      "paragraph": "Provides functions for Sakura IoT Platform (https://iot.sakura.ad.jp) with Sakura Communication Module. This library supports SCM-LTE-Beta.",
      "website": "https://github.com/sakura-internet/SakuraIOArduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sakura-internet/SakuraIO-1.0.0.zip",
      "archiveFileName": "SakuraIO-1.0.0.zip",
      "size": 57790,
      "checksum": "SHA-256:89003a79f80f877abf1738082dfdf5df551999aa0814c8b7d8025567fdd3b5c5"
    },
    {
      "name": "SakuraIO",
      "version": "1.0.1",
      "author": "SAKURA Internet Inc. \u003csupport@sakura.ad.jp\u003e",
      "maintainer": "chibiegg \u003cy-egusa@sakura.ad.jp\u003e",
      "sentence": "Library for Sakura Communication Module (https://iot.sakura.ad.jp/)",
      "paragraph": "Provides functions for Sakura IoT Platform (https://iot.sakura.ad.jp) with Sakura Communication Module. This library supports SCM-LTE-Beta.",
      "website": "https://github.com/sakura-internet/SakuraIOArduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sakura-internet/SakuraIO-1.0.1.zip",
      "archiveFileName": "SakuraIO-1.0.1.zip",
      "size": 58505,
      "checksum": "SHA-256:e6c654ec987fe8c2e8e4357d552c10a6bb78cb20ebfb790734d2950fa4ef81e7"
    },
    {
      "name": "SakuraIO",
      "version": "1.0.2",
      "author": "SAKURA Internet Inc. \u003csupport@sakura.ad.jp\u003e",
      "maintainer": "chibiegg \u003cy-egusa@sakura.ad.jp\u003e",
      "sentence": "Library for Sakura Communication Module (https://iot.sakura.ad.jp/)",
      "paragraph": "Provides functions for Sakura IoT Platform (https://iot.sakura.ad.jp) with Sakura Communication Module. This library supports SCM-LTE-Beta.",
      "website": "https://github.com/sakura-internet/SakuraIOArduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sakura-internet/SakuraIO-1.0.2.zip",
      "archiveFileName": "SakuraIO-1.0.2.zip",
      "size": 79864,
      "checksum": "SHA-256:237c68040464213526664fdf9db79f10912e021dfb7b7c9132af2f69618ebc61"
    },
    {
      "name": "SakuraIO",
      "version": "1.0.3",
      "author": "SAKURA Internet Inc. \u003csupport@sakura.ad.jp\u003e",
      "maintainer": "chibiegg \u003cy-egusa@sakura.ad.jp\u003e",
      "sentence": "Library for Sakura Communication Module (https://iot.sakura.ad.jp/)",
      "paragraph": "Provides functions for Sakura IoT Platform (https://iot.sakura.ad.jp) with Sakura Communication Module. This library supports SCM-LTE-Beta.",
      "website": "https://github.com/sakura-internet/SakuraIOArduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sakura-internet/SakuraIO-1.0.3.zip",
      "archiveFileName": "SakuraIO-1.0.3.zip",
      "size": 79899,
      "checksum": "SHA-256:d932fd69d27a134ec39b5eca55c935ef75e2827047d5de9799f685455f770c75"
    },
    {
      "name": "SakuraIO",
      "version": "1.0.4",
      "author": "SAKURA Internet Inc. \u003csupport@sakura.ad.jp\u003e",
      "maintainer": "chibiegg \u003cy-egusa@sakura.ad.jp\u003e",
      "sentence": "Library for Sakura Communication Module (https://iot.sakura.ad.jp/)",
      "paragraph": "Provides functions for Sakura IoT Platform (https://iot.sakura.ad.jp) with Sakura Communication Module. This library supports SCM-LTE-Beta.",
      "website": "https://github.com/sakura-internet/SakuraIOArduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sakura-internet/SakuraIO-1.0.4.zip",
      "archiveFileName": "SakuraIO-1.0.4.zip",
      "size": 125949,
      "checksum": "SHA-256:0dd83439f4b53047f3a6fb61ceb789d3018c3f43a561736010e08337cf2e1d30"
    },
    {
      "name": "SakuraIO",
      "version": "1.1.0",
      "author": "SAKURA Internet Inc. \u003csupport@sakura.ad.jp\u003e",
      "maintainer": "chibiegg \u003cy-egusa@sakura.ad.jp\u003e",
      "sentence": "Library for Sakura Communication Module (https://sakura.io/)",
      "paragraph": "Provides functions for \"sakura.io\" (IoT platform of SAKURA Internet Inc.) (https://sakura.io/) with Sakura Communication Module. This library supports SCM-LTE-Beta and SCM-LTE-01.",
      "website": "https://github.com/sakura-internet/SakuraIOArduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sakura-internet/SakuraIO-1.1.0.zip",
      "archiveFileName": "SakuraIO-1.1.0.zip",
      "size": 127557,
      "checksum": "SHA-256:f219aa19e8cb128efce5375cb37e1bc715edc7b4b06e11a28c2c0e55621ca92d"
    },
    {
      "name": "GobbitLineCommand",
      "version": "0.0.1",
      "author": "Jason Talley \u003cjason@primalengineering.com\u003e",
      "maintainer": "Jason Talley \u003cjason@primalengineering.com\u003e",
      "sentence": "Basic to advanced line following, intersection detection, basic motor control, battery monitoring, gripper control, and basic collision detection of the Gobbit robot.",
      "paragraph": "The built in functions range from simple out of the box single command line following and gripper actuation to deep fine tuning of PD motor control functions which include battery monitoring for variable manipulation, pin selections for custom L298 style motor drivers, sonar range sensor and collision control, presets for the Sparkfun Ardumoto motor driver, and presets for the Adafruit v 2.3 motor shields (Adafruit Motor Shield V2 Library required).  The Pololu QTR-8RC infrared line sensor and QTRSensors library is required for line following.",
      "website": "https://github.com/MadTooler/Gobbit_Line_Commander",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MadTooler/GobbitLineCommand-0.0.1.zip",
      "archiveFileName": "GobbitLineCommand-0.0.1.zip",
      "size": 37693,
      "checksum": "SHA-256:a7e95dc7db7fcfb4b9a0e2f6ac92c8e95b5bceaf5b5b163df6c15288c89d5d04"
    },
    {
      "name": "GobbitLineCommand",
      "version": "0.0.2",
      "author": "Jason Talley \u003cjason@primalengineering.com\u003e",
      "maintainer": "Jason Talley \u003cjason@primalengineering.com\u003e",
      "sentence": "Basic to advanced line following, intersection detection, basic motor control, battery monitoring, gripper control, and basic collision detection of the Gobbit robot.",
      "paragraph": "The built in functions range from simple out of the box single command line following and gripper actuation to deep fine tuning of PD motor control functions which include battery monitoring for variable manipulation, pin selections for custom L298 style motor drivers, sonar range sensor and collision control, presets for the Sparkfun Ardumoto motor driver, and presets for the Adafruit v 2.3 motor shields (Adafruit Motor Shield V2 Library required).  The Pololu QTR-8RC infrared line sensor and QTRSensors library is required for line following.",
      "website": "https://github.com/MadTooler/Gobbit_Line_Commander",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MadTooler/GobbitLineCommand-0.0.2.zip",
      "archiveFileName": "GobbitLineCommand-0.0.2.zip",
      "size": 37838,
      "checksum": "SHA-256:28b608dd117c02a0daf83574a6c596867bd18d302239264a78d535b016f738d9"
    },
    {
      "name": "GobbitLineCommand",
      "version": "0.0.3",
      "author": "Jason Talley \u003cjason@primalengineering.com\u003e",
      "maintainer": "Jason Talley \u003cjason@primalengineering.com\u003e",
      "sentence": "Basic to advanced line following, intersection detection, basic motor control, battery monitoring, gripper control, and basic collision detection of the Gobbit robot.",
      "paragraph": "The built in functions range from simple out of the box single command line following and gripper actuation to deep fine tuning of PD motor control functions which include battery monitoring for variable manipulation, pin selections for custom L298 style motor drivers, sonar range sensor and collision control, presets for the Sparkfun Ardumoto motor driver, and presets for the Adafruit v 2.3 motor shields (Adafruit Motor Shield V2 Library required).  The Pololu QTR-8RC infrared line sensor and QTRSensors library is required for line following.",
      "website": "https://github.com/MadTooler/Gobbit_Line_Commander",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MadTooler/GobbitLineCommand-0.0.3.zip",
      "archiveFileName": "GobbitLineCommand-0.0.3.zip",
      "size": 38630,
      "checksum": "SHA-256:148375ddd28da488d566337b4ee505c05b9eadfffba7993fd555968b652af274"
    },
    {
      "name": "GobbitLineCommand",
      "version": "0.0.5",
      "author": "Jason Talley \u003cjason@primalengineering.com\u003e",
      "maintainer": "Jason Talley \u003cjason@primalengineering.com\u003e",
      "sentence": "Basic to advanced line following, intersection detection, basic motor control, battery monitoring, gripper control, and basic collision detection of the Gobbit robot.",
      "paragraph": "The built in functions range from simple out of the box single command line following and gripper actuation to deep fine tuning of PD motor control functions which include battery monitoring for variable manipulation, pin selections for custom L298 style motor drivers, sonar range sensor and collision control, presets for the Sparkfun Ardumoto motor driver, and presets for the Adafruit v 2.3 motor shields (Adafruit Motor Shield V2 Library required).  The Pololu QTR-8RC infrared line sensor and QTRSensors library is required for line following.",
      "website": "https://github.com/MadTooler/Gobbit_Line_Commander",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MadTooler/GobbitLineCommand-0.0.5.zip",
      "archiveFileName": "GobbitLineCommand-0.0.5.zip",
      "size": 41815,
      "checksum": "SHA-256:c69cfd9c6645f840eb4a6fc2fee75616c03734b04397430504ffd999850343a7"
    },
    {
      "name": "GobbitLineCommand",
      "version": "0.0.6",
      "author": "Jason Talley \u003cjason@primalengineering.com\u003e",
      "maintainer": "Jason Talley \u003cjason@primalengineering.com\u003e",
      "sentence": "Basic to advanced line following, intersection detection, basic motor control, battery monitoring, gripper control, and basic collision detection of the Gobbit robot.",
      "paragraph": "The built in functions range from simple out of the box single command line following and gripper actuation to deep fine tuning of PD motor control functions which include battery monitoring for variable manipulation, pin selections for custom L298 style motor drivers, sonar range sensor and collision control, presets for the Sparkfun Ardumoto motor driver, and presets for the Adafruit v 2.3 motor shields (Adafruit Motor Shield V2 Library required).  The Pololu QTR-8RC infrared line sensor and QTRSensors library is required for line following.",
      "website": "https://github.com/MadTooler/Gobbit_Line_Commander",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MadTooler/GobbitLineCommand-0.0.6.zip",
      "archiveFileName": "GobbitLineCommand-0.0.6.zip",
      "size": 68288,
      "checksum": "SHA-256:97f3c7d59b48c8972c93a93cd1e7e82e9793077ffde6c03b8da0ed330ea5cf42"
    },
    {
      "name": "GobbitLineCommand",
      "version": "0.0.7",
      "author": "Jason Talley \u003cjason@primalengineering.com\u003e",
      "maintainer": "Jason Talley \u003cjason@primalengineering.com\u003e",
      "sentence": "Basic to advanced line following, intersection detection, basic motor control, battery monitoring, gripper control, and basic collision detection with the Gobbit robot.",
      "paragraph": "The built in functions range from simple out of the box single command line following and gripper actuation to deep fine tuning of PID motor control functions which include battery monitoring for variable manipulation, pin selections for custom L298 or similar style motor drivers, sonar range sensor and collision control, presets for the Sparkfun Ardumoto motor driver, and presets for the Adafruit v 2.3 motor shields.  For line following, the Pololu QTR-8RC infrared line sensor is required.  The Adafruit Motor Shield V2 and the QTRSensors libraries are required.",
      "website": "https://github.com/MadTooler/Gobbit_Line_Commander",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MadTooler/GobbitLineCommand-0.0.7.zip",
      "archiveFileName": "GobbitLineCommand-0.0.7.zip",
      "size": 73354,
      "checksum": "SHA-256:13175b4cc5e02e36423f3b1509e0022a1dfe9c7cf976eb319e4a2ce95fcfae70"
    },
    {
      "name": "DatavisionLCD",
      "version": "1.0.0",
      "author": "CsCrazy85",
      "maintainer": "CsCrazy85 \u003cmika_va@hotmail.com\u003e",
      "sentence": "This library allows communication with Phico Datavision LCD.",
      "paragraph": "This library allows communication with Phico Datavision LCD-display module model no: DV-16215-1-S2RB.",
      "website": "https://github.com/CsCrazy85/DatavisionLCD",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CsCrazy85/DatavisionLCD-1.0.0.zip",
      "archiveFileName": "DatavisionLCD-1.0.0.zip",
      "size": 3640,
      "checksum": "SHA-256:506f3fa0f4b30ae0f93aa9d025e795db2f708fb2fcf0e1a8402bf1b88d15c7a5"
    },
    {
      "name": "DatavisionLCD",
      "version": "1.0.2",
      "author": "CsCrazy85",
      "maintainer": "CsCrazy85 \u003cmika_va@hotmail.com\u003e",
      "sentence": "This library allows communication with Phico Datavision LCD.",
      "paragraph": "This library allows communication with Phico Datavision LCD-display module model no: DV-16215-1-S2RB.",
      "website": "https://github.com/CsCrazy85/DatavisionLCD",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CsCrazy85/DatavisionLCD-1.0.2.zip",
      "archiveFileName": "DatavisionLCD-1.0.2.zip",
      "size": 4235,
      "checksum": "SHA-256:0b8835cf1fa490175eedcd4d81a6a975785e46d68d8baec2604246f3210d4766"
    },
    {
      "name": "SevSeg",
      "version": "3.2.0",
      "author": "Dean Reading \u003cdeanreading@hotmail.com\u003e",
      "maintainer": "Dean Reading \u003cdeanreading@hotmail.com\u003e",
      "sentence": "Turns your Arduino into a seven segment display controller!",
      "paragraph": "Use it to easily display numbers on your seven segment display without any additional hardware. Supports common cathode and common anode displays, the use of switching transistors, decimal numbers, hexadecimal numbers, and alphanumeric characters.",
      "website": "https://github.com/DeanIsMe/SevSeg",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DeanIsMe/SevSeg-3.2.0.zip",
      "archiveFileName": "SevSeg-3.2.0.zip",
      "size": 17168,
      "checksum": "SHA-256:c3ffc3667de9ca66c4efe381042a20ea713046adfd8da2d4c58222a78224183b"
    },
    {
      "name": "SevSeg",
      "version": "3.3.0",
      "author": "Dean Reading \u003cdeanreading@hotmail.com\u003e",
      "maintainer": "Dean Reading \u003cdeanreading@hotmail.com\u003e",
      "sentence": "Turns your Arduino into a seven segment display controller!",
      "paragraph": "Use it to easily display numbers on your seven segment display without any additional hardware. Supports common cathode and common anode displays, the use of switching transistors, decimal numbers, hexadecimal numbers, and alphanumeric characters.",
      "website": "https://github.com/DeanIsMe/SevSeg",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DeanIsMe/SevSeg-3.3.0.zip",
      "archiveFileName": "SevSeg-3.3.0.zip",
      "size": 17426,
      "checksum": "SHA-256:f677f968d7b58989706baa79d3ba5fc15af252b5aa0e67eec0cff213c5c963ae"
    },
    {
      "name": "uRTCLib",
      "version": "3.0.0",
      "author": "Naguissa \u003cnaguissa@gmail.com\u003e",
      "maintainer": "Naguissa \u003cnaguissa@gmail.com\u003e",
      "sentence": "Really tiny library to basic RTC and EEPROM (incorporated) functionality on Arduino. DS1307 and DS3231 RTCs are supported with AT24C32 EEPROM.",
      "paragraph": "Supports Arduino AVR, STM32 and ESP8266 microcontrollers",
      "website": "https://github.com/Naguissa/uRTCLib",
      "category": "Device Control",
      "architectures": [
        "avr",
        "stm32",
        "STM32F1",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Naguissa/uRTCLib-3.0.0.zip",
      "archiveFileName": "uRTCLib-3.0.0.zip",
      "size": 6840,
      "checksum": "SHA-256:dc325f2f6fe7b92564b9ac1364450d2df4988021324bdf295ee6f7fc2006b492"
    },
    {
      "name": "uRTCLib",
      "version": "3.0.2",
      "author": "Naguissa \u003cnaguissa@gmail.com\u003e",
      "maintainer": "Naguissa \u003cnaguissa@gmail.com\u003e",
      "sentence": "Really tiny library to basic RTC and EEPROM (incorporated) functionality on Arduino. DS1307 and DS3231 RTCs are supported with AT24C32 EEPROM.",
      "paragraph": "Supports Arduino AVR, STM32 and ESP8266 microcontrollers",
      "website": "https://github.com/Naguissa/uRTCLib",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Naguissa/uRTCLib-3.0.2.zip",
      "archiveFileName": "uRTCLib-3.0.2.zip",
      "size": 6824,
      "checksum": "SHA-256:5baf6a1f34d5861b9dbe60a52398698047cfa051669272b5d93decca2ff781f0"
    },
    {
      "name": "uRTCLib",
      "version": "3.1.0",
      "author": "Naguissa \u003cnaguissa@gmail.com\u003e",
      "maintainer": "Naguissa \u003cnaguissa@gmail.com\u003e",
      "sentence": "Really tiny library to basic RTC and EEPROM (incorporated) functionality on Arduino. DS1307 and DS3231 RTCs are supported with AT24C32 EEPROM.",
      "paragraph": "Supports Arduino AVR, STM32 and ESP8266 microcontrollers",
      "website": "https://github.com/Naguissa/uRTCLib",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Naguissa/uRTCLib-3.1.0.zip",
      "archiveFileName": "uRTCLib-3.1.0.zip",
      "size": 7653,
      "checksum": "SHA-256:b42614a6ae52aa5e60414ae9feeca9f17701a32ff0aa1dc379b2cf21e571bceb"
    },
    {
      "name": "ROKduino",
      "version": "2.2.0",
      "author": "Nick Morozovsky \u003cnickm@rokenbokeducation.org\u003e, Matthew Woodley, Victor Wang, Keanan Smith",
      "maintainer": "Nick Morozovsky \u003cnickm@rokenbokeducation.org\u003e",
      "sentence": "Allows control of Rokenbok Education ROKduino robotics system.",
      "paragraph": "Provides functions for light, bump, angle, and proximity sensor blocks, light and motor modules, ROK-star IR communication (transmit and receive), built-in LEDs and speaker.",
      "website": "https://github.com/Rokenbok/RokDuino.git",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Rokenbok/ROKduino-2.2.0.zip",
      "archiveFileName": "ROKduino-2.2.0.zip",
      "size": 12799,
      "checksum": "SHA-256:209cbe0c28da76ad6af2d1bf1672c214a36112d58e016b9b902e5558d6685943"
    },
    {
      "name": "ROKduino",
      "version": "2.2.1",
      "author": "Nick Morozovsky \u003cnickm@rokenbokeducation.org\u003e, Matthew Woodley, Victor Wang, Keanan Smith",
      "maintainer": "Nick Morozovsky \u003cnickm@rokenbokeducation.org\u003e",
      "sentence": "Allows control of Rokenbok Education ROKduino robotics system.",
      "paragraph": "Provides functions for light, bump, angle, and proximity sensor blocks, light and motor modules, ROK-star IR communication (transmit and receive), built-in LEDs and speaker.",
      "website": "https://github.com/Rokenbok/RokDuino.git",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Rokenbok/ROKduino-2.2.1.zip",
      "archiveFileName": "ROKduino-2.2.1.zip",
      "size": 12812,
      "checksum": "SHA-256:7ec738d7f334b752721b887a37a24c2208cedb69ef962a976c57d63e88c6329e"
    },
    {
      "name": "ROKduino",
      "version": "2.2.2",
      "author": "Nick Morozovsky \u003cnickm@rokenbokeducation.org\u003e, Matthew Woodley, Victor Wang, Keanan Smith",
      "maintainer": "Nick Morozovsky \u003cnickm@rokenbokeducation.org\u003e",
      "sentence": "Allows control of Rokenbok Education ROKduino robotics system.",
      "paragraph": "Provides functions for light, bump, angle, and proximity sensor blocks, light and motor modules, ROK-star IR communication (transmit and receive), built-in LEDs and speaker.",
      "website": "https://github.com/Rokenbok/RokDuino.git",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Rokenbok/ROKduino-2.2.2.zip",
      "archiveFileName": "ROKduino-2.2.2.zip",
      "size": 12766,
      "checksum": "SHA-256:37adfd6e96010659981fa6294b5504edc4bc36aa08a3e81ed480860896d04a10"
    },
    {
      "name": "ROKduino",
      "version": "2.2.3",
      "author": "Nick Morozovsky \u003cnickm@rokenbokeducation.org\u003e, Matthew Woodley, Victor Wang, Keanan Smith",
      "maintainer": "Nick Morozovsky \u003cnickm@rokenbokeducation.org\u003e",
      "sentence": "Allows control of Rokenbok Education ROKduino robotics system.",
      "paragraph": "Provides functions for light, bump, angle, and proximity sensor blocks, light and motor modules, ROK-star IR communication (transmit and receive), built-in LEDs and speaker.",
      "website": "https://github.com/Rokenbok/RokDuino.git",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Rokenbok/ROKduino-2.2.3.zip",
      "archiveFileName": "ROKduino-2.2.3.zip",
      "size": 12764,
      "checksum": "SHA-256:bdbd4c1f5d3a24f2e11669e0a40d30b38726433f5fa8686ef778aefab6ec6a3c"
    },
    {
      "name": "AnalogKeypad by Makuna",
      "version": "1.0.0",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes interfacing the Banggood Ananlog Keyboard easy.",
      "paragraph": "Includes support for events of click and hold.  Tested on esp8266.",
      "website": "https://github.com/Makuna/AnalogKeypad",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/AnalogKeypad_by_Makuna-1.0.0.zip",
      "archiveFileName": "AnalogKeypad_by_Makuna-1.0.0.zip",
      "size": 4110,
      "checksum": "SHA-256:f43c511c99f0ba6121fe3113d689b2b38d7d6d513005a0ceabbd3a5bcec2b89c"
    },
    {
      "name": "Nokia5110",
      "version": "0.1.0",
      "author": "Nitin Sharma \u003cnitin.email@yahoo.com\u003e",
      "maintainer": "Nitin Sharma \u003cnitin.email@yahoo.com\u003e",
      "sentence": "Nokia 5110 lcd library for Arduino",
      "paragraph": "Supports printing strings on the LCD",
      "website": "https://github.com/nitins11/Nokia5110LCD",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nitins11/Nokia5110-0.1.0.zip",
      "archiveFileName": "Nokia5110-0.1.0.zip",
      "size": 5845,
      "checksum": "SHA-256:9d30859baa449fe4d903be098ad4806158033019d86a33fd892ae508b0476ba8"
    },
    {
      "name": "ArduboyPlaytune",
      "version": "1.0.0",
      "author": "Len Shustek, Chris J. Martinez, Kevin Bates, Josh Goebel, Scott Allen",
      "maintainer": "Ross O. Shoger ros@arduboy.com",
      "sentence": "A library for playing musical scores and tones that is compatible with the Arduboy game system.",
      "paragraph": "Plays one or two part scores, and tones. Driven by interrupts, so audio plays in the background while the \"real\" program runs in the foreground.",
      "website": "https://github.com/arduboy/ArduboyPlaytune",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Arduboy/ArduboyPlaytune-1.0.0.zip",
      "archiveFileName": "ArduboyPlaytune-1.0.0.zip",
      "size": 10971,
      "checksum": "SHA-256:33f2c0de2f3a295ff0a20d2f305e2886c5beb421f8bd5e3a92c0968a50326466"
    },
    {
      "name": "ArduboyPlaytune",
      "version": "1.0.1",
      "author": "Len Shustek, Chris J. Martinez, Kevin Bates, Josh Goebel, Scott Allen",
      "maintainer": "Ross O. Shoger ros@arduboy.com",
      "sentence": "A library for playing musical scores and tones that is compatible with the Arduboy game system.",
      "paragraph": "Plays one or two part scores, and tones. Driven by interrupts, so audio plays in the background while the \"real\" program runs in the foreground.",
      "website": "https://github.com/arduboy/ArduboyPlaytune",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Arduboy/ArduboyPlaytune-1.0.1.zip",
      "archiveFileName": "ArduboyPlaytune-1.0.1.zip",
      "size": 11865,
      "checksum": "SHA-256:4a7622c33f4be83e6b45b6f67fe33b8a4f5e4fc263c0565204e485c3d931f1c2"
    },
    {
      "name": "ArduboyPlaytune",
      "version": "1.0.2",
      "author": "Len Shustek, Chris J. Martinez, Kevin Bates, Josh Goebel, Scott Allen",
      "maintainer": "Scott Allen \u003csaydisp-git@yahoo.ca\u003e",
      "sentence": "A library for playing musical scores and tones that is compatible with the Arduboy game system.",
      "paragraph": "Plays one or two part scores, and tones. Driven by interrupts, so audio plays in the background while the \"real\" program runs in the foreground.",
      "website": "https://github.com/arduboy/ArduboyPlaytune",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Arduboy/ArduboyPlaytune-1.0.2.zip",
      "archiveFileName": "ArduboyPlaytune-1.0.2.zip",
      "size": 15884,
      "checksum": "SHA-256:4f5dc7ae0f03b11c357c441c7d373dd2488b651950b7711c259877106ac90300"
    },
    {
      "name": "ArduboyPlaytune",
      "version": "1.0.3",
      "author": "Len Shustek, Chris J. Martinez, Kevin Bates, Josh Goebel, Scott Allen",
      "maintainer": "Scott Allen \u003csaydisp-git@yahoo.ca\u003e",
      "sentence": "A library for playing musical scores and tones that is compatible with the Arduboy game system.",
      "paragraph": "Plays one or two part scores, and tones. Driven by interrupts, so audio plays in the background while the \"real\" program runs in the foreground.",
      "website": "https://github.com/arduboy/ArduboyPlaytune",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Arduboy/ArduboyPlaytune-1.0.3.zip",
      "archiveFileName": "ArduboyPlaytune-1.0.3.zip",
      "size": 16165,
      "checksum": "SHA-256:348aaeee7ed9413e7bfb0c5217e89ae316ed51968423c66b25a07bdc39d2dbe0"
    },
    {
      "name": "GroveEncoder",
      "version": "1.0.0",
      "author": "David Antler",
      "maintainer": "dantler@users.noreply.github.com",
      "sentence": "Grove Encoder Library",
      "paragraph": "This library enables the Grove Rotary Encoder v1.2 to be controlled by a basic Arduino",
      "website": "https://github.com/dantler/GroveEncoder",
      "category": "Device Control",
      "architectures": [
        "arc32"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/dantler/GroveEncoder-1.0.0.zip",
      "archiveFileName": "GroveEncoder-1.0.0.zip",
      "size": 6333,
      "checksum": "SHA-256:b18b82fc0fd6d0a5b3807d7498373be6ac5708988f08bc1629440bc4607079e1"
    },
    {
      "name": "Sim800L Library Revised",
      "version": "1.1.1",
      "author": "Vittorio Esposito",
      "maintainer": "Vittorio Esposito",
      "sentence": "Arduino library for Sim800L",
      "paragraph": "Arduino library for Sim800L",
      "website": "https://github.com/VittorioEsposito/Sim800L-Arduino-Library-revised",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/VittorioEsposito/Sim800L_Library_Revised-1.1.1.zip",
      "archiveFileName": "Sim800L_Library_Revised-1.1.1.zip",
      "size": 63536,
      "checksum": "SHA-256:ebb0e8668beb0275e97344fd3dbfac0789a66612e9c81d10633f8bb171216088"
    },
    {
      "name": "RF24G",
      "version": "1.0.0",
      "author": "Caio Motta \u003ccaioangelomotta@gmail.com\u003e",
      "maintainer": "Caio Motta \u003ccaioangelomotta@gmail.com\u003e",
      "sentence": "A simple way for up to 6 nRF24L01 radios to communicate with each other.",
      "paragraph": "Requires TMRh20's RF24 library.",
      "website": "https://hobietime.github.io/RF24G/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Hobietime/RF24G-1.0.0.zip",
      "archiveFileName": "RF24G-1.0.0.zip",
      "size": 689553,
      "checksum": "SHA-256:a802d42224a3f437d031d206b56c99859141a48b5fcf898c3d85b2a239860c6f"
    },
    {
      "name": "RF24G",
      "version": "0.9.0",
      "author": "Caio Motta \u003ccaioangelomotta@gmail.com\u003e",
      "maintainer": "Caio Motta \u003ccaioangelomotta@gmail.com\u003e",
      "sentence": "A simple way for up to 6 nRF24L01 radios to communicate with each other.",
      "paragraph": "Requires TMRh20's RF24 library.",
      "website": "https://hobietime.github.io/RF24G/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Hobietime/RF24G-0.9.0.zip",
      "archiveFileName": "RF24G-0.9.0.zip",
      "size": 192063,
      "checksum": "SHA-256:1f85c7d04f7635e028f61c7a1fa28a838386138b8a8966a48a0eaaf8955f6ef5"
    },
    {
      "name": "ArdBitmap",
      "version": "2.0.0",
      "author": "Ignacio Vina",
      "maintainer": "Ignacio Vina \u003cmoblynx.us@gmail.com\u003e",
      "sentence": "A library to compress and draw bitmaps on the Arduboy game system.",
      "paragraph": "It supports real-time resizing and mirroring. This library is implemented as a class template.",
      "website": "https://github.com/igvina/ArdBitmap",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/igvina/ArdBitmap-2.0.0.zip",
      "archiveFileName": "ArdBitmap-2.0.0.zip",
      "size": 91597,
      "checksum": "SHA-256:96562728a11ec71249ab910afc3814d8f31b0050380a95e8a37481f1625d77af"
    },
    {
      "name": "ArdBitmap",
      "version": "2.0.1",
      "author": "Ignacio Vina",
      "maintainer": "Ignacio Vina \u003cmoblynx.us@gmail.com\u003e",
      "sentence": "A library to compress and draw bitmaps on the Arduboy game system.",
      "paragraph": "It supports real-time resizing and mirroring. This library is implemented as a class template.",
      "website": "https://github.com/igvina/ArdBitmap",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/igvina/ArdBitmap-2.0.1.zip",
      "archiveFileName": "ArdBitmap-2.0.1.zip",
      "size": 91797,
      "checksum": "SHA-256:d45ca57df89b279912cc4eed8bed01af5ad1934700513f89d8a2b49f820dc9a3"
    },
    {
      "name": "ArdBitmap",
      "version": "2.0.2",
      "author": "Ignacio Vina",
      "maintainer": "Ignacio Vina \u003cmoblynx.us@gmail.com\u003e",
      "sentence": "A library to compress and draw bitmaps on the Arduboy game system.",
      "paragraph": "It supports real-time resizing and mirroring. This library is implemented as a class template.",
      "website": "https://github.com/igvina/ArdBitmap",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/igvina/ArdBitmap-2.0.2.zip",
      "archiveFileName": "ArdBitmap-2.0.2.zip",
      "size": 91796,
      "checksum": "SHA-256:cbe4877fc0494b0b36ca6b9785660bfdd609d0f9501f7b18a08f71dd8094c01b"
    },
    {
      "name": "ArdBitmap",
      "version": "2.0.3",
      "author": "Ignacio Vina",
      "maintainer": "Ignacio Vina \u003cmoblynx.us@gmail.com\u003e",
      "sentence": "A library to compress and draw bitmaps on the Arduboy game system.",
      "paragraph": "It supports real-time resizing and mirroring. This library is implemented as a class template.",
      "website": "https://github.com/igvina/ArdBitmap",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/igvina/ArdBitmap-2.0.3.zip",
      "archiveFileName": "ArdBitmap-2.0.3.zip",
      "size": 91798,
      "checksum": "SHA-256:6d630de2208873ec34ee0420d15e89950e6f00de065af6ae0a7fa0f69caebb91"
    },
    {
      "name": "ArduinoMqtt",
      "version": "1.0.0",
      "author": "Oleg Kovalenko \u003cmonstrenyatko@gmail.com\u003e",
      "maintainer": "Oleg Kovalenko \u003cmonstrenyatko@gmail.com\u003e",
      "sentence": "MQTT Client library for Arduino based on the Eclipse Paho project.",
      "paragraph": "This library bundles the C/C++ MQTTPacket library of the Eclipse Paho project with simple synchronous C++ MQTT Client implementation to get the Arduino like API.",
      "website": "https://github.com/monstrenyatko/ArduinoMqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/monstrenyatko/ArduinoMqtt-1.0.0.zip",
      "archiveFileName": "ArduinoMqtt-1.0.0.zip",
      "size": 37912,
      "checksum": "SHA-256:98c70407131c6683456943166d45e7e82d06e8f817986f2672550401093023ee"
    },
    {
      "name": "ArduinoMqtt",
      "version": "1.0.1",
      "author": "Oleg Kovalenko \u003cmonstrenyatko@gmail.com\u003e",
      "maintainer": "Oleg Kovalenko \u003cmonstrenyatko@gmail.com\u003e",
      "sentence": "MQTT Client library for Arduino based on the Eclipse Paho project.",
      "paragraph": "This library bundles the C/C++ MQTTPacket library of the Eclipse Paho project with simple synchronous C++ MQTT Client implementation to get the Arduino like API.",
      "website": "https://github.com/monstrenyatko/ArduinoMqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/monstrenyatko/ArduinoMqtt-1.0.1.zip",
      "archiveFileName": "ArduinoMqtt-1.0.1.zip",
      "size": 39461,
      "checksum": "SHA-256:19436834f5ebb621aa870558ee6145db1aa9b3d5fb76409284c887caec2fa82b"
    },
    {
      "name": "ArduinoMqtt",
      "version": "1.1.0",
      "author": "Oleg Kovalenko \u003cmonstrenyatko@gmail.com\u003e",
      "maintainer": "Oleg Kovalenko \u003cmonstrenyatko@gmail.com\u003e",
      "sentence": "MQTT Client library for Arduino based on the Eclipse Paho project.",
      "paragraph": "The library bundles synchronous C++ MQTT Client implementation with C/C++ Eclipse Paho MQTTPacket library. It supports MQTT 3.1 and 3.1.1; QoS 0, 1 and 2.",
      "website": "https://github.com/monstrenyatko/ArduinoMqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/monstrenyatko/ArduinoMqtt-1.1.0.zip",
      "archiveFileName": "ArduinoMqtt-1.1.0.zip",
      "size": 43428,
      "checksum": "SHA-256:c2581dc2539df0cea30f48329f76bfa724952ab970ceda182bc671838094da8b"
    },
    {
      "name": "ArduinoMqtt",
      "version": "1.2.0",
      "author": "Oleg Kovalenko \u003cmonstrenyatko@gmail.com\u003e",
      "maintainer": "Oleg Kovalenko \u003cmonstrenyatko@gmail.com\u003e",
      "sentence": "MQTT Client library for Arduino based on the Eclipse Paho project.",
      "paragraph": "The library bundles synchronous C++ MQTT Client implementation with C/C++ Eclipse Paho MQTTPacket library. It supports MQTT 3.1 and 3.1.1; QoS 0, 1 and 2.",
      "website": "https://github.com/monstrenyatko/ArduinoMqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/monstrenyatko/ArduinoMqtt-1.2.0.zip",
      "archiveFileName": "ArduinoMqtt-1.2.0.zip",
      "size": 43197,
      "checksum": "SHA-256:990c7908608b2bedf888447e6fc784f38996a40c1d964abaff4658db4092fdc0"
    },
    {
      "name": "ArduinoMqtt",
      "version": "1.3.0",
      "author": "Oleg Kovalenko \u003cmonstrenyatko@gmail.com\u003e",
      "maintainer": "Oleg Kovalenko \u003cmonstrenyatko@gmail.com\u003e",
      "sentence": "MQTT Client library for Arduino based on the Eclipse Paho project.",
      "paragraph": "The library bundles synchronous C++ MQTT Client implementation with C/C++ Eclipse Paho MQTTPacket library. It supports MQTT 3.1 and 3.1.1; QoS 0, 1 and 2.",
      "website": "https://github.com/monstrenyatko/ArduinoMqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/monstrenyatko/ArduinoMqtt-1.3.0.zip",
      "archiveFileName": "ArduinoMqtt-1.3.0.zip",
      "size": 45280,
      "checksum": "SHA-256:9d0bc042f8b7300bc30df9aef590bb31c41e8d0a6148dc525abce27104f24214"
    },
    {
      "name": "ArduinoMqtt",
      "version": "1.3.1",
      "author": "Oleg Kovalenko \u003cmonstrenyatko@gmail.com\u003e",
      "maintainer": "Oleg Kovalenko \u003cmonstrenyatko@gmail.com\u003e",
      "sentence": "MQTT Client library for Arduino based on the Eclipse Paho project.",
      "paragraph": "The library bundles synchronous C++ MQTT Client implementation with C/C++ Eclipse Paho MQTTPacket library. It supports MQTT 3.1 and 3.1.1; QoS 0, 1 and 2.",
      "website": "https://github.com/monstrenyatko/ArduinoMqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/monstrenyatko/ArduinoMqtt-1.3.1.zip",
      "archiveFileName": "ArduinoMqtt-1.3.1.zip",
      "size": 45456,
      "checksum": "SHA-256:95480c86da932f33bb5c3503af49154ab053861e7d58bc7a87c56df786d39f7f"
    },
    {
      "name": "SparkFun LIS3DH Breakout",
      "version": "1.0.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "A library to drive the STmicro LIS3DH by SPI or I2C.",
      "paragraph": "Uno examples to drive by I2C or SPI, collect extra sensor inputs, and operate FIFO",
      "website": "https://github.com/sparkfun/SparkFun_LIS3DH_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_LIS3DH_Breakout-1.0.0.zip",
      "archiveFileName": "SparkFun_LIS3DH_Breakout-1.0.0.zip",
      "size": 49282,
      "checksum": "SHA-256:6b83d55a5516c3c5d89cccfe8b6902e6792ab9619729498d4dce3122a9c15870"
    },
    {
      "name": "MD_MAX72XX",
      "version": "2.6.0",
      "author": "majicDesigns",
      "maintainer": "marco_c \u003c8136821@gmail.com\u003e",
      "sentence": "Implements functions that allow the MAX72xx to be used for LED matrices (64 individual LEDs)",
      "paragraph": "Allows the programmer to use the LED matrix as a pixel device, displaying graphics elements much like any other pixel addressable display.",
      "website": "http://arduinocode.codeplex.com",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MajicDesigns/MD_MAX72XX-2.6.0.zip",
      "archiveFileName": "MD_MAX72XX-2.6.0.zip",
      "size": 2152615,
      "checksum": "SHA-256:3096f214b656b7f8bd6cc01bfc0c0dd67ca7e5f0efa60fe75e434be72523e58c"
    },
    {
      "name": "MD_Parola",
      "version": "2.6.2",
      "author": "MajicDesigns",
      "maintainer": "marco_c \u003c8136821@gmail.com\u003e",
      "sentence": "LED matrix text display special effects",
      "paragraph": "Implemented using the MD_MAX72xx library for hardware control. Provides functions to simplify the implementation of text special effects on the LED matrix.",
      "website": "https://github.com/MajicDesigns/MD_Parola",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MajicDesigns/MD_Parola-2.6.2.zip",
      "archiveFileName": "MD_Parola-2.6.2.zip",
      "size": 7581535,
      "checksum": "SHA-256:3a7b4b03b84b21144f54eab939bb4449bb8e5dbefa557ae70250dddf2f6a1234"
    },
    {
      "name": "MD_Parola",
      "version": "2.5.0",
      "author": "majicDesigns",
      "maintainer": "marco_c \u003c8136821@gmail.com\u003e",
      "sentence": "LED matrix text display special effects",
      "paragraph": "Implemented using the MD_MAX72xx library for hardware control. The library implements functions to simplify the implementation of text special effects on the LED matrix.",
      "website": "https://github.com/MajicDesigns/Parola",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MajicDesigns/MD_Parola-2.5.0.zip",
      "archiveFileName": "MD_Parola-2.5.0.zip",
      "size": 7492859,
      "checksum": "SHA-256:f9da42e5d72290ec7bf14053bd3b8b9b8d078f0188b713d7a5b151f5c2a0fa96"
    },
    {
      "name": "MD_Parola",
      "version": "2.2.0",
      "author": "majicDesigns",
      "maintainer": "marco_c \u003c8136821@gmail.com\u003e",
      "sentence": "LED matrix text display special effects",
      "paragraph": "Implemented using the MD_MAX72xx library for hardware control. The library implements functions to simplify the implementation of text special effects on the LED matrix.",
      "website": "http://parola.codeplex.com",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MajicDesigns/MD_Parola-2.2.0.zip",
      "archiveFileName": "MD_Parola-2.2.0.zip",
      "size": 5840893,
      "checksum": "SHA-256:428ecf03e943305669e0c52033767f17b9dabc4929a6caaf71074036b89baa90"
    },
    {
      "name": "MD_Parola",
      "version": "2.6.1",
      "author": "MajicDesigns",
      "maintainer": "marco_c \u003c8136821@gmail.com\u003e",
      "sentence": "LED matrix text display special effects",
      "paragraph": "Implemented using the MD_MAX72xx library for hardware control. Provides functions to simplify the implementation of text special effects on the LED matrix.",
      "website": "https://github.com/MajicDesigns/Parola",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MajicDesigns/MD_Parola-2.6.1.zip",
      "archiveFileName": "MD_Parola-2.6.1.zip",
      "size": 7499733,
      "checksum": "SHA-256:a018d59561f88db4d660c47b95045d11cb99f4f49b6f27e13acf531d72d74e44"
    },
    {
      "name": "MD_Parola",
      "version": "2.6.4",
      "author": "majicDesigns",
      "maintainer": "marco_c \u003c8136821@gmail.com\u003e",
      "sentence": "LED matrix text display special effects",
      "paragraph": "Implemented using the MD_MAX72xx library for hardware control. Provides functions to simplify the implementation of text special effects on the LED matrix.",
      "website": "https://github.com/MajicDesigns/MD_Parola",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MajicDesigns/MD_Parola-2.6.4.zip",
      "archiveFileName": "MD_Parola-2.6.4.zip",
      "size": 9006928,
      "checksum": "SHA-256:3908ae1c70eca2162312a365bd861dc2d7e6b0b05fb8fe68c9fabeaa75028f08"
    },
    {
      "name": "MD_MSGEQ7",
      "version": "1.0.0",
      "author": "majicDesigns",
      "maintainer": "marco_c \u003c8136821@gmail.com\u003e",
      "sentence": "Implements functions for the MSGEQ7 7 band equaliser IC",
      "paragraph": "Allows the programmer to control and read data from the MSGEQ7 device using digital and analog I/O pins. Examples show how to use the data.",
      "website": "https://github.com/MajicDesigns/MSGEQ7",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MajicDesigns/MD_MSGEQ7-1.0.0.zip",
      "archiveFileName": "MD_MSGEQ7-1.0.0.zip",
      "size": 246095,
      "checksum": "SHA-256:05c1e190b31d01575fd8136fb718ab3ae370e5147003bbeda616904bff4ba8f1"
    },
    {
      "name": "Olympic Robotic Challenge",
      "version": "2.1.2",
      "author": "Germán Torres, MakersUPV \u003cmakersupv.com\u003e",
      "maintainer": "Jaime Laborda \u003cjaimelaborda@gmail.com\u003e",
      "sentence": "A library to Olympic Robotic Challenge competition and supporting the official kit.",
      "paragraph": "This library implements some useful functions and examples to drive a 2WD robot able to succes into several proves.",
      "website": "https://github.com/makers-upv/ORC/",
      "category": "Uncategorized",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/makers-upv/Olympic_Robotic_Challenge-2.1.2.zip",
      "archiveFileName": "Olympic_Robotic_Challenge-2.1.2.zip",
      "size": 1339274,
      "checksum": "SHA-256:d327f649de07392be3bab250c3a90308bcd9697531a01411cc315949831a4a3f"
    },
    {
      "name": "MD_Cubo",
      "version": "1.1.0",
      "author": "majicDesigns",
      "maintainer": "marco_c \u003c8136821@gmail.com\u003e",
      "sentence": "Library for device independent LED Cubes.",
      "paragraph": "Library to implement LED cubes in a device-independent manner. Examples for 595 scanning refresh and 7219 type hardware.",
      "website": "https://github.com/MajicDesigns/Cubo",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MajicDesigns/MD_Cubo-1.1.0.zip",
      "archiveFileName": "MD_Cubo-1.1.0.zip",
      "size": 6723609,
      "checksum": "SHA-256:6202f3b538da9fe2bcad3530779ad8dc7646fc1a41e04eca378ef07a7447cbc0"
    },
    {
      "name": "MD_TTT",
      "version": "1.0.0",
      "author": "majicDesigns",
      "maintainer": "marco_c \u003c8136821@gmail.com\u003e",
      "sentence": "Tic-Tac-Toe game logic library",
      "paragraph": "The code implements an elegant algorithm that is briefly described in the blog referenced with some additional features to make decisions easier to implement in code.",
      "website": "https://github.com/MajicDesigns/TicTacToe",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MajicDesigns/MD_TTT-1.0.0.zip",
      "archiveFileName": "MD_TTT-1.0.0.zip",
      "size": 269561,
      "checksum": "SHA-256:fb52184fa7ffa7be7d4a6d48ca8a28d42acb57c937ff74b1d63205132fb7994f"
    },
    {
      "name": "MD_LM335A",
      "version": "1.0.0",
      "author": "majicDesigns",
      "maintainer": "marco_c \u003c8136821@gmail.com\u003e",
      "sentence": "Library for using a LM335A temperature sensor.",
      "paragraph": "Does not need floating point library as temperatures held in hundredths of degree. Analog input is calibrated using Vcc parameter.",
      "website": "https://github.com/MajicDesigns/LM335A",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MajicDesigns/MD_LM335A-1.0.0.zip",
      "archiveFileName": "MD_LM335A-1.0.0.zip",
      "size": 3078,
      "checksum": "SHA-256:351f034ed4551706fe232ab2b1518d99b2b587d1728e6165cf10e6b1f46f3f5c"
    },
    {
      "name": "MD_REncoder",
      "version": "1.0.0",
      "author": "majicDesigns",
      "maintainer": "marco_c \u003c8136821@gmail.com\u003e",
      "sentence": "Library for Rotary Encoder",
      "paragraph": "This is an adaptation of Ben Buxton's excellent rotary library and implements additional features for encoder rotation speed.",
      "website": "https://github.com/MajicDesigns/REncoder",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MajicDesigns/MD_REncoder-1.0.0.zip",
      "archiveFileName": "MD_REncoder-1.0.0.zip",
      "size": 7050,
      "checksum": "SHA-256:d117c596ee36058d7c35e922ad13abfe91e09facaee4e92fc885801971adc6dc"
    },
    {
      "name": "MD_KeySwitch",
      "version": "1.4.0",
      "author": "majicDesigns",
      "maintainer": "marco_c \u003c8136821@gmail.com\u003e",
      "sentence": "Library for digital switches.",
      "paragraph": "Small library for momentary push switches. Detects press, double press, long press (either low/high or high/low transitions), with software debounce and auto repeat",
      "website": "https://github.com/MajicDesigns/KeySwitch",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MajicDesigns/MD_KeySwitch-1.4.0.zip",
      "archiveFileName": "MD_KeySwitch-1.4.0.zip",
      "size": 447850,
      "checksum": "SHA-256:dfbed8a46e5273de1388b0888cc0615b650462db7244867462fd04f99a80850f"
    },
    {
      "name": "MD_KeySwitch",
      "version": "1.4.1",
      "author": "majicDesigns",
      "maintainer": "marco_c \u003c8136821@gmail.com\u003e",
      "sentence": "Library for digital switches.",
      "paragraph": "Small library for momentary push switches. Detects press, double press, long press (either low/high or high/low transitions), with software debounce and auto repeat",
      "website": "https://github.com/MajicDesigns/MD_KeySwitch",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MajicDesigns/MD_KeySwitch-1.4.1.zip",
      "archiveFileName": "MD_KeySwitch-1.4.1.zip",
      "size": 147072,
      "checksum": "SHA-256:ebb7b7ae8b6bb0a6eedbad080335c4bd2a96efd2a534c68cea19bc623ea113cd"
    },
    {
      "name": "MD_TCS230",
      "version": "1.1.0",
      "author": "majicDesigns",
      "maintainer": "marco_c \u003c8136821@gmail.com\u003e",
      "sentence": "Library for TCS230 TCS3200 Colour Sensor",
      "paragraph": "Read the RGB value of colors under the sensor. Example code and documentation shows how to calibrate the sensor.",
      "website": "https://github.com/MajicDesign/TCS230",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MajicDesigns/MD_TCS230-1.1.0.zip",
      "archiveFileName": "MD_TCS230-1.1.0.zip",
      "size": 1383561,
      "checksum": "SHA-256:8b6f4cddace2673960a21a6ab58c609bfb201a1aa9afa0d94e0d17dbab681ccd"
    },
    {
      "name": "MD_DS3231",
      "version": "1.1.0",
      "author": "majicDesigns",
      "maintainer": "marco_c \u003c8136821@gmail.com\u003e",
      "sentence": "Library for using a DS3231 Real Time Clock.",
      "paragraph": "Access to all on-chip features - R/W write clock time and alarm registers, Square wave generator and clock features (on/off, 12/24H, day of week, etc)",
      "website": "https://github.com/MajicDesigns/DS3231",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MajicDesigns/MD_DS3231-1.1.0.zip",
      "archiveFileName": "MD_DS3231-1.1.0.zip",
      "size": 273482,
      "checksum": "SHA-256:bdc79d4a774b4997711e6d2e60773e2fcdc1e0139b9d406383874b1b92edfdfe"
    },
    {
      "name": "MD_DS1307",
      "version": "1.2.0",
      "author": "majicDesigns",
      "maintainer": "marco_c \u003c8136821@gmail.com\u003e",
      "sentence": "Library for using a DS1307 Real Time Clock.",
      "paragraph": "Access to all on-chip features - R/W write clock time registers, 64 byte battery backed up RAM, Square wave generator and clock features (on/off, 12/24H, day of week)",
      "website": "https://github.com/MajicDesigns/DS1307",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MajicDesigns/MD_DS1307-1.2.0.zip",
      "archiveFileName": "MD_DS1307-1.2.0.zip",
      "size": 14264,
      "checksum": "SHA-256:e4e6312eda50000b204e9280490c5d84a3566e12af658269b6f06f298fd8b9f9"
    },
    {
      "name": "MD_AButton",
      "version": "1.0.0",
      "author": "majicDesigns",
      "maintainer": "marco_c \u003c8136821@gmail.com\u003e",
      "sentence": "Library for multiple switches on one analog input.",
      "paragraph": "Features configurable detection time, auto repeat, and key definitions. Suitable for LCD shield display switches.",
      "website": "https://github.com/MajicDesigns/AButton",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MajicDesigns/MD_AButton-1.0.0.zip",
      "archiveFileName": "MD_AButton-1.0.0.zip",
      "size": 5035,
      "checksum": "SHA-256:b9a9a7a0c44c42f6c43ee183206f18d6b3a54a512312fe1f5c3d609296741870"
    },
    {
      "name": "YouMadeIt",
      "version": "1.0.0",
      "author": "Enersy \u003cenersy@enersy.fr\u003e",
      "maintainer": "Enersy \u003cenersy@enersy.fr\u003e",
      "sentence": "Library to connect to YouMadeIt! service.",
      "paragraph": "With this library, you can easily connect your device to a mobile app or to another device, through YouMadeIt! service.",
      "website": "http://www.youmadeit.fr/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/lperez31/YouMadeIt-1.0.0.zip",
      "archiveFileName": "YouMadeIt-1.0.0.zip",
      "size": 59719,
      "checksum": "SHA-256:e968106bcf0041185646627e482b862d9966c4edc74d51757e0ab10e8c7a35f3"
    },
    {
      "name": "YouMadeIt",
      "version": "1.0.1",
      "author": "Enersy \u003cenersy@enersy.fr\u003e",
      "maintainer": "Enersy \u003cenersy@enersy.fr\u003e",
      "sentence": "Library to connect to YouMadeIt! service.",
      "paragraph": "With this library, you can easily connect your device to a mobile app or to another device, through YouMadeIt! service.",
      "website": "http://www.youmadeit.fr/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/lperez31/YouMadeIt-1.0.1.zip",
      "archiveFileName": "YouMadeIt-1.0.1.zip",
      "size": 10787,
      "checksum": "SHA-256:43fb4062ca74401b97df06f91ce2d27f08a6dd904d0bdcffd83f874f8915ee72"
    },
    {
      "name": "ArdVoice",
      "version": "0.1.0",
      "author": "Ignacio Vina",
      "maintainer": "Ignacio Vina \u003cmoblynx.us@gmail.com\u003e",
      "sentence": "A library to play audio (voices) on the Arduboy game system.",
      "paragraph": "Plays PCM speech and other audio from compressed .wav data.",
      "website": "https://github.com/igvina/ArdVoice",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/igvina/ArdVoice-0.1.0.zip",
      "archiveFileName": "ArdVoice-0.1.0.zip",
      "size": 211154,
      "checksum": "SHA-256:8210391fdcf0984a9cbe14e3181c8fcc17f8ca439fb329157006834ffa3b609d"
    },
    {
      "name": "DFW",
      "version": "0.1.0",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "Tele-op and autonomous change over for WPI RBE platform.",
      "paragraph": "This library manages the tele-op and autonmous mode for WPI RBE 1001 class. Students extend the examples and use them to make competition robots.",
      "website": "https://github.com/WPIRoboticsEngineering/DFW",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/WPIRoboticsEngineering/DFW-0.1.0.zip",
      "archiveFileName": "DFW-0.1.0.zip",
      "size": 20575,
      "checksum": "SHA-256:7f900605a871d20e4b6abef84d137008cba1ce3d6499403ce08b49ece44f22e5"
    },
    {
      "name": "DFW",
      "version": "0.1.1",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "Tele-op and autonomous change over for WPI RBE platform.",
      "paragraph": "This library manages the tele-op and autonmous mode for WPI RBE 1001 class. Students extend the examples and use them to make competition robots.",
      "website": "https://github.com/WPIRoboticsEngineering/DFW",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/WPIRoboticsEngineering/DFW-0.1.1.zip",
      "archiveFileName": "DFW-0.1.1.zip",
      "size": 20590,
      "checksum": "SHA-256:e32e7bf074e043c202e7f81730ddab527e1e008c15a450deef5122ff3e4afc0e"
    },
    {
      "name": "DFW",
      "version": "0.2.0",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "Tele-op and autonomous change over for WPI RBE platform.",
      "paragraph": "This library manages the tele-op and autonmous mode for WPI RBE 1001 class. Students extend the examples and use them to make competition robots.",
      "website": "https://github.com/WPIRoboticsEngineering/DFW",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/WPIRoboticsEngineering/DFW-0.2.0.zip",
      "archiveFileName": "DFW-0.2.0.zip",
      "size": 20613,
      "checksum": "SHA-256:0c3982cc6a633fdf7dc7083e7c5dc5c19fac407cfa53896856063226d9968686"
    },
    {
      "name": "DFW",
      "version": "0.2.1",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "Tele-op and autonomous change over for WPI RBE platform.",
      "paragraph": "This library manages the tele-op and autonmous mode for WPI RBE 1001 class. Students extend the examples and use them to make competition robots.",
      "website": "https://github.com/WPIRoboticsEngineering/DFW",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/WPIRoboticsEngineering/DFW-0.2.1.zip",
      "archiveFileName": "DFW-0.2.1.zip",
      "size": 20631,
      "checksum": "SHA-256:8eb0115f01fe0ef5a53d31a2438b5c59fc2b292793ded24826187471dde3f5c5"
    },
    {
      "name": "DFW",
      "version": "0.2.2",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "Tele-op and autonomous change over for WPI RBE platform.",
      "paragraph": "This library manages the tele-op and autonmous mode for WPI RBE 1001 class. Students extend the examples and use them to make competition robots.",
      "website": "https://github.com/WPIRoboticsEngineering/DFW",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/WPIRoboticsEngineering/DFW-0.2.2.zip",
      "archiveFileName": "DFW-0.2.2.zip",
      "size": 21757,
      "checksum": "SHA-256:62d9d0fd2ee7e343259587de305b78dc5ff1016a7fa506abdd3fcf1bab7aa43d"
    },
    {
      "name": "DFW",
      "version": "0.2.3",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "Tele-op and autonomous change over for WPI RBE platform.",
      "paragraph": "This library manages the tele-op and autonmous mode for WPI RBE 1001 class. Students extend the examples and use them to make competition robots.",
      "website": "https://github.com/WPIRoboticsEngineering/DFW",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/WPIRoboticsEngineering/DFW-0.2.3.zip",
      "archiveFileName": "DFW-0.2.3.zip",
      "size": 21690,
      "checksum": "SHA-256:20e67affac99b0164131807ae8b11a8bb5aa8e50fef2b8fc4fc62e5d6dc8d79d"
    },
    {
      "name": "DFW",
      "version": "0.2.4",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "Tele-op and autonomous change over for WPI RBE platform.",
      "paragraph": "This library manages the tele-op and autonmous mode for WPI RBE 1001 class. Students extend the examples and use them to make competition robots.",
      "website": "https://github.com/WPIRoboticsEngineering/DFW",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/WPIRoboticsEngineering/DFW-0.2.4.zip",
      "archiveFileName": "DFW-0.2.4.zip",
      "size": 21699,
      "checksum": "SHA-256:41f737357e71186879e031b7cc85aaaa0a758f349b59796738bee60827e17a45"
    },
    {
      "name": "MultiLcd",
      "version": "1.0.0-alpha",
      "author": "Patrick Roncagliolo \u003cronca.pat@gmail.com\u003e",
      "maintainer": "Patrick Roncagliolo \u003cronca.pat@gmail.com\u003e",
      "sentence": "Drive multiple LCDs like a single LiquidCrystal object.",
      "paragraph": "This library let you use multi-controller LCDs (like the 4*40) or a bunch of distinct LCDs as a single LiquidCrystal(LC) object: in fact, the API is the same of the wide-known library, except for constructor and .begin() method, and the new \".attach()\". Once initialization is done, you can drive the designated LCDs (or LCDs controllers) as a single, virtual LCD.",
      "website": "https://github.com/roncapat/MultiLcd",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/roncapat/MultiLcd-1.0.0-alpha.zip",
      "archiveFileName": "MultiLcd-1.0.0-alpha.zip",
      "size": 17042,
      "checksum": "SHA-256:0a7bf65d74396fec079ce275625f025b2dfda008e68b9e3c2832778a20066efe"
    },
    {
      "name": "MakerVision",
      "version": "0.0.2",
      "author": "MakerVision",
      "maintainer": "MakerVision \u003ckyle@makervision.io\u003e",
      "sentence": "Arduino library used by Scratch generated code on http://makervision.io",
      "paragraph": "This library includes helpers that are used by MakerVision's Scratch for Arduino IDE (http://makervision.io).",
      "website": "https://github.com/MakerVision/ArduinoLibrary",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MakerVision/MakerVision-0.0.2.zip",
      "archiveFileName": "MakerVision-0.0.2.zip",
      "size": 6177,
      "checksum": "SHA-256:e1602f96edabb28f3e919444e9dec2e2b4f8711689369528a84f26af62975e8c"
    },
    {
      "name": "MakerVision",
      "version": "0.0.3",
      "author": "MakerVision",
      "maintainer": "MakerVision \u003ckyle@makervision.io\u003e",
      "sentence": "Arduino library used by Scratch generated code on http://makervision.io",
      "paragraph": "This library includes helpers that are used by MakerVision's Scratch for Arduino IDE (http://makervision.io).",
      "website": "https://github.com/MakerVision/ArduinoLibrary",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MakerVision/MakerVision-0.0.3.zip",
      "archiveFileName": "MakerVision-0.0.3.zip",
      "size": 6178,
      "checksum": "SHA-256:f0840e8b08e5acdabdf0ad3838cc6482ca89a9bc5ca0766d5f907b28e9cdff9d"
    },
    {
      "name": "MakerVision",
      "version": "0.0.1",
      "author": "MakerVision",
      "maintainer": "MakerVision \u003ckyle@makervision.io\u003e",
      "sentence": "Arduino library used by Scratch generated code on http://makervision.io",
      "paragraph": "This library includes helpers that are used by MakerVision's Scratch for Arduino IDE (http://makervision.io).",
      "website": "https://github.com/MakerVision/ArduinoLibrary",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MakerVision/MakerVision-0.0.1.zip",
      "archiveFileName": "MakerVision-0.0.1.zip",
      "size": 3232,
      "checksum": "SHA-256:6ea3cb64664c0fcbc294f9ea8fca112cdfbb10c104299d48e63855e6e8e9fa05"
    },
    {
      "name": "QList",
      "version": "0.1.0",
      "author": "SloCompTech",
      "maintainer": "SloCompTech \u003cSloCompTech@gmail.com\u003e",
      "sentence": "Library implements linked lists",
      "paragraph": "It enables to create list of items in order like queue or stack or vector",
      "website": "https://github.com/SloCompTech/QList",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SloCompTech/QList-0.1.0.zip",
      "archiveFileName": "QList-0.1.0.zip",
      "size": 3540,
      "checksum": "SHA-256:709746a41253fc43f128edbfc4753c326f3f5a6e6011df970540ac4d58c64a00"
    },
    {
      "name": "QList",
      "version": "0.3.0",
      "author": "SloCompTech",
      "maintainer": "SloCompTech \u003cSloCompTech@gmail.com\u003e",
      "sentence": "Library implements linked lists",
      "paragraph": "It enables to create list of items in order like queue or stack or vector",
      "website": "https://github.com/SloCompTech/QList",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SloCompTech/QList-0.3.0.zip",
      "archiveFileName": "QList-0.3.0.zip",
      "size": 4235,
      "checksum": "SHA-256:a2d4ae80c324a0c6ce1b807e081133414a2c5d9667c5da7a92298fc42bad6eb9"
    },
    {
      "name": "QList",
      "version": "0.5.0",
      "author": "SloCompTech",
      "maintainer": "SloCompTech \u003cSloCompTech@gmail.com\u003e",
      "sentence": "Library implements linked lists",
      "paragraph": "It enables to create list of items in order like queue or stack or vector",
      "website": "https://github.com/SloCompTech/QList",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SloCompTech/QList-0.5.0.zip",
      "archiveFileName": "QList-0.5.0.zip",
      "size": 4339,
      "checksum": "SHA-256:d14fdef5093af6576eb8255c9f8c92276e1b24d9d5cb415a2e4d41f33b186656"
    },
    {
      "name": "QList",
      "version": "0.5.1",
      "author": "SloCompTech",
      "maintainer": "SloCompTech \u003cSloCompTech@gmail.com\u003e",
      "sentence": "Library implements linked lists",
      "paragraph": "It enables to create list of items in order like queue or stack or vector",
      "website": "https://github.com/SloCompTech/QList",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SloCompTech/QList-0.5.1.zip",
      "archiveFileName": "QList-0.5.1.zip",
      "size": 4515,
      "checksum": "SHA-256:7987fae5e6ad8e9ed55dc8468b5ed830a4a7ed90a4de9fe4a7aae05a81c786e7"
    },
    {
      "name": "FingerLib",
      "version": "2.0.0",
      "author": "Olly McBride",
      "maintainer": "Olly McBride \u003collymcbride@openbionics.com\u003e",
      "sentence": "Allows for servo-like functionality for finger control. For Atmega 2560 (Almond PCB) and Arduino Zero (Chestnut) only.",
      "paragraph": "This library is created and maintained by Olly McBride on behalf of Open Bionics.",
      "website": "http://www.openbionics.com",
      "category": "Device Control",
      "architectures": [
        "avr",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Open-Bionics/FingerLib-2.0.0.zip",
      "archiveFileName": "FingerLib-2.0.0.zip",
      "size": 32607,
      "checksum": "SHA-256:41940740999aed183dcd0fd418a038d71ef8b82d307f2bf98503b4f65c346b81"
    },
    {
      "name": "FingerLib",
      "version": "2.0.1",
      "author": "Olly McBride",
      "maintainer": "Olly McBride \u003collymcbride@openbionics.com\u003e",
      "sentence": "Allows for servo-like functionality for finger control. For Atmega 2560 (Almond PCB) and Arduino Zero (Chestnut) only.",
      "paragraph": "This library is created and maintained by Olly McBride on behalf of Open Bionics.",
      "website": "http://www.openbionics.com",
      "category": "Device Control",
      "architectures": [
        "avr",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Open-Bionics/FingerLib-2.0.1.zip",
      "archiveFileName": "FingerLib-2.0.1.zip",
      "size": 33372,
      "checksum": "SHA-256:b54064a6b66aafe9b2ef02977e0d163531c2deef38800b3300ed5f027667d5fd"
    },
    {
      "name": "CONTROLLINO",
      "version": "1.0.0",
      "author": "CONTROLLINO",
      "maintainer": "CONTROLLINO \u003cinfo@controllino.biz\u003e",
      "sentence": "Support library for CONTROLLINO PLC boards",
      "paragraph": "Set of useful keywords, constants, macros and functions",
      "website": "https://github.com/CONTROLLINO-PLC/CONTROLLINO_Library",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CONTROLLINO-PLC/CONTROLLINO-1.0.0.zip",
      "archiveFileName": "CONTROLLINO-1.0.0.zip",
      "size": 221324,
      "checksum": "SHA-256:98423f814522cbfc7d801cc7920b327c6a526cd971bf6c49c42873dd2077e79d"
    },
    {
      "name": "CONTROLLINO",
      "version": "1.1.0",
      "author": "CONTROLLINO",
      "maintainer": "CONTROLLINO \u003cinfo@controllino.biz\u003e",
      "sentence": "Support library for CONTROLLINO PLC boards",
      "paragraph": "Set of useful keywords, constants, macros and functions",
      "website": "https://github.com/CONTROLLINO-PLC/CONTROLLINO_Library",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CONTROLLINO-PLC/CONTROLLINO-1.1.0.zip",
      "archiveFileName": "CONTROLLINO-1.1.0.zip",
      "size": 226062,
      "checksum": "SHA-256:dfde2f5245b53f5a1c12501dc224878f8e09d7be1db693d9a054121161312feb"
    },
    {
      "name": "CONTROLLINO",
      "version": "1.1.1",
      "author": "CONTROLLINO",
      "maintainer": "CONTROLLINO \u003cinfo@controllino.biz\u003e",
      "sentence": "Support library for CONTROLLINO PLC boards",
      "paragraph": "Set of useful keywords, constants, macros and functions",
      "website": "https://github.com/CONTROLLINO-PLC/CONTROLLINO_Library",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CONTROLLINO-PLC/CONTROLLINO-1.1.1.zip",
      "archiveFileName": "CONTROLLINO-1.1.1.zip",
      "size": 226887,
      "checksum": "SHA-256:01c87104409f0ae2b2082d84d3ee63df5750175a12f624f6beea005214570a16"
    },
    {
      "name": "CONTROLLINO",
      "version": "1.1.2",
      "author": "CONTROLLINO",
      "maintainer": "CONTROLLINO \u003cinfo@controllino.biz\u003e",
      "sentence": "Support library for CONTROLLINO PLC boards",
      "paragraph": "Set of useful keywords, constants, macros and functions",
      "website": "https://github.com/CONTROLLINO-PLC/CONTROLLINO_Library",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/CONTROLLINO-PLC/CONTROLLINO-1.1.2.zip",
      "archiveFileName": "CONTROLLINO-1.1.2.zip",
      "size": 307564,
      "checksum": "SHA-256:a9aa257ed911ca3a6a0640144762ab5c8a12216db83685bab944271e680d3869"
    },
    {
      "name": "PololuLedStrip",
      "version": "4.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Arduino library for addressable RGB LED strips from Pololu",
      "paragraph": "This library works with NeoPixels, WS2812B LEDs, and WS2811 LEDs.",
      "website": "https://github.com/pololu/pololu-led-strip",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/PololuLedStrip-4.0.0.zip",
      "archiveFileName": "PololuLedStrip-4.0.0.zip",
      "size": 21065,
      "checksum": "SHA-256:1509b9c25ed2369fd2e80a4477237dd634cc217effcc6a91cbba2a2512a3cdc3"
    },
    {
      "name": "PololuLedStrip",
      "version": "4.1.1",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Arduino library for addressable RGB LED strips from Pololu",
      "paragraph": "This library works with NeoPixels, WS2812B LEDs, and WS2811 LEDs.",
      "website": "https://github.com/pololu/pololu-led-strip-arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/PololuLedStrip-4.1.1.zip",
      "archiveFileName": "PololuLedStrip-4.1.1.zip",
      "size": 21183,
      "checksum": "SHA-256:7deb7a86970244ea93ca4b8f0139acdebdf5722621aac4aec3f5d7158ae4e6a7"
    },
    {
      "name": "PololuLedStrip",
      "version": "4.2.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Arduino library for addressable RGB LED strips from Pololu",
      "paragraph": "This library works with NeoPixels, WS2812B LEDs, and WS2811 LEDs.",
      "website": "https://github.com/pololu/pololu-led-strip-arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/PololuLedStrip-4.2.0.zip",
      "archiveFileName": "PololuLedStrip-4.2.0.zip",
      "size": 21535,
      "checksum": "SHA-256:234f4e2ac222383ff0676cd0e9a0d2b1eb12fe4dfe56a7352bb76e8024d44a0d"
    },
    {
      "name": "MCUFRIEND_kbv",
      "version": "2.9.1",
      "author": "David Prentice",
      "maintainer": "David Prentice",
      "sentence": "TFT Library for 2.4, 2.8, 3.5, 3.6, 3.95 inch mcufriend UNO Shields",
      "paragraph": "TFT Library for 2.4, 2.8, 3.5, 3.6, 3.95 inch mcufriend UNO Shields.  Must have /RD pin to be readable.",
      "website": "https://github.com/prenticedavid/MCUFRIEND_kbv",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/prenticedavid/MCUFRIEND_kbv-2.9.1.zip",
      "archiveFileName": "MCUFRIEND_kbv-2.9.1.zip",
      "size": 199807,
      "checksum": "SHA-256:b535ebf95e099a2e87190c2b51d55d4907d0a980cb945df63ad63991c25b23ee"
    },
    {
      "name": "MCUFRIEND_kbv",
      "version": "2.9.2-beta",
      "author": "David Prentice",
      "maintainer": "David Prentice",
      "sentence": "TFT Library for 2.4, 2.8, 3.5, 3.6, 3.95 inch mcufriend UNO Shields",
      "paragraph": "TFT Library for 2.4, 2.8, 3.5, 3.6, 3.95 inch mcufriend UNO Shields.  Must have /RD pin to be readable.",
      "website": "https://github.com/prenticedavid/MCUFRIEND_kbv",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/prenticedavid/MCUFRIEND_kbv-2.9.2-beta.zip",
      "archiveFileName": "MCUFRIEND_kbv-2.9.2-beta.zip",
      "size": 215312,
      "checksum": "SHA-256:30b61ff1c2a9f9b562c13240feb57418a0bb56390bba4882f3a88997bfd665b5"
    },
    {
      "name": "MCUFRIEND_kbv",
      "version": "2.9.3",
      "author": "David Prentice",
      "maintainer": "David Prentice",
      "sentence": "TFT Library for 2.4, 2.8, 3.5, 3.6, 3.95 inch mcufriend UNO Shields",
      "paragraph": "TFT Library for 2.4, 2.8, 3.5, 3.6, 3.95 inch mcufriend UNO Shields.  Must have /RD pin to be readable.",
      "website": "https://github.com/prenticedavid/MCUFRIEND_kbv",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/prenticedavid/MCUFRIEND_kbv-2.9.3.zip",
      "archiveFileName": "MCUFRIEND_kbv-2.9.3.zip",
      "size": 220658,
      "checksum": "SHA-256:df2ae6d445bf4dd0b6216012a5c7c100ee38c61397928f7cde5bc31f1820635f"
    },
    {
      "name": "MCUFRIEND_kbv",
      "version": "2.9.3-beta",
      "author": "David Prentice",
      "maintainer": "David Prentice",
      "sentence": "TFT Library for 2.4, 2.8, 3.5, 3.6, 3.95 inch mcufriend UNO Shields",
      "paragraph": "TFT Library for 2.4, 2.8, 3.5, 3.6, 3.95 inch mcufriend UNO Shields.  Must have /RD pin to be readable.",
      "website": "https://github.com/prenticedavid/MCUFRIEND_kbv",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/prenticedavid/MCUFRIEND_kbv-2.9.3-beta.zip",
      "archiveFileName": "MCUFRIEND_kbv-2.9.3-beta.zip",
      "size": 221054,
      "checksum": "SHA-256:98753d56dc345d0a01ca805617622e17d316476d2efa92883ce4de500fe5093b"
    },
    {
      "name": "MCUFRIEND_kbv",
      "version": "2.9.4",
      "author": "David Prentice",
      "maintainer": "David Prentice",
      "sentence": "TFT Library for 2.4, 2.8, 3.5, 3.6, 3.95 inch mcufriend UNO Shields",
      "paragraph": "TFT Library for 2.4, 2.8, 3.5, 3.6, 3.95 inch mcufriend UNO Shields.  Must have /RD pin to be readable.",
      "website": "https://github.com/prenticedavid/MCUFRIEND_kbv",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/prenticedavid/MCUFRIEND_kbv-2.9.4.zip",
      "archiveFileName": "MCUFRIEND_kbv-2.9.4.zip",
      "size": 229078,
      "checksum": "SHA-256:ef9d0d3a4c253866bbd3b9affd6e67ce0ad4a61c5e0dfdb62b7ff978ba1a10c8"
    },
    {
      "name": "MCUFRIEND_kbv",
      "version": "2.9.5",
      "author": "David Prentice",
      "maintainer": "David Prentice",
      "sentence": "TFT Library for 2.4, 2.8, 3.5, 3.6, 3.95 inch mcufriend UNO Shields",
      "paragraph": "TFT Library for 2.4, 2.8, 3.5, 3.6, 3.95 inch mcufriend UNO Shields.  Must have /RD pin to be readable.",
      "website": "https://github.com/prenticedavid/MCUFRIEND_kbv",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/prenticedavid/MCUFRIEND_kbv-2.9.5.zip",
      "archiveFileName": "MCUFRIEND_kbv-2.9.5.zip",
      "size": 235535,
      "checksum": "SHA-256:a845f374a7b545dbfad0168b047fc9f22a4076a14f93ed306fb3a245edae7579"
    },
    {
      "name": "MCUFRIEND_kbv",
      "version": "2.9.6",
      "author": "David Prentice",
      "maintainer": "David Prentice",
      "sentence": "TFT Library for 2.4, 2.8, 3.5, 3.6, 3.95 inch mcufriend UNO Shields",
      "paragraph": "TFT Library for 2.4, 2.8, 3.5, 3.6, 3.95 inch mcufriend UNO Shields.  Must have /RD pin to be readable.",
      "website": "https://github.com/prenticedavid/MCUFRIEND_kbv",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/prenticedavid/MCUFRIEND_kbv-2.9.6.zip",
      "archiveFileName": "MCUFRIEND_kbv-2.9.6.zip",
      "size": 236516,
      "checksum": "SHA-256:3445b6f10fe0f8e70bcde4d5e456a033253ba1315ea4f6522e4df59a59df982d"
    },
    {
      "name": "WireData",
      "version": "1.0.0",
      "author": "Brett Hagman \u003cbhagman@wiring.org.co\u003e",
      "maintainer": "Brett Hagman \u003cbhagman@wiring.org.co\u003e",
      "sentence": "A library to simplify sending data via I2C (aka TWI).\u003cbr /\u003e",
      "paragraph": "This is a Wiring Framework (and Arduino) library to simplify sending multi-byte data over I2C.\u003cbr /\u003e\u003cbr /\u003eOftentimes when you are writing some code that uses I2C, you will want to send multi-byte data over I2C protocol. The Wire library has no concept of data types, and only permits sending data as bytes.\u003cbr /\u003e\u003cbr /\u003eThis library contains some templates to permit sending multi-byte variables/data over I2C.\u003cbr /\u003e\u003cbr /\u003eIssues or questions: \u003ca href=\"https://github.com/bhagman/WireData/issues\"\u003ehttps://github.com/bhagman/WireData/issues\u003c/a\u003e\u003cbr /\u003e",
      "website": "https://github.com/bhagman/WireData",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bhagman/WireData-1.0.0.zip",
      "archiveFileName": "WireData-1.0.0.zip",
      "size": 5244,
      "checksum": "SHA-256:3f6d0d92b08ccd4cc2fd55d7894c85f580da16f6baa03e861050cd5e5114d09d"
    },
    {
      "name": "XLR8LFSR",
      "version": "1.0.0",
      "author": "Alorium Technology",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Simple LFSR example on the XLR8 FPGA.",
      "paragraph": "Used as an example to begin FPGA development",
      "website": "https://github.com/AloriumTechnology/XLR8LFSR",
      "category": "Uncategorized",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8LFSR-1.0.0.zip",
      "archiveFileName": "XLR8LFSR-1.0.0.zip",
      "size": 24608262,
      "checksum": "SHA-256:3e11abe790b9d2a10931dc8196010c9733f30b9c45a87ba818d2c34ea10a402c"
    },
    {
      "name": "XLR8LFSR",
      "version": "1.0.1",
      "author": "Alorium Technology",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Simple LFSR example on the XLR8 FPGA.",
      "paragraph": "Used as an example to begin FPGA development",
      "website": "https://github.com/AloriumTechnology/XLR8LFSR",
      "category": "Uncategorized",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8LFSR-1.0.1.zip",
      "archiveFileName": "XLR8LFSR-1.0.1.zip",
      "size": 24607239,
      "checksum": "SHA-256:99596692b46f4555120e388ae6f0ba15c84c2f7eefccec4c957bbe19927b9f26"
    },
    {
      "name": "Tone",
      "version": "1.0.0",
      "author": "Brett Hagman \u003cbhagman@wiring.org.co\u003e",
      "maintainer": "Brett Hagman \u003cbhagman@wiring.org.co\u003e",
      "sentence": "A software digital square wave tone generation library.\u003cbr /\u003e",
      "paragraph": "This is a Wiring Framework (Arduino) library to produce square-wave tones on an arbitrary pin.\u003cbr /\u003eYou can make multiple instances of the Tone object, to create tones on different pins.\u003cbr /\u003e\u003cbr /\u003eIssues or questions: \u003ca href=\"https://github.com/bhagman/Tone/issues\"\u003ehttps://github.com/bhagman/Tone/issues\u003c/a\u003e\u003cbr /\u003e",
      "website": "https://github.com/bhagman/Tone",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bhagman/Tone-1.0.0.zip",
      "archiveFileName": "Tone-1.0.0.zip",
      "size": 15024,
      "checksum": "SHA-256:eeda8b660206696d4374646f0cfc8e1119ece3560f2ba0e61d041ba6e49e8a7c"
    },
    {
      "name": "SoftPWM",
      "version": "1.0.0",
      "author": "Brett Hagman \u003cbhagman@wiring.org.co\u003e",
      "maintainer": "Brett Hagman \u003cbhagman@wiring.org.co\u003e",
      "sentence": "A software library to produce a 50 percent duty cycle PWM signal on arbitrary pins.\u003cbr /\u003e",
      "paragraph": "A Wiring Framework (and Arduino) Library, for Atmel AVR8 bit series microcontrollers, to produce PWM signals on any arbitrary pin.\u003cbr /\u003eIt was originally designed for controlling the brightness of LEDs, but could be adapted to control servos and other low frequency PWM controlled  devices as well.\u003cbr /\u003eIt uses a single hardware timer (Timer 2) on an Atmel AVR 8 bit microcontroller to generate up to 20 PWM channels (your mileage may vary).\u003cbr /\u003e\u003cbr /\u003eIssues or questions: \u003ca href=\"https://github.com/bhagman/SoftPWM/issues\"\u003ehttps://github.com/bhagman/SoftPWM/issues\u003c/a\u003e\u003cbr /\u003e",
      "website": "https://github.com/bhagman/SoftPWM",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bhagman/SoftPWM-1.0.0.zip",
      "archiveFileName": "SoftPWM-1.0.0.zip",
      "size": 10778,
      "checksum": "SHA-256:457fa48173c7780a5c9f1285980332cc94905db8f3477020be10f13154d6cd59"
    },
    {
      "name": "SmartDial",
      "version": "1.0.0",
      "author": "Brett Hagman \u003cbhagman@roguerobotics.com\u003e",
      "maintainer": "Brett Hagman \u003cbhagman@roguerobotics.com\u003e",
      "sentence": "A library to communicate with the Rogue Robotics SmartDial.\u003cbr /\u003e",
      "paragraph": "This library communicates with the Rogue Robotics SmartDial using I2C.\u003cbr /\u003eThe Rogue Robotics SmartDial is a rotary encoder dial, for use in Wiring Framework based projects (such as Arduino sketches).\u003cbr /\u003e\u003cbr /\u003eIssues or questions: \u003ca href=\"https://github.com/bhagman/SmartDial/issues\"\u003ehttps://github.com/bhagman/SmartDial/issues\u003c/a\u003e\u003cbr /\u003e",
      "website": "https://github.com/bhagman/SmartDial",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/RogueRobotics/SmartDial-1.0.0.zip",
      "archiveFileName": "SmartDial-1.0.0.zip",
      "size": 6179,
      "checksum": "SHA-256:dc0e183fad538a8a4dbc3a593c7426d7f4500cde5a7ea1efd6a6ee15593b2248"
    },
    {
      "name": "RogueSD",
      "version": "2.0.0",
      "author": "Brett Hagman \u003cbhagman@roguerobotics.com\u003e",
      "maintainer": "Brett Hagman \u003cbhagman@roguerobotics.com\u003e",
      "sentence": "A library to communicate with the Rogue Robotics Data Storage Modules.\u003cbr /\u003e",
      "paragraph": "This is a Wiring Framework (Arduino) library to communicate with the Rogue Robotics Data Storage modules, such as the uMMC, uMP3 or the rMP3.\u003cbr /\u003e\u003cbr /\u003eThe modules make it super easy to access data on an SD card.\u003cbr /\u003e\u003cbr /\u003eSee the \u003ca href=\"https://roguerobotics.com/\"\u003eRogue Robotics site\u003c/a\u003e for more information.\u003cbr /\u003e\u003cbr /\u003eIssues or questions: \u003ca href=\"https://github.com/RogueRobotics/RogueSD/issues\"\u003ehttps://github.com/RogueRobotics/RogueSD/issues\u003c/a\u003e\u003cbr /\u003e",
      "website": "https://github.com/RogueRobotics/RogueSD",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/RogueRobotics/RogueSD-2.0.0.zip",
      "archiveFileName": "RogueSD-2.0.0.zip",
      "size": 19170,
      "checksum": "SHA-256:25dc93d7424ebeff8f8eb2246dcb9a80beefc81d5341afd3035ff379873f1540"
    },
    {
      "name": "RogueMP3",
      "version": "2.0.0",
      "author": "Brett Hagman \u003cbhagman@roguerobotics.com\u003e",
      "maintainer": "Brett Hagman \u003cbhagman@roguerobotics.com\u003e",
      "sentence": "A library to communicate with the Rogue Robotics MP3 Playback Modules.\u003cbr /\u003e",
      "paragraph": "This is a Wiring Framework (Arduino) library to communicate with the Rogue Robotics MP3 modules, such as the uMP3 or the rMP3.\u003cbr /\u003e\u003cbr /\u003eThe modules make it super easy to play back MP3 and other audio files, as well as access data on an SD card simultaneously.\u003cbr /\u003e\u003cbr /\u003eSee the \u003ca href=\"https://roguerobotics.com/\"\u003eRogue Robotics site\u003c/a\u003e for more information.\u003cbr /\u003e\u003cbr /\u003eIssues or questions: \u003ca href=\"https://github.com/RogueRobotics/RogueMP3/issues\"\u003ehttps://github.com/RogueRobotics/RogueMP3/issues\u003c/a\u003e\u003cbr /\u003e",
      "website": "https://github.com/RogueRobotics/RogueMP3",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/RogueRobotics/RogueMP3-2.0.0.zip",
      "archiveFileName": "RogueMP3-2.0.0.zip",
      "size": 62276,
      "checksum": "SHA-256:0647d5347deecb8e1b2b2a5f436b1dc6e65054bc0dd88374e1fc4d6845a1df1a"
    },
    {
      "name": "MillisTimer",
      "version": "1.0.0",
      "author": "Brett Hagman \u003cbhagman@roguerobotics.com\u003e",
      "maintainer": "Brett Hagman \u003cbhagman@roguerobotics.com\u003e",
      "sentence": "A timer library for working with millis().\u003cbr /\u003e",
      "paragraph": "This is a Wiring Framework (Arduino) library to provide an easy way to have a recurring actions.\u003cbr /\u003eYou can make multiple instances of the MillisTimer object, to create multiple actions.\u003cbr /\u003e\u003cbr /\u003eIssues or questions: \u003ca href=\"https://github.com/bhagman/MillisTimer/issues\"\u003ehttps://github.com/bhagman/MillisTimer/issues\u003c/a\u003e\u003cbr /\u003e",
      "website": "https://github.com/bhagman/MillisTimer",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bhagman/MillisTimer-1.0.0.zip",
      "archiveFileName": "MillisTimer-1.0.0.zip",
      "size": 5159,
      "checksum": "SHA-256:0b1c9f0752ac5cbab69b053126061d49a4521ba17f403e2ef261a86d7d413ed5"
    },
    {
      "name": "XLR8SPI",
      "version": "0.0.3",
      "author": "Alorium Technology",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "XB to enable SPI interfaces through the JTAG pins.",
      "paragraph": "Adds functionality to use the JTAG pins on an Alorium XLR8 board as two extra SPI interfaces.",
      "website": "https://github.com/AloriumTechnology/XLR8SPI",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8SPI-0.0.3.zip",
      "archiveFileName": "XLR8SPI-0.0.3.zip",
      "size": 24992509,
      "checksum": "SHA-256:cc0c4c00fd4b00c3b69c3ba7bfd77a23d70f2710192fc8db2d3d3316f7bc5c41"
    },
    {
      "name": "XLR8SPI",
      "version": "0.0.4",
      "author": "Alorium Technology",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "XB to enable SPI interfaces through the JTAG pins.",
      "paragraph": "Adds functionality to use the JTAG pins on an Alorium XLR8 board as two extra SPI interfaces.",
      "website": "https://github.com/AloriumTechnology/XLR8SPI",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AloriumTechnology/XLR8SPI-0.0.4.zip",
      "archiveFileName": "XLR8SPI-0.0.4.zip",
      "size": 24987103,
      "checksum": "SHA-256:c65446cee5bb9223f1f075625763725b568ff8f577d06600cc682c76e39e04df"
    },
    {
      "name": "LitSwitch",
      "version": "1.0.0",
      "author": "Brett Hagman \u003cbhagman@roguerobotics.com\u003e",
      "maintainer": "Brett Hagman \u003cbhagman@roguerobotics.com\u003e",
      "sentence": "A special library for an LED/momentary switch hardware combination.\u003cbr /\u003e",
      "paragraph": "Now you can control an LED and a momentary switch with a single pin.\u003cbr /\u003e\u003cbr /\u003eIssues or questions: \u003ca href=\"https://github.com/bhagman/LitSwitch/issues\"\u003ehttps://github.com/bhagman/LitSwitch/issues\u003c/a\u003e\u003cbr /\u003e",
      "website": "https://github.com/bhagman/LitSwitch",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bhagman/LitSwitch-1.0.0.zip",
      "archiveFileName": "LitSwitch-1.0.0.zip",
      "size": 5028,
      "checksum": "SHA-256:9ebfa711343bd1e461e2e82636b69ab8ddb9f242a3ce3d6cadb3a9823f8ab3c1"
    },
    {
      "name": "ControlledServo",
      "version": "1.0.0",
      "author": "Brett Hagman \u003cbhagman@wiring.org.co\u003e",
      "maintainer": "Brett Hagman \u003cbhagman@wiring.org.co\u003e",
      "sentence": "A library to have more control over the movement of a servo.\u003cbr /\u003e",
      "paragraph": "This library provides a way to control a servo movement using different angular rates, as well as setting trim and limits.\u003cbr /\u003e\u003cbr /\u003eIssues or questions: \u003ca href=\"https://github.com/bhagman/ControlledServo/issues\"\u003ehttps://github.com/bhagman/ControlledServo/issues\u003c/a\u003e\u003cbr /\u003e",
      "website": "https://github.com/bhagman/ControlledServo",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bhagman/ControlledServo-1.0.0.zip",
      "archiveFileName": "ControlledServo-1.0.0.zip",
      "size": 6656,
      "checksum": "SHA-256:9694ff21c241fb8e7ce655950b0dff3c73466bdd5b53ef4a659b62a231226eab"
    },
    {
      "name": "TimedBlink",
      "version": "1.0.0",
      "author": "Lorenzo Pasqualis \u003clpasqualis@gmail.com\u003e",
      "maintainer": "Lorenzo Pasqualis \u003clpasqualis@gmail.com\u003e",
      "sentence": "An object oriented library for asynchrnous programmable LED blinking",
      "paragraph": "This library allows the easy programming of a blinking LED for visual feedback on the status of a sketch.",
      "website": "https://github.com/lpasqualis/TimedBlink",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/lpasqualis/TimedBlink-1.0.0.zip",
      "archiveFileName": "TimedBlink-1.0.0.zip",
      "size": 11715,
      "checksum": "SHA-256:20064556d88c6bbf01b46ca78e57cb1484dbcd15e3888d8bc02cdec5b2fd078e"
    },
    {
      "name": "TimedBlink",
      "version": "1.0.1",
      "author": "Lorenzo Pasqualis \u003clpasqualis@gmail.com\u003e",
      "maintainer": "Lorenzo Pasqualis \u003clpasqualis@gmail.com\u003e",
      "sentence": "An object oriented library for asynchrnous programmable LED blinking",
      "paragraph": "This library allows the easy programming of a blinking LED for visual feedback on the status of a sketch.",
      "website": "https://github.com/lpasqualis/TimedBlink",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/lpasqualis/TimedBlink-1.0.1.zip",
      "archiveFileName": "TimedBlink-1.0.1.zip",
      "size": 11911,
      "checksum": "SHA-256:16c6cbf378a81dbbcdbcd3432e85b8588bbb95afb793519f8eeea130893fb435"
    },
    {
      "name": "TimedBlink",
      "version": "1.0.2",
      "author": "Lorenzo Pasqualis \u003clpasqualis@gmail.com\u003e",
      "maintainer": "Lorenzo Pasqualis \u003clpasqualis@gmail.com\u003e",
      "sentence": "An object oriented library for asynchrnous programmable LED blinking",
      "paragraph": "This library allows the easy programming of a blinking LED for visual feedback on the status of a sketch.",
      "website": "https://github.com/lpasqualis/TimedBlink",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/lpasqualis/TimedBlink-1.0.2.zip",
      "archiveFileName": "TimedBlink-1.0.2.zip",
      "size": 11945,
      "checksum": "SHA-256:4534b588cf1c96fd311239eeaad0c987304ae1d3835f2fb31996ab8535dea24a"
    },
    {
      "name": "StivSeg",
      "version": "1.0.0",
      "author": "Stephen Racz",
      "maintainer": "Stephen Racz",
      "sentence": "Multi-digit seven-segment display library for arduino.",
      "paragraph": "Light-weight design allows the user to continuously write data gathered (ideally) from a TimerOne interrupt.",
      "website": "https://github.com/stephentracz/StivSeg",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stephentracz/StivSeg-1.0.0.zip",
      "archiveFileName": "StivSeg-1.0.0.zip",
      "size": 3721,
      "checksum": "SHA-256:fa414ef5e6f3b830a8e1f984a069081f3309acb7d76bec9b8d3e7e742cc40787"
    },
    {
      "name": "StivSeg",
      "version": "1.0.1",
      "author": "Stephen Racz",
      "maintainer": "Stephen Racz",
      "sentence": "Multi-digit seven-segment display library for arduino.",
      "paragraph": "Light-weight design allows the user to continuously write data gathered (ideally) from a TimerOne interrupt.",
      "website": "https://github.com/stephentracz/StivSeg",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stephentracz/StivSeg-1.0.1.zip",
      "archiveFileName": "StivSeg-1.0.1.zip",
      "size": 4154,
      "checksum": "SHA-256:ecf20302b377a4da83ae8e04ce0ad90c317c4d717eb97fe6c5395b7bc134e806"
    },
    {
      "name": "ACE128",
      "version": "1.1.0",
      "author": "Alastair Young \u003calastair@redhunter.com\u003e",
      "maintainer": "Alastair Young alastair@redhunter.com",
      "sentence": "Access the Bourns ACE-128 Absolute Contacting Encoder over I2C",
      "paragraph": "This 128 position gray-code absolute encoder is designed as a panel mounted knob. This library accesses it via common I2C pin expanders and handles the gray-code translation of any pin wiring combination.",
      "website": "https://github.com/arielnh56/ACE128",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arielnh56/ACE128-1.1.0.zip",
      "archiveFileName": "ACE128-1.1.0.zip",
      "size": 564219,
      "checksum": "SHA-256:6f3d31bf1457e45c2641df3c58276c03a95179da300f01fa3af65236a5c671f3"
    },
    {
      "name": "ACE128",
      "version": "1.6.2",
      "author": "Alastair Young \u003calastair@redhunter.com\u003e",
      "maintainer": "Alastair Young alastair@redhunter.com",
      "sentence": "Access the Bourns ACE-128 Absolute Contacting Encoder over I2C",
      "paragraph": "This 128 position gray-code absolute encoder is designed as a panel mounted knob. This library accesses it via common I2C pin expanders and handles the gray-code translation of any pin wiring combination.",
      "website": "https://github.com/arielnh56/ACE128",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/arielnh56/ACE128-1.6.2.zip",
      "archiveFileName": "ACE128-1.6.2.zip",
      "size": 565315,
      "checksum": "SHA-256:2d5b98aea4f69c13c00f47c47e43bcf447b7076dd22e08d29ae1d81fbfe943c9"
    },
    {
      "name": "ClosedCube MAX30205",
      "version": "1.0.1",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Maxim Integrated MAX30205 Human Body Temperature Sensor",
      "paragraph": "Arduino library for Maxim Integrated MAX30205 Human Body Temperature Sensor",
      "website": "https://github.com/closedcube/ClosedCube_MAX30205_Arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/closedcube/ClosedCube_MAX30205-1.0.1.zip",
      "archiveFileName": "ClosedCube_MAX30205-1.0.1.zip",
      "size": 154882,
      "checksum": "SHA-256:69aa7cb0051714e6d6acfe0cb6e8c8fccdbda6f1bac2178e5fa7fa67c9a8ad1b"
    },
    {
      "name": "ClosedCube MAX30205",
      "version": "1.0.2",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Maxim Integrated MAX30205 Human Body Temperature Sensor",
      "paragraph": "Arduino library for Maxim Integrated MAX30205 Human Body Temperature Sensor",
      "website": "https://github.com/closedcube/ClosedCube_MAX30205_Arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/closedcube/ClosedCube_MAX30205-1.0.2.zip",
      "archiveFileName": "ClosedCube_MAX30205-1.0.2.zip",
      "size": 154880,
      "checksum": "SHA-256:39e01d60f1e849605e9d10b41a8eef4d4e8fa1705f687c89b9e6752cb9c66cb7"
    },
    {
      "name": "ClosedCube MAX30205",
      "version": "1.0.3",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Maxim Integrated MAX30205 Human Body Temperature Sensor",
      "paragraph": "Arduino library for Maxim Integrated MAX30205 Human Body Temperature Sensor",
      "website": "https://github.com/closedcube/ClosedCube_MAX30205_Arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/closedcube/ClosedCube_MAX30205-1.0.3.zip",
      "archiveFileName": "ClosedCube_MAX30205-1.0.3.zip",
      "size": 154883,
      "checksum": "SHA-256:18632219b122def0f802a3ef3cf85f5f3abf5038430e1a245a4f330c869401c3"
    },
    {
      "name": "SimplyAtomic",
      "version": "1.0.0",
      "author": "Aaron Wisner \u003cdaw268@cornell.edu\u003e",
      "maintainer": "Aaron Wisner \u003cdaw268@cornell.edu\u003e",
      "sentence": "A library for creating portable atomic blocks within your program",
      "paragraph": "A portable way to do atomic operations. Exposes portable macros that automatically save the interrupt register, disable interrupts, perform your atomic operations, then restore the register to its saved value.",
      "website": "https://github.com/wizard97/SimplyAtomic",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/wizard97/SimplyAtomic-1.0.0.zip",
      "archiveFileName": "SimplyAtomic-1.0.0.zip",
      "size": 3469,
      "checksum": "SHA-256:9175b732cefefffdcb22ea4db14b1c2e24c5c422fe022cbc8061e0330994c16b"
    },
    {
      "name": "LectroboxKeypadShield",
      "version": "1.0.0",
      "author": "Lectrobox \u003cinfo@lectrobox.com\u003e",
      "maintainer": "Lectrobox \u003cinfo@lectrobox.com\u003e",
      "sentence": "Driver for the Lectrobox Keypad Shield.",
      "paragraph": "The 16-key keypad shield communicates via the Arduino via TWI.",
      "website": "http://lectrobox.com/keypad",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/lectrobox/LectroboxKeypadShield-1.0.0.zip",
      "archiveFileName": "LectroboxKeypadShield-1.0.0.zip",
      "size": 3477,
      "checksum": "SHA-256:5096b74205eb4e54ab531856881ca46100f69300a257535c1fb0c1d539a2faec"
    },
    {
      "name": "LectroboxKeypadShield",
      "version": "1.2.0",
      "author": "Lectrobox \u003cinfo@lectrobox.com\u003e",
      "maintainer": "Lectrobox \u003cinfo@lectrobox.com\u003e",
      "sentence": "Driver for the Lectrobox Keypad Shield.",
      "paragraph": "The shield is a combination of hardware and software that makes it simple for your sketches to access the keypresses from the included 16-key keypad. The keypad can either be mounted directly on the Arduino or connected remotely using a standard Ethernet cable. The shield communicates with the Arduino via TWI, using only the SDA and SCL pins, and does not consume any digital inputs. It is compatible with both 8-bit and 32-bit, 5v and 3.3v Arduinos. The hardware package includes a shield, a keypad, and a small RJ45 interface adapter for remote keypad mounting.",
      "website": "http://lectrobox.com/keypad",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/lectrobox/LectroboxKeypadShield-1.2.0.zip",
      "archiveFileName": "LectroboxKeypadShield-1.2.0.zip",
      "size": 4735,
      "checksum": "SHA-256:b59c61ebea5bccda3ebaf6987e26e84b937571954b0ac6c66d18557f9f528167"
    },
    {
      "name": "LectroboxPCJoyShield",
      "version": "1.2.0",
      "author": "Lectrobox \u003cinfo@lectrobox.com\u003e",
      "maintainer": "Lectrobox \u003cinfo@lectrobox.com\u003e",
      "sentence": "Driver for the Lectrobox DB-15 PC Joystick Shield.",
      "paragraph": "The shield lets you attach any old-style PC joystick with a 15-pin game port interface to your Arduino. (USB joysticks are not supported.) The X and Y movement of the stick are returned in steps from -100 (fully up or left) to +100 (fully down or right). Your sketch can also detect button-pushes for up to two joystick buttons. Jumpers allow configuration of the Arduino pins used.",
      "website": "http://lectrobox.com/joystick",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/lectrobox/LectroboxPCJoyShield-1.2.0.zip",
      "archiveFileName": "LectroboxPCJoyShield-1.2.0.zip",
      "size": 5347,
      "checksum": "SHA-256:a735f346b92dedfa66f739cb898cdc760c147c96859983f348626c76d4d5df47"
    },
    {
      "name": "Tasker",
      "version": "1.1.0",
      "author": "Petr Stehlík",
      "maintainer": "Petr Stehlík",
      "sentence": "Get rid of delay() calls, schedule tasks instead.",
      "paragraph": "Allows to schedule tasks to be called once, repeatedly or indefinitely in a given time frame. Features simple javascript-like syntax. Does not use any timers, relies on cooperative multitasking. The whole implementation fits on a single page.",
      "website": "https://github.com/joysfera/arduino-tasker",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/joysfera/Tasker-1.1.0.zip",
      "archiveFileName": "Tasker-1.1.0.zip",
      "size": 8579,
      "checksum": "SHA-256:557f1452034e29abad51a568290666bbc9094c1b80956678588f1a50b4a1dd9d"
    },
    {
      "name": "HardWire",
      "version": "1.0.1",
      "author": "thexeno",
      "maintainer": "thexeno \u003chttps://github.com/thexeno\u003e",
      "sentence": "A spinoff of the Wire. This library allows you to communicate with I2C and Two Wire Interface devices, and control each step of any I2C transaction.",
      "paragraph": "It allows the communication with I2C devices like temperature sensors, realtime clocks and many others using SDA (Data Line) and SCL (Clock Line).",
      "website": "https://github.com/thexeno/HardWire-Arduino-Library",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thexeno/HardWire-1.0.1.zip",
      "archiveFileName": "HardWire-1.0.1.zip",
      "size": 18485,
      "checksum": "SHA-256:098f6dc139424f2b27ef1626b66b2bbc434c43f3630da8635df20b03e3b5af0c"
    },
    {
      "name": "HardWire",
      "version": "1.0.2",
      "author": "thexeno",
      "maintainer": "thexeno \u003chttps://github.com/thexeno\u003e",
      "sentence": "A spinoff of the Wire. This library allows you to communicate with I2C and Two Wire Interface devices, and control each step of any I2C transaction.",
      "paragraph": "It allows the communication with I2C devices like temperature sensors, realtime clocks and many others using SDA (Data Line) and SCL (Clock Line).",
      "website": "https://github.com/thexeno/HardWire-Arduino-Library",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thexeno/HardWire-1.0.2.zip",
      "archiveFileName": "HardWire-1.0.2.zip",
      "size": 18536,
      "checksum": "SHA-256:a706d299cc4e48a49d79f358b89e5eb8a27e2ae2571992b2adbafa0a042148d6"
    },
    {
      "name": "JPEGDecoder",
      "version": "1.7.1",
      "author": "Bodmer \u003cbodmer@anola.net\u003e, Makoto Kurauchi, Rich Geldreich",
      "maintainer": "Bodmer",
      "sentence": "Jpeg decoder tested with Arduino Mega, Arduino Due and ESP8266 based NodeMCU 1.0",
      "paragraph": "Decodes jpeg images stored in arrays, SD card files and SPIFFS files",
      "website": "https://github.com/Bodmer/JPEGDecoder",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Bodmer/JPEGDecoder-1.7.1.zip",
      "archiveFileName": "JPEGDecoder-1.7.1.zip",
      "size": 482833,
      "checksum": "SHA-256:cb6b178af45aef4e126c34cf2d4d817222f8afc279563edd79e602d859f86527"
    },
    {
      "name": "JPEGDecoder",
      "version": "1.7.3",
      "author": "Bodmer \u003cbodmer@anola.net\u003e, Makoto Kurauchi, Rich Geldreich",
      "maintainer": "Bodmer",
      "sentence": "Jpeg decoder tested with Arduino Mega, Arduino Due and ESP8266 based NodeMCU 1.0",
      "paragraph": "Decodes jpeg images stored in arrays, SD card files and SPIFFS files",
      "website": "https://github.com/Bodmer/JPEGDecoder",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Bodmer/JPEGDecoder-1.7.3.zip",
      "archiveFileName": "JPEGDecoder-1.7.3.zip",
      "size": 492299,
      "checksum": "SHA-256:4016ed3b3d0fcfd96535670a78f9c8f89ce9d992646c908ec2a07269a8d4d747"
    },
    {
      "name": "JPEGDecoder",
      "version": "1.7.4",
      "author": "Bodmer \u003cbodmer@anola.net\u003e, Makoto Kurauchi, Rich Geldreich",
      "maintainer": "Bodmer",
      "sentence": "Jpeg decoder tested with Arduino Mega, Arduino Due and ESP8266 based NodeMCU 1.0",
      "paragraph": "Decodes jpeg images stored in arrays, SD card files and SPIFFS files",
      "website": "https://github.com/Bodmer/JPEGDecoder",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Bodmer/JPEGDecoder-1.7.4.zip",
      "archiveFileName": "JPEGDecoder-1.7.4.zip",
      "size": 576349,
      "checksum": "SHA-256:fc327c1d7b0d84b4b71a71444d4a8484c3c7d1f7ff4fe8f6afb6629290fc8087"
    },
    {
      "name": "JPEGDecoder",
      "version": "1.7.7",
      "author": "Bodmer \u003cbodmer@anola.net\u003e, Makoto Kurauchi, Rich Geldreich",
      "maintainer": "Bodmer",
      "sentence": "Jpeg decoder tested with Arduino Mega, Arduino Due and ESP8266 based NodeMCU 1.0",
      "paragraph": "Decodes jpeg images stored in arrays, SD card files and SPIFFS files",
      "website": "https://github.com/Bodmer/JPEGDecoder",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Bodmer/JPEGDecoder-1.7.7.zip",
      "archiveFileName": "JPEGDecoder-1.7.7.zip",
      "size": 576351,
      "checksum": "SHA-256:8bfeccd61592dd336c6c9e46f3cfacfa66f844369bd31c7bb97a017422821a44"
    },
    {
      "name": "SmoothADC",
      "version": "0.2.0",
      "author": "SMFSW",
      "maintainer": "SMFSW",
      "sentence": "Get ADC to return averaged values.",
      "paragraph": "The SmoothADC library helps filtering ADC values when smoother evolution of values is needed (getting rid of pikes for example). 4 values, average on mid ones.",
      "website": "http://playground.arduino.cc/code/SmoothADC",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SMFSW/SmoothADC-0.2.0.zip",
      "archiveFileName": "SmoothADC-0.2.0.zip",
      "size": 16701,
      "checksum": "SHA-256:c5a007f32a2281f885761efb4e056834198de01548578291fae382b371ea1363"
    },
    {
      "name": "cI2C",
      "version": "0.3.0",
      "author": "SMFSW",
      "maintainer": "SMFSW",
      "sentence": "Arduino Hardware I2C for AVR (in plain c)",
      "paragraph": "Hardware I2C library for AVR �controllers (lib intended for I2C protocols development in c, for easier ports to other �controllers)",
      "website": "http://playground.arduino.cc/code/CI2C",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SMFSW/cI2C-0.3.0.zip",
      "archiveFileName": "cI2C-0.3.0.zip",
      "size": 40887,
      "checksum": "SHA-256:042e084ab515f2b9ed22f09af05f17b2742a842ca731446e614f9e902b13148e"
    },
    {
      "name": "cI2C",
      "version": "0.5.0",
      "author": "SMFSW",
      "maintainer": "SMFSW",
      "sentence": "Arduino Hardware I2C for AVR (in plain c)",
      "paragraph": "Hardware I2C library for AVR MCUs (lib intended for I2C protocols development in c, for easier ports to other MCUs)",
      "website": "https://github.com/SMFSW/cI2C",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SMFSW/cI2C-0.5.0.zip",
      "archiveFileName": "cI2C-0.5.0.zip",
      "size": 41693,
      "checksum": "SHA-256:b5f7d7ccc56c10965c7a5d0e7bd7feb912b520e8602f78e36f8a1e8094d6ac3e"
    },
    {
      "name": "CaptureTimer",
      "version": "0.5.0",
      "author": "SMFSW",
      "maintainer": "SMFSW",
      "sentence": "Arduino Input Capture Library",
      "paragraph": "Input capture library: This library is intended to attach interrupt on a pin for frequency/time sampling. Works on: AVR (using MsTimer2 lib), ARM (Due using DueTimer), ESP8266",
      "website": "http://playground.arduino.cc/code/CaptureTimer",
      "category": "Signal Input/Output",
      "architectures": [
        "avr",
        "sam",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SMFSW/CaptureTimer-0.5.0.zip",
      "archiveFileName": "CaptureTimer-0.5.0.zip",
      "size": 47727,
      "checksum": "SHA-256:6af6eff0cbd3fae529e556ab80532da284baf0cc9ab77ce0d3bc5fd9d23c33f4"
    },
    {
      "name": "SeqTimer",
      "version": "1.2.0",
      "author": "SMFSW",
      "maintainer": "SMFSW",
      "sentence": "Small piece of sequential Timer class (does not modify hw timers)",
      "paragraph": "Usage: Declare class / Set Period / Test Timer",
      "website": "http://playground.arduino.cc/code/SeqTimer",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SMFSW/SeqTimer-1.2.0.zip",
      "archiveFileName": "SeqTimer-1.2.0.zip",
      "size": 45290,
      "checksum": "SHA-256:1419ed6e9eee1381708d067ec4c1b194ee7f84157c5391da13e071118c919991"
    },
    {
      "name": "SeqTimer",
      "version": "2.0.0",
      "author": "SMFSW",
      "maintainer": "SMFSW",
      "sentence": "Small piece of sequential Timer class (does not modify hw timers)",
      "paragraph": "Usage: Declare class / Set Period / Test Timer",
      "website": "https://github.com/SMFSW/SeqTimer",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SMFSW/SeqTimer-2.0.0.zip",
      "archiveFileName": "SeqTimer-2.0.0.zip",
      "size": 36086,
      "checksum": "SHA-256:6844d750db0dc842a6ecbec8d606fa6f3aa706854ff00904e5a94aab481f6bec"
    },
    {
      "name": "everytime",
      "version": "1.0.0",
      "author": "Karl Fessel \u003ckarl.fessel@gmail.com\u003e",
      "maintainer": "Karl Fessel \u003ckarl.fessel@gmail.com\u003e",
      "sentence": "A easy to use library for periodic code execution.",
      "paragraph": "Just write every(100){...} to execute your code every 100 miliseconds everyu(100){...} for microseconds. More general macros for similar functions are provided.",
      "website": "https://github.com/fesselk/everytime",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/fesselk/everytime-1.0.0.zip",
      "archiveFileName": "everytime-1.0.0.zip",
      "size": 5336,
      "checksum": "SHA-256:835eed6fc01edbd394ee009f2eb196673fb23b329626216ad10c25a2c5e422b7"
    },
    {
      "name": "MD_CirQueue",
      "version": "1.0.0",
      "author": "Marco Colli \u003c8136821@gmail.com\u003e",
      "maintainer": "Marco Colli \u003c8136821@gmail.com\u003e",
      "sentence": "Library to provide a FIFO queue implemented as a Ring Buffer.",
      "paragraph": "Elements queued may be any size, defined in the class constructor.",
      "website": "http://github.com/MajicDesigns/MD_CirQueue",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MajicDesigns/MD_CirQueue-1.0.0.zip",
      "archiveFileName": "MD_CirQueue-1.0.0.zip",
      "size": 219299,
      "checksum": "SHA-256:37ce4ed96db8c18a5ba940635c5bde24b529b1c2de2bebf5257eb8586ab1e6da"
    },
    {
      "name": "MD_CirQueue",
      "version": "1.0.1",
      "author": "majicDesigns",
      "maintainer": "marco_c \u003c8136821@gmail.com\u003e",
      "sentence": "Library for FIFO queue implemented as a Ring Buffer.",
      "paragraph": "Elements queued may be any size, defined in the class constructor.",
      "website": "http://github.com/MajicDesigns/MD_CirQueue",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MajicDesigns/MD_CirQueue-1.0.1.zip",
      "archiveFileName": "MD_CirQueue-1.0.1.zip",
      "size": 219280,
      "checksum": "SHA-256:39ec5120372703556380713d4a115ecadb2f9e8250b4c9da89de93d64246e44c"
    },
    {
      "name": "M2M Solution LM75A Library",
      "version": "1.0.0",
      "author": "M2M Solutions AB",
      "maintainer": "M2M Solutions AB \u003cinfo@m2msolutions.se\u003e",
      "sentence": "LM75A Arduino library.",
      "paragraph": "A library for the LM75A digital temperature sensor and thermal watchdog.",
      "website": "https://github.com/m2m-solutions/M2M_LM75A",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/m2m-solutions/M2M_Solution_LM75A_Library-1.0.0.zip",
      "archiveFileName": "M2M_Solution_LM75A_Library-1.0.0.zip",
      "size": 7761,
      "checksum": "SHA-256:7b0fbdac534763c4d1a3664c49afbc9265b76b7c731de60c058394b30ebeeff1"
    },
    {
      "name": "M2M Solution LM75A Library",
      "version": "1.0.1",
      "author": "M2M Solutions AB",
      "maintainer": "M2M Solutions AB \u003cinfo@m2msolutions.se\u003e",
      "sentence": "M2M Solutions LM75A Arduino library.",
      "paragraph": "A library for the LM75A digital temperature sensor and thermal watchdog.",
      "website": "https://github.com/m2m-solutions/M2M_LM75A",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/m2m-solutions/M2M_Solution_LM75A_Library-1.0.1.zip",
      "archiveFileName": "M2M_Solution_LM75A_Library-1.0.1.zip",
      "size": 7807,
      "checksum": "SHA-256:8d3d10ea33c2b14c97cff393dde9b6800ff325f39ceb05956ce3dfd9834e1f41"
    },
    {
      "name": "Pozyx",
      "version": "1.0.1",
      "author": "Pozyx Labs",
      "maintainer": "Pozyx Labs info@pozyx.io",
      "sentence": "library for the pozyx indoor positioning shield",
      "paragraph": "library for the pozyx indoor positioning shield",
      "website": "https://github.com/pozyxLabs/Pozyx-Arduino-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pozyxLabs/Pozyx-1.0.1.zip",
      "archiveFileName": "Pozyx-1.0.1.zip",
      "size": 38123,
      "checksum": "SHA-256:88e684c13e331bc0fcd4ed10f7cf8914bb3224f28484596a5f9af3f89e08537e"
    },
    {
      "name": "Pozyx",
      "version": "1.0.2",
      "author": "Pozyx Labs",
      "maintainer": "Pozyx Labs info@pozyx.io",
      "sentence": "library for the pozyx indoor positioning shield",
      "paragraph": "library for the pozyx indoor positioning shield",
      "website": "https://github.com/pozyxLabs/Pozyx-Arduino-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pozyxLabs/Pozyx-1.0.2.zip",
      "archiveFileName": "Pozyx-1.0.2.zip",
      "size": 64333,
      "checksum": "SHA-256:d46d6a5d923f59b633c58d1fa5db93059d5a4bb31bb23075820f437c116d7de5"
    },
    {
      "name": "Pozyx",
      "version": "1.1.1",
      "author": "Pozyx Labs",
      "maintainer": "Pozyx Labs info@pozyx.io",
      "sentence": "library for the pozyx indoor positioning shield",
      "paragraph": "library for the pozyx indoor positioning shield",
      "website": "https://github.com/pozyxLabs/Pozyx-Arduino-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pozyxLabs/Pozyx-1.1.1.zip",
      "archiveFileName": "Pozyx-1.1.1.zip",
      "size": 217379,
      "checksum": "SHA-256:529de203345657f0a9235a595d8bffc4ae27395d326d5591ff13b9feca13f7df"
    },
    {
      "name": "WiiChuck",
      "version": "0.0.1",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate with Wii Nunchucks.",
      "paragraph": "\"This is a packaged library for accessing Wii nunchucks and Classic Controllers from and arduino. This library supports hard and software communication, mapping to servos and full object orented modularity. \"",
      "website": "https://github.com/madhephaestus/WiiChuck",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/madhephaestus/WiiChuck-0.0.1.zip",
      "archiveFileName": "WiiChuck-0.0.1.zip",
      "size": 360412,
      "checksum": "SHA-256:8ca3d4ee937c7e7d26755cc2a951b75bb0e430f85f531dcacdcd4228b001f755"
    },
    {
      "name": "WiiChuck",
      "version": "0.0.10",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate with Wii Nunchucks.",
      "paragraph": "\"This is a packaged library for accessing Wii nunchucks and Classic Controllers from and arduino. This library supports hard and software communication, mapping to servos and full object orented modularity. \"",
      "website": "https://github.com/madhephaestus/WiiChuck",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/madhephaestus/WiiChuck-0.0.10.zip",
      "archiveFileName": "WiiChuck-0.0.10.zip",
      "size": 357584,
      "checksum": "SHA-256:22a8283e6acd40a5517555e7ec5435cd02f951cc3921a2ddb95892c5fe8e2d67"
    },
    {
      "name": "WiiChuck",
      "version": "0.0.11",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate with Wii Nunchucks.",
      "paragraph": "\"This is a packaged library for accessing Wii nunchucks and Classic Controllers from and arduino. This library supports hard and software communication, mapping to servos and full object orented modularity. \"",
      "website": "https://github.com/madhephaestus/WiiChuck",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/madhephaestus/WiiChuck-0.0.11.zip",
      "archiveFileName": "WiiChuck-0.0.11.zip",
      "size": 355295,
      "checksum": "SHA-256:209dcb2d99ba6409a1646ac8ea7bc183307742f85a1fff286fa22f0d2714c1f3"
    },
    {
      "name": "WiiChuck",
      "version": "0.0.12",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate with Wii Nunchucks.",
      "paragraph": "\"This is a packaged library for accessing Wii nunchucks and Classic Controllers from and arduino. This library supports hard and software communication, mapping to servos and full object orented modularity. \"",
      "website": "https://github.com/madhephaestus/WiiChuck",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/madhephaestus/WiiChuck-0.0.12.zip",
      "archiveFileName": "WiiChuck-0.0.12.zip",
      "size": 355181,
      "checksum": "SHA-256:d7d4f4535a465e4ac76075c568f1a9df82bad64f6431ac141954f11b3f4ac9b6"
    },
    {
      "name": "WiiChuck",
      "version": "0.0.13",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate with Wii Nunchucks.",
      "paragraph": "\"This is a packaged library for accessing Wii nunchucks and Classic Controllers from and arduino. This library supports hard and software communication, mapping to servos and full object orented modularity. \"",
      "website": "https://github.com/madhephaestus/WiiChuck",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/madhephaestus/WiiChuck-0.0.13.zip",
      "archiveFileName": "WiiChuck-0.0.13.zip",
      "size": 8452,
      "checksum": "SHA-256:1b214581af01112b3cdfc340440fc160f4bc5122e330bbfc16ff87e9ee9a8381"
    },
    {
      "name": "WiiChuck",
      "version": "0.0.14",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate with Wii Nunchucks.",
      "paragraph": "\"This is a packaged library for accessing Wii nunchucks and Classic Controllers from and arduino. This library supports hard and software communication, mapping to servos and full object orented modularity. \"",
      "website": "https://github.com/madhephaestus/WiiChuck",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/madhephaestus/WiiChuck-0.0.14.zip",
      "archiveFileName": "WiiChuck-0.0.14.zip",
      "size": 8487,
      "checksum": "SHA-256:a0a29579ebc12107d2c092ffc27f356727e906a56af6edde08e89127733e3f20"
    },
    {
      "name": "WiiChuck",
      "version": "0.0.15",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate with Wii Nunchucks.",
      "paragraph": "\"This is a packaged library for accessing Wii nunchucks and Classic Controllers from and arduino. This library supports hard and software communication, mapping to servos and full object orented modularity. \"",
      "website": "https://github.com/madhephaestus/WiiChuck",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/madhephaestus/WiiChuck-0.0.15.zip",
      "archiveFileName": "WiiChuck-0.0.15.zip",
      "size": 8506,
      "checksum": "SHA-256:918631caa0a4174b0be9419587443cca2b75df51976daabcef2c9f834f53e70c"
    },
    {
      "name": "WiiChuck",
      "version": "0.0.16",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate with Wii Nunchucks.",
      "paragraph": "\"This is a packaged library for accessing Wii nunchucks and Classic Controllers from and arduino. This library supports hard and software communication, mapping to servos and full object orented modularity. \"",
      "website": "https://github.com/madhephaestus/WiiChuck",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/madhephaestus/WiiChuck-0.0.16.zip",
      "archiveFileName": "WiiChuck-0.0.16.zip",
      "size": 8595,
      "checksum": "SHA-256:b84f52ee71cff01aaf65af0ace8d342ec3b6e6388cfa46bc034200680675664b"
    },
    {
      "name": "WiiChuck",
      "version": "0.0.17",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate with Wii Nunchucks.",
      "paragraph": "\"This is a packaged library for accessing Wii nunchucks and Classic Controllers from and arduino. This library supports hard and software communication, mapping to servos and full object orented modularity. \"",
      "website": "https://github.com/madhephaestus/WiiChuck",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/madhephaestus/WiiChuck-0.0.17.zip",
      "archiveFileName": "WiiChuck-0.0.17.zip",
      "size": 25925,
      "checksum": "SHA-256:3d7209e9b3220f8cf0e15895ba2f99adf628b73aae8fd21b81ad23514582e395"
    },
    {
      "name": "WiiChuck",
      "version": "0.0.18",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate with Wii Nunchucks.",
      "paragraph": "\"This is a packaged library for accessing Wii nunchucks and Classic Controllers from and arduino. This library supports hard and software communication, mapping to servos and full object orented modularity. \"",
      "website": "https://github.com/madhephaestus/WiiChuck",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/madhephaestus/WiiChuck-0.0.18.zip",
      "archiveFileName": "WiiChuck-0.0.18.zip",
      "size": 27329,
      "checksum": "SHA-256:128b88aa51dcc11c0e527deff915b0ea3d5a9ae448c3c4dcf0557e8a2fe87fe8"
    },
    {
      "name": "WiiChuck",
      "version": "0.0.19",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate with Wii Nunchucks.",
      "paragraph": "\"This is a packaged library for accessing Wii nunchucks and Classic Controllers from and arduino. This library supports hard and software communication, mapping to servos and full object orented modularity. \"",
      "website": "https://github.com/madhephaestus/WiiChuck",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/madhephaestus/WiiChuck-0.0.19.zip",
      "archiveFileName": "WiiChuck-0.0.19.zip",
      "size": 27328,
      "checksum": "SHA-256:29d7352b2b1c7ddc4f787e3d687a068c385523b40ac167f6057ddae024f7464b"
    },
    {
      "name": "WiiChuck",
      "version": "0.0.2",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate with Wii Nunchucks.",
      "paragraph": "\"This is a packaged library for accessing Wii nunchucks and Classic Controllers from and arduino. This library supports hard and software communication, mapping to servos and full object orented modularity. \"",
      "website": "https://github.com/madhephaestus/WiiChuck",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/madhephaestus/WiiChuck-0.0.2.zip",
      "archiveFileName": "WiiChuck-0.0.2.zip",
      "size": 360967,
      "checksum": "SHA-256:ada31c686b510a5202ecb582d52ef19501ebe8b1a27b650b18bdb8691c963645"
    },
    {
      "name": "WiiChuck",
      "version": "0.0.3",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate with Wii Nunchucks.",
      "paragraph": "\"This is a packaged library for accessing Wii nunchucks and Classic Controllers from and arduino. This library supports hard and software communication, mapping to servos and full object orented modularity. \"",
      "website": "https://github.com/madhephaestus/WiiChuck",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/madhephaestus/WiiChuck-0.0.3.zip",
      "archiveFileName": "WiiChuck-0.0.3.zip",
      "size": 361396,
      "checksum": "SHA-256:7defda91fda1f02aa2325e0e28ef51142f3397e25e40a5011e2b2b6f21482853"
    },
    {
      "name": "WiiChuck",
      "version": "0.0.4",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate with Wii Nunchucks.",
      "paragraph": "\"This is a packaged library for accessing Wii nunchucks and Classic Controllers from and arduino. This library supports hard and software communication, mapping to servos and full object orented modularity. \"",
      "website": "https://github.com/madhephaestus/WiiChuck",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/madhephaestus/WiiChuck-0.0.4.zip",
      "archiveFileName": "WiiChuck-0.0.4.zip",
      "size": 361501,
      "checksum": "SHA-256:9673a37afd821873603793caf1f84d4be970154e466f5b87d93b2e14817f7083"
    },
    {
      "name": "WiiChuck",
      "version": "0.0.5",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate with Wii Nunchucks.",
      "paragraph": "\"This is a packaged library for accessing Wii nunchucks and Classic Controllers from and arduino. This library supports hard and software communication, mapping to servos and full object orented modularity. \"",
      "website": "https://github.com/madhephaestus/WiiChuck",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/madhephaestus/WiiChuck-0.0.5.zip",
      "archiveFileName": "WiiChuck-0.0.5.zip",
      "size": 357610,
      "checksum": "SHA-256:0e133e48ac069865010e2c5f2ac082c3dd0683e4843668f15ddd79068d088296"
    },
    {
      "name": "WiiChuck",
      "version": "0.0.6",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate with Wii Nunchucks.",
      "paragraph": "\"This is a packaged library for accessing Wii nunchucks and Classic Controllers from and arduino. This library supports hard and software communication, mapping to servos and full object orented modularity. \"",
      "website": "https://github.com/madhephaestus/WiiChuck",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/madhephaestus/WiiChuck-0.0.6.zip",
      "archiveFileName": "WiiChuck-0.0.6.zip",
      "size": 357526,
      "checksum": "SHA-256:53fdebc5782fd5f38eb8fef04bb7ad2d5317c692fabceea7839247a4724e815f"
    },
    {
      "name": "WiiChuck",
      "version": "0.0.7",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate with Wii Nunchucks.",
      "paragraph": "\"This is a packaged library for accessing Wii nunchucks and Classic Controllers from and arduino. This library supports hard and software communication, mapping to servos and full object orented modularity. \"",
      "website": "https://github.com/madhephaestus/WiiChuck",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/madhephaestus/WiiChuck-0.0.7.zip",
      "archiveFileName": "WiiChuck-0.0.7.zip",
      "size": 357561,
      "checksum": "SHA-256:59edc95b6de8c85c690a1895db686df5103faeeabc01545cbc1cbb3d1dd81464"
    },
    {
      "name": "WiiChuck",
      "version": "0.0.8",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate with Wii Nunchucks.",
      "paragraph": "\"This is a packaged library for accessing Wii nunchucks and Classic Controllers from and arduino. This library supports hard and software communication, mapping to servos and full object orented modularity. \"",
      "website": "https://github.com/madhephaestus/WiiChuck",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/madhephaestus/WiiChuck-0.0.8.zip",
      "archiveFileName": "WiiChuck-0.0.8.zip",
      "size": 357564,
      "checksum": "SHA-256:a769a09beea95952a6f632bc5ab206c2f0c8f4e6f95080d9b8aa6ee60201775c"
    },
    {
      "name": "WiiChuck",
      "version": "0.0.9",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to communicate with Wii Nunchucks.",
      "paragraph": "\"This is a packaged library for accessing Wii nunchucks and Classic Controllers from and arduino. This library supports hard and software communication, mapping to servos and full object orented modularity. \"",
      "website": "https://github.com/madhephaestus/WiiChuck",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/madhephaestus/WiiChuck-0.0.9.zip",
      "archiveFileName": "WiiChuck-0.0.9.zip",
      "size": 357607,
      "checksum": "SHA-256:99663c848f245ac54c9ad06d9d159efcd35bdeafdbdc89f820266fd43e7c3e6a"
    },
    {
      "name": "GKScroll",
      "version": "1.0.1",
      "author": "Garrett Kendrick \u003cgmk@gmk.us\u003e",
      "maintainer": "Garrett Kendrick \u003cgmk@gmk.us\u003e",
      "sentence": "Arduino library for scrolling long lines of text on an LCD screen.",
      "paragraph": "Ideal for 16x2 and other screens.",
      "website": "https://github.com/GurtDotCom/GKScroll",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/GurtDotCom/GKScroll-1.0.1.zip",
      "archiveFileName": "GKScroll-1.0.1.zip",
      "size": 15057,
      "checksum": "SHA-256:250661409b714a977fa70ad552e2062046fe4248957d77aabe2cc5d7f3b3c6d4"
    },
    {
      "name": "UniversalTelegramBot",
      "version": "1.0.0",
      "author": "Brian Lough",
      "maintainer": "Brian Lough \u003cbrian.d.lough@gmail.com\u003e",
      "sentence": "Arduino Telegram Bot library for multiple different architectures.",
      "paragraph": "A universal telegram library for arduino devices",
      "website": "https://github.com/witnessmenow/Universal-Arduino-Telegram-Bot",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/witnessmenow/UniversalTelegramBot-1.0.0.zip",
      "archiveFileName": "UniversalTelegramBot-1.0.0.zip",
      "size": 42870,
      "checksum": "SHA-256:705854a4e650b58be50db065eb95fb3d754e36d4579ac2d74a0e882644731353"
    },
    {
      "name": "HaLakeKitFirst",
      "version": "1.0.0",
      "author": "nyampass",
      "maintainer": "Asuki Kono",
      "sentence": "A library to define communication between HaLakeKitFirst blocks.",
      "paragraph": "It sends and receives value via serial.",
      "website": "https://github.com/nyampass/HaLakeKitFirst-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nyampass/HaLakeKitFirst-1.0.0.zip",
      "archiveFileName": "HaLakeKitFirst-1.0.0.zip",
      "size": 9161,
      "checksum": "SHA-256:e162dc1527de8080d14fe35bb8f807c1ad8f318b645ac667212f0db0e04225ce"
    },
    {
      "name": "HaLakeKitFirst",
      "version": "1.0.1",
      "author": "nyampass",
      "maintainer": "Asuki Kono",
      "sentence": "A library to define communication between HaLakeKitFirst blocks.",
      "paragraph": "It sends and receives value via serial.",
      "website": "https://github.com/nyampass/HaLakeKitFirst-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/nyampass/HaLakeKitFirst-1.0.1.zip",
      "archiveFileName": "HaLakeKitFirst-1.0.1.zip",
      "size": 9241,
      "checksum": "SHA-256:914f7d2bfc4751ac67d13f3612c88f6389dc92f81a60e07af3b92af45de9ef4a"
    },
    {
      "name": "TimerFa",
      "version": "1.1.0",
      "author": "Fatih Aslamaci",
      "maintainer": "Fatih Aslamaci",
      "sentence": "Software Timer",
      "website": "http://playground.arduino.cc/Code/TimerFa",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/fatihaslamaci/TimerFa-1.1.0.zip",
      "archiveFileName": "TimerFa-1.1.0.zip",
      "size": 1980,
      "checksum": "SHA-256:f862c480ca8a9688d220bad50f696d9fd156ba9855e39b78a395fd1693be7a07"
    },
    {
      "name": "TimerFa",
      "version": "1.0.2",
      "author": "Fatih Aslamaci",
      "maintainer": "Fatih Aslamaci",
      "sentence": "Software Timer",
      "website": "http://playground.arduino.cc/Code/TimerFa",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/fatihaslamaci/TimerFa-1.0.2.zip",
      "archiveFileName": "TimerFa-1.0.2.zip",
      "size": 1982,
      "checksum": "SHA-256:e5f83ce69ae8aa3bea39c83f5d1015d50e9f6d2e7beadb696175bb5f7dae793a"
    },
    {
      "name": "TimerFa",
      "version": "2.0.0",
      "author": "Fatih Aslamaci",
      "maintainer": "Fatih Aslamaci",
      "sentence": "Software Timer",
      "website": "http://playground.arduino.cc/Code/TimerFa",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/fatihaslamaci/TimerFa-2.0.0.zip",
      "archiveFileName": "TimerFa-2.0.0.zip",
      "size": 2215,
      "checksum": "SHA-256:e5bf2f549c75278f724d82678c5c2602086df83f63934b0211856c8c169f5d57"
    },
    {
      "name": "AdagioPro",
      "version": "1.0.0",
      "author": "Filip Slaets (Zuntara)",
      "maintainer": "Filip Slaets (Zuntara)",
      "sentence": "Controls Adagio RGB Poollights over RS-485",
      "paragraph": "Makes it easy to control the RGB poollights of Adagio over RS-485",
      "website": "https://github.com/Zuntara/Arduino.AdagioPro",
      "category": "Signal Input/Output",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Zuntara/AdagioPro-1.0.0.zip",
      "archiveFileName": "AdagioPro-1.0.0.zip",
      "size": 7344,
      "checksum": "SHA-256:4b8df721439e6d7319569203fc9a13743226261ececa2886a640cdc9ffa50c04"
    },
    {
      "name": "Yet Another Arduino Debounce Library",
      "version": "1.0.0",
      "author": "Paulo Costa",
      "maintainer": "Paulo Costa \u003cme@paulo.costa.nom.br\u003e",
      "sentence": "An asynchronous Arduino Library for debouncing",
      "paragraph": "An asynchronous approach to the old problem of debouncing inputs",
      "website": "https://github.com/paulo-raca/YetAnotherArduinoDebounceLibrary",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/paulo-raca/Yet_Another_Arduino_Debounce_Library-1.0.0.zip",
      "archiveFileName": "Yet_Another_Arduino_Debounce_Library-1.0.0.zip",
      "size": 7081,
      "checksum": "SHA-256:17eb5e876639f46d909ee01ae54d112f431e30bfc3371283ffa609f2ba2fb144"
    },
    {
      "name": "FadeLed",
      "version": "1.0.0",
      "author": "Timo Engelgeer (Septillion) \u003cgithub@septillion.nl\u003e",
      "maintainer": "Timo Engelgeer (Septillion) \u003cgithub@septillion.nl\u003e",
      "sentence": "Makes fading LEDs easy",
      "paragraph": "Makes it possible to easily fade LEDs on the hardware pins of Arduino. Simply set the fade time (individual for each led) and brightness to fade to and the library does the rest.",
      "website": "https://github.com/sseptillion/FadeLed",
      "category": "Signal Input/Output",
      "architectures": [
        "AVR"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/septillion-git/FadeLed-1.0.0.zip",
      "archiveFileName": "FadeLed-1.0.0.zip",
      "size": 5010,
      "checksum": "SHA-256:ccfd9d1d4c2d6641a4e409517c5dc78d1fc8b645becedb58dfc33d12e85fc006"
    },
    {
      "name": "FadeLed",
      "version": "1.0.1",
      "author": "Timo Engelgeer (Septillion) \u003cgithub@septillion.nl\u003e",
      "maintainer": "Timo Engelgeer (Septillion) \u003cgithub@septillion.nl\u003e",
      "sentence": "Makes fading LEDs easy",
      "paragraph": "Makes it possible to easily fade LEDs on the hardware pins of Arduino. Simply set the fade time (individual for each led) and brightness to fade to and the library does the rest.",
      "website": "https://github.com/sseptillion/FadeLed",
      "category": "Signal Input/Output",
      "architectures": [
        "AVR"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/septillion-git/FadeLed-1.0.1.zip",
      "archiveFileName": "FadeLed-1.0.1.zip",
      "size": 5039,
      "checksum": "SHA-256:a1607dda75fab3f3dd13771aabdf8f4efe207e1e02e32c1d5453711fc3a8bc5a"
    },
    {
      "name": "FadeLed",
      "version": "1.1.1",
      "author": "Timo Engelgeer (Septillion) \u003cgithub@septillion.nl\u003e",
      "maintainer": "Timo Engelgeer (Septillion) \u003cgithub@septillion.nl\u003e",
      "sentence": "Makes fading LEDs easy",
      "paragraph": "Makes it possible to easily fade LEDs on the hardware pins of Arduino. Simply set the fade time (individual for each led) and brightness to fade to and the library does the rest.",
      "website": "https://github.com/sseptillion/FadeLed",
      "category": "Signal Input/Output",
      "architectures": [
        "AVR"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/septillion-git/FadeLed-1.1.1.zip",
      "archiveFileName": "FadeLed-1.1.1.zip",
      "size": 4839,
      "checksum": "SHA-256:037a91e5b22770ea6b98414242079616511c78af755f3987652c903a95c77cea"
    },
    {
      "name": "FadeLed",
      "version": "1.2.0",
      "author": "Timo Engelgeer (Septillion) \u003cgithub@septillion.nl\u003e",
      "maintainer": "Timo Engelgeer (Septillion) \u003cgithub@septillion.nl\u003e",
      "sentence": "Makes fading LEDs easy",
      "paragraph": "Makes it possible to easily fade LEDs on the hardware pins of Arduino. Simply set the fade time (individual for each led) and brightness to fade to and the library does the rest.",
      "website": "https://github.com/sseptillion/FadeLed",
      "category": "Signal Input/Output",
      "architectures": [
        "AVR"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/septillion-git/FadeLed-1.2.0.zip",
      "archiveFileName": "FadeLed-1.2.0.zip",
      "size": 183862,
      "checksum": "SHA-256:63c9ec07b100fb6a63a56defcfa8b09c61452e73b5dee5d9e1180d449ed7bdcc"
    },
    {
      "name": "FadeLed",
      "version": "1.2.1",
      "author": "Timo Engelgeer (Septillion) \u003cgithub@septillion.nl\u003e",
      "maintainer": "Timo Engelgeer (Septillion) \u003cgithub@septillion.nl\u003e",
      "sentence": "Makes fading LEDs easy",
      "paragraph": "Makes it possible to easily fade LEDs on the hardware pins of Arduino. Simply set the fade time (individual for each led) and brightness to fade to and the library does the rest.",
      "website": "https://github.com/sseptillion/FadeLed",
      "category": "Signal Input/Output",
      "architectures": [
        "AVR"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/septillion-git/FadeLed-1.2.1.zip",
      "archiveFileName": "FadeLed-1.2.1.zip",
      "size": 194975,
      "checksum": "SHA-256:b91067c7e8bc86e74611348b587a8195696029bf4d89765bd2d45453da888be9"
    },
    {
      "name": "FadeLed",
      "version": "1.2.2",
      "author": "Timo Engelgeer (Septillion) \u003cgithub@septillion.nl\u003e",
      "maintainer": "Timo Engelgeer (Septillion) \u003cgithub@septillion.nl\u003e",
      "sentence": "Makes fading LEDs easy",
      "paragraph": "Makes it possible to easily fade LEDs on the hardware pins of Arduino. Simply set the fade time (individual for each led) and brightness to fade to and the library does the rest.",
      "website": "https://github.com/sseptillion/FadeLed",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/septillion-git/FadeLed-1.2.2.zip",
      "archiveFileName": "FadeLed-1.2.2.zip",
      "size": 197032,
      "checksum": "SHA-256:055f2af4adc63022e9597387efbf520a7205f53641edb6dd0edb87a82757db26"
    },
    {
      "name": "FadeLed",
      "version": "1.4.0",
      "author": "Timo Engelgeer (Septillion) \u003cgithub@septillion.nl\u003e",
      "maintainer": "Timo Engelgeer (Septillion) \u003cgithub@septillion.nl\u003e",
      "sentence": "Makes fading LEDs easy",
      "paragraph": "Makes it possible to easily fade LEDs on the hardware pins of Arduino (even with gamma correction). Simply set the fade time (individual for each led) and brightness to fade to and the library does the rest.",
      "website": "https://github.com/sseptillion/FadeLed",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/septillion-git/FadeLed-1.4.0.zip",
      "archiveFileName": "FadeLed-1.4.0.zip",
      "size": 221155,
      "checksum": "SHA-256:5fe4130c704e367abec1ee759b5f7dc06220c64e28402ff81f10aa4be06e5ddb"
    },
    {
      "name": "FadeLed",
      "version": "1.4.1",
      "author": "Timo Engelgeer (Septillion) \u003cgithub@septillion.nl\u003e",
      "maintainer": "Timo Engelgeer (Septillion) \u003cgithub@septillion.nl\u003e",
      "sentence": "Makes fading LEDs easy",
      "paragraph": "Makes it possible to easily fade LEDs on the hardware pins of Arduino (even with gamma correction). Simply set the fade time (individual for each LED) and brightness to fade to and the library does the rest.",
      "website": "https://github.com/septillion-git/FadeLed",
      "category": "Signal Input/Output",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/septillion-git/FadeLed-1.4.1.zip",
      "archiveFileName": "FadeLed-1.4.1.zip",
      "size": 221352,
      "checksum": "SHA-256:008b3d04b078ce0b1605b926c9057fa430d58929ecb9304b9c2e93b69c6f3755"
    },
    {
      "name": "WireWrapper",
      "version": "0.1.0",
      "author": "SMFSW",
      "maintainer": "SMFSW",
      "sentence": "Arduino Wrapper for Wire librarry (for SAM, ESP8266...)",
      "paragraph": "A wrapper for Wire library meant to be put in place of cI2C library on SAM, ESP8266... targets",
      "website": "https://github.com/SMFSW/WireWrapper",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SMFSW/WireWrapper-0.1.0.zip",
      "archiveFileName": "WireWrapper-0.1.0.zip",
      "size": 39710,
      "checksum": "SHA-256:d7af1f3c06e08f7732200410ca2f8512845e210e57993d36e4d23536dd9f312c"
    },
    {
      "name": "WireWrapper",
      "version": "0.2.0",
      "author": "SMFSW",
      "maintainer": "SMFSW",
      "sentence": "Arduino Wrapper for Wire librarry (for SAM, ESP8266...)",
      "paragraph": "A wrapper for Wire library meant to be put in place of cI2C library on SAM, ESP8266... targets",
      "website": "https://github.com/SMFSW/WireWrapper",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SMFSW/WireWrapper-0.2.0.zip",
      "archiveFileName": "WireWrapper-0.2.0.zip",
      "size": 40589,
      "checksum": "SHA-256:b5888ee24b37b023c8fd2adf64103e3cc4dde419139454712abee5fee7b8a739"
    },
    {
      "name": "ArduinoMenu library",
      "version": "2.4.0",
      "author": "Rui Azevedo, ruihfazevedo@gmail.com",
      "maintainer": "neu-rah, ruihfazevedo@gmail.com",
      "sentence": "AVR generic menu/interactivity system",
      "paragraph": "Easy to define menu system with sub-menus and associated function to call. Works either over serial or nultiple combinations of IO",
      "website": "https://github.com/neu-rah/ArduinoMenu",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/neu-rah/ArduinoMenu_library-2.4.0.zip",
      "archiveFileName": "ArduinoMenu_library-2.4.0.zip",
      "size": 300721,
      "checksum": "SHA-256:7c7a69edeb446bb15b4cc1904b37a475e964b94720b5aeb8884249af8cc21eff"
    },
    {
      "name": "ArduinoMenu library",
      "version": "2.5.0",
      "author": "Rui Azevedo, ruihfazevedo@gmail.com",
      "maintainer": "neu-rah, ruihfazevedo@gmail.com",
      "sentence": "AVR generic menu/interactivity system",
      "paragraph": "Easy to define menu system with sub-menus and associated function to call. Works either over serial or nultiple combinations of IO",
      "website": "https://github.com/neu-rah/ArduinoMenu",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/neu-rah/ArduinoMenu_library-2.5.0.zip",
      "archiveFileName": "ArduinoMenu_library-2.5.0.zip",
      "size": 52786,
      "checksum": "SHA-256:b730448fdee74537942909c798697467a2a40428cc1613598caa123ab0874f41"
    },
    {
      "name": "ArduinoMenu library",
      "version": "3.0.2",
      "author": "Rui Azevedo, ruihfazevedo@gmail.com",
      "maintainer": "neu-rah, ruihfazevedo@gmail.com",
      "sentence": "AVR generic menu/interactivity system",
      "paragraph": "Easy to define menu system with sub-menus and associated function to call. Works either over serial or nultiple combinations of IO",
      "website": "https://github.com/neu-rah/ArduinoMenu",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/neu-rah/ArduinoMenu_library-3.0.2.zip",
      "archiveFileName": "ArduinoMenu_library-3.0.2.zip",
      "size": 130120,
      "checksum": "SHA-256:f1b9ece71ab1b0bdf9925b56f0943246a3cac2d35081ca4eb06eb8abeddcd7ce"
    },
    {
      "name": "ArduinoMenu library",
      "version": "3.0.8",
      "author": "Rui Azevedo, ruihfazevedo@gmail.com",
      "maintainer": "neu-rah, ruihfazevedo@gmail.com",
      "sentence": "AVR generic menu/interactivity system",
      "paragraph": "Easy to define menu system with sub-menus and associated function to call. Works either over serial or nultiple combinations of IO",
      "website": "https://github.com/neu-rah/ArduinoMenu",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/neu-rah/ArduinoMenu_library-3.0.8.zip",
      "archiveFileName": "ArduinoMenu_library-3.0.8.zip",
      "size": 130883,
      "checksum": "SHA-256:c6ed42f16ea645d1f9a10702c37d4357af2752a08ba658aaba9dd4f6f2901bfe"
    },
    {
      "name": "ArduinoMenu library",
      "version": "3.1.0",
      "author": "Rui Azevedo, ruihfazevedo@gmail.com",
      "maintainer": "neu-rah, ruihfazevedo@gmail.com",
      "sentence": "AVR generic menu/interactivity system",
      "paragraph": "Easy to define menu system with sub-menus and associated function to call. Works either over serial or nultiple combinations of IO",
      "website": "https://github.com/neu-rah/ArduinoMenu",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/neu-rah/ArduinoMenu_library-3.1.0.zip",
      "archiveFileName": "ArduinoMenu_library-3.1.0.zip",
      "size": 130579,
      "checksum": "SHA-256:b34847c9e5179bc89b89f9342aba1be8ba1845f72c6405c5897de1aeaf3d6199"
    },
    {
      "name": "ArduinoMenu library",
      "version": "3.1.1",
      "author": "Rui Azevedo, ruihfazevedo@gmail.com",
      "maintainer": "neu-rah, ruihfazevedo@gmail.com",
      "sentence": "AVR generic menu/interactivity system",
      "paragraph": "Easy to define menu system with sub-menus and associated function to call. Works either over serial or nultiple combinations of IO",
      "website": "https://github.com/neu-rah/ArduinoMenu",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/neu-rah/ArduinoMenu_library-3.1.1.zip",
      "archiveFileName": "ArduinoMenu_library-3.1.1.zip",
      "size": 131573,
      "checksum": "SHA-256:a039132cfd389769212af812e14835e6deb298054db42cf8bcd871b3d2aad8b9"
    },
    {
      "name": "ArduinoMenu library",
      "version": "3.1.2",
      "author": "Rui Azevedo, ruihfazevedo@gmail.com",
      "maintainer": "neu-rah, ruihfazevedo@gmail.com",
      "sentence": "AVR generic menu/interactivity system",
      "paragraph": "Easy to define menu system with sub-menus and associated function to call. Works either over serial or nultiple combinations of IO",
      "website": "https://github.com/neu-rah/ArduinoMenu",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/neu-rah/ArduinoMenu_library-3.1.2.zip",
      "archiveFileName": "ArduinoMenu_library-3.1.2.zip",
      "size": 132462,
      "checksum": "SHA-256:180daa28ddff57445a79097268c646b85239d6dc10d7b728fd4fd53f16309aa0"
    },
    {
      "name": "ArduinoMenu library",
      "version": "3.1.3",
      "author": "Rui Azevedo, ruihfazevedo@gmail.com",
      "maintainer": "neu-rah, ruihfazevedo@gmail.com",
      "sentence": "AVR generic menu/interactivity system",
      "paragraph": "Easy to define menu system with sub-menus and associated function to call. Works either over serial or nultiple combinations of IO",
      "website": "https://github.com/neu-rah/ArduinoMenu",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/neu-rah/ArduinoMenu_library-3.1.3.zip",
      "archiveFileName": "ArduinoMenu_library-3.1.3.zip",
      "size": 132387,
      "checksum": "SHA-256:7f0015e1b0df70c1d63b4c7c83bef039f288ea4bdf70d0d89d187420e845a3d3"
    },
    {
      "name": "ArduinoMenu library",
      "version": "3.1.4",
      "author": "Rui Azevedo, ruihfazevedo@gmail.com",
      "maintainer": "neu-rah, ruihfazevedo@gmail.com",
      "sentence": "AVR generic menu/interactivity system",
      "paragraph": "Easy to define menu system with sub-menus and associated function to call. Works either over serial or nultiple combinations of IO",
      "website": "https://github.com/neu-rah/ArduinoMenu",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/neu-rah/ArduinoMenu_library-3.1.4.zip",
      "archiveFileName": "ArduinoMenu_library-3.1.4.zip",
      "size": 132387,
      "checksum": "SHA-256:e4df27383e062f0624c0620876cd80a271a16ceef8a2facb6c4af8d83c238372"
    },
    {
      "name": "ArduinoMenu library",
      "version": "3.1.5",
      "author": "Rui Azevedo, ruihfazevedo@gmail.com",
      "maintainer": "neu-rah, ruihfazevedo@gmail.com",
      "sentence": "AVR generic menu/interactivity system",
      "paragraph": "Easy to define menu system with sub-menus and associated function to call. Works either over serial or nultiple combinations of IO",
      "website": "https://github.com/neu-rah/ArduinoMenu",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/neu-rah/ArduinoMenu_library-3.1.5.zip",
      "archiveFileName": "ArduinoMenu_library-3.1.5.zip",
      "size": 132393,
      "checksum": "SHA-256:cfcdcd0b0a9dbbe20edef4c9e229e8ff467d02f505f486abdd4d911998753cdd"
    },
    {
      "name": "DABDUINO",
      "version": "0.1.0",
      "author": "Tomas Urbanek",
      "maintainer": "Tomas Urbanek",
      "sentence": "DABDUINO",
      "paragraph": "DABDUINO - Arduino DAB+ shield (digital radio broadcast) with DAC PCM5102 + SPDIF. Compatible with 3.3V Arduino (Zero, M0, M0 PRO, Due etc.).",
      "website": "http://playground.arduino.cc/Code/DABDUINO",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/turbyho/DABDUINO-0.1.0.zip",
      "archiveFileName": "DABDUINO-0.1.0.zip",
      "size": 8375,
      "checksum": "SHA-256:b96e40b6436a6747048607c2cbbd3950b4495a104d2afc43f3788adefedbcc23"
    },
    {
      "name": "DABDUINO",
      "version": "0.1.1",
      "author": "Tomas Urbanek",
      "maintainer": "Tomas Urbanek",
      "sentence": "DABDUINO",
      "paragraph": "DABDUINO library - Arduino DAB+ shield (digital radio) with DAC PCM5102 + SPDIF. Compatible with 3.3V Arduino (Zero, M0, M0 PRO, Due etc.).",
      "website": "http://playground.arduino.cc/Code/DABDUINO",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/turbyho/DABDUINO-0.1.1.zip",
      "archiveFileName": "DABDUINO-0.1.1.zip",
      "size": 7880,
      "checksum": "SHA-256:ef06a8c8f97f8bf008ee80b765a9d87ab91cdb0b33931fe46d8ab4269d725ed4"
    },
    {
      "name": "DABDUINO",
      "version": "0.1.2",
      "author": "Tomas Urbanek",
      "maintainer": "Tomas Urbanek",
      "sentence": "Library for controlling DABDUINO - DAB+ (digital radio) shield",
      "paragraph": "DABDUINO library - Arduino DAB+ shield (digital radio) with DAC PCM5102 + SPDIF. Compatible with 3.3V Arduino (Zero, M0, M0 PRO, Due etc.).",
      "website": "http://playground.arduino.cc/Code/DABDUINO",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/turbyho/DABDUINO-0.1.2.zip",
      "archiveFileName": "DABDUINO-0.1.2.zip",
      "size": 25145,
      "checksum": "SHA-256:b9554fbcb2da6f9a26665d61c910c9a17fdb6638df0ea48e8512c5f1fbd012bb"
    },
    {
      "name": "DABDUINO",
      "version": "0.1.3",
      "author": "Tomas Urbanek",
      "maintainer": "Tomas Urbanek",
      "sentence": "Library for controlling DABDUINO - DAB/DAB+ (digital radio) shield",
      "paragraph": "DABDUINO library - Arduino DAB/DAB+ shield (digital radio) with DAC PCM5102 + SPDIF. Compatible with 3.3V Arduino (Zero, M0, M0 PRO, Due etc.).",
      "website": "http://playground.arduino.cc/Code/DABDUINO",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/turbyho/DABDUINO-0.1.3.zip",
      "archiveFileName": "DABDUINO-0.1.3.zip",
      "size": 27559,
      "checksum": "SHA-256:128803e210eaeaf884706a963c0d4f925f5a4c01c96b8305b4e25eb63b4ec7da"
    },
    {
      "name": "DABDUINO",
      "version": "0.1.4",
      "author": "Tomas Urbanek",
      "maintainer": "Tomas Urbanek",
      "sentence": "Library for controlling DABDUINO - DAB/DAB+ (digital radio) shield",
      "paragraph": "DABDUINO library - Arduino DAB/DAB+ shield (digital radio) with DAC PCM5102 + SPDIF. Compatible with 3.3V Arduino (Zero, M0, M0 PRO, Due etc.).",
      "website": "http://playground.arduino.cc/Code/DABDUINO",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/turbyho/DABDUINO-0.1.4.zip",
      "archiveFileName": "DABDUINO-0.1.4.zip",
      "size": 410406,
      "checksum": "SHA-256:b69f5517918bf9a745b1d7fc7ef0edef4cc99927eafc27bd21e26f03f1332faf"
    },
    {
      "name": "DABDUINO",
      "version": "0.1.5",
      "author": "Tomas Urbanek",
      "maintainer": "Tomas Urbanek",
      "sentence": "Library for controlling DABDUINO - DAB/DAB+ (digital radio) shield",
      "paragraph": "DABDUINO library - Arduino DAB/DAB+ shield (digital radio) with DAC PCM5102 + SPDIF. Compatible with 3.3V Arduino (Zero, M0, M0 PRO, Due etc.).",
      "website": "http://playground.arduino.cc/Code/DABDUINO",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/turbyho/DABDUINO-0.1.5.zip",
      "archiveFileName": "DABDUINO-0.1.5.zip",
      "size": 411033,
      "checksum": "SHA-256:db22f7224763adb54348c6f2e27e5311ffba1ac51f72eeb9ce5233f40ecabd75"
    },
    {
      "name": "ArduZ80",
      "version": "1.0.0",
      "author": "Mohamed Rashad \u003cmrashad74@gmail.com\u003e",
      "maintainer": "Mohamed Rashad \u003cmrashad74@gmail.com\u003e",
      "sentence": "The first Z80 emulation library for Arduino.",
      "paragraph": "Near-to-complete emulation of software and hardware functions, capable of running z80 assembly, main and extended sets.",
      "website": "https://github.com/MohammedRashad/ArduZ80",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MohammedRashad/ArduZ80-1.0.0.zip",
      "archiveFileName": "ArduZ80-1.0.0.zip",
      "size": 9374,
      "checksum": "SHA-256:d09f02bf7941fcb0e4fedab38f27f1c52b39c18b7296a6cbb19bd5208b5762a1"
    },
    {
      "name": "ArduZ80",
      "version": "1.0.1",
      "author": "Mohamed Rashad \u003cmrashad74@gmail.com\u003e",
      "maintainer": "Mohamed Rashad \u003cmrashad74@gmail.com\u003e",
      "sentence": "The first Z80 emulation library for Arduino.",
      "paragraph": "Near-to-complete emulation of software and hardware functions, capable of running z80 assembly, main and extended sets.",
      "website": "https://github.com/MohammedRashad/ArduZ80",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MohammedRashad/ArduZ80-1.0.1.zip",
      "archiveFileName": "ArduZ80-1.0.1.zip",
      "size": 10654,
      "checksum": "SHA-256:7d7daea9436e75e9b0861114fda9ebf2b3a68ba5dd13953a92bb85dfff369ff1"
    },
    {
      "name": "UIPEthernet",
      "version": "2.0.2",
      "author": "CassyArduino",
      "maintainer": "CassyArduino \u003ccassy@zalaszam.hu\u003e",
      "sentence": "Ethernet library for ENC28J60",
      "paragraph": "implements the same API as stock Ethernet-lib. Just replace the include of Ethernet.h with UIPEthernet.h",
      "website": "https://github.com/UIPEthernet/UIPEthernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/UIPEthernet/UIPEthernet-2.0.2.zip",
      "archiveFileName": "UIPEthernet-2.0.2.zip",
      "size": 309561,
      "checksum": "SHA-256:116cacab5db9604350da2ba98fc26c6ca05e76c13414585ee929139cf36f11f6"
    },
    {
      "name": "UIPEthernet",
      "version": "2.0.3",
      "author": "CassyArduino",
      "maintainer": "CassyArduino \u003ccassy@zalaszam.hu\u003e",
      "sentence": "Ethernet library for ENC28J60",
      "paragraph": "implements the same API as stock Ethernet-lib. Just replace the include of Ethernet.h with UIPEthernet.h",
      "website": "https://github.com/UIPEthernet/UIPEthernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/UIPEthernet/UIPEthernet-2.0.3.zip",
      "archiveFileName": "UIPEthernet-2.0.3.zip",
      "size": 311495,
      "checksum": "SHA-256:41f64de34cbf934c27a5ed0a702e8786bc1eca4d6a29a7516cbae60492531807"
    },
    {
      "name": "UIPEthernet",
      "version": "2.0.4",
      "author": "CassyArduino",
      "maintainer": "CassyArduino \u003ccassy@zalaszam.hu\u003e",
      "sentence": "Ethernet library for ENC28J60",
      "paragraph": "implements the same API as stock Ethernet-lib. Just replace the include of Ethernet.h with UIPEthernet.h",
      "website": "https://github.com/UIPEthernet/UIPEthernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/UIPEthernet/UIPEthernet-2.0.4.zip",
      "archiveFileName": "UIPEthernet-2.0.4.zip",
      "size": 312823,
      "checksum": "SHA-256:71ca8aeccd55d9832714113f2c86ce58c5898f00952c114d7e5493f7d85cf8e0"
    },
    {
      "name": "Romi32U4",
      "version": "1.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Romi 32U4 Arduino library",
      "paragraph": "This library helps interface with the on-board hardware on the Pololu Romi 32U4 Control Board.",
      "website": "https://github.com/pololu/romi-32u4-arduino-library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/Romi32U4-1.0.0.zip",
      "archiveFileName": "Romi32U4-1.0.0.zip",
      "size": 67112,
      "checksum": "SHA-256:665bfb3251842b82757e6a4e492755fc31603f732c77a031bff8e07499a6fe20"
    },
    {
      "name": "Romi32U4",
      "version": "1.0.1",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Romi 32U4 Arduino library",
      "paragraph": "This library helps interface with the on-board hardware on the Pololu Romi 32U4 Control Board.",
      "website": "https://github.com/pololu/romi-32u4-arduino-library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/Romi32U4-1.0.1.zip",
      "archiveFileName": "Romi32U4-1.0.1.zip",
      "size": 67221,
      "checksum": "SHA-256:76f6841bdba576999d4f1b84e8e4f3760ee5019d68c8d44ed8d55ee03b7cc4fe"
    },
    {
      "name": "PHPoC",
      "version": "0.8.0",
      "author": "Sollae Systems",
      "maintainer": "Sollae Systems (phpoc@phpoc.com)",
      "sentence": "PHPoC Ethernet/Wifi Shield for Arduino",
      "paragraph": "TCP/EMAIL/SSL/SSH/Web communication helper based on PHPoC",
      "website": "http://www.phpoc.com",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/phpoc/PHPoC-0.8.0.zip",
      "archiveFileName": "PHPoC-0.8.0.zip",
      "size": 31880,
      "checksum": "SHA-256:faf1070b2224183488abe100789bf0d5512a828bb9ba3a6faff606dee28d0a74"
    },
    {
      "name": "PHPoC",
      "version": "1.0.0",
      "author": "Sollae Systems",
      "maintainer": "Sollae Systems (phpoc@phpoc.com)",
      "sentence": "PHPoC Ethernet/WiFi Shield for Arduino",
      "paragraph": "IPv6/TCP/EMAIL/SSL/SSH/Web communication helper based on PHPoC",
      "website": "http://www.phpoc.com",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/phpoc/PHPoC-1.0.0.zip",
      "archiveFileName": "PHPoC-1.0.0.zip",
      "size": 38655,
      "checksum": "SHA-256:3bfaf1dd696659173a569e1622508fce0cbc4e9e69e57038491ccf465955d720"
    },
    {
      "name": "PHPoC",
      "version": "1.0.1",
      "author": "Sollae Systems",
      "maintainer": "Sollae Systems (phpoc@phpoc.com)",
      "sentence": "PHPoC Ethernet/WiFi Shield for Arduino",
      "paragraph": "IPv6/TCP/EMAIL/SSL/SSH/Web communication helper based on PHPoC",
      "website": "http://www.phpoc.com",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/phpoc/PHPoC-1.0.1.zip",
      "archiveFileName": "PHPoC-1.0.1.zip",
      "size": 39351,
      "checksum": "SHA-256:a27179f48e40ec77e5b6734fcbb106ac0c9fcbbc33a81cd75605415db0330eed"
    },
    {
      "name": "Dusk2Dawn",
      "version": "1.0.0",
      "author": "DM Kishi \u003cdm.kishi@gmail.com\u003e",
      "maintainer": "DM Kishi \u003cdm.kishi@gmail.com\u003e",
      "sentence": "Get estimate time of sunrise and sunset given a set of coordinates.",
      "paragraph": "Given a set of a coordinates, a preferred time zone, and whether Daylight Saving Time is in effect, an estimate time of apparent sunrise or sunset is returned in minutes elapsed since midnight.",
      "website": "https://github.com/dmkishi/Dusk2Dawn",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/dmkishi/Dusk2Dawn-1.0.0.zip",
      "archiveFileName": "Dusk2Dawn-1.0.0.zip",
      "size": 7686,
      "checksum": "SHA-256:d682e1306dc6e2e8b12db7b3976eac15e068e43afd9464ba671c79cde3e6adba"
    },
    {
      "name": "Dusk2Dawn",
      "version": "1.0.1",
      "author": "DM Kishi \u003cdm.kishi@gmail.com\u003e",
      "maintainer": "DM Kishi \u003cdm.kishi@gmail.com\u003e",
      "sentence": "Get estimate time of sunrise and sunset given a set of coordinates.",
      "paragraph": "Given a set of a coordinates, a preferred time zone, and whether Daylight Saving Time is in effect, an estimate time of apparent sunrise or sunset is returned in minutes elapsed since midnight.",
      "website": "https://github.com/dmkishi/Dusk2Dawn",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/dmkishi/Dusk2Dawn-1.0.1.zip",
      "archiveFileName": "Dusk2Dawn-1.0.1.zip",
      "size": 7711,
      "checksum": "SHA-256:291e250d5d6a049f335d3c2565efc81e053d8e8f53ade4cd8aa2cc53f769a367"
    },
    {
      "name": "dcf77_xtal",
      "version": "3.1.4",
      "author": "Udo Klein dcf77@blinkenlight.net",
      "maintainer": "Udo Klein dcf77@blinkenlight.net",
      "sentence": "DCF77 decoder with excellent noise tolerance.",
      "paragraph": "Attention: this library requires a crystal based Arduino. Read the Hardware Incompatibilities Section of the documentation for more details.",
      "website": "https://github.com/udoklein/dcf77",
      "category": "Timing",
      "architectures": [
        "avr",
        "arm"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/udoklein/dcf77_xtal-3.1.4.zip",
      "archiveFileName": "dcf77_xtal-3.1.4.zip",
      "size": 111542,
      "checksum": "SHA-256:4ac4d69cd2e5892c78f4f839143c6eff3bf1a3503209068f94da8e9871efa1ef"
    },
    {
      "name": "dcf77_xtal",
      "version": "3.1.5",
      "author": "Udo Klein dcf77@blinkenlight.net",
      "maintainer": "Udo Klein dcf77@blinkenlight.net",
      "sentence": "DCF77 decoder with excellent noise tolerance.",
      "paragraph": "Attention: this library requires a crystal based Arduino. Read the Hardware Incompatibilities Section of the documentation for more details.",
      "website": "https://github.com/udoklein/dcf77",
      "category": "Timing",
      "architectures": [
        "avr",
        "arm"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/udoklein/dcf77_xtal-3.1.5.zip",
      "archiveFileName": "dcf77_xtal-3.1.5.zip",
      "size": 111545,
      "checksum": "SHA-256:da81e4787051389e89360658b3a32071c9b7733c01f008ce919cab55676c12b4"
    },
    {
      "name": "dcf77_xtal",
      "version": "3.1.7",
      "author": "Udo Klein dcf77@blinkenlight.net",
      "maintainer": "Udo Klein dcf77@blinkenlight.net",
      "sentence": "DCF77 decoder with excellent noise tolerance.",
      "paragraph": "Attention: this library requires a crystal based Arduino. Read the Hardware Incompatibilities Section of the documentation for more details.",
      "website": "https://github.com/udoklein/dcf77",
      "category": "Timing",
      "architectures": [
        "avr",
        "arm"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/udoklein/dcf77_xtal-3.1.7.zip",
      "archiveFileName": "dcf77_xtal-3.1.7.zip",
      "size": 112438,
      "checksum": "SHA-256:0991b1d382403fa4e37f163a006e522e40390a121353dcf68690297609f4f032"
    },
    {
      "name": "dcf77_xtal",
      "version": "3.1.8",
      "author": "Udo Klein dcf77@blinkenlight.net",
      "maintainer": "Udo Klein dcf77@blinkenlight.net",
      "sentence": "DCF77 decoder with excellent noise tolerance.",
      "paragraph": "Attention: this library requires a crystal based Arduino. Read the Hardware Incompatibilities Section of the documentation for more details.",
      "website": "https://github.com/udoklein/dcf77",
      "category": "Timing",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/udoklein/dcf77_xtal-3.1.8.zip",
      "archiveFileName": "dcf77_xtal-3.1.8.zip",
      "size": 112439,
      "checksum": "SHA-256:ee64cfff891dd2bb083ef234116d90d2d46663ddb727ef9d20f5debfd2401a23"
    },
    {
      "name": "dcf77_xtal",
      "version": "3.2.0",
      "author": "Udo Klein dcf77@blinkenlight.net",
      "maintainer": "Udo Klein dcf77@blinkenlight.net",
      "sentence": "DCF77 decoder with excellent noise tolerance.",
      "paragraph": "Attention: this library requires a crystal based Arduino. Read the Hardware Incompatibilities Section of the documentation for more details.",
      "website": "https://github.com/udoklein/dcf77",
      "category": "Timing",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/udoklein/dcf77_xtal-3.2.0.zip",
      "archiveFileName": "dcf77_xtal-3.2.0.zip",
      "size": 198985,
      "checksum": "SHA-256:60452ceb9c427d4f13ddd059a4081e88f20bd4a5b2d6c3058891725e9d526676"
    },
    {
      "name": "arduino-NVM",
      "version": "0.9.0",
      "author": "Frank Holtz",
      "maintainer": "Frank Holtz",
      "sentence": "Direct flash memory access, round robin virtual pages and EEPROM like memory. (Flash, VirtualPage, NVRAM)",
      "paragraph": "This package includes three Libraries (Flash, VirtualPage, NVRAM) and a EEPROM Emulation. Use avr_eeprom.h for a minimal AVR compatibility. Please look into README.md",
      "website": "https://github.com/d00616/arduino-NVM",
      "category": "Data Storage",
      "architectures": [
        "nRF5",
        "nRF52832",
        "nRF51822"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/d00616/arduino_NVM-0.9.0.zip",
      "archiveFileName": "arduino_NVM-0.9.0.zip",
      "size": 33444,
      "checksum": "SHA-256:00faf76896950c1cc154c27b9dcf5e33ed01709b6c2b3c7cdaa15e1d919a4c71"
    },
    {
      "name": "arduino-NVM",
      "version": "0.9.1",
      "author": "Frank Holtz",
      "maintainer": "Frank Holtz",
      "sentence": "Direct flash memory access, round robin virtual pages and EEPROM like memory. (Flash, VirtualPage, NVRAM)",
      "paragraph": "This package includes three Libraries (Flash, VirtualPage, NVRAM) and a EEPROM Emulation. Use avr_eeprom.h for a minimal AVR compatibility. Please look into README.md",
      "website": "https://github.com/d00616/arduino-NVM",
      "category": "Data Storage",
      "architectures": [
        "nRF5",
        "nRF52832",
        "nRF51822"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/d00616/arduino_NVM-0.9.1.zip",
      "archiveFileName": "arduino_NVM-0.9.1.zip",
      "size": 33444,
      "checksum": "SHA-256:9b00989e20bd722e5ae90ea13fa08b0b7bee286c7415bb10c9a6d978d8625131"
    },
    {
      "name": "IFTTTMaker",
      "version": "1.0.0",
      "author": "Brian Lough",
      "maintainer": "Brian Lough \u003cbrian.d.lough@gmail.com\u003e",
      "sentence": "A helper library for triggering IFTTT maker events (ESP8266 \u0026 Wifi-101)",
      "paragraph": "Use this library to simply trigger a IFTTT maker event, which can be used to send emails, tweets, notifications etc. Requires ArduinoJson library.",
      "website": "https://github.com/witnessmenow/arduino-ifttt-maker",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/witnessmenow/IFTTTMaker-1.0.0.zip",
      "archiveFileName": "IFTTTMaker-1.0.0.zip",
      "size": 13761,
      "checksum": "SHA-256:6eb262ef1e923f587bfde6d8d7896cc103f4e1d6feade20794bdf399fac6c277"
    },
    {
      "name": "SparkFun Haptic Motor Driver",
      "version": "1.1.0",
      "author": "Lightninghawk mary.west@sparkfun.com",
      "maintainer": "SparkFun Electronics sparkfun.com",
      "sentence": "Library for the DRV2605L Haptic Motor Driver",
      "paragraph": "This Library allows communication over I2C, select between 7 modes and 2 motor types.",
      "website": "https://github.com/sparkfun/SparkFun_Haptic_Motor_Driver_Arduino_Library",
      "category": "Uncategorized",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_Haptic_Motor_Driver-1.1.0.zip",
      "archiveFileName": "SparkFun_Haptic_Motor_Driver-1.1.0.zip",
      "size": 11264,
      "checksum": "SHA-256:a2890cb3a322a7259a840d41bd7889f14fa4cbce214189a7d2c2a951f169f205"
    },
    {
      "name": "Adafruit_VL53L0X",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "adafruit \u003csupport@adafruit.com\u003e",
      "sentence": "Sensor driver for VL53L0X Time of Flight sensor",
      "paragraph": "Sensor driver for VL53L0X Time of Flight sensor",
      "website": "https://github.com/adafruit/Adafruit_VL53L0X",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_VL53L0X-1.0.0.zip",
      "archiveFileName": "Adafruit_VL53L0X-1.0.0.zip",
      "size": 84464,
      "checksum": "SHA-256:7d301b0cfc50164a6317e53e86ba314ba0724a9f1ef32bd308ecebe752a989db"
    },
    {
      "name": "TMC2130Stepper",
      "version": "1.0.0",
      "author": "teemuatlut",
      "maintainer": "teemuatlut",
      "sentence": "Arduino library for Trinamic TMC2130 stepper drivers",
      "paragraph": "Easily configure your TMC2130 stepper motor drivers",
      "website": "https://github.com/teemuatlut/TMC2130Stepper",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/teemuatlut/TMC2130Stepper-1.0.0.zip",
      "archiveFileName": "TMC2130Stepper-1.0.0.zip",
      "size": 19796,
      "checksum": "SHA-256:be1c0a60167a24e8e2885ce7cc865d4c333112ff9c86c334cf161b7dbb909779"
    },
    {
      "name": "TMC2130Stepper",
      "version": "1.1.0",
      "author": "teemuatlut",
      "maintainer": "teemuatlut",
      "sentence": "Arduino library for Trinamic TMC2130 stepper drivers",
      "paragraph": "Easily configure your TMC2130 stepper motor drivers",
      "website": "https://github.com/teemuatlut/TMC2130Stepper",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/teemuatlut/TMC2130Stepper-1.1.0.zip",
      "archiveFileName": "TMC2130Stepper-1.1.0.zip",
      "size": 103835,
      "checksum": "SHA-256:57d5462dfc062fc9b92be2a91e91291ac27b0a87017d946c186a17fd2e141d2b"
    },
    {
      "name": "SocketIoClient",
      "version": "0.1.0",
      "author": "Vincent Wyszynski",
      "maintainer": "Vincent Wyszynski",
      "sentence": "socket.io Client for ESP8266 and Arduino",
      "website": "https://github.com/timum-viw/socket.io-client",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/timum-viw/SocketIoClient-0.1.0.zip",
      "archiveFileName": "SocketIoClient-0.1.0.zip",
      "size": 4646,
      "checksum": "SHA-256:bebaa8d121d0f01387be2b979df1919289529b5534c0863293c01b5846d402f5"
    },
    {
      "name": "redkea",
      "version": "1.0.0",
      "author": "redkea",
      "maintainer": "redkea \u003cinfo@redkea.com\u003e",
      "sentence": "Build custom user interfaces to control your devices using your smartphone.",
      "paragraph": "Use the redkea web-based UI-builder to design user interfaces for your project. Download user interfaces to your smartphone. Control your Arduino, ESP8266, Raspberry Pi, or other devices through your local WiFi network  -- no cloud or separate server needed!",
      "website": "http://redkea.com",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/redkea/redkea-1.0.0.zip",
      "archiveFileName": "redkea-1.0.0.zip",
      "size": 30686,
      "checksum": "SHA-256:942551cecbc713e631c199147227a5e710d72dbdefe1f33925cff0ebc149d02d"
    },
    {
      "name": "Boodskap Message library",
      "version": "1.0.0",
      "author": "Boodskap",
      "maintainer": "Boodskap \u003cjvincent@boodskap.io\u003e",
      "sentence": "Arduino library for sending sensor messages to Boodskap IoT Platform",
      "paragraph": "Arduino library for sending sensor messages to Boodskap IoT Platform",
      "website": "https://github.com/boodskap/message",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/boodskap/Boodskap_Message_library-1.0.0.zip",
      "archiveFileName": "Boodskap_Message_library-1.0.0.zip",
      "size": 4694,
      "checksum": "SHA-256:bbd2d4480a369a367968d6115d82234d43977e49d3c5b5e41ca7c3f266b240d5"
    },
    {
      "name": "Boodskap Message library",
      "version": "1.0.1",
      "author": "Boodskap",
      "maintainer": "Boodskap \u003cjvincent@boodskap.io\u003e",
      "sentence": "Arduino library for sending sensor messages to Boodskap IoT Platform",
      "paragraph": "Arduino library for sending sensor messages to Boodskap IoT Platform",
      "website": "https://github.com/boodskap/message",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/boodskap/Boodskap_Message_library-1.0.1.zip",
      "archiveFileName": "Boodskap_Message_library-1.0.1.zip",
      "size": 5167,
      "checksum": "SHA-256:8a700b140e6c93db0a58153173441eace28c5b014f7e2683d0ced7610f801dcc"
    },
    {
      "name": "Boodskap Message library",
      "version": "1.0.2",
      "author": "Boodskap",
      "maintainer": "Boodskap \u003cjvincent@boodskap.io\u003e",
      "sentence": "Arduino library for sending sensor messages to Boodskap IoT Platform",
      "paragraph": "Arduino library for sending sensor messages to Boodskap IoT Platform",
      "website": "https://github.com/boodskap/BoodskapMessage",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/boodskap/Boodskap_Message_library-1.0.2.zip",
      "archiveFileName": "Boodskap_Message_library-1.0.2.zip",
      "size": 5155,
      "checksum": "SHA-256:ab368c4ba7ce05a9213cbda6aa48b89b3605c491f6a2ee15571d5b3a1e999bd2"
    },
    {
      "name": "multiplePinOps",
      "version": "0.1.0",
      "author": "Arturo Guadalupi",
      "maintainer": "Arduino \u003carturoguadalupi@gmail.com\u003e",
      "sentence": "An Arduino library to drive multiple pins with the same API.",
      "paragraph": "An Arduino library to drive multiple pins with the same API.",
      "website": "https://github.com/agdl/arduino-multiplePinsAPIs",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/agdl/multiplePinOps-0.1.0.zip",
      "archiveFileName": "multiplePinOps-0.1.0.zip",
      "size": 12442,
      "checksum": "SHA-256:e1bf36dc0526325b798c5d2328b1550b56db9512d2b5956292c24cb7aa7e445e"
    },
    {
      "name": "multiplePinOps",
      "version": "0.2.0",
      "author": "Arturo Guadalupi",
      "maintainer": "Arduino \u003carturoguadalupi@gmail.com\u003e",
      "sentence": "An Arduino library to drive multiple pins with the same API.",
      "paragraph": "An Arduino library to drive multiple pins with the same API.",
      "website": "https://github.com/agdl/arduino-multiplePinsAPIs",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/agdl/multiplePinOps-0.2.0.zip",
      "archiveFileName": "multiplePinOps-0.2.0.zip",
      "size": 12450,
      "checksum": "SHA-256:876e317e1836e921241d3488fd9b2494c97e8dc4d2ba7c7d774541cf2d5c8a79"
    },
    {
      "name": "Dimmer class for ATmega32U4",
      "version": "1.0.0",
      "author": "E.Burkowski \u003ce.burkowski@konnekting.de\u003e",
      "maintainer": "E.Burkowski \u003ce.burkowski@konnekting.de\u003e",
      "sentence": "Easy use of 10/12 bit PWM outputs on ATmega32U4 for dimmer applications.",
      "paragraph": "Supported PWM pins: D5(Timer3), D9,D10,D11(Timer1). 1000Hz PWM frequency.",
      "website": "https://github.com/Adminius/Dimmer32u4",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Adminius/Dimmer_class_for_ATmega32U4-1.0.0.zip",
      "archiveFileName": "Dimmer_class_for_ATmega32U4-1.0.0.zip",
      "size": 16049,
      "checksum": "SHA-256:ae7424057adf4f23398796b4598ab0b716a2cf584461eac6cf69a971c9433035"
    },
    {
      "name": "InkyBoard",
      "version": "1.0.0",
      "author": "Henk-Jan van Voorthuijsen \u003ch.vanvoorthuijsen@lynxit.nl\u003e",
      "maintainer": "Henk-Jan van Voorthuijsen \u003ch.vanvoorthuijsen@lynxit.nl\u003e",
      "sentence": "Bibliotheek om gebruik te maken van het InkyBoard van InkyCode",
      "website": "http://bord.programmeren.school",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/hvanvoorthuijsen/InkyBoard-1.0.0.zip",
      "archiveFileName": "InkyBoard-1.0.0.zip",
      "size": 20462,
      "checksum": "SHA-256:21cbc0d1838c2dfeec6aa2a187ca9b2f4534f66a4701989af01133dfe2859b19"
    },
    {
      "name": "InkyBoard",
      "version": "1.1.0",
      "author": "Henk-Jan van Voorthuijsen \u003ch.vanvoorthuijsen@lynxit.nl\u003e",
      "maintainer": "Henk-Jan van Voorthuijsen \u003ch.vanvoorthuijsen@lynxit.nl\u003e",
      "sentence": "Bibliotheek om gebruik te maken van het InkyBoard van InkyCode",
      "paragraph": "Deze library heeft alle belangrijke functies van InkyBoard",
      "website": "http://bord.programmeren.school",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/hvanvoorthuijsen/InkyBoard-1.1.0.zip",
      "archiveFileName": "InkyBoard-1.1.0.zip",
      "size": 25580,
      "checksum": "SHA-256:df874bb692b514eef6836a6726c82ebb02d661fc305f914b14d577149eed6112"
    },
    {
      "name": "InkyBoard",
      "version": "1.2.0",
      "author": "Henk-Jan van Voorthuijsen \u003ch.vanvoorthuijsen@lynxit.nl\u003e",
      "maintainer": "Henk-Jan van Voorthuijsen \u003ch.vanvoorthuijsen@lynxit.nl\u003e",
      "sentence": "Bibliotheek om gebruik te maken van het InkyBoard van InkyCode",
      "paragraph": "Deze library heeft alle belangrijke functies van InkyBoard",
      "website": "http://bord.programmeren.school",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/hvanvoorthuijsen/InkyBoard-1.2.0.zip",
      "archiveFileName": "InkyBoard-1.2.0.zip",
      "size": 25379,
      "checksum": "SHA-256:15b8d0588249cfe84796a1948bb54f09cb5c7d91b106099999d5426faaad417d"
    },
    {
      "name": "InkyBoard",
      "version": "1.3.0",
      "author": "Henk-Jan van Voorthuijsen \u003ch.vanvoorthuijsen@lynxit.nl\u003e",
      "maintainer": "Henk-Jan van Voorthuijsen \u003ch.vanvoorthuijsen@lynxit.nl\u003e",
      "sentence": "Bibliotheek om gebruik te maken van het InkyBoard van InkyCode",
      "paragraph": "Deze library heeft alle belangrijke functies van InkyBoard",
      "website": "http://inkyboard.nl",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/hvanvoorthuijsen/InkyBoard-1.3.0.zip",
      "archiveFileName": "InkyBoard-1.3.0.zip",
      "size": 28336,
      "checksum": "SHA-256:8899c8c463aa5a47ba4ede1bb17208b6c993330cd9dccd6bc0b16fa891524bb1"
    },
    {
      "name": "InkyBoard",
      "version": "1.4.0",
      "author": "Henk-Jan van Voorthuijsen \u003ch.vanvoorthuijsen@lynxit.nl\u003e",
      "maintainer": "Henk-Jan van Voorthuijsen \u003ch.vanvoorthuijsen@lynxit.nl\u003e",
      "sentence": "Bibliotheek om gebruik te maken van het InkyBoard van InkyCode",
      "paragraph": "Deze library heeft alle belangrijke functies van InkyBoard",
      "website": "http://inkyboard.nl",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/hvanvoorthuijsen/InkyBoard-1.4.0.zip",
      "archiveFileName": "InkyBoard-1.4.0.zip",
      "size": 29249,
      "checksum": "SHA-256:730450924a01c98180bb9db0d050e83d2cab60fc12cc336de8dc6dab5572a797"
    },
    {
      "name": "InkyBoard",
      "version": "1.4.1",
      "author": "Henk-Jan van Voorthuijsen \u003ch.vanvoorthuijsen@lynxit.nl\u003e",
      "maintainer": "Henk-Jan van Voorthuijsen \u003ch.vanvoorthuijsen@lynxit.nl\u003e",
      "sentence": "Bibliotheek om gebruik te maken van het InkyBoard van InkyCode",
      "paragraph": "Deze library heeft alle belangrijke functies van InkyBoard",
      "website": "http://inkyboard.nl",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/hvanvoorthuijsen/InkyBoard-1.4.1.zip",
      "archiveFileName": "InkyBoard-1.4.1.zip",
      "size": 29309,
      "checksum": "SHA-256:e072d35cdf63ad389765917f481146c02ada9f28607485aa9b9e09dd8c16fdd1"
    },
    {
      "name": "InkyBoard",
      "version": "1.4.2",
      "author": "Henk-Jan van Voorthuijsen \u003ch.vanvoorthuijsen@lynxit.nl\u003e",
      "maintainer": "Henk-Jan van Voorthuijsen \u003ch.vanvoorthuijsen@lynxit.nl\u003e",
      "sentence": "Bibliotheek om gebruik te maken van het InkyBoard van InkyCode",
      "paragraph": "Deze library heeft alle belangrijke functies van InkyBoard",
      "website": "http://inkyboard.nl",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/hvanvoorthuijsen/InkyBoard-1.4.2.zip",
      "archiveFileName": "InkyBoard-1.4.2.zip",
      "size": 29311,
      "checksum": "SHA-256:4da7afbb75b0caf4c8a7bb053434cbd80c76e1df945dfc1222801c23ba988311"
    },
    {
      "name": "Ultrasonic",
      "version": "2.0.0",
      "author": "Erick Simões \u003cerick.simoes@live.com\u003e",
      "maintainer": "Erick Simões \u003cerick.simoes@live.com\u003e",
      "sentence": "Minimalist library for ultrasound module to Arduino",
      "paragraph": "Work with ultrasound module in a simple and light way. Compatible with the modules HC-SR04, Ping))) and Seeed Studio sensor. This library aims to resource efficiency and to simplify access to data.",
      "website": "https://github.com/ErickSimoes/Ultrasonic",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ErickSimoes/Ultrasonic-2.0.0.zip",
      "archiveFileName": "Ultrasonic-2.0.0.zip",
      "size": 65166,
      "checksum": "SHA-256:7da41c277ea5f72007c151726c31a5b1ca26a0143c6c7443a2a46162888c9a88"
    },
    {
      "name": "Ultrasonic",
      "version": "2.0.1",
      "author": "Erick Simões \u003cerick.simoes@live.com\u003e",
      "maintainer": "Erick Simões \u003cerick.simoes@live.com\u003e",
      "sentence": "Minimalist library for ultrasound module to Arduino",
      "paragraph": "Work with ultrasound module in a simple and light way. Compatible with the modules HC-SR04, Ping))) and Seeed Studio sensor. This library aims to resource efficiency and to simplify access to data.",
      "website": "https://github.com/ErickSimoes/Ultrasonic",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ErickSimoes/Ultrasonic-2.0.1.zip",
      "archiveFileName": "Ultrasonic-2.0.1.zip",
      "size": 65142,
      "checksum": "SHA-256:0ea4765d46497334a862c40d96a9e1bf8a0d2d19e814238c52b1ae9a429235e8"
    },
    {
      "name": "Ultrasonic",
      "version": "1.0.0",
      "author": "Erick Simões \u003cerick.simoes@live.com\u003e",
      "maintainer": "Erick Simões \u003cerick.simoes@live.com\u003e",
      "sentence": "Minimalist library for ultrasound module HC-SR04 to Arduino",
      "paragraph": "Work with the ultrasonic module HC-SR04 is fairly simple, but can be even more practical if you abstract the control of some features. This library aims to resource efficiency and to simplify access to data.",
      "website": "https://github.com/ErickSimoes/Ultrasonick",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ErickSimoes/Ultrasonic-1.0.0.zip",
      "archiveFileName": "Ultrasonic-1.0.0.zip",
      "size": 63577,
      "checksum": "SHA-256:609402f5dc2ff0a49699cb3a7adc03306dbb4c1404303bbab67954731402289c"
    },
    {
      "name": "Ultrasonic",
      "version": "1.0.1",
      "author": "Erick Simões \u003cerick.simoes@live.com\u003e",
      "maintainer": "Erick Simões \u003cerick.simoes@live.com\u003e",
      "sentence": "Minimalist library for ultrasound module HC-SR04 to Arduino",
      "paragraph": "Work with the ultrasonic module HC-SR04 is fairly simple, but can be even more practical if you abstract the control of some features. This library aims to resource efficiency and to simplify access to data.",
      "website": "https://github.com/ErickSimoes/Ultrasonic",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ErickSimoes/Ultrasonic-1.0.1.zip",
      "archiveFileName": "Ultrasonic-1.0.1.zip",
      "size": 63544,
      "checksum": "SHA-256:2863019de577e3291d63233d2fdee8db99efbbee8b8f065454d2f8e99affe61e"
    },
    {
      "name": "MagAlpha Angle Sensor Library",
      "version": "1.0.0",
      "author": "Mathieu Kaelin, Monolithic Power Systems \u003csensors@monolithicpower.com\u003e",
      "maintainer": "Mathieu Kaelin \u003csensors@monolithicpower.com\u003e",
      "sentence": "Arduino library for the MPS MagAlpha magnetic angle sensor.",
      "paragraph": "Supports MagAlpha 3rd generation Sensors. MagAlpha sensor detects the absolute angular position of a permanent magnet, typically a diametrically magnetized cylinder on the rotating shaft.",
      "website": "https://github.com/monolithicpower/MagAlpha-Arduino-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/monolithicpower/MagAlpha_Angle_Sensor_Library-1.0.0.zip",
      "archiveFileName": "MagAlpha_Angle_Sensor_Library-1.0.0.zip",
      "size": 10023,
      "checksum": "SHA-256:b17304f275ff2f5a2981e72d76d2583589b8103b3ee6eb654d6c3153219c226f"
    },
    {
      "name": "Dimmer class for SAMD21",
      "version": "1.0.0",
      "author": "E.Burkowski \u003ce.burkowski@konnekting.de\u003e",
      "maintainer": "E.Burkowski \u003ce.burkowski@konnekting.de\u003e",
      "sentence": "Easy use of PWM outputs on SAMD21 for dimmer applications.",
      "paragraph": "For all supported pins see readme on GitHub",
      "website": "https://github.com/Adminius/DimmerZero",
      "category": "Signal Input/Output",
      "architectures": [
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Adminius/Dimmer_class_for_SAMD21-1.0.0.zip",
      "archiveFileName": "Dimmer_class_for_SAMD21-1.0.0.zip",
      "size": 16938,
      "checksum": "SHA-256:342788f749f1059f9aa6fb3991cf97c404b1c50d2e3119b9a19bc9df176c12c5"
    },
    {
      "name": "AccelStepper",
      "version": "1.56.0",
      "author": "Mike McCauley \u003cmikem@airspayce.com\u003e",
      "maintainer": "Patrick Wasp \u003cpatrickwasp@gmail.com\u003e",
      "sentence": "Allows Arduino boards to control a variety of stepper motors.",
      "paragraph": "Provides an object-oriented interface for 2, 3 or 4 pin stepper motors and motor drivers.",
      "website": "http://www.airspayce.com/mikem/arduino/AccelStepper/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/waspinator/AccelStepper-1.56.0.zip",
      "archiveFileName": "AccelStepper-1.56.0.zip",
      "size": 82707,
      "checksum": "SHA-256:03353ca6e44fa3b0f9c491853c6fba17c83eb5b803b24e95805e4934a143ab6d"
    },
    {
      "name": "AccelStepper",
      "version": "1.56.2",
      "author": "Mike McCauley \u003cmikem@airspayce.com\u003e",
      "maintainer": "Patrick Wasp \u003cpatrickwasp@gmail.com\u003e",
      "sentence": "Allows Arduino boards to control a variety of stepper motors.",
      "paragraph": "Provides an object-oriented interface for 2, 3 or 4 pin stepper motors and motor drivers.",
      "website": "http://www.airspayce.com/mikem/arduino/AccelStepper/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/waspinator/AccelStepper-1.56.2.zip",
      "archiveFileName": "AccelStepper-1.56.2.zip",
      "size": 82768,
      "checksum": "SHA-256:81fb4a69fad114a69a988bd7c256ac70a73a542668c5c3d9ac806946c14f8d74"
    },
    {
      "name": "AccelStepper",
      "version": "1.57.1",
      "author": "Mike McCauley \u003cmikem@airspayce.com\u003e",
      "maintainer": "Patrick Wasp \u003cpatrickwasp@gmail.com\u003e",
      "sentence": "Allows Arduino boards to control a variety of stepper motors.",
      "paragraph": "Provides an object-oriented interface for 2, 3 or 4 pin stepper motors and motor drivers.",
      "website": "http://www.airspayce.com/mikem/arduino/AccelStepper/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/waspinator/AccelStepper-1.57.1.zip",
      "archiveFileName": "AccelStepper-1.57.1.zip",
      "size": 83498,
      "checksum": "SHA-256:2a846027d6c10654e4e9f3e28c1abc86835a82a06d1548c3af8fc95bc20c0d6b"
    },
    {
      "name": "GoogleMapsApi",
      "version": "1.0.0",
      "author": "Brian Lough",
      "maintainer": "Brian Lough \u003cbrian.d.lough@gmail.com\u003e",
      "sentence": "A wrapper for the Google Maps API for Arduino (supports ESP8266 \u0026 WiFi101 boards)",
      "paragraph": "Use this library to get the live traffic from google",
      "website": "https://github.com/witnessmenow/arduino-google-maps-api",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/witnessmenow/GoogleMapsApi-1.0.0.zip",
      "archiveFileName": "GoogleMapsApi-1.0.0.zip",
      "size": 13816,
      "checksum": "SHA-256:9cfaa99d2021f1b0394e77d33085f7ff4ae3ed06c9e13974be8d61eb6ef12776"
    },
    {
      "name": "YoutubeApi",
      "version": "1.0.0",
      "author": "Brian Lough",
      "maintainer": "Brian Lough \u003cbrian.d.lough@gmail.com\u003e",
      "sentence": "A wrapper for the YouTube API for Arduino (supports ESP8266 \u0026 WiFi101 boards)",
      "paragraph": "Use this library to get YouTube channel statistics",
      "website": "https://github.com/witnessmenow/arduino-youtube-api",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/witnessmenow/YoutubeApi-1.0.0.zip",
      "archiveFileName": "YoutubeApi-1.0.0.zip",
      "size": 13544,
      "checksum": "SHA-256:e0ecf44c20caafe50bc3517963ad94dbbd7b31eecae60e40b0711cec0cd1d4d6"
    },
    {
      "name": "IoTtweetESP32",
      "version": "0.0.2",
      "author": "Isaranu Janthong \u003cisaranujanthong@gmail.com\u003e",
      "maintainer": "Isaranu Janthong \u003cisaranujanthong@gmail.com\u003e",
      "sentence": "A library that makes Internet of Things send data and control on IoTtweet.com.",
      "paragraph": "Support ESP8266WiFi.h.",
      "website": "https://www.iottweet.com/",
      "category": "Communication",
      "architectures": [
        "esp32"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Isaranu/IoTtweetESP32-0.0.2.zip",
      "archiveFileName": "IoTtweetESP32-0.0.2.zip",
      "size": 4311,
      "checksum": "SHA-256:03760b8837d932920919d8c74faa54248b13a71cef7aca04a1121864bf835689"
    },
    {
      "name": "OpcServer",
      "version": "1.0.0",
      "author": "Patrick Seal \u003ccode@plasticrake.com\u003e",
      "maintainer": "Patrick Seal \u003ccode@plasticrake.com\u003e",
      "sentence": "Open Pixel Control (OPC) Server Library for Arduino",
      "paragraph": "Open Pixel Control (OPC) Server Library for Arduino",
      "website": "https://github.com/plasticrake/OpcServer",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/plasticrake/OpcServer-1.0.0.zip",
      "archiveFileName": "OpcServer-1.0.0.zip",
      "size": 8614,
      "checksum": "SHA-256:87b29fe98e6f1c5e82baddcb177e6ec2e9346255ed760e96b411d684ca98ac2f"
    },
    {
      "name": "OpcServer",
      "version": "1.1.0",
      "author": "Patrick Seal \u003ccode@plasticrake.com\u003e",
      "maintainer": "Patrick Seal \u003ccode@plasticrake.com\u003e",
      "sentence": "Open Pixel Control (OPC) Server Library for Arduino",
      "paragraph": "Open Pixel Control (OPC) Server Library for Arduino",
      "website": "https://github.com/plasticrake/OpcServer",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/plasticrake/OpcServer-1.1.0.zip",
      "archiveFileName": "OpcServer-1.1.0.zip",
      "size": 9392,
      "checksum": "SHA-256:09b38f226e1a80ebb10001e38cea2633bcfb92810c5fd495143ce4de0bf148e1"
    },
    {
      "name": "SparkFun Simultaneous RFID Tag Reader Library",
      "version": "1.0.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library for the NANO M6E RFID Module from ThingMagic",
      "paragraph": "An Arduino Library for the NANO M6E RFID module for reading and writing to Gen2 UHF (860 to 920MHz) RFID tags.",
      "website": "https://github.com/sparkfun/SparkFun_Simultaneous_RFID_Tag_Reader_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_Simultaneous_RFID_Tag_Reader_Library-1.0.0.zip",
      "archiveFileName": "SparkFun_Simultaneous_RFID_Tag_Reader_Library-1.0.0.zip",
      "size": 36498,
      "checksum": "SHA-256:aa7509753d60921e04ed04913dfd17e6862bb7632de83235b2a2a3b6017bb280"
    },
    {
      "name": "TriacDimmer",
      "version": "1.0.0",
      "author": "Anson Mansfield \u003canson.mansfield@gmail.com\u003e",
      "maintainer": "Anson Mansfield \u003canson.mansfield@gmail.com\u003e",
      "sentence": "A library for controlling a triac dimmer.",
      "paragraph": "Abuses the PWM capabilities of Timer 1 to offload all timing code from the CPU.",
      "website": "https://github.com/AJMansfield/TriacDimmer",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AJMansfield/TriacDimmer-1.0.0.zip",
      "archiveFileName": "TriacDimmer-1.0.0.zip",
      "size": 8441,
      "checksum": "SHA-256:b7fc3635dc14c1d05e262c923301b5ed8596cdcb364e043069a275b28ba484d9"
    },
    {
      "name": "ExponentMap",
      "version": "1.0.0",
      "author": "Vasil Kalchev \u003cvase7u@gmail.com\u003e",
      "maintainer": "Vasil Kalchev \u003cvase7u@gmail.com\u003e",
      "sentence": "Generates an exponentially growing array based on provided number of steps and maximum value.",
      "paragraph": "The generated array can be used to control a PWM output perceived by humans (brigthness, sound...). Changing the power of an output device exponentially counteracts the logarithmic nature of the human perception.",
      "website": "https://github.com/VasilKalchev/ExponentMap.git",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/VasilKalchev/ExponentMap-1.0.0.zip",
      "archiveFileName": "ExponentMap-1.0.0.zip",
      "size": 208283,
      "checksum": "SHA-256:1c7285a89f07bdf0ca10e707e66eebf105e48c95b3e59d708f84d681ea06febf"
    },
    {
      "name": "IRremoteESP8266",
      "version": "1.1.1",
      "author": "Sebastien Warin, Mark Szabo, Ken Shirriff, David Conran",
      "maintainer": "Mark Szabo, David Conran, Sebastien Warin, Roi Dayan, Massimiliano Pinto",
      "sentence": "Send and receive infrared signals with multiple protocols (ESP8266)",
      "paragraph": "This library enables you to send and receive infra-red signals on an ESP8266.",
      "website": "https://github.com/markszabo/IRremoteESP8266",
      "category": "Device Control",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/markszabo/IRremoteESP8266-1.1.1.zip",
      "archiveFileName": "IRremoteESP8266-1.1.1.zip",
      "size": 48189,
      "checksum": "SHA-256:2040cbee15512e8437664f9c3aaa05ba87aed2c20efdef3bc0623fc179b7f614"
    },
    {
      "name": "IRremoteESP8266",
      "version": "1.2.0",
      "author": "Sebastien Warin, Mark Szabo, Ken Shirriff, David Conran",
      "maintainer": "Mark Szabo, David Conran, Sebastien Warin, Roi Dayan, Massimiliano Pinto",
      "sentence": "Send and receive infrared signals with multiple protocols (ESP8266)",
      "paragraph": "This library enables you to send and receive infra-red signals on an ESP8266.",
      "website": "https://github.com/markszabo/IRremoteESP8266",
      "category": "Device Control",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/markszabo/IRremoteESP8266-1.2.0.zip",
      "archiveFileName": "IRremoteESP8266-1.2.0.zip",
      "size": 49838,
      "checksum": "SHA-256:c3f47a5d0eaf82217d9715d09e2b9815b146a406dfc5e3c9bf5733d0623dc476"
    },
    {
      "name": "Relay",
      "version": "1.0.0",
      "author": "Rafael",
      "maintainer": "Rafael \u003crafaelnsantos1@gmail.com\u003e",
      "sentence": "Simple relay usage",
      "paragraph": "Control 3 pins relays with turnOn(), turnOff() and getState() methods. Example https://github.com/rafaelnsantos/Relay/blob/master/examples/NormallyOpen/NormallyOpen.ino",
      "website": "https://github.com/rafaelnsantos/Relay",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/rafaelnsantos/Relay-1.0.0.zip",
      "archiveFileName": "Relay-1.0.0.zip",
      "size": 6343,
      "checksum": "SHA-256:11a1c0d091d49053b17e1adb9930cbffd12e03e95659eac03b820ebf8a497ae2"
    },
    {
      "name": "LcdEffects",
      "version": "1.0.0",
      "author": "Anson Mansfield \u003canson.mansfield@gmail.com\u003e",
      "maintainer": "Anson Mansfield \u003canson.mansfield@gmail.com\u003e",
      "sentence": "A library that lets you apply special effects to LCD text.",
      "paragraph": "Underlining! Bold! Italics! This library lets you print all these and more on character LCDs.",
      "website": "https://github.com/AJMansfield/LcdEffects",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AJMansfield/LcdEffects-1.0.0.zip",
      "archiveFileName": "LcdEffects-1.0.0.zip",
      "size": 13402,
      "checksum": "SHA-256:69cce5579790d0160177a80c4c3c4d1c5f23359535e65d145d13c3932252c16f"
    },
    {
      "name": "RadiationWatch",
      "version": "0.6.0",
      "author": "puuu, thomasaw, Tourmal, Yoan Tournade \u003cyoan@ytotech.com\u003e",
      "maintainer": "Yoan Tournade \u003cyoan@ytotech.com\u003e",
      "sentence": "Arduino driver for Radiation Watch Pocket Geiger sensor",
      "paragraph": "Make radiation measurements using your Arduino board and a Radiation Watch Pocket Geiger Type 5 sensor.",
      "website": "https://github.com/MonsieurV/ArduinoPocketGeiger",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MonsieurV/RadiationWatch-0.6.0.zip",
      "archiveFileName": "RadiationWatch-0.6.0.zip",
      "size": 539810,
      "checksum": "SHA-256:c0e2aa5fdfbaa7dc575acab2e4a2338da262a56dadddec3c7e351980a86d30e1"
    },
    {
      "name": "RadiationWatch",
      "version": "0.6.1",
      "author": "puuu, thomasaw, Tourmal, Yoan Tournade \u003cyoan@ytotech.com\u003e",
      "maintainer": "Yoan Tournade \u003cyoan@ytotech.com\u003e",
      "sentence": "Arduino driver for Radiation Watch Pocket Geiger sensor",
      "paragraph": "Make radiation measurements using your Arduino board and a Radiation Watch Pocket Geiger Type 5 sensor.",
      "website": "https://github.com/MonsieurV/ArduinoPocketGeiger",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/MonsieurV/RadiationWatch-0.6.1.zip",
      "archiveFileName": "RadiationWatch-0.6.1.zip",
      "size": 539919,
      "checksum": "SHA-256:1ebcbf5663afdc7e221a4d76dca5c747dbc5f4d2f2307565f270b383e1c9ff00"
    },
    {
      "name": "TheThingsNode",
      "version": "2.0.0",
      "author": "The Things Network",
      "maintainer": "Johan Stokking \u003cjohan@thethingsnetwork.org\u003e",
      "sentence": "The Things Node Arduino Library.",
      "paragraph": "Device library for The Things Node.",
      "website": "https://github.com/TheThingsNetwork/arduino-node-lib",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/TheThingsNetwork/TheThingsNode-2.0.0.zip",
      "archiveFileName": "TheThingsNode-2.0.0.zip",
      "size": 41993,
      "checksum": "SHA-256:d528561800687b7bc5af2de0403f5e95584ed39bc3d16d7141a8ab6de3430d4a"
    },
    {
      "name": "Serial Controlled Motor Driver",
      "version": "1.0.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Use this to command the SCMD and connected chain.",
      "paragraph": "This library does the low level interface to the Serial Controlled Motor Driver.  It provides functions to control the driver, set motor drive level, inversion mode, and bridging mode.  It also includes a tool to randomly access control registers over serial, for debugging purposes.  This has been fully tested on the uno and Teensy 3.2.",
      "website": "https://github.com/sparkfun/Serial_Controlled_Motor_Driver",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/Serial_Controlled_Motor_Driver-1.0.0.zip",
      "archiveFileName": "Serial_Controlled_Motor_Driver-1.0.0.zip",
      "size": 27085,
      "checksum": "SHA-256:3480610e4e9aef144e76193a8926defffa9d96ddce748a6aa37c82b2fe2e374d"
    },
    {
      "name": "Serial Controlled Motor Driver",
      "version": "1.0.1",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Use this to command the SCMD and connected chain.",
      "paragraph": "This library does the low level interface to the Serial Controlled Motor Driver.  It provides functions to control the driver, set motor drive level, inversion mode, and bridging mode.  It also includes a tool to randomly access control registers over serial, for debugging purposes.  This has been fully tested on the uno and Teensy 3.2.",
      "website": "https://github.com/sparkfun/Serial_Controlled_Motor_Driver",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/Serial_Controlled_Motor_Driver-1.0.1.zip",
      "archiveFileName": "Serial_Controlled_Motor_Driver-1.0.1.zip",
      "size": 27541,
      "checksum": "SHA-256:ca5b87ce032060c57cfe67e270804fda803503f75a99381e5bf5163b8c953adb"
    },
    {
      "name": "RFExplorer 3GP IoT",
      "version": "1.0.1702",
      "author": "RFExplorer Team",
      "maintainer": "RF Explorer Team \u003ccontact@rf-explorer.com\u003e",
      "sentence": "Library reference for RFExplorer 3G+ IoT",
      "paragraph": "Spectrum Analyzer for radio and wireless communication. Use for Internet of Things",
      "website": "http://www.rf-explorer.com/IoT",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/RFExplorer/RFExplorer_3GP_IoT-1.0.1702.zip",
      "archiveFileName": "RFExplorer_3GP_IoT-1.0.1702.zip",
      "size": 29816,
      "checksum": "SHA-256:d78213a72270b9807a6c6e224a1820a8bc16892af259aa54f4240ce56864459d"
    },
    {
      "name": "RFExplorer 3GP IoT",
      "version": "1.0.1703",
      "author": "RFExplorer Team",
      "maintainer": "RF Explorer Team \u003ccontact@rf-explorer.com\u003e",
      "sentence": "Library reference for RFExplorer 3GP IoT",
      "paragraph": "Spectrum Analyzer for radio and wireless communication. Use for Internet of Things",
      "website": "http://www.rf-explorer.com/IoT",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/RFExplorer/RFExplorer_3GP_IoT-1.0.1703.zip",
      "archiveFileName": "RFExplorer_3GP_IoT-1.0.1703.zip",
      "size": 29816,
      "checksum": "SHA-256:45a0319096c6f0be475307f369a24690540a7983fc9ee9fd8d9906fabf2e3776"
    },
    {
      "name": "Arduino Smart Watch",
      "version": "1.0.0",
      "author": "Dreamwalker \u003caristojeff@gmail.com\u003e",
      "maintainer": "Dreamwalker \u003caristojeff@gmail.com\u003e",
      "sentence": "A library that makes coding a watch for Arduino Micro and so on",
      "paragraph": "Arduino Smart Watch with Arduino Micro",
      "website": "https://github.com/JAICHANGPARK/Arduino-Watch",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/JAICHANGPARK/Arduino_Smart_Watch-1.0.0.zip",
      "archiveFileName": "Arduino_Smart_Watch-1.0.0.zip",
      "size": 9527,
      "checksum": "SHA-256:5d6cfd13e1802ad1b783d836b967b25a9b0ab4a1d326d42c2b7bd0537e5de5a2"
    },
    {
      "name": "IRLremote",
      "version": "1.7.4",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "Lightweight Infrared library for Arduino",
      "paragraph": "IRLremote implements a fast and compact way to analyze IR signals with PinInterrupts and PinChangeInterrupts.",
      "website": "https://github.com/NicoHood/IRLremote",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NicoHood/IRLremote-1.7.4.zip",
      "archiveFileName": "IRLremote-1.7.4.zip",
      "size": 220949,
      "checksum": "SHA-256:e74160673556b845953d4e920c96aa25912bf7401c6d9f36041c351048b4c46a"
    },
    {
      "name": "IRLremote",
      "version": "1.8.0",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "Lightweight Infrared library for Arduino",
      "paragraph": "IRLremote implements a fast and compact way to analyze IR signals with PinInterrupts and PinChangeInterrupts.",
      "website": "https://github.com/NicoHood/IRLremote",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NicoHood/IRLremote-1.8.0.zip",
      "archiveFileName": "IRLremote-1.8.0.zip",
      "size": 216679,
      "checksum": "SHA-256:3e5114f22836bf4f592e9cd928376cf0f44aedabb206d70aabdf8569423aa713"
    },
    {
      "name": "IRLremote",
      "version": "1.9.0",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "Lightweight Infrared library for Arduino",
      "paragraph": "IRLremote implements a fast and compact way to analyze IR signals with PinInterrupts and PinChangeInterrupts.",
      "website": "https://github.com/NicoHood/IRLremote",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NicoHood/IRLremote-1.9.0.zip",
      "archiveFileName": "IRLremote-1.9.0.zip",
      "size": 234326,
      "checksum": "SHA-256:ee963d63a2d5e9c26e2e0e46f52517f6d110db831aaffafcfa7cea242f581236"
    },
    {
      "name": "IRLremote",
      "version": "2.0.0",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "Lightweight Infrared library for Arduino",
      "paragraph": "IRLremote implements a fast and compact way to analyze IR signals with PinInterrupts and PinChangeInterrupts.",
      "website": "https://github.com/NicoHood/IRLremote",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NicoHood/IRLremote-2.0.0.zip",
      "archiveFileName": "IRLremote-2.0.0.zip",
      "size": 243053,
      "checksum": "SHA-256:74cb53a6e4bb7e33264efbc6b630c298cfd6c1287f300f787f67e598d3f9701d"
    },
    {
      "name": "Balboa32U4",
      "version": "1.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Balboa 32U4 Arduino library",
      "paragraph": "This library helps interface with the on-board hardware on the Pololu Balboa 32U4 control board.",
      "website": "https://github.com/pololu/balboa-32u4-arduino-library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/pololu/Balboa32U4-1.0.0.zip",
      "archiveFileName": "Balboa32U4-1.0.0.zip",
      "size": 61018,
      "checksum": "SHA-256:7218b8607778458fe494d117f59f1396756deb1ddaa459cb0f0fc2dddeebdee2"
    },
    {
      "name": "RTCtime",
      "version": "1.0.0",
      "author": "Sergio Manzi",
      "maintainer": "Sergio Manzi",
      "sentence": "A \"Standard C Runtime\" compatible library for interfacing the DS1307 and DS3231 Real Time Clock modules.",
      "paragraph": "This library is for getting/setting time from hardware RTC modules. It uses an API compatible with the AVR implementation of the Standard C runtime time library as available in the Arduino IDE since version 1.6.10 (AVR C Runtime Library 2.0.0)",
      "website": "https://github.com/smz/Arduino-RTCtime",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/smz/RTCtime-1.0.0.zip",
      "archiveFileName": "RTCtime-1.0.0.zip",
      "size": 17487,
      "checksum": "SHA-256:105cb455527a7f48ba244812e9b2d054059c7f98fe3d15e24d9e7d362be1b80e"
    },
    {
      "name": "RTCtime",
      "version": "1.0.1",
      "author": "smz \u003ctinker@smz.it\u003e",
      "maintainer": "smz (https://github.com/smz)",
      "sentence": "A \"Standard C Runtime\" compatible library for interfacing the DS1307 and DS3231 Real Time Clock modules.",
      "paragraph": "This library is for getting/setting time from hardware RTC modules. It uses an API compatible with the AVR implementation of the Standard C runtime time library as available in the Arduino IDE since version 1.6.10 (AVR C Runtime Library 2.0.0)",
      "website": "https://github.com/smz/Arduino-RTCtime",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/smz/RTCtime-1.0.1.zip",
      "archiveFileName": "RTCtime-1.0.1.zip",
      "size": 17498,
      "checksum": "SHA-256:6e84f250e0324fe2896abe39536f2175f1e7b9709ff7b8834718d560cec80e26"
    },
    {
      "name": "RTCtime",
      "version": "1.0.2",
      "author": "smz \u003ctinker@smz.it\u003e",
      "maintainer": "smz (https://github.com/smz)",
      "sentence": "A \"Standard C Runtime\" compatible library for interfacing the DS1307 and DS3231 Real Time Clock modules.",
      "paragraph": "This library is for getting/setting time from hardware RTC modules. It uses an API compatible with the AVR implementation of the Standard C runtime time library as available in the Arduino IDE since version 1.6.10 (AVR C Runtime Library 2.0.0)",
      "website": "https://github.com/smz/Arduino-RTCtime",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/smz/RTCtime-1.0.2.zip",
      "archiveFileName": "RTCtime-1.0.2.zip",
      "size": 17555,
      "checksum": "SHA-256:d98f0e3275a92d332c69dabe60c0a66d76d41a9b5b81ab569d6e27d294813857"
    },
    {
      "name": "RTCtime",
      "version": "1.0.3",
      "author": "smz \u003ctinker@smz.it\u003e",
      "maintainer": "smz (https://github.com/smz)",
      "sentence": "A \"Standard C Runtime\" compatible library for interfacing the DS1307 and DS3231 Real Time Clock modules.",
      "paragraph": "This library is for getting/setting time from hardware RTC modules. It uses an API compatible with the AVR implementation of the Standard C runtime time library as available in the Arduino IDE since version 1.6.10 (AVR C Runtime Library 2.0.0)",
      "website": "https://github.com/smz/Arduino-RTCtime",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/smz/RTCtime-1.0.3.zip",
      "archiveFileName": "RTCtime-1.0.3.zip",
      "size": 17738,
      "checksum": "SHA-256:5ed0123c48cb57ce7eaff700b44bc0539940238cd2e63f165887b9cc2cc90e12"
    },
    {
      "name": "Mcp3208",
      "version": "1.0.0",
      "author": "Patrick Rogalla \u003cpatrick@labfruits.com\u003e",
      "maintainer": "Patrick Rogalla \u003cpatrick@labfruits.com\u003e",
      "sentence": "A library for the MCP3208 adc.",
      "paragraph": "The library support all features of the chip and uses SPI for communication.",
      "website": "https://github.com/labfruits/mcp3208",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/labfruits/Mcp3208-1.0.0.zip",
      "archiveFileName": "Mcp3208-1.0.0.zip",
      "size": 547524,
      "checksum": "SHA-256:8e312a558f20becf1ed7406da32d53af2524f7c52aa9f1995c2936329aa23cc9"
    },
    {
      "name": "Mcp3208",
      "version": "1.0.1",
      "author": "Patrick Rogalla \u003cpatrick@labfruits.com\u003e",
      "maintainer": "Patrick Rogalla \u003cpatrick@labfruits.com\u003e",
      "sentence": "A library for the MCP3208 adc.",
      "paragraph": "The library support all features of the chip and uses SPI for communication.",
      "website": "https://github.com/labfruits/mcp3208",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/labfruits/Mcp3208-1.0.1.zip",
      "archiveFileName": "Mcp3208-1.0.1.zip",
      "size": 547522,
      "checksum": "SHA-256:92bd7ac4c3fa8afdda0c65dc43b69a5dc2c72d5f6ffd3fbbcd6e07f6d0adb8aa"
    },
    {
      "name": "Mcp3208",
      "version": "1.0.2",
      "author": "Patrick Rogalla \u003cpatrick@labfruits.com\u003e",
      "maintainer": "Patrick Rogalla \u003cpatrick@labfruits.com\u003e",
      "sentence": "Arduino library for the MCP3208/3204 12 bit ADC.",
      "paragraph": "The library supports all features of the chip and uses SPI for communication.",
      "website": "https://github.com/labfruits/mcp3208",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/labfruits/Mcp3208-1.0.2.zip",
      "archiveFileName": "Mcp3208-1.0.2.zip",
      "size": 575069,
      "checksum": "SHA-256:e28dabcc22a38243acd23d4f5ff738f48c931772a9304dfb3905ede505a13919"
    },
    {
      "name": "ArduinoLog",
      "version": "1.0.1",
      "author": "Thijs Elenbaas",
      "maintainer": "Thijs Elenbaas \u003cthijs@contemplated.nl\u003e",
      "sentence": "Small logging framework",
      "paragraph": "ArduinoLog is a minimalistic logging framework to help the programmer output log statements to a variety of output targets. ArduinoLog is designed so that log statements can remain in the code with minimal performance cost. In order to facilitate this the loglevel can be adjusted, and if the code is completely tested all logging code can be compiled out. Tested for AVR and ESP8266 boards.",
      "website": "https://github.com/thijse/Arduino-Log/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thijse/ArduinoLog-1.0.1.zip",
      "archiveFileName": "ArduinoLog-1.0.1.zip",
      "size": 9532,
      "checksum": "SHA-256:7c093cc215ea8a21b449c1a7f2006de18b5c9bea6e56375468419c103cab6723"
    },
    {
      "name": "ST_HW_ST_HCRS04",
      "version": "2.0.0",
      "author": "Flávio Monteiro (flaviomonteiro2013@gmail.com)",
      "maintainer": "Flávio Monteiro (flaviomonteiro2013@gmail.com)",
      "sentence": "Advanced arduino library for HC-SR04 ultrasonic sensors.",
      "paragraph": "This library is very lightweight and fit for advanced use cases, such as requiring custom timeouts. Distance calculations implementation is left to the developer.",
      "website": "https://github.com/Spaguetron/ST_HW_HC_SR04",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Spaguetron/ST_HW_ST_HCRS04-2.0.0.zip",
      "archiveFileName": "ST_HW_ST_HCRS04-2.0.0.zip",
      "size": 6881,
      "checksum": "SHA-256:ebaf6c7727174bead4ce8357270f70f7adda88532fb0714bb6b749e0f920043d"
    },
    {
      "name": "ST_HW_ST_HCRS04",
      "version": "2.0.1",
      "author": "Flávio Monteiro (flaviomonteiro2013@gmail.com)",
      "maintainer": "Flávio Monteiro (flaviomonteiro2013@gmail.com)",
      "sentence": "Advanced arduino library for HC-SR04 ultrasonic sensors.",
      "paragraph": "This library is very lightweight and fit for advanced use cases, such as requiring custom timeouts. Distance calculations implementation is left to the developer.",
      "website": "https://github.com/Spaguetron/ST_HW_HC_SR04",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Spaguetron/ST_HW_ST_HCRS04-2.0.1.zip",
      "archiveFileName": "ST_HW_ST_HCRS04-2.0.1.zip",
      "size": 6929,
      "checksum": "SHA-256:e889cdcb2f17efa172bdd2821ca0dad58bfc7d01e0f1519ea22370df50abcaa9"
    },
    {
      "name": "ST_HW_ST_HCRS04",
      "version": "2.0.2",
      "author": "Flávio Monteiro (flaviomonteiro2013@gmail.com)",
      "maintainer": "Flávio Monteiro (flaviomonteiro2013@gmail.com)",
      "sentence": "Advanced arduino library for HC-SR04 ultrasonic sensors.",
      "paragraph": "This library is very lightweight and fit for advanced use cases, such as requiring custom timeouts. Distance calculations implementation is left to the developer.",
      "website": "https://github.com/Spaguetron/ST_HW_HC_SR04",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Spaguetron/ST_HW_ST_HCRS04-2.0.2.zip",
      "archiveFileName": "ST_HW_ST_HCRS04-2.0.2.zip",
      "size": 6935,
      "checksum": "SHA-256:f0f0c61eeb620e09514bb0887a04dbe9524fce4079fdcbe8521604cd7569902d"
    },
    {
      "name": "AS-289R2 Thermal Printer Shield",
      "version": "1.1.0",
      "author": "NADA ELECTRONICS",
      "maintainer": "Takehiro Yamaguchi",
      "sentence": "Arduino Library for Thermal Printer Shieid",
      "paragraph": "Arduino Library for Thermal Printer Shieid",
      "website": "https://github.com/NADA-ELECTRONICS/AS-289R2",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NADA-ELECTRONICS/AS_289R2_Thermal_Printer_Shield-1.1.0.zip",
      "archiveFileName": "AS_289R2_Thermal_Printer_Shield-1.1.0.zip",
      "size": 8429,
      "checksum": "SHA-256:c26fe0c8a867259451696dd814c9b7967477a3397f4bc5fd117bbb36cba7dfe0"
    },
    {
      "name": "AS-289R2 Thermal Printer Shield",
      "version": "1.1.1",
      "author": "NADA ELECTRONICS",
      "maintainer": "Takehiro Yamaguchi",
      "sentence": "Arduino Library for Thermal Printer Shieid",
      "paragraph": "Arduino Library for Thermal Printer Shieid",
      "website": "https://github.com/NADA-ELECTRONICS/AS-289R2",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NADA-ELECTRONICS/AS_289R2_Thermal_Printer_Shield-1.1.1.zip",
      "archiveFileName": "AS_289R2_Thermal_Printer_Shield-1.1.1.zip",
      "size": 8579,
      "checksum": "SHA-256:936b5b980c5d41be3482d8440d676da3f897253388f0dad9fa7c63d55e59ca58"
    },
    {
      "name": "TeensyView",
      "version": "1.0.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "A library for driving the TeensyView OLED board",
      "paragraph": "This operates the OLED by SPI.  Set jumpers and code to match pin locations.",
      "website": "https://github.com/sparkfun/SparkFun_TeensyView_Arduino_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/TeensyView-1.0.0.zip",
      "archiveFileName": "TeensyView-1.0.0.zip",
      "size": 74142,
      "checksum": "SHA-256:f834ecc62a4005a8369102ca1a97915354ed21ff85bb422866ccd170596e9030"
    },
    {
      "name": "TeensyView",
      "version": "1.1.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "A library for driving the TeensyView OLED board",
      "paragraph": "This operates the OLED by SPI.  Set jumpers and code to match pin locations.",
      "website": "https://github.com/sparkfun/SparkFun_TeensyView_Arduino_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/TeensyView-1.1.0.zip",
      "archiveFileName": "TeensyView-1.1.0.zip",
      "size": 76221,
      "checksum": "SHA-256:8d6023a7b5b8ae19276e77def6b62200e0d98b9cf2199c2f7ef9f8ab60fbf36c"
    },
    {
      "name": "Shutters",
      "version": "2.0.0",
      "author": "Marvin ROGER",
      "maintainer": "Marvin ROGER",
      "sentence": "Allows non-smart roller-shutters to be percentage-controlled using time",
      "paragraph": "Supports relays, RF, EEEPROM, SPIFFS, etc.",
      "website": "https://github.com/marvinroger/arduino-shutters",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/marvinroger/Shutters-2.0.0.zip",
      "archiveFileName": "Shutters-2.0.0.zip",
      "size": 5381,
      "checksum": "SHA-256:aed29d7d8b0795c80fb73616912959857ec26bb5865381722da594ee50c1c5ea"
    },
    {
      "name": "Shutters",
      "version": "2.0.1",
      "author": "Marvin ROGER",
      "maintainer": "Marvin ROGER",
      "sentence": "Allows non-smart roller-shutters to be percentage-controlled using time",
      "paragraph": "Supports relays, RF, EEEPROM, SPIFFS, etc.",
      "website": "https://github.com/marvinroger/arduino-shutters",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/marvinroger/Shutters-2.0.1.zip",
      "archiveFileName": "Shutters-2.0.1.zip",
      "size": 5396,
      "checksum": "SHA-256:bd4ad9511b68b85348531f3f0b3044cc86aaceef64964a500ecf5744fb9faea2"
    },
    {
      "name": "Shutters",
      "version": "2.1.0",
      "author": "Marvin ROGER",
      "maintainer": "Marvin ROGER",
      "sentence": "Allows non-smart roller-shutters to be percentage-controlled using time",
      "paragraph": "Supports relays, RF, EEEPROM, SPIFFS, etc.",
      "website": "https://github.com/marvinroger/arduino-shutters",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/marvinroger/Shutters-2.1.0.zip",
      "archiveFileName": "Shutters-2.1.0.zip",
      "size": 5593,
      "checksum": "SHA-256:099f947cda6a158ba23aba5693281f096bb5196d1dd553f6e84f619e5da5c9da"
    },
    {
      "name": "Shutters",
      "version": "2.1.1",
      "author": "Marvin ROGER",
      "maintainer": "Marvin ROGER",
      "sentence": "Allows non-smart roller-shutters to be percentage-controlled using time",
      "paragraph": "Supports relays, RF, EEEPROM, SPIFFS, etc.",
      "website": "https://github.com/marvinroger/arduino-shutters",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/marvinroger/Shutters-2.1.1.zip",
      "archiveFileName": "Shutters-2.1.1.zip",
      "size": 6166,
      "checksum": "SHA-256:61e997e1bebada2acb78b0fef41528b70e1f5c6b9f3ef214f33209dbfb53f7bf"
    },
    {
      "name": "MakestroCloudClient",
      "version": "1.0.0",
      "author": "Andri Yadi\u003candri@dycode.com\u003e, Alwin Arrasyid\u003cwinter@dycode.com\u003e",
      "maintainer": "ESPectro Team\u003cx@dycode.com\u003e",
      "sentence": "Library for connecting with Makestro Cloud",
      "paragraph": "A library that is compatible with ESP8266-based boards especially ESPectro Core and Arduino IDE. It is designed to work with Makestro Cloud",
      "website": "https://github.com/dycodex/MakestroCloudClient",
      "category": "Communication",
      "architectures": [
        ""
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/dycodex/MakestroCloudClient-1.0.0.zip",
      "archiveFileName": "MakestroCloudClient-1.0.0.zip",
      "size": 5948,
      "checksum": "SHA-256:07c43b0bd91637c5da15cef1d437628175a71f3f4ea1877e03e87cdc07af82c0"
    },
    {
      "name": "MakestroCloudClient",
      "version": "1.0.1",
      "author": "Andri Yadi\u003candri@dycode.com\u003e, Alwin Arrasyid\u003cwinter@dycode.com\u003e",
      "maintainer": "ESPectro Team\u003cx@dycode.com\u003e",
      "sentence": "Library for connecting with Makestro Cloud",
      "paragraph": "A library that is compatible with ESP8266-based boards especially ESPectro Core and Arduino IDE. It is designed to work with Makestro Cloud",
      "website": "https://github.com/dycodex/MakestroCloudClient",
      "category": "Communication",
      "architectures": [
        ""
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/dycodex/MakestroCloudClient-1.0.1.zip",
      "archiveFileName": "MakestroCloudClient-1.0.1.zip",
      "size": 6607,
      "checksum": "SHA-256:4598892c28857698145aea7484478114cee9e79f26012bdf76240009afcfe0aa"
    },
    {
      "name": "MakestroCloudClient",
      "version": "1.0.2",
      "author": "Andri Yadi\u003candri@dycode.com\u003e, Alwin Arrasyid\u003cwinter@dycode.com\u003e",
      "maintainer": "ESPectro Team\u003cx@dycode.com\u003e",
      "sentence": "Library for connecting with Makestro Cloud",
      "paragraph": "A library that is compatible with ESP8266-based boards especially ESPectro Core and Arduino IDE. It is designed to work with Makestro Cloud",
      "website": "https://github.com/dycodex/MakestroCloudClient",
      "category": "Communication",
      "architectures": [
        ""
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/dycodex/MakestroCloudClient-1.0.2.zip",
      "archiveFileName": "MakestroCloudClient-1.0.2.zip",
      "size": 6607,
      "checksum": "SHA-256:75b15885bf9962970087ec823c572dcb277e18abce8d9f16b2dd1b0c6c84f3da"
    },
    {
      "name": "MakestroCloudClient",
      "version": "1.0.3",
      "author": "Andri Yadi\u003candri@dycode.com\u003e, Alwin Arrasyid\u003cwinter@dycode.com\u003e",
      "maintainer": "ESPectro Team\u003cx@dycode.com\u003e",
      "sentence": "Library for connecting with Makestro Cloud",
      "paragraph": "A library that is compatible with ESP8266-based boards especially ESPectro Core and Arduino IDE. It is designed to work with Makestro Cloud",
      "website": "https://github.com/dycodex/MakestroCloudClient",
      "category": "Communication",
      "architectures": [
        ""
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/dycodex/MakestroCloudClient-1.0.3.zip",
      "archiveFileName": "MakestroCloudClient-1.0.3.zip",
      "size": 6608,
      "checksum": "SHA-256:f3f83d9cfb23513cc6cdfc08a87336031f46b9c99c0107425ff12c277f83f542"
    },
    {
      "name": "jm_Scheduler",
      "version": "1.0.2",
      "author": "Jean-Marc Paratte \u003cjean-marc@paratte.ch\u003e",
      "maintainer": "Jean-Marc Paratte \u003cjean-marc@paratte.ch\u003e",
      "sentence": "A Scheduler Library for Arduino.",
      "paragraph": "Schedules routines, starts, stops and restarts them. Timestamp is read from micros() function.",
      "website": "https://github.com/jmparatte/jm_Scheduler",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jmparatte/jm_Scheduler-1.0.2.zip",
      "archiveFileName": "jm_Scheduler-1.0.2.zip",
      "size": 18048,
      "checksum": "SHA-256:2a057a64a815da17af4baff12d26372856ed66e4251629747aa60e780326d7ff"
    },
    {
      "name": "jm_Scheduler",
      "version": "1.0.3",
      "author": "Jean-Marc Paratte \u003cjean-marc@paratte.ch\u003e",
      "maintainer": "Jean-Marc Paratte \u003cjean-marc@paratte.ch\u003e",
      "sentence": "A Scheduler Library for Arduino.",
      "paragraph": "Schedules routines, starts, stops and restarts them. Timestamp is read from micros() function.",
      "website": "https://github.com/jmparatte/jm_Scheduler",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jmparatte/jm_Scheduler-1.0.3.zip",
      "archiveFileName": "jm_Scheduler-1.0.3.zip",
      "size": 18542,
      "checksum": "SHA-256:f8a6d04161cab2f4c5937b7d6efe61657fd218298d94a0c4cd106e67f13f3831"
    },
    {
      "name": "jm_Scheduler",
      "version": "1.0.4",
      "author": "Jean-Marc Paratte \u003cjean-marc@paratte.ch\u003e",
      "maintainer": "Jean-Marc Paratte \u003cjean-marc@paratte.ch\u003e",
      "sentence": "A Scheduler Library for Arduino.",
      "paragraph": "Schedules routines, starts, stops and restarts them. Timestamp is read from micros() function.",
      "website": "https://github.com/jmparatte/jm_Scheduler",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jmparatte/jm_Scheduler-1.0.4.zip",
      "archiveFileName": "jm_Scheduler-1.0.4.zip",
      "size": 18561,
      "checksum": "SHA-256:85871f4cdb191f60adf0f4c2fd692f288851c594814277ff34f529ecf7d4712f"
    },
    {
      "name": "jm_Scheduler",
      "version": "1.0.0",
      "author": "Jean-Marc Paratte \u003cjean-marc@paratte.ch\u003e",
      "maintainer": "Jean-Marc Paratte \u003cjean-marc@paratte.ch\u003e",
      "sentence": "A Scheduler Library for Arduino.",
      "paragraph": "Schedules routines, starts, stops and restarts them. Timestamp is read from micros() function.",
      "website": "https://github.com/jmparatte/jm_Scheduler",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jmparatte/jm_Scheduler-1.0.0.zip",
      "archiveFileName": "jm_Scheduler-1.0.0.zip",
      "size": 17943,
      "checksum": "SHA-256:c1307fc762db012b617c77aa748068948d6bf1e241f263437ac358d7adf3b99a"
    },
    {
      "name": "jm_Scheduler",
      "version": "1.0.1",
      "author": "Jean-Marc Paratte \u003cjean-marc@paratte.ch\u003e",
      "maintainer": "Jean-Marc Paratte \u003cjean-marc@paratte.ch\u003e",
      "sentence": "A Scheduler Library for Arduino.",
      "paragraph": "Schedules routines, starts, stops and restarts them. Timestamp is read from micros() function.",
      "website": "https://github.com/jmparatte/jm_Scheduler",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jmparatte/jm_Scheduler-1.0.1.zip",
      "archiveFileName": "jm_Scheduler-1.0.1.zip",
      "size": 17947,
      "checksum": "SHA-256:dd49098a65b91f845289bc8af97d4b5538ba06b563565b80f166fec86083b7a1"
    },
    {
      "name": "AD7193",
      "version": "1.0.0",
      "author": "Anne Mahaffey \u003canne@engineerbynight.com\u003e",
      "maintainer": "Anne Mahaffey \u003canne@engineerbynight.com\u003e",
      "sentence": "Library for AD7193 Sigma-Delta ADC with PGA",
      "paragraph": "Library for the AD7193 ADC - useful for interfacing with various sensors, such as thermocouples, load cells, bridge sensors, etc.",
      "website": "https://github.com/annem/AD7193",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/annem/AD7193-1.0.0.zip",
      "archiveFileName": "AD7193-1.0.0.zip",
      "size": 10904,
      "checksum": "SHA-256:8b14a31f4ba5f745de8ac17aea4c540579a6297b888b0f40832a376b23e83562"
    },
    {
      "name": "Robopoly Bluetooth",
      "version": "1.5.1",
      "author": "Karl Kangur, David Perrenoud, Robopoly",
      "maintainer": "Robopoly \u003crobopoly@epfl.ch\u003e",
      "sentence": "This library allows you to use the bluetooth module on the Robopoly Shield.",
      "website": "https://github.com/Robopoly/bluetooth-library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Robopoly/Robopoly_Bluetooth-1.5.1.zip",
      "archiveFileName": "Robopoly_Bluetooth-1.5.1.zip",
      "size": 7501,
      "checksum": "SHA-256:63d6e5f3935d77a6cda48689ac3b65763d3081583b1d6c74a33f354ab7cc2ccf"
    },
    {
      "name": "Robopoly RomeEnco",
      "version": "0.9.0",
      "author": "David Wuthier, Robopoly",
      "maintainer": "Robopoly \u003crobopoly@epfl.ch\u003e",
      "sentence": "This library allows you to read up to four encoders at the same time.",
      "paragraph": "The encoder signals are polled using a timer.",
      "website": "https://github.com/Robopoly/Robopoly_RomEnco",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Robopoly/Robopoly_RomeEnco-0.9.0.zip",
      "archiveFileName": "Robopoly_RomeEnco-0.9.0.zip",
      "size": 6024,
      "checksum": "SHA-256:03b9a388a7714b76f9b1919736e13601bcf828ad522baae5fbc7c23661654cd2"
    },
    {
      "name": "Robopoly RomeEnco",
      "version": "0.9.1",
      "author": "David Wuthier, Robopoly",
      "maintainer": "Robopoly \u003crobopoly@epfl.ch\u003e",
      "sentence": "This library allows you to read up to four encoders at the same time.",
      "paragraph": "The encoder signals are polled using a timer.",
      "website": "https://github.com/Robopoly/Robopoly_RomEnco",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Robopoly/Robopoly_RomeEnco-0.9.1.zip",
      "archiveFileName": "Robopoly_RomeEnco-0.9.1.zip",
      "size": 6424,
      "checksum": "SHA-256:6f8ee250ae19e7f1c6751f24980b606fdca782e8e7a827d6ac0fe2cb511e0445"
    },
    {
      "name": "Robopoly RomeEnco",
      "version": "0.9.2",
      "author": "David Wuthier, Robopoly",
      "maintainer": "Robopoly \u003crobopoly@epfl.ch\u003e",
      "sentence": "This library allows you to read up to four encoders at the same time.",
      "paragraph": "The encoder signals are polled using a timer.",
      "website": "https://github.com/Robopoly/Robopoly_Encoders",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Robopoly/Robopoly_RomeEnco-0.9.2.zip",
      "archiveFileName": "Robopoly_RomeEnco-0.9.2.zip",
      "size": 38149,
      "checksum": "SHA-256:2df293809d8ea0c639821fc61b47a506edccf111b1adae5b9117a2a7bea45ded"
    },
    {
      "name": "Robopoly RomeEnco",
      "version": "1.0.0",
      "author": "David Wuthier, Robopoly",
      "maintainer": "Robopoly \u003crobopoly@epfl.ch\u003e",
      "sentence": "This library allows you to read up to four encoders at the same time.",
      "paragraph": "The encoder signals are polled using a timer.",
      "website": "https://github.com/Robopoly/Robopoly_Encoders",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Robopoly/Robopoly_RomeEnco-1.0.0.zip",
      "archiveFileName": "Robopoly_RomeEnco-1.0.0.zip",
      "size": 38148,
      "checksum": "SHA-256:1c045b0ab3a9ef247c17ce69b9bd1cb04072bbf58df66d2fe638de6ddb35bc47"
    },
    {
      "name": "LoRaFi",
      "version": "1.3.0",
      "author": "Khudhur Abdullah Alfarhan \u003cQudoren@gmail.com\u003e and Dr. Ammar Zakaria \u003cammarzakaria@unimap.edu.my\u003e",
      "maintainer": "Khudhur Abdullah Alfarhan \u003cQudoren@gmail.com\u003e",
      "sentence": "An Arduino library for sending and receiving data using LoRaFi board and LoRa module.",
      "paragraph": "Supports Semtech SX1272/73 based boards/shields and LoRaFi board/shield.",
      "website": "https=//github.com/LoRaFi/LoRaFi",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/LoRaFi/LoRaFi-1.3.0.zip",
      "archiveFileName": "LoRaFi-1.3.0.zip",
      "size": 27557,
      "checksum": "SHA-256:1bf02a191cb3f29a02dc747aaad3e9b5328d485c220fca35678957b541a9e62a"
    },
    {
      "name": "LoRaFi",
      "version": "1.1.0",
      "author": "Khudhur Abdullah Alfarhan \u003cQudoren@gmail.com\u003e and Dr. Ammar Zakaria \u003cammarzakaria@unimap.edu.my\u003e",
      "maintainer": "Khudhur Abdullah Alfarhan \u003cQudoren@gmail.com\u003e",
      "sentence": "An Arduino library for sending and receiving data using LoRaFi board and LoRa module.",
      "paragraph": "Supports Semtech SX1272/73 based boards/shields and LoRaFi board/shield.",
      "website": "https=//github.com/LoRaFi/LoRaFi",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/LoRaFi/LoRaFi-1.1.0.zip",
      "archiveFileName": "LoRaFi-1.1.0.zip",
      "size": 23491,
      "checksum": "SHA-256:d56428936b1e50c8cddceea8fff20be2a215cf4aaf4ba3401603dc35f9c6622d"
    },
    {
      "name": "LoRaFi",
      "version": "1.2.1",
      "author": "Khudhur Abdullah Alfarhan \u003cQudoren@gmail.com\u003e and Dr. Ammar Zakaria \u003cammarzakaria@unimap.edu.my\u003e",
      "maintainer": "Khudhur Abdullah Alfarhan \u003cQudoren@gmail.com\u003e",
      "sentence": "An Arduino library for sending and receiving data using LoRaFi board and LoRa module.",
      "paragraph": "Supports Semtech SX1272/73 based boards/shields and LoRaFi board/shield.",
      "website": "https=//github.com/LoRaFi/LoRaFi",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/LoRaFi/LoRaFi-1.2.1.zip",
      "archiveFileName": "LoRaFi-1.2.1.zip",
      "size": 26929,
      "checksum": "SHA-256:d3dade7b09d153309559dfe8fb1108cb9dcd5c19ef28d1a0021965dc456aade6"
    },
    {
      "name": "SeqButton",
      "version": "1.0.0",
      "author": "SMFSW",
      "maintainer": "SMFSW",
      "sentence": "Sequential Button Arduino Library",
      "paragraph": "Handling filtered button press with callbacks for push (with or without repeat) and release, logic and filtering time",
      "website": "https://github.com/SMFSW/SeqButton",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SMFSW/SeqButton-1.0.0.zip",
      "archiveFileName": "SeqButton-1.0.0.zip",
      "size": 36953,
      "checksum": "SHA-256:3ad87bf7ea5130f327c338e297ba93ec63b1eabcd3c9f144ef5aec695f33d7f6"
    },
    {
      "name": "WizFi310",
      "version": "1.0.0",
      "author": "DongEun Koak",
      "maintainer": "WIZnet \u003cgateway@wiznet.co.kr\u003e",
      "sentence": "Helps using your Arduino board to Wi-Fi easily and fast",
      "paragraph": "Helps using your Arduino board to Wi-Fi easily and fast",
      "website": "https://github.com/Wiznet/WizFi310_arduino_library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Wiznet/WizFi310-1.0.0.zip",
      "archiveFileName": "WizFi310-1.0.0.zip",
      "size": 57366,
      "checksum": "SHA-256:644d13463e8a2fe58565d635240dfdce5a07bce4e521aaf74c2bc14236597818"
    },
    {
      "name": "AzureIoTHubMQTTClient",
      "version": "0.2.1",
      "author": "Andri Yadi",
      "maintainer": "DycodeX \u003cx@dycode.com\u003e",
      "sentence": "Azure IoT Hub client library for ESP8266 via MQTT protocol.",
      "paragraph": "Azure IoT Hub client library for ESP8266 that specifically uses MQTT protocol.  See readme for more details.",
      "website": "https://github.com/andriyadi/AzureIoTHubMQTTClient",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/andriyadi/AzureIoTHubMQTTClient-0.2.1.zip",
      "archiveFileName": "AzureIoTHubMQTTClient-0.2.1.zip",
      "size": 36643,
      "checksum": "SHA-256:7cd2fe6943e307c14fdd389363204f95a58667d81e87e3acff3e6a124a812b62"
    },
    {
      "name": "AzureIoTHubMQTTClient",
      "version": "0.2.2",
      "author": "Andri Yadi",
      "maintainer": "DycodeX \u003cx@dycode.com\u003e",
      "sentence": "Azure IoT Hub client library for ESP8266 via MQTT protocol.",
      "paragraph": "Azure IoT Hub client library for ESP8266 that specifically uses MQTT protocol.  See readme for more details.",
      "website": "https://github.com/andriyadi/AzureIoTHubMQTTClient",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/andriyadi/AzureIoTHubMQTTClient-0.2.2.zip",
      "archiveFileName": "AzureIoTHubMQTTClient-0.2.2.zip",
      "size": 36677,
      "checksum": "SHA-256:42602e461a1aaa811197e00fdf917b6f98959a3498744737d6b5508078caf67c"
    },
    {
      "name": "Queue",
      "version": "1.0.0",
      "author": "SMFSW",
      "maintainer": "SMFSW",
      "sentence": "Queue handling library (designed on Arduino)",
      "paragraph": "Queue handling library (designed on Arduino). Arduino designed library, yet may be compiled without change with gcc for other purporses/targets",
      "website": "https://github.com/SMFSW/Queue",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SMFSW/Queue-1.0.0.zip",
      "archiveFileName": "Queue-1.0.0.zip",
      "size": 35228,
      "checksum": "SHA-256:94d3d6d1193a61d17d422c525dd8de1229a8e76274a8a7f08c7bf14400b1d760"
    },
    {
      "name": "USIWire",
      "version": "0.1.0",
      "author": "puuu",
      "maintainer": "puuu \u003cpuuu@users.noreply.github.com\u003e",
      "sentence": "USI based TWI/I2C library for Arduino",
      "paragraph": "Arduino Wire compatible library, supporting I²C, I2C, IIC and/or TWI for Atmel ATTiny micro processors utilizing the Universal Serial Interface (USI).",
      "website": "https://github.com/puuu/USIWire",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/puuu/USIWire-0.1.0.zip",
      "archiveFileName": "USIWire-0.1.0.zip",
      "size": 34870,
      "checksum": "SHA-256:6bfad526cb0addc1c69f3059f2dd5e34f9a06db3f2252529f6aee318beb8a842"
    },
    {
      "name": "SerialTerminal",
      "version": "1.0.0",
      "author": "SMFSW \u003cxgarmanboziax@gmail.com\u003e",
      "maintainer": "SMFSW \u003cxgarmanboziax@gmail.com\u003e",
      "sentence": "Arduino Hardware Serial Terminal",
      "paragraph": "Arduino Hardware Serial Terminal (low level), sending complete sequence to function for processing it (mainly for user input)",
      "website": "https://github.com/SMFSW/SerialTerminal",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SMFSW/SerialTerminal-1.0.0.zip",
      "archiveFileName": "SerialTerminal-1.0.0.zip",
      "size": 35732,
      "checksum": "SHA-256:282d59d2c9f5446d2d083a5f23ae8dc9db594fb726a2e2cdeb26407e33eadbe5"
    },
    {
      "name": "OneButton",
      "version": "1.1.0",
      "author": "Matthias Hertel, mathertel@hotmail.com",
      "maintainer": "Matthias Hertel \u003chttp://www.mathertel.de\u003e",
      "sentence": "Arduino libary for improving the usage of a singe input button.",
      "paragraph": "It supports detecting events like single clicks, double clicks and long-time pressing. This enables you to reuse the same button for multiple functions and lowers the hardware invests.",
      "website": "https://github.com/mathertel/OneButton",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mathertel/OneButton-1.1.0.zip",
      "archiveFileName": "OneButton-1.1.0.zip",
      "size": 9597,
      "checksum": "SHA-256:ae033bc73b5ecba37715fc71b590d42bea8e5606f090dff6d7a903cd00fd76cf"
    },
    {
      "name": "OneButton",
      "version": "1.2.0",
      "author": "Matthias Hertel, mathertel@hotmail.com",
      "maintainer": "Matthias Hertel \u003chttp://www.mathertel.de\u003e",
      "sentence": "Arduino libary for improving the usage of a singe input button.",
      "paragraph": "It supports detecting events like single clicks, double clicks and long-time pressing. This enables you to reuse the same button for multiple functions and lowers the hardware invests.",
      "website": "https://github.com/mathertel/OneButton",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mathertel/OneButton-1.2.0.zip",
      "archiveFileName": "OneButton-1.2.0.zip",
      "size": 9810,
      "checksum": "SHA-256:88f033b3d05002fb5169059c9eb914657b889a4c3435067237f15ef1573e567c"
    },
    {
      "name": "RotaryEncoder",
      "version": "1.1.0",
      "author": "Matthias Hertel",
      "maintainer": "Matthias Hertel, http://www.mathertel.de",
      "sentence": "Use a rotary encoder with quadrature pulses as an input device.",
      "paragraph": "This library decodes the signals from a rotary encoder and translates them into a counter position. The library comes with some samples that show how to use the library with and without interrupts.",
      "website": "http://www.mathertel.de/Arduino/RotaryEncoderLibrary.aspx",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/mathertel/RotaryEncoder-1.1.0.zip",
      "archiveFileName": "RotaryEncoder-1.1.0.zip",
      "size": 7901,
      "checksum": "SHA-256:8cf830f32e31a12995fa18206b331793ffde2c9fe64e761b6cc35c4ea754fc2f"
    },
    {
      "name": "DFPlayer Mini Mp3 by Makuna",
      "version": "1.0.0",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "Library for the DFPlayer Mini Mp3 module",
      "paragraph": "This library allows your Arduino project to control the DFPlayer Mini MP3 module.  It supports both hardware serial and software serial.",
      "website": "https://github.com/Makuna/DFMiniMp3/wiki",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/DFPlayer_Mini_Mp3_by_Makuna-1.0.0.zip",
      "archiveFileName": "DFPlayer_Mini_Mp3_by_Makuna-1.0.0.zip",
      "size": 10764,
      "checksum": "SHA-256:bf64a4d065d2a2e778fb8a6a569683fdb39ba30db2c9183be7290a8214c29c49"
    },
    {
      "name": "DFPlayer Mini Mp3 by Makuna",
      "version": "1.0.1",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "Library for the DFPlayer Mini Mp3 module",
      "paragraph": "This library allows your Arduino project to control the DFPlayer Mini MP3 module.  It supports both hardware serial and software serial.  It was designed to fit in the smallest Arduino hardware by consuming less code and memory space than other libraries.",
      "website": "https://github.com/Makuna/DFMiniMp3/wiki",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Makuna/DFPlayer_Mini_Mp3_by_Makuna-1.0.1.zip",
      "archiveFileName": "DFPlayer_Mini_Mp3_by_Makuna-1.0.1.zip",
      "size": 11295,
      "checksum": "SHA-256:7c430ddd7371407dfa5bc6b635523cab8d3192793da365949cb2c91a4feaddaa"
    },
    {
      "name": "Brasilino",
      "version": "1.0.0",
      "author": "Otacilio Neto \u003ccontato@otacilio.me\u003e, Thiago Augusto \u003cmartinsthiagoaugusto@gmail.com\u003e, Erick Simões \u003cerick.simoes@live.com\u003e",
      "maintainer": "Brasilino Team \u003cbrasilino@makerama.com.br\u003e",
      "sentence": "Biblioteca de tradução e facilitação de funções para Arduino em PT-BR",
      "paragraph": "Esta biblioteca permite ao programador utilizar como língua nativa o Português do Brasil, o PT-BR, além de inserir uma série de facilitações na línguagem de programação próprias para o ensino e aprendizagem.",
      "website": "https://github.com/OtacilioN/Brasilino",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/OtacilioN/Brasilino-1.0.0.zip",
      "archiveFileName": "Brasilino-1.0.0.zip",
      "size": 28810,
      "checksum": "SHA-256:f5174660b63b24a65a1767361f70f651d5ff2d84da5f621d32b930684b3e7746"
    },
    {
      "name": "SDS011 sensor Library",
      "version": "0.0.5",
      "author": "R. Zschiegner",
      "maintainer": "R.Zschiegner \u003crz@madavi.de\u003e",
      "sentence": "Nova Fitness SDS011 dust sensor library",
      "paragraph": "Nova Fitness SDS011 dust sensor library",
      "website": "https://github.com/ricki-z/SDS011",
      "category": "Sensors",
      "architectures": [
        "esp8266",
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ricki-z/SDS011_sensor_Library-0.0.5.zip",
      "archiveFileName": "SDS011_sensor_Library-0.0.5.zip",
      "size": 2931,
      "checksum": "SHA-256:8221f103967b0a1ae48ab1f8937c83c19750f4eef03b990980556633849309cb"
    },
    {
      "name": "SDS011 sensor Library",
      "version": "0.0.4",
      "author": "R. Zschiegner",
      "maintainer": "R.Zshiegner \u003crz@madavi.de\u003e",
      "sentence": "Nova Fitness SDS011 dust sensor library",
      "paragraph": "Nova Fitness SDS011 dust sensor library",
      "website": "https://github.com/ricki-z/SDS011",
      "category": "Sensors",
      "architectures": [
        "ESP8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ricki-z/SDS011_sensor_Library-0.0.4.zip",
      "archiveFileName": "SDS011_sensor_Library-0.0.4.zip",
      "size": 2924,
      "checksum": "SHA-256:7e9f5dc2bfad4aea05d00c3466f70cee16822d5143d844af8a3362b4940168b1"
    },
    {
      "name": "SDS011 sensor Library",
      "version": "0.0.2",
      "author": "R. Zschiegner",
      "maintainer": "R.Zshiegner \u003crz@madavi.de\u003e",
      "sentence": "Nova Fitness SDS011 dust sensor library",
      "paragraph": "Nova Fitness SDS011 dust sensor library",
      "website": "https://github.com/ricki-z/SDS011",
      "category": "Sensors",
      "architectures": [
        "ESP8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ricki-z/SDS011_sensor_Library-0.0.2.zip",
      "archiveFileName": "SDS011_sensor_Library-0.0.2.zip",
      "size": 2709,
      "checksum": "SHA-256:5da0888c34aba2081009cb3803434da18d46c535bbe9d07ee0b17fcbf0c1b5aa"
    },
    {
      "name": "ADXL345",
      "version": "0.1.1",
      "author": "Hideki Hamada \u003cjakalada.net@gmail.com\u003e",
      "maintainer": "Hideki Hamada \u003cjakalada.net@gmail.com\u003e",
      "sentence": "A acceleration sensor library for Arduino",
      "paragraph": "A acceleration sensor library for Arduino",
      "website": "https://github.com/jakalada/Arduino-ADXL345",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jakalada/ADXL345-0.1.1.zip",
      "archiveFileName": "ADXL345-0.1.1.zip",
      "size": 6643,
      "checksum": "SHA-256:0db454b753713d389047ffab0c8646b38cb2737c5e73ef21c993b8b81ec03c37"
    },
    {
      "name": "ADXL345",
      "version": "0.2.0",
      "author": "Hideki Hamada \u003cjakalada.net@gmail.com\u003e",
      "maintainer": "Hideki Hamada \u003cjakalada.net@gmail.com\u003e",
      "sentence": "A acceleration sensor library for Arduino",
      "paragraph": "A acceleration sensor library for Arduino",
      "website": "https://github.com/jakalada/Arduino-ADXL345",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jakalada/ADXL345-0.2.0.zip",
      "archiveFileName": "ADXL345-0.2.0.zip",
      "size": 7292,
      "checksum": "SHA-256:285554f5f49fe0176197d1b05e6456bc6a45045244541e920de43c5cc3f667ac"
    },
    {
      "name": "SharpDistSensor",
      "version": "1.0.0",
      "author": "Julien de la Bruere-Terreault",
      "maintainer": "Julien de la Bruere-Terreault \u003cdrgfreeman@tuta.io\u003e",
      "sentence": "Sharp analog distance sensor library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with Sharp IR analog distance sensors.",
      "website": "https://github.com/DrGFreeman/SharpDistSensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DrGFreeman/SharpDistSensor-1.0.0.zip",
      "archiveFileName": "SharpDistSensor-1.0.0.zip",
      "size": 14939,
      "checksum": "SHA-256:68b01d6f7f2655c83e3f5112b5474451b764ff37bdd16e81c5b732deab6b7074"
    },
    {
      "name": "SharpDistSensor",
      "version": "1.1.0",
      "author": "Julien de la Bruere-Terreault (drgfreeman@tuta.io)",
      "maintainer": "Julien de la Bruere-Terreault (drgfreeman@tuta.io)",
      "sentence": "Sharp analog distance sensor library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with Sharp IR analog distance sensors. It supports polynomial and power fit functions as well as real-time median filtering (sliding window of ajustable size).",
      "website": "https://github.com/DrGFreeman/SharpDistSensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DrGFreeman/SharpDistSensor-1.1.0.zip",
      "archiveFileName": "SharpDistSensor-1.1.0.zip",
      "size": 17157,
      "checksum": "SHA-256:63ce61214952eefc025d2767b7f67db6873a4cb507e26cdc84e0387c1b962e15"
    },
    {
      "name": "SharpDistSensor",
      "version": "1.1.1",
      "author": "Julien de la Bruere-Terreault (drgfreeman@tuta.io)",
      "maintainer": "Julien de la Bruere-Terreault (drgfreeman@tuta.io)",
      "sentence": "Sharp analog distance sensor library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with Sharp IR analog distance sensors. It supports polynomial and power fit functions as well as real-time median filtering (sliding window of ajustable size).",
      "website": "https://github.com/DrGFreeman/SharpDistSensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DrGFreeman/SharpDistSensor-1.1.1.zip",
      "archiveFileName": "SharpDistSensor-1.1.1.zip",
      "size": 17401,
      "checksum": "SHA-256:58ab1d99220e2c9c6cfe8208010792f6328299ac92a991df6dc4515868af2c41"
    },
    {
      "name": "SharpDistSensor",
      "version": "1.2.0",
      "author": "Julien de la Bruere-Terreault (drgfreeman@tuta.io)",
      "maintainer": "Julien de la Bruere-Terreault (drgfreeman@tuta.io)",
      "sentence": "Sharp analog distance sensor library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with Sharp IR analog distance sensors. It supports polynomial and power fit functions as well as real-time median filtering (sliding window of ajustable size).",
      "website": "https://github.com/DrGFreeman/SharpDistSensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DrGFreeman/SharpDistSensor-1.2.0.zip",
      "archiveFileName": "SharpDistSensor-1.2.0.zip",
      "size": 17683,
      "checksum": "SHA-256:5be013405de3c77591a348a3c451909705b1b30b3d511bee8d66b7f0ef20230a"
    },
    {
      "name": "jm_CPPM",
      "version": "1.0.0",
      "author": "Jean-Marc Paratte \u003cjean-marc@paratte.ch\u003e",
      "maintainer": "Jean-Marc Paratte \u003cjean-marc@paratte.ch\u003e",
      "sentence": "A CPPM Library for Arduino.",
      "paragraph": "jm_CPPM - Combined PPM.",
      "website": "https://github.com/jmparatte/jm_CPPM",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jmparatte/jm_CPPM-1.0.0.zip",
      "archiveFileName": "jm_CPPM-1.0.0.zip",
      "size": 380724,
      "checksum": "SHA-256:eb377cfd7b66ba41f55272d5b3ebc5f5e12a98724eacc2ba1565a4334a37d7dd"
    },
    {
      "name": "Neotimer",
      "version": "1.1.0",
      "author": "Jose Rullan \u003cjerullan@yahoo.com\u003e",
      "maintainer": "Jose Rullan \u003cjerullan@yahoo.com\u003e",
      "sentence": "\"A powerful non-blocking timer\"",
      "paragraph": "Non-blocking timer with extended functionality for versatility in a variety of timing scenarios. start,stop,restart,done,waiting and repeat functionality.",
      "website": "http://github.com/jrullan/neotimer",
      "category": "Uncategorized",
      "architectures": [
        "\"*\""
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jrullan/Neotimer-1.1.0.zip",
      "archiveFileName": "Neotimer-1.1.0.zip",
      "size": 4760,
      "checksum": "SHA-256:58e0547a8497da17849c04fa0b1072fd369a5bfdfd34340d175d3699fe7c07c4"
    },
    {
      "name": "S11059",
      "version": "0.0.1",
      "author": "Hideki Hamada \u003cjakalada.net@gmail.com\u003e",
      "maintainer": "Hideki Hamada \u003cjakalada.net@gmail.com\u003e",
      "sentence": "A color sensor library for Arduino",
      "paragraph": "A color sensor library for Arduino",
      "website": "https://github.com/jakalada/Arduino-S11059",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jakalada/S11059-0.0.1.zip",
      "archiveFileName": "S11059-0.0.1.zip",
      "size": 8024,
      "checksum": "SHA-256:ade3147549b52bd86288895ae5b9ce971a72c1f9a50e655bdca7b3890536ada7"
    },
    {
      "name": "S11059",
      "version": "0.0.2",
      "author": "Hideki Hamada \u003cjakalada.net@gmail.com\u003e",
      "maintainer": "Hideki Hamada \u003cjakalada.net@gmail.com\u003e",
      "sentence": "A color sensor library for Arduino",
      "paragraph": "A color sensor library for Arduino",
      "website": "https://github.com/jakalada/Arduino-S11059",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jakalada/S11059-0.0.2.zip",
      "archiveFileName": "S11059-0.0.2.zip",
      "size": 9248,
      "checksum": "SHA-256:c28d5d2d4cf2d936900990edf664b68c651fbbb0040a2b6a6f0186f57a26a423"
    },
    {
      "name": "S11059",
      "version": "0.0.3",
      "author": "Hideki Hamada \u003cjakalada.net@gmail.com\u003e",
      "maintainer": "Hideki Hamada \u003cjakalada.net@gmail.com\u003e",
      "sentence": "A color sensor library for Arduino",
      "paragraph": "A color sensor library for Arduino",
      "website": "https://github.com/jakalada/Arduino-S11059",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jakalada/S11059-0.0.3.zip",
      "archiveFileName": "S11059-0.0.3.zip",
      "size": 9248,
      "checksum": "SHA-256:270329e8bcf0ee9a4fc8019d850b8816fdfa0b34703a4a3c2d9330f8f56d6334"
    },
    {
      "name": "S11059",
      "version": "0.1.0",
      "author": "Hideki Hamada \u003cjakalada.net@gmail.com\u003e",
      "maintainer": "Hideki Hamada \u003cjakalada.net@gmail.com\u003e",
      "sentence": "A color sensor library for Arduino",
      "paragraph": "A color sensor library for Arduino",
      "website": "https://github.com/jakalada/Arduino-S11059",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jakalada/S11059-0.1.0.zip",
      "archiveFileName": "S11059-0.1.0.zip",
      "size": 9290,
      "checksum": "SHA-256:529b2f6d27b91c799e04c9cca952e2901ff8a2da6026165e786b984a16cb59f9"
    },
    {
      "name": "S5851A",
      "version": "1.0.0",
      "author": "Hideki Hamada \u003cjakalada.net@gmail.com\u003e",
      "maintainer": "Hideki Hamada \u003cjakalada.net@gmail.com\u003e",
      "sentence": "A temperature sensor library for Arduino",
      "paragraph": "A temperature sensor library for Arduino",
      "website": "https://github.com/jakalada/Arduino-S5851A",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jakalada/S5851A-1.0.0.zip",
      "archiveFileName": "S5851A-1.0.0.zip",
      "size": 6711,
      "checksum": "SHA-256:057dc59091087bed638e1ce819f84f1d992bdafa2e67df9dd26d6a6310500d50"
    },
    {
      "name": "S5851A",
      "version": "1.1.0",
      "author": "Hideki Hamada \u003cjakalada.net@gmail.com\u003e",
      "maintainer": "Hideki Hamada \u003cjakalada.net@gmail.com\u003e",
      "sentence": "A temperature sensor library for Arduino",
      "paragraph": "A temperature sensor library for Arduino",
      "website": "https://github.com/jakalada/Arduino-S5851A",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jakalada/S5851A-1.1.0.zip",
      "archiveFileName": "S5851A-1.1.0.zip",
      "size": 9233,
      "checksum": "SHA-256:f56ce920d5d4f1a2a5a2c9d9c06dc12f65cf4e511d2683ef3c125945a13a1296"
    },
    {
      "name": "S5851A",
      "version": "1.2.0",
      "author": "Hideki Hamada \u003cjakalada.net@gmail.com\u003e",
      "maintainer": "Hideki Hamada \u003cjakalada.net@gmail.com\u003e",
      "sentence": "A temperature sensor library for Arduino",
      "paragraph": "A temperature sensor library for Arduino",
      "website": "https://github.com/jakalada/Arduino-S5851A",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jakalada/S5851A-1.2.0.zip",
      "archiveFileName": "S5851A-1.2.0.zip",
      "size": 9308,
      "checksum": "SHA-256:5e23787e4fd14091e3b483f90ab3faaf1d65676e568fbef835a96e058d76c7a4"
    },
    {
      "name": "S5851A",
      "version": "1.2.1",
      "author": "Hideki Hamada \u003cjakalada.net@gmail.com\u003e",
      "maintainer": "Hideki Hamada \u003cjakalada.net@gmail.com\u003e",
      "sentence": "A temperature sensor library for Arduino",
      "paragraph": "A temperature sensor library for Arduino",
      "website": "https://github.com/jakalada/Arduino-S5851A",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jakalada/S5851A-1.2.1.zip",
      "archiveFileName": "S5851A-1.2.1.zip",
      "size": 9318,
      "checksum": "SHA-256:8d0f876822b1a28c2c02beb27f74e543dc202b773cfa7a81beda5526dc6527b8"
    },
    {
      "name": "AM50288H",
      "version": "0.0.2",
      "author": "Hideki Hamada \u003cjakalada.net@gmail.com\u003e",
      "maintainer": "Hideki Hamada \u003cjakalada.net@gmail.com\u003e",
      "sentence": "A 14 segment LCD display library for Arduino",
      "paragraph": "A 14 segment LCD display library for Arduino",
      "website": "https://github.com/jakalada/Arduino-AM50288H",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jakalada/AM50288H-0.0.2.zip",
      "archiveFileName": "AM50288H-0.0.2.zip",
      "size": 8917,
      "checksum": "SHA-256:144d4801567f50e7cab67b3689b2d2ad20ec1f1e060638b6e4bbd11f7aeaa7db"
    },
    {
      "name": "S9706",
      "version": "0.1.1",
      "author": "Hideki Hamada \u003cjakalada.net@gmail.com\u003e",
      "maintainer": "Hideki Hamada \u003cjakalada.net@gmail.com\u003e",
      "sentence": "A color sensor library for Arduino",
      "paragraph": "A color sensor library for Arduino",
      "website": "https://github.com/jakalada/Arduino-S9706",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jakalada/S9706-0.1.1.zip",
      "archiveFileName": "S9706-0.1.1.zip",
      "size": 4819,
      "checksum": "SHA-256:642e81050f6dba21dc5a092868d55a5686b5cc2731dc8c21780fcf59904e4e14"
    },
    {
      "name": "Easy NeoPixels",
      "version": "0.1.0",
      "author": "Evelyn Masso",
      "maintainer": "Evelyn Masso \u003cevoutofambit@gmail.com\u003e",
      "sentence": "Arduino library for easily using Adafruit NeoPixels.",
      "paragraph": "Arduino library for easily using Adafruit NeoPixels.",
      "website": "https://github.com/outofambit/easy-neopixels",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/outofambit/Easy_NeoPixels-0.1.0.zip",
      "archiveFileName": "Easy_NeoPixels-0.1.0.zip",
      "size": 1786,
      "checksum": "SHA-256:3a643766fdc75771e7db5bc94db95cf916d9f47949b0be9417a314111a76146a"
    },
    {
      "name": "Easy NeoPixels",
      "version": "0.0.2",
      "author": "Evelyn Masso",
      "maintainer": "Evelyn Masso \u003cevoutofambit@gmail.com\u003e",
      "sentence": "Arduino library for easily using Adafruit NeoPixels.",
      "paragraph": "Arduino library for easily using Adafruit NeoPixels.",
      "website": "https://github.com/outofambit/easy-neopixels",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/outofambit/Easy_NeoPixels-0.0.2.zip",
      "archiveFileName": "Easy_NeoPixels-0.0.2.zip",
      "size": 1791,
      "checksum": "SHA-256:890f1a2de0e7cb63bf2f2d3a0860ec32158cd1cc44fa7631b260367e19d8ded2"
    },
    {
      "name": "QRCode",
      "version": "0.0.1",
      "author": "Richard Moore \u003cme@ricmoo.com\u003e",
      "maintainer": "Richard Moore \u003cme@ricmoo.com\u003e",
      "sentence": "A simple QR code generation library.",
      "paragraph": "A simple QR code generation library.",
      "website": "https://github.com/ricmoo/qrcode/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ricmoo/QRCode-0.0.1.zip",
      "archiveFileName": "QRCode-0.0.1.zip",
      "size": 36710,
      "checksum": "SHA-256:bf5738b106b1c6bfea118e57a1aafcca815238086912b5a42636d7e1bee04cb8"
    },
    {
      "name": "Indio",
      "version": "1.0.0",
      "author": "Industruino",
      "maintainer": "Industruino \u003cconnect@industruino.com\u003e",
      "sentence": "Library for the Industruino IND.I/O product",
      "paragraph": "Library to access the I/O channels available on the green screw connectors of the Industruino IND.I/O product.",
      "website": "https://github.com/Industruino/Indio",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Industruino/Indio-1.0.0.zip",
      "archiveFileName": "Indio-1.0.0.zip",
      "size": 19119,
      "checksum": "SHA-256:e7213cf00585712200f64d4378423901f151be0c5e3488f4d25dd17de5b61557"
    },
    {
      "name": "UC1701",
      "version": "1.0.0",
      "author": "Industruino and others",
      "maintainer": "Industruino \u003cconnect@industruino.com\u003e",
      "sentence": "Library for the Industruino 128x64 LCD",
      "paragraph": "Library to control the onboard 128x64 LCD of Industruino. It allows you to display text and simple graphics with a minimum of overhead.",
      "website": "https://github.com/Industruino/UC1701",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Industruino/UC1701-1.0.0.zip",
      "archiveFileName": "UC1701-1.0.0.zip",
      "size": 25725,
      "checksum": "SHA-256:af5abd36467d5107b6799ad9af0127380487d86ac849cffea056f4a7efe34784"
    },
    {
      "name": "EthernetIndustruino",
      "version": "1.0.0",
      "author": "Industruino and others",
      "maintainer": "Industruino \u003cconnect@industruino.com\u003e",
      "sentence": "Library for the Industruino Ethernet module",
      "paragraph": "With this library you can use the Industruino Ethernet module to communicate over Ethernet and to connect to Internet. The library provides both client and server functionalities, allows to connect to a local network (also with DHCP) and to resolve DNS.",
      "website": "https://github.com/Industruino/Indio",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/Industruino/EthernetIndustruino-1.0.0.zip",
      "archiveFileName": "EthernetIndustruino-1.0.0.zip",
      "size": 49031,
      "checksum": "SHA-256:b1bffcc3fbfed04bf18976bccc2bd0ae0372abab91790ff23232c1b2133fb7e6"
    },
    {
      "name": "Arduboy-TinyFont",
      "version": "3.0.0",
      "author": "Boti Kis",
      "maintainer": "Boti Kis",
      "sentence": "A tiny 4x4 font for Arduboy.",
      "paragraph": "Subclasses Arduino::Print and works with all print functions.",
      "website": "https://github.com/yinkou/Arduboy-TinyFont",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/yinkou/Arduboy_TinyFont-3.0.0.zip",
      "archiveFileName": "Arduboy_TinyFont-3.0.0.zip",
      "size": 19441,
      "checksum": "SHA-256:2aea7d75a6117a8e117dfd896edf726cd1d903ae516871bb97a0a1d250b4e1cb"
    },
    {
      "name": "Arduboy-TinyFont",
      "version": "3.1.0",
      "author": "Boti Kis",
      "maintainer": "Boti Kis",
      "sentence": "Tiny 4x4 Font for Arduboy which contains the small ASCII Table from 32 to 127. The sprite for the font uses 192 bytes.",
      "paragraph": "Subclasses Arduino::Print and works with all print functions.",
      "website": "https://github.com/yinkou/Arduboy-TinyFont",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/yinkou/Arduboy_TinyFont-3.1.0.zip",
      "archiveFileName": "Arduboy_TinyFont-3.1.0.zip",
      "size": 19381,
      "checksum": "SHA-256:8b2f193dd4f1f84443411e6005902c8a6aa897a04bbd8d6735c0bc6f80b01582"
    },
    {
      "name": "Arduboy-TinyFont",
      "version": "3.1.1",
      "author": "Boti Kis",
      "maintainer": "Boti Kis",
      "sentence": "Tiny 4x4 Font for Arduboy which contains the small ASCII Table from 32 to 127. The sprite for the font uses 192 bytes.",
      "paragraph": "Subclasses Arduino::Print and works with all print functions.",
      "website": "https://github.com/yinkou/Arduboy-TinyFont",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/yinkou/Arduboy_TinyFont-3.1.1.zip",
      "archiveFileName": "Arduboy_TinyFont-3.1.1.zip",
      "size": 19399,
      "checksum": "SHA-256:8e2de23382ab9558b091d60dff2829ae405063dc342c6c46f117c74e37103fad"
    },
    {
      "name": "FlexiPlot Arduino Library",
      "version": "1.0.0",
      "author": "Raivis Strogonovs (https://morf.lv)",
      "maintainer": "Raivis Strogonovs \u003craivis@morf.lv\u003e",
      "sentence": "Arduino library for FlexiPlot.",
      "paragraph": "Arduino library for FlexiPlot, for all your plotting and charting needs.",
      "website": "https://github.com/xcoder123/FlexiPlot_Arduino",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/xcoder123/FlexiPlot_Arduino_Library-1.0.0.zip",
      "archiveFileName": "FlexiPlot_Arduino_Library-1.0.0.zip",
      "size": 12520,
      "checksum": "SHA-256:152c0a0e2244d25afaead2b7fc48aa6daaa40f8d82668ef282e37f7f7be77f24"
    },
    {
      "name": "FlexiPlot Arduino Library",
      "version": "1.0.1",
      "author": "Raivis Strogonovs (https://morf.lv)",
      "maintainer": "Raivis Strogonovs \u003craivis@morf.lv\u003e",
      "sentence": "Arduino library for FlexiPlot.",
      "paragraph": "Arduino library for FlexiPlot, for all your plotting and charting needs.",
      "website": "https://github.com/xcoder123/FlexiPlot_Arduino",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/xcoder123/FlexiPlot_Arduino_Library-1.0.1.zip",
      "archiveFileName": "FlexiPlot_Arduino_Library-1.0.1.zip",
      "size": 13560,
      "checksum": "SHA-256:7384882e107b1a7dd92946178be73c14eeaa884fdf54f13e19a3897b98a01c16"
    },
    {
      "name": "FlexiPlot Arduino Library",
      "version": "1.1.0",
      "author": "Raivis Strogonovs (https://morf.lv)",
      "maintainer": "Raivis Strogonovs \u003craivis@morf.lv\u003e",
      "sentence": "Arduino library for FlexiPlot.",
      "paragraph": "Arduino library for FlexiPlot, for all your plotting and charting needs.",
      "website": "https://github.com/xcoder123/FlexiPlot_Arduino",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/xcoder123/FlexiPlot_Arduino_Library-1.1.0.zip",
      "archiveFileName": "FlexiPlot_Arduino_Library-1.1.0.zip",
      "size": 20213,
      "checksum": "SHA-256:e41a451e3fa43accb5116e3536cea5fe16eac9e6918bcd19a5463849d1a7bf9c"
    },
    {
      "name": "FlexiPlot Arduino Library",
      "version": "1.2.0",
      "author": "Raivis Strogonovs (https://morf.lv)",
      "maintainer": "Raivis Strogonovs \u003craivis@morf.lv\u003e",
      "sentence": "Arduino library for FlexiPlot.",
      "paragraph": "Arduino library for FlexiPlot, for all your plotting and charting needs.",
      "website": "https://github.com/xcoder123/FlexiPlot_Arduino",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/xcoder123/FlexiPlot_Arduino_Library-1.2.0.zip",
      "archiveFileName": "FlexiPlot_Arduino_Library-1.2.0.zip",
      "size": 22545,
      "checksum": "SHA-256:7db871371e8243d765f64b2f8aaf6ea86b570e4207cc6cda30ac188a395b6527"
    },
    {
      "name": "FlexiPlot Arduino Library",
      "version": "1.2.1",
      "author": "Raivis Strogonovs (https://morf.lv)",
      "maintainer": "Raivis Strogonovs \u003craivis@morf.lv\u003e",
      "sentence": "Arduino library for FlexiPlot.",
      "paragraph": "Arduino library for FlexiPlot, for all your plotting and charting needs.",
      "website": "https://github.com/xcoder123/FlexiPlot_Arduino",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/xcoder123/FlexiPlot_Arduino_Library-1.2.1.zip",
      "archiveFileName": "FlexiPlot_Arduino_Library-1.2.1.zip",
      "size": 22448,
      "checksum": "SHA-256:d1995b9c0f2b730b3ad6ecb5d68423436c04d0c39c5c6164d086c44a1e8ddb99"
    },
    {
      "name": "FlexiPlot Arduino Library",
      "version": "1.2.2",
      "author": "Raivis Strogonovs (https://morf.lv)",
      "maintainer": "Raivis Strogonovs \u003craivis@morf.lv\u003e",
      "sentence": "Arduino library for FlexiPlot.",
      "paragraph": "Arduino library for FlexiPlot, for all your plotting and charting needs.",
      "website": "https://github.com/xcoder123/FlexiPlot_Arduino",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/xcoder123/FlexiPlot_Arduino_Library-1.2.2.zip",
      "archiveFileName": "FlexiPlot_Arduino_Library-1.2.2.zip",
      "size": 22543,
      "checksum": "SHA-256:5afdc98a5e9e7452d69f2c79d19d1b2bb590244550eaad8ea0c5e6860ba20a1b"
    },
    {
      "name": "DigitLedDisplay",
      "version": "1.0.0",
      "author": "Ozhan Duran \u003cozhantr@hotmail.com\u003e",
      "maintainer": "Ozhan Duran \u003cozhantr@hotmail.com\u003e",
      "sentence": "MAX7219/MAX7221 Digital Tube 7-Segment LED Display Library",
      "paragraph": "Easy-to-use library for 8 bit 7-segment digital LED display module.",
      "website": "https://github.com/ozhantr/DigitLedDisplay/",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ozhantr/DigitLedDisplay-1.0.0.zip",
      "archiveFileName": "DigitLedDisplay-1.0.0.zip",
      "size": 3748,
      "checksum": "SHA-256:321e6fe1c6270f897d89fb618a57677c292df2c2e04f78d9a84f19e351c85a71"
    },
    {
      "name": "Brief",
      "version": "1.0.3",
      "author": "AshleyF",
      "maintainer": "AshleyF \u003cashleyf@briefrobotics.com\u003e",
      "sentence": "A scriptable firmware and protocol for interfacing hardware.",
      "paragraph": "It is comprised of a VM – a tiny stack machine running on the MCU, Protocol – an extensible and composable set of commands and events, Language – a Forth-like interactive scripting language compiled for the VM, Interactive – console for interactive experimentation and development.",
      "website": "https://github.com/AshleyF/BriefEmbedded",
      "category": "Other",
      "architectures": [
        ""
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AshleyF/Brief-1.0.3.zip",
      "archiveFileName": "Brief-1.0.3.zip",
      "size": 6075917,
      "checksum": "SHA-256:507a5968e8666ea26d6a20d67beb0b4a6f3838f51c73ca4d71129e845a29d2ed"
    },
    {
      "name": "Brief",
      "version": "1.0.4",
      "author": "AshleyF",
      "maintainer": "AshleyF \u003cashleyf@briefrobotics.com\u003e",
      "sentence": "A scriptable firmware and protocol for interfacing hardware.",
      "paragraph": "It is comprised of a VM – a tiny stack machine running on the MCU, Protocol – an extensible and composable set of commands and events, Language – a Forth-like interactive scripting language compiled for the VM, Interactive – console for interactive experimentation and development.",
      "website": "https://github.com/AshleyF/BriefEmbedded",
      "category": "Other",
      "architectures": [
        ""
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AshleyF/Brief-1.0.4.zip",
      "archiveFileName": "Brief-1.0.4.zip",
      "size": 6101867,
      "checksum": "SHA-256:0663b62bfa045e4a3bf2b09db86616cc48b7f41a776073033d1a124df948e22c"
    },
    {
      "name": "Brief",
      "version": "1.0.5",
      "author": "AshleyF",
      "maintainer": "AshleyF \u003cashleyf@briefrobotics.com\u003e",
      "sentence": "A scriptable firmware and protocol for interfacing hardware.",
      "paragraph": "It is comprised of a VM – a tiny stack machine running on the MCU, Protocol – an extensible and composable set of commands and events, Language – a Forth-like interactive scripting language compiled for the VM, Interactive – console for interactive experimentation and development.",
      "website": "https://github.com/AshleyF/BriefEmbedded",
      "category": "Other",
      "architectures": [
        ""
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AshleyF/Brief-1.0.5.zip",
      "archiveFileName": "Brief-1.0.5.zip",
      "size": 6101695,
      "checksum": "SHA-256:613e3fb8c58f9051237625fedc4b55f825e14beb5a9567dea0933512ddf52b80"
    },
    {
      "name": "SevenSeg",
      "version": "1.2.1",
      "author": "Sigvald Marholm \u003cmarholm@marebakken.com\u003e",
      "maintainer": "Sigvald Marholm \u003cmarholm@marebakken.com\u003e",
      "sentence": "A mature and flexible seven segment display driver.",
      "paragraph": "See user guide for further information.",
      "website": "https://github.com/sigvaldm/SevenSeg",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sigvaldm/SevenSeg-1.2.1.zip",
      "archiveFileName": "SevenSeg-1.2.1.zip",
      "size": 634846,
      "checksum": "SHA-256:ab811df4b3e505e8c03c47e158f24a81e2884db9ce23e39d4b017503d7972a9d"
    },
    {
      "name": "BlueDot BME280 Library",
      "version": "1.0.0",
      "author": "BlueDot",
      "maintainer": "BlueDot \u003cinfo@bluedot.space\u003e",
      "sentence": "BlueDot library for BME280 sensors.",
      "paragraph": "Arduino library for BME280 humidity and pressure sensors.",
      "website": "https://github.com/BlueDot-Arduino/BlueDot_BME280",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/BlueDot-Arduino/BlueDot_BME280_Library-1.0.0.zip",
      "archiveFileName": "BlueDot_BME280_Library-1.0.0.zip",
      "size": 9885,
      "checksum": "SHA-256:da373c776340f5e5c842407959f5bbc487b2b1583ced47cea30d92a89cd34636"
    },
    {
      "name": "TMC2208Stepper",
      "version": "0.0.1",
      "author": "teemuatlut",
      "maintainer": "teemuatlut",
      "sentence": "Arduino library for Trinamic TMC2208 stepper drivers",
      "paragraph": "Easily configure your TMC2208 stepper motor drivers",
      "website": "https://github.com/teemuatlut/TMC2208Stepper",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/teemuatlut/TMC2208Stepper-0.0.1.zip",
      "archiveFileName": "TMC2208Stepper-0.0.1.zip",
      "size": 33596,
      "checksum": "SHA-256:54e3683325f29297328828fa3a8c26a9e3c3273dee1d765672545d30c30c6c95"
    },
    {
      "name": "PCM",
      "version": "1.0.0",
      "author": "David Mellis \u003cd.mellis@bcmi-labs.cc\u003e, Michael Smith \u003cmichael@hurts.ca\u003e",
      "maintainer": "David Mellis \u003cd.mellis@bcmi-labs.cc\u003e",
      "sentence": "Playback of short audio samples.",
      "paragraph": "These samples are encoded directly in the Arduino sketch as an array of numbers.",
      "website": "http://highlowtech.org/?p=1963",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/damellis/PCM-1.0.0.zip",
      "archiveFileName": "PCM-1.0.0.zip",
      "size": 27883,
      "checksum": "SHA-256:448e4182eaa97d9b02a5dc5348807e59f078cb6dd5a6eadea04f1fd019e5b409"
    },
    {
      "name": "IniFile",
      "version": "0.2.0",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to read and parse .ini files.",
      "paragraph": "IniFile is a library to read and parse .ini files as used by Microsoft Windows. IniFile is designed to use minimal memory requirements, and the only buffer used is one supplied by the user, thus the user remains in charge of memory usage. GNU LGPL v2.1.",
      "website": "https://github.com/stevemarple/IniFile",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/IniFile-0.2.0.zip",
      "archiveFileName": "IniFile-0.2.0.zip",
      "size": 25942,
      "checksum": "SHA-256:0988c627a832f7291bb95a08805212134a33ff8846b4ba302d5ad337a2e4809e"
    },
    {
      "name": "IniFile",
      "version": "1.0.0",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to read and parse .ini files.",
      "paragraph": "IniFile is a library to read and parse .ini files as used by Microsoft Windows. IniFile is designed to use minimal memory requirements, and the only buffer used is one supplied by the user, thus the user remains in charge of memory usage. GNU LGPL v2.1.",
      "website": "https://github.com/stevemarple/IniFile",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/stevemarple/IniFile-1.0.0.zip",
      "archiveFileName": "IniFile-1.0.0.zip",
      "size": 25955,
      "checksum": "SHA-256:7ce8cab6156b7cf16b862f0359f1d8f859e66769cbec5c27a74c8ab262177c18"
    },
    {
      "name": "PlotPlus",
      "version": "1.0.0",
      "author": "AgileWare",
      "maintainer": "Roberto Lo Giacco \u003crlogiacco@gmail.com\u003e",
      "sentence": "Plotting library compatible with Sloeber IDE and SimPlot",
      "paragraph": "The Sloeber Eclipse Plugin provides a 6 channels plotter interface base on the SimPlot packet format: this library is backward compatible with SimPlot but also provides a replacement with an improved API.",
      "website": "https://github.com/rlogiacco/PlotPlus",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/rlogiacco/PlotPlus-1.0.0.zip",
      "archiveFileName": "PlotPlus-1.0.0.zip",
      "size": 12128,
      "checksum": "SHA-256:34b4a864c682de38b6f9263c3a67b32cb899f8d8f78f87da270180060f06a0f5"
    },
    {
      "name": "DecodeIR",
      "version": "2.45.0",
      "author": "Bengt Martensson \u003cbarf@bengt-martensson.de\u003e",
      "maintainer": "Bengt Martensson \u003cbarf@bengt-martensson.de\u003e",
      "sentence": "A library for decoding IR signals.",
      "paragraph": "This library identifies the IR protocol and parameter corresponding to a particular IR signal. Knows over 100 protocols.",
      "website": "https://github.com/bengtmartensson/Arduino-DecodeIR",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bengtmartensson/DecodeIR-2.45.0.zip",
      "archiveFileName": "DecodeIR-2.45.0.zip",
      "size": 86868,
      "checksum": "SHA-256:33f9bdaa65072dadb6b18c3354e2f6ffd5b09fbe2be1b7a328a10980927dd4d2"
    },
    {
      "name": "DecodeIR",
      "version": "2.45.1",
      "author": "Bengt Martensson \u003cbarf@bengt-martensson.de\u003e",
      "maintainer": "Bengt Martensson \u003cbarf@bengt-martensson.de\u003e",
      "sentence": "A library for decoding IR signals.",
      "paragraph": "This library identifies the IR protocol and parameter corresponding to a particular IR signal. Knows over 100 protocols.",
      "website": "https://github.com/bengtmartensson/Arduino-DecodeIR",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/bengtmartensson/DecodeIR-2.45.1.zip",
      "archiveFileName": "DecodeIR-2.45.1.zip",
      "size": 86927,
      "checksum": "SHA-256:2b040f3bb8f153f08c67d480bd6d0d6f7ad9f3e8fb502378c96f64028e07b293"
    },
    {
      "name": "MultitapKeypad",
      "version": "1.0.0",
      "author": "ZulNs",
      "maintainer": "ZulNs \u003czul.nasibu@gmail.com\u003e",
      "sentence": "A library (driver) for matrix 4x3 or 4x4 keypad supports multi-tap and long-tap.",
      "paragraph": "The library allows to interface with matrix 4x3 phone's keypad as well as matrix 4x4 keypad, supports multi-tap/long-tap states to simplify implement of customizable access to all characters (upper and lower cases), numbers and symbols.",
      "website": "https://github.com/ZulNs/MultitapKeypad",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ZulNs/MultitapKeypad-1.0.0.zip",
      "archiveFileName": "MultitapKeypad-1.0.0.zip",
      "size": 186159,
      "checksum": "SHA-256:29ef73d0ee2633765c726ef48855c54bfcc3f1b2f7da139db4362ae7bdc24d33"
    },
    {
      "name": "SevSegSPI",
      "version": "1.0.0",
      "author": "Fireshadow",
      "maintainer": "Fireshadow",
      "sentence": "Connect 4 digit seven segment display via SPI interface",
      "paragraph": "This library uses two 74HC595 serial shift-registers to control 4 digit seven segment display.",
      "website": "https://github.com/Fireshadow/Arduino-SevSegSPI.git",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/fire0shadow/SevSegSPI-1.0.0.zip",
      "archiveFileName": "SevSegSPI-1.0.0.zip",
      "size": 15262,
      "checksum": "SHA-256:892d0d202d2fbb7df221c6783cf8b76d69d822919ca643993834d17ecbbe6bc9"
    },
    {
      "name": "TimedPID",
      "version": "1.0.0",
      "author": "Julien de la Bruere-Terreault, drgfreeman@tuta.io",
      "maintainer": "Julien de la Bruere-Terreault, drgfreeman@tuta.io",
      "sentence": "PID controller",
      "paragraph": "A simple PID controller for the Arduino IDE featuring different time step calculation options.",
      "website": "https://github.com/DrGFreeman/TimedPID",
      "category": "Data Processing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/DrGFreeman/TimedPID-1.0.0.zip",
      "archiveFileName": "TimedPID-1.0.0.zip",
      "size": 9304,
      "checksum": "SHA-256:8c573b381761c8b326ccb45742798851893727ea4cda6d36fb64a51de1ae08bf"
    },
    {
      "name": "DS3231",
      "version": "1.0.0",
      "author": "Andrew Wickert \u003cawickert@umn.edu\u003e, Eric Ayars, Jean-Claude Wippler",
      "maintainer": "Andrew Wickert \u003cawickert@umn.edu\u003e",
      "sentence": "Arduino library for the DS3231 real-time clock (RTC)",
      "paragraph": "Abstracts functionality for clock reading, clock setting, and alarms for the DS3231 high-precision real-time clock. This is a splice of Ayars' (http://hacks.ayars.org/2011/04/ds3231-real-time-clock.html) and Jeelabs/Ladyada's (https://github.com/adafruit/RTClib) libraries.",
      "website": "https://github.com/NorthernWidget/DS3231",
      "category": "Uncategorized",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/NorthernWidget/DS3231-1.0.0.zip",
      "archiveFileName": "DS3231-1.0.0.zip",
      "size": 20595,
      "checksum": "SHA-256:76c43efc2a5feaf5d24cd3b7621e9409c36c137953f6210ca2fce5c769c35d65"
    },
    {
      "name": "EasyDDNS",
      "version": "1.0.0",
      "author": "Ayush Sharma",
      "maintainer": "Ayush Sharma \u003casrocks5@gmail.com\u003e",
      "sentence": "ESP8266 DDNS Client Update Library.",
      "paragraph": "A simple library that implements a DDNS Update Server for ESP8266. It is designed to be universal and currently supports DuckDNS \u0026 No-ip.",
      "website": "https://github.com/ayushsharma82/EasyDDNS",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ayushsharma82/EasyDDNS-1.0.0.zip",
      "archiveFileName": "EasyDDNS-1.0.0.zip",
      "size": 5746,
      "checksum": "SHA-256:a516ceef6625c2eeacba46d38aafbe277e58a7b095776e4396fd8def43fb341e"
    },
    {
      "name": "EasyDDNS",
      "version": "1.5.0",
      "author": "Ayush Sharma",
      "maintainer": "Ayush Sharma \u003casrocks5@gmail.com\u003e",
      "sentence": "ESP8266 DDNS Update Client Library.",
      "paragraph": "A simple library that implements a DDNS Update Client for ESP8266. It is designed to be universal and currently supports DuckDNS, No-ip, DynDNS, Dynu.",
      "website": "https://github.com/ayushsharma82/EasyDDNS",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ayushsharma82/EasyDDNS-1.5.0.zip",
      "archiveFileName": "EasyDDNS-1.5.0.zip",
      "size": 7593,
      "checksum": "SHA-256:db6cc439e786931970c320fcb9a5c5a81c6c53eedf4742f240e527b47717da1a"
    },
    {
      "name": "SparkFun AK9750 Human Presence Sensor Library",
      "version": "1.0.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library for the AK9750 PIR Human Presence Qwiic Board",
      "paragraph": "An Arduino Library for the AK9750 4 channel PIR sensor used for human movement and presence sensing",
      "website": "https://github.com/sparkfun/SparkFun_AK9750_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_AK9750_Human_Presence_Sensor_Library-1.0.0.zip",
      "archiveFileName": "SparkFun_AK9750_Human_Presence_Sensor_Library-1.0.0.zip",
      "size": 13357,
      "checksum": "SHA-256:8859fcc53599f50a43ca12ec9a8ebbdda1f72dc3f8758e71fc7bd2395e11b3c4"
    },
    {
      "name": "SparkFun CCS811 Breakout",
      "version": "1.0.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "A library to drive the AMS CCS811 by I2C.",
      "paragraph": "Uno examples to drive by I2C to collect extra sensor inputs.",
      "website": "https://github.com/sparkfun/SparkFun_CCS811_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_CCS811_Breakout-1.0.0.zip",
      "archiveFileName": "SparkFun_CCS811_Breakout-1.0.0.zip",
      "size": 125847,
      "checksum": "SHA-256:7d47fba9c05e04c57e3e4464e1d29fd2661aa382daed2e25721e5252a3ee1947"
    },
    {
      "name": "InstructableApi",
      "version": "1.0.0",
      "author": "Brian Lough",
      "maintainer": "Brian Lough \u003cbrian.d.lough@gmail.com\u003e",
      "sentence": "A wrapper for the Instructables API for Arduino (supports ESP8266 \u0026 WiFi101 boards)",
      "paragraph": "Use this library to get Instructables channel statistics",
      "website": "https://github.com/witnessmenow/arduino-Instructables-api",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/witnessmenow/InstructableApi-1.0.0.zip",
      "archiveFileName": "InstructableApi-1.0.0.zip",
      "size": 15385,
      "checksum": "SHA-256:068270e8416a5bc71446c59a8120b745bd58b86e2fe2c0b37d5ad627bc3d2729"
    },
    {
      "name": "TwitterApi",
      "version": "1.0.0",
      "author": "Brian Lough",
      "maintainer": "Brian Lough \u003cbrian.d.lough@gmail.com\u003e",
      "sentence": "A wrapper for the Twitter API for Arduino (supports ESP8266 \u0026 WiFi101 boards)",
      "website": "https://github.com/witnessmenow/arduino-twitter-api",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/witnessmenow/TwitterApi-1.0.0.zip",
      "archiveFileName": "TwitterApi-1.0.0.zip",
      "size": 16136,
      "checksum": "SHA-256:4f896bb505c40699e53b52e10056a76854b9b6dfee6bb95e6c3f0dbd6fd8c44f"
    },
    {
      "name": "FacebookApi",
      "version": "1.0.0",
      "author": "Brian Lough",
      "maintainer": "Brian Lough \u003cbrian.d.lough@gmail.com\u003e",
      "sentence": "A wrapper for the Facebook Graph API for Arduino (supports ESP8266 \u0026 WiFi101 boards)",
      "website": "https://github.com/witnessmenow/arduino-facebook-api",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/witnessmenow/FacebookApi-1.0.0.zip",
      "archiveFileName": "FacebookApi-1.0.0.zip",
      "size": 12497,
      "checksum": "SHA-256:7fc00c4f41eed632d4d7ff267f97f4038b347546420226fdd9d11176fbf2f615"
    },
    {
      "name": "Rosserial Arduino Library",
      "version": "0.7.7",
      "author": "Michael Ferguson \u003cmfergs7@gmail.com\u003e",
      "maintainer": "Joshua Frank \u003cfrankjoshua@gmail.com\u003e",
      "sentence": "Use an Arduino as a ROS publisher/subscriber",
      "paragraph": "Works with http://wiki.ros.org/rosserial, requires a rosserial node to connect",
      "website": "https://github.com/frankjoshua/rosserial_arduino_lib",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/frankjoshua/Rosserial_Arduino_Library-0.7.7.zip",
      "archiveFileName": "Rosserial_Arduino_Library-0.7.7.zip",
      "size": 24233,
      "checksum": "SHA-256:a781dc90135203d0f7217e04055d0cd13cf02db45240e0df5c36a30f83a0619d"
    },
    {
      "name": "Rosserial Arduino Library",
      "version": "0.7.8",
      "author": "Michael Ferguson \u003cmfergs7@gmail.com\u003e",
      "maintainer": "Joshua Frank \u003cfrankjoshua@gmail.com\u003e",
      "sentence": "Use an Arduino as a ROS publisher/subscriber",
      "paragraph": "Works with http://wiki.ros.org/rosserial, requires a rosserial node to connect",
      "website": "https://github.com/frankjoshua/rosserial_arduino_lib",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/frankjoshua/Rosserial_Arduino_Library-0.7.8.zip",
      "archiveFileName": "Rosserial_Arduino_Library-0.7.8.zip",
      "size": 376896,
      "checksum": "SHA-256:273fb41cc8fb2a97dd7cfa13a69318524aed89c2fc87d22b0343b32ef41260ba"
    },
    {
      "name": "PreciseLM35",
      "version": "1.0.0",
      "author": "belidzs",
      "maintainer": "belidzs \u003cbalazs.keresztury@gmail.com\u003e",
      "sentence": "A simple LM35 wrapper with optional voltage calibration facility",
      "paragraph": "Features selectable reference voltage. Actual AREF value is polled from MCU, eliminating inaccuracies due to changing AREF value (depleting batteries, etc)",
      "website": "https://github.com/belidzs/PreciseLM35",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/belidzs/PreciseLM35-1.0.0.zip",
      "archiveFileName": "PreciseLM35-1.0.0.zip",
      "size": 18801,
      "checksum": "SHA-256:0b78daa160641b9e0457ee7f48107433b27985c7229433491a86f23bcc664ec8"
    },
    {
      "name": "PreciseLM35",
      "version": "1.0.1",
      "author": "belidzs",
      "maintainer": "belidzs \u003cbalazs.keresztury@gmail.com\u003e",
      "sentence": "A simple LM35 wrapper with optional voltage calibration facility",
      "paragraph": "Features selectable reference voltage. Actual AREF value is polled from MCU, eliminating inaccuracies due to changing AREF value (depleting batteries, etc)",
      "website": "https://github.com/belidzs/PreciseLM35",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/belidzs/PreciseLM35-1.0.1.zip",
      "archiveFileName": "PreciseLM35-1.0.1.zip",
      "size": 18628,
      "checksum": "SHA-256:a281f9624663d85dbc84cd7878645f3a4dd3b71f76ea0fe2fd1c9dc2f84b2e10"
    },
    {
      "name": "PreciseLM35",
      "version": "1.0.2",
      "author": "belidzs",
      "maintainer": "belidzs \u003cbalazs.keresztury@gmail.com\u003e",
      "sentence": "A simple LM35 wrapper with optional voltage calibration facility",
      "paragraph": "Features selectable reference voltage. Actual AREF value is polled from MCU, eliminating inaccuracies due to changing AREF value (depleting batteries, etc)",
      "website": "https://github.com/belidzs/PreciseLM35",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/belidzs/PreciseLM35-1.0.2.zip",
      "archiveFileName": "PreciseLM35-1.0.2.zip",
      "size": 20486,
      "checksum": "SHA-256:d10539f2f436997ba8b0e6cfd3ca9343d62f2ee80418f6c1c3940a540b522c92"
    },
    {
      "name": "GuaraTeca_OBR",
      "version": "1.2.0",
      "author": "Joaquim Flávio Almeida Quirino Gomes (joaquimflavio.quirino@yahoo.com.br), Dêmis Carlos Fonseca Gomes (demis.gomes@ifto.edu.br), Marcos Dias da Conceição (marcos.conceicao@ifto.edu.br) e Diego de Castro Rodrigues",
      "maintainer": "Guarabots \u003cguarabots@gmail.com\u003e",
      "sentence": "Biblioteca de controle de diversas plataformas roboticas.",
      "paragraph": "Controle de diversas plataformas roboticas, de forma simples e eficiente! Necessário baixar: GuaraTeca e GuaraTeca_Hardware!!!!",
      "website": "https://github.com/JoaquimFlavio/Guarateca_OBR/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/JoaquimFlavio/GuaraTeca_OBR-1.2.0.zip",
      "archiveFileName": "GuaraTeca_OBR-1.2.0.zip",
      "size": 23074,
      "checksum": "SHA-256:6864e801836abfddfa72fd3e530f16ad29c07b68477ba44523715ec2366a572b"
    },
    {
      "name": "SerialUI",
      "version": "1.14.0",
      "author": "Pat Deegan",
      "maintainer": "Pat Deegan \u003carduino-lib@flyingcarsandstuff.com\u003e",
      "sentence": "A user interface through the serial channel (menus, sub-menus and command execution), with support for navigation through the menu hierarchy and online help.",
      "paragraph": "With SerialUI, you can create a hierarchy of menus and submenus of arbitrary depth (limited only by ROM/RAM space). Each menu contains a list of menu items, which are either sub-menus (lead you to another level of menu items) or commands (actually perform some type of action). Exactly what happens when a user issues a command is determined by your callbacks.",
      "website": "http://flyingcarsandstuff.com/projects/SerialUI/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/psychogenic/SerialUI-1.14.0.zip",
      "archiveFileName": "SerialUI-1.14.0.zip",
      "size": 66334,
      "checksum": "SHA-256:f878871e2c448c20654feabe4d8909eb05d8e70174d683abe7da6202da333dcb"
    },
    {
      "name": "SerialUI",
      "version": "2.1.2",
      "author": "Pat Deegan",
      "maintainer": "Pat Deegan \u003carduino-lib@flyingcarsandstuff.com\u003e",
      "sentence": "A user interface through the serial channel (menus, sub-menus, input requests and command execution) and a GUI back-end, with support for navigation through the menu hierarchy and online help.",
      "paragraph": "With SerialUI, you can create a hierarchy of menus and submenus of arbitrary depth (limited only by ROM/RAM space). Each menu contains a list of menu items, which are either sub-menus (lead you to another level of menu items), requests for user input or commands (that actually perform some type of action). Exactly what happens when a user issues a command is determined by your callbacks. You can control the device through the terminal, or through a GUI using the Device Druid interface.",
      "website": "https://devicedruid.com/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/psychogenic/SerialUI-2.1.2.zip",
      "archiveFileName": "SerialUI-2.1.2.zip",
      "size": 112742,
      "checksum": "SHA-256:fb2c927f42fe5b6d3be83f31cb49e056ad03874329c4ae1ccf90ff4f958e3994"
    },
    {
      "name": "SerialUI",
      "version": "2.1.4",
      "author": "Pat Deegan",
      "maintainer": "Pat Deegan \u003carduino-lib@flyingcarsandstuff.com\u003e",
      "sentence": "A user interface through the serial channel (menus, sub-menus, input requests and command execution) and a GUI back-end, with support for navigation through the menu hierarchy and online help.",
      "paragraph": "With SerialUI, you can create a hierarchy of menus and submenus of arbitrary depth (limited only by ROM/RAM space). Each menu contains a list of menu items, which are either sub-menus (lead you to another level of menu items), requests for user input or commands (that actually perform some type of action). Exactly what happens when a user issues a command is determined by your callbacks. You can control the device through the terminal, or through a GUI using the Device Druid interface.",
      "website": "https://devicedruid.com/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/psychogenic/SerialUI-2.1.4.zip",
      "archiveFileName": "SerialUI-2.1.4.zip",
      "size": 114665,
      "checksum": "SHA-256:cc6a0a50c6d69edae74a35a0845db4595aafcd45eefeecb0c34d46a8da5c8e02"
    },
    {
      "name": "J1850-PWM Encoding Library",
      "version": "1.0.1",
      "author": "Vittorio Esposito",
      "maintainer": "Vittorio Esposito",
      "sentence": "Arduino library for J1850-PWM Encoding",
      "paragraph": "Arduino library for J1850-PWM Encoding",
      "website": "https://github.com/VittorioEsposito/J1850-PWM-Encoding-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/VittorioEsposito/J1850_PWM_Encoding_Library-1.0.1.zip",
      "archiveFileName": "J1850_PWM_Encoding_Library-1.0.1.zip",
      "size": 34669,
      "checksum": "SHA-256:fd163de8efc4999e528515875c21057e07e7c807d9d4fcc9b1d8b34dd5670c28"
    },
    {
      "name": "J1850-PWM Encoding Library",
      "version": "1.0.4",
      "author": "Vittorio Esposito",
      "maintainer": "Vittorio Esposito",
      "sentence": "Arduino library for J1850-PWM Encoding",
      "paragraph": "Arduino library for J1850-PWM Encoding",
      "website": "https://github.com/VittorioEsposito/J1850-PWM-Encoding-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/VittorioEsposito/J1850_PWM_Encoding_Library-1.0.4.zip",
      "archiveFileName": "J1850_PWM_Encoding_Library-1.0.4.zip",
      "size": 35906,
      "checksum": "SHA-256:a3e75c9bc88775eddc46e7cebe9211c4e3b6e0147830d156b9c5b6989b918578"
    },
    {
      "name": "LM35",
      "version": "1.0.1",
      "author": "Guilherme Gomes Zucco",
      "maintainer": "Guilherme Gomes Zucco",
      "sentence": "Gets the raw value of LM35 and tranform to Celsius, Fahrenheit or Kelvin.",
      "website": "https://github.com/ggzucco/LM35",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/ggzucco/LM35-1.0.1.zip",
      "archiveFileName": "LM35-1.0.1.zip",
      "size": 2682,
      "checksum": "SHA-256:1ffc5bd4a7f2944ed22abacf50f32b4e0274ddb7eba8fb478430173c720cbc49"
    },
    {
      "name": "SdFat",
      "version": "1.0.1",
      "author": "Bill Greiman \u003cfat16lib@sbcglobal.net\u003e",
      "maintainer": "Bill Greiman \u003cfat16lib@sbcglobal.net\u003e",
      "sentence": "FAT16/FAT32 file system for SD cards.",
      "paragraph": "FAT16/FAT32 file system for SD cards.",
      "website": "https://github.com/greiman/SdFat",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/greiman/SdFat-1.0.1.zip",
      "archiveFileName": "SdFat-1.0.1.zip",
      "size": 3543161,
      "checksum": "SHA-256:9e6444bc8bfbb9bcb2b531e44db5d999bb59e188e3ca2474d3cda078aed000d6"
    },
    {
      "name": "jm_Wire",
      "version": "1.0.0",
      "author": "Jean-Marc Paratte \u003cjean-marc@paratte.ch\u003e",
      "maintainer": "Jean-Marc Paratte \u003cjean-marc@paratte.ch\u003e",
      "sentence": "Revisited Arduino Wire Library.",
      "paragraph": "Eliminates all freezing cases and waiting loop.",
      "website": "https://github.com/jmparatte/jm_Wire",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jmparatte/jm_Wire-1.0.0.zip",
      "archiveFileName": "jm_Wire-1.0.0.zip",
      "size": 34647,
      "checksum": "SHA-256:f5bf462d0c715a2317f983c891596fe5f34b34317ae90a3b43216e68ffad3818"
    },
    {
      "name": "jm_Wire",
      "version": "1.0.1",
      "author": "Jean-Marc Paratte \u003cjean-marc@paratte.ch\u003e",
      "maintainer": "Jean-Marc Paratte \u003cjean-marc@paratte.ch\u003e",
      "sentence": "Revisited Arduino Wire Library.",
      "paragraph": "Eliminates all freezing cases and waiting loops.",
      "website": "https://github.com/jmparatte/jm_Wire",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jmparatte/jm_Wire-1.0.1.zip",
      "archiveFileName": "jm_Wire-1.0.1.zip",
      "size": 35618,
      "checksum": "SHA-256:1c97a1228f96cda0e12025f025bbb65f8e88b45546f6bc66ee53c0040822c2bf"
    },
    {
      "name": "Adafruit MCP3008",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MCP3008 8-Channel 10-Bit ADC",
      "paragraph": "MCP3008 8-Channel 10-Bit ADC",
      "website": "https://github.com/adafruit/Adafruit_MCP3008",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_MCP3008-1.0.0.zip",
      "archiveFileName": "Adafruit_MCP3008-1.0.0.zip",
      "size": 5205,
      "checksum": "SHA-256:9ab8601bfdd362e112d2f3f71966c6c18e33d1d40f59224aca6b9ceb7fa9ee4c"
    },
    {
      "name": "Adafruit SPIFlash",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "SPI Flash filesystem support for FAT and CircuitPython FS support from within Arduino",
      "paragraph": "SPI Flash filesystem support for FAT and CircuitPython FS support from within Arduino",
      "website": "https://github.com/adafruit/Adafruit_SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/adafruit/Adafruit_SPIFlash-1.0.0.zip",
      "archiveFileName": "Adafruit_SPIFlash-1.0.0.zip",
      "size": 92857,
      "checksum": "SHA-256:ba46e0edf620b1d44c9eb7fd8bd8ea7dc0a58ddcd193fb517b2a1da42c64d23c"
    },
    {
      "name": "anto-esp8266-arduino",
      "version": "0.5.0",
      "author": "AntoIO \u003csupport@anto.io\u003e, N. Srikote \u003csrikote@anto.io\u003e",
      "maintainer": "AntoIO \u003csupport@anto.io\u003e, N. Srikote \u003csrikote@anto.io\u003e",
      "sentence": "A library that makes ESP8266 connect to AntoIO IoT platform",
      "paragraph": "ESP8266-AntoIO provides common and easy method to publish/retrive data from/to AntoIO",
      "website": "https://github.com/AntoIOT/anto-esp8266-arduino",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AntoIOT/anto_esp8266_arduino-0.5.0.zip",
      "archiveFileName": "anto_esp8266_arduino-0.5.0.zip",
      "size": 98235,
      "checksum": "SHA-256:1d9da54365f887c5340cf6018c46a2dea2e1ef5e0463564a887c135a24cf2774"
    },
    {
      "name": "anto-esp8266-arduino",
      "version": "0.7.2",
      "author": "Anto.io developers \u003csupport@anto.io\u003e",
      "maintainer": "Anto.io developers \u003csupport@anto.io\u003e",
      "sentence": "Enables ESP8266 to connect to Anto.io IoT platform.",
      "paragraph": "ESP8266-AntoIO provides common and easy method to publish/retrive data from/to Anto.io",
      "website": "https://github.com/AntoIOT/anto-esp8266-arduino",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/AntoIOT/anto_esp8266_arduino-0.7.2.zip",
      "archiveFileName": "anto_esp8266_arduino-0.7.2.zip",
      "size": 105681,
      "checksum": "SHA-256:631813892ebf0ab1a0984e9f7f8b9d0cdb77675fd50ce2a2175dad4cb1cef919"
    },
    {
      "name": "MillaMilla DS7505 Library",
      "version": "1.0.0",
      "author": "MillaMilla",
      "maintainer": "MillaMilla \u003cbrooke.t.hedrick@gmail.com\u003e",
      "sentence": "Arduino library for the DS7505 temperature sensor.",
      "paragraph": "Arduino library for the DS7505 temperature sensor.  The originally code was based on the Adafruit_MCP9808_Library.",
      "website": "https://github.com/hedrickbt/MillaMilla_DS7505_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/hedrickbt/MillaMilla_DS7505_Library-1.0.0.zip",
      "archiveFileName": "MillaMilla_DS7505_Library-1.0.0.zip",
      "size": 6033,
      "checksum": "SHA-256:1f6d2339c831abcb875724a647a00c1eea6264e7deef1dc10e33cf8b61685948"
    },
    {
      "name": "DS1307 Emulator",
      "version": "1.0.0",
      "author": "Enrico Sanino",
      "maintainer": "Enrico Sanino \u003chttps://github.com/thexeno\u003e",
      "sentence": "An emulator of the DS1307, which transform the Arduino in an RTC chip without actually having a physical RTC.",
      "paragraph": "It is natively compatible with any Arduino carrying and Atmega and a 16MHz crystal oscillator.",
      "website": "https://github.com/thexeno/DS1307-Emulator-Arduino-Library",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thexeno/DS1307_Emulator-1.0.0.zip",
      "archiveFileName": "DS1307_Emulator-1.0.0.zip",
      "size": 16614,
      "checksum": "SHA-256:2d0352839973217e3012185c3d718b7505246ffb406ed709507271b28c3279e1"
    },
    {
      "name": "RGBLED",
      "version": "1.0.0",
      "author": "Vasil Kalchev \u003cvase7u@gmail.com\u003e",
      "maintainer": "Vasil Kalchev \u003cvase7u@gmail.com\u003e",
      "sentence": "Easily control RGB LEDs.",
      "paragraph": "Set the color with one function, turn LEDs ON/OFF, set the brightness, set color correction and get the current state of the object.",
      "website": "https://github.com/VasilKalchev/RGBLED.git",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/VasilKalchev/RGBLED-1.0.0.zip",
      "archiveFileName": "RGBLED-1.0.0.zip",
      "size": 177130,
      "checksum": "SHA-256:33eddbc0fc553e9918aebaef2606c331f4b6da5659c0fabe3c65449761c3bf94"
    },
    {
      "name": "GuaraTeca_Menu",
      "version": "1.2.0",
      "author": "Joaquim Flávio Almeida Quirino Gomes (joaquimflavio.quirino@yahoo.com.br), Dêmis Carlos Fonseca Gomes (demis.gomes@ifto.edu.br), Marcos Dias da Conceição (marcos.conceicao@ifto.edu.br) e Diego de Castro Rodrigues",
      "maintainer": "Guarabots \u003cguarabots@gmail.com\u003e",
      "sentence": "Biblioteca de controle de diversas plataformas roboticas.",
      "paragraph": "Menu para simplificação do uso da GuaraTeca! Necessário baixar: GuaraTeca_Hardware!!!! recomendamos também GuaraTeca_OBR",
      "website": "https://github.com/JoaquimFlavio/GuaraTeca_Menu/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/JoaquimFlavio/GuaraTeca_Menu-1.2.0.zip",
      "archiveFileName": "GuaraTeca_Menu-1.2.0.zip",
      "size": 18969,
      "checksum": "SHA-256:7345b6d90fd267349dfc7492637e54ef17453705441330dc613d4b6f5fd43a8c"
    },
    {
      "name": "jm_LiquidCrystal_I2C",
      "version": "1.0.0",
      "author": "Jean-Marc Paratte \u003cjean-marc@paratte.ch\u003e",
      "maintainer": "Jean-Marc Paratte \u003cjean-marc@paratte.ch\u003e",
      "sentence": "My enhanced LiquidCrystal_I2C Arduino Library.",
      "paragraph": "Driven with jm_Scheduler. Display numbers with convenient formats.",
      "website": "https://github.com/jmparatte/jm_LiquidCrystal_I2C",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jmparatte/jm_LiquidCrystal_I2C-1.0.0.zip",
      "archiveFileName": "jm_LiquidCrystal_I2C-1.0.0.zip",
      "size": 24860,
      "checksum": "SHA-256:a8b192d9a647a8c640544dcef2577fb783776f425e5f5490a3c4fe8efce7f296"
    },
    {
      "name": "GuaraTeca_Hardware",
      "version": "1.2.0",
      "author": "Joaquim Flávio Almeida Quirino Gomes (joaquimflavio.quirino@yahoo.com.br), Dêmis Carlos Fonseca Gomes (demis.gomes@ifto.edu.br), Marcos Dias da Conceição (marcos.conceicao@ifto.edu.br) e Diego de Castro Rodrigues",
      "maintainer": "Guarabots \u003cguarabots@gmail.com\u003e",
      "sentence": "Biblioteca de controle de diversas plataformas roboticas.",
      "paragraph": "Controle de diversas plataformas roboticas, de forma simples e eficiente, priorizando a eficiência do hardware do Arduino! Necessário baixar: GuaraTeca_Menu!!!!",
      "website": "https://github.com/JoaquimFlavio/GuaraTeca_Hardware/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/JoaquimFlavio/GuaraTeca_Hardware-1.2.0.zip",
      "archiveFileName": "GuaraTeca_Hardware-1.2.0.zip",
      "size": 59521,
      "checksum": "SHA-256:1acaac56210447e9ca483f44d10d69140ffdfb4c5cdfafd7b37b9897cf926535"
    },
    {
      "name": "NeoSWSerial",
      "version": "3.0.0",
      "author": "SlashDevin",
      "maintainer": "SlashDevin",
      "sentence": "An efficient replacement for SoftwareSerial at baud rates 9600, 19200 and 38400.",
      "website": "https://github.com/SlashDevin/NeoSWSerial",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SlashDevin/NeoSWSerial-3.0.0.zip",
      "archiveFileName": "NeoSWSerial-3.0.0.zip",
      "size": 10540,
      "checksum": "SHA-256:bd94a15a4c8c1b1cd4f94bdf4f48e8b6ef3073da963a84fa825b34db69bb1551"
    },
    {
      "name": "NeoSWSerial",
      "version": "3.0.1",
      "author": "SlashDevin",
      "maintainer": "SlashDevin",
      "sentence": "An efficient replacement for SoftwareSerial at baud rates 9600, 19200 and 38400.",
      "website": "https://github.com/SlashDevin/NeoSWSerial",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SlashDevin/NeoSWSerial-3.0.1.zip",
      "archiveFileName": "NeoSWSerial-3.0.1.zip",
      "size": 10556,
      "checksum": "SHA-256:3c775fddea89bd2480c8b1fc2e2225f0f8f93dc437ad818084bd2cbe6fc0f551"
    },
    {
      "name": "NeoSWSerial",
      "version": "3.0.2",
      "author": "SlashDevin",
      "maintainer": "SlashDevin",
      "sentence": "An efficient replacement for SoftwareSerial at baud rates 9600, 19200 and 38400.",
      "paragraph": "Simultaneous RX \u0026 TX, does not require additional TIMERs, interrupts not disabled during RX",
      "website": "https://github.com/SlashDevin/NeoSWSerial",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/SlashDevin/NeoSWSerial-3.0.2.zip",
      "archiveFileName": "NeoSWSerial-3.0.2.zip",
      "size": 10625,
      "checksum": "SHA-256:c6d8fe292fb52d44bac2e62abe51da290aed67270e34397bce3472aea92c3c28"
    },
    {
      "name": "SparkFun I2C GPS Reading and Control",
      "version": "1.0.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library for the AK9750 PIR Human Presence Qwiic Board",
      "paragraph": "An Arduino Library for the MediaTek MT3333 and MT3339 chipsets that enables the user to read GPS coordinates over I2C. Also supports the PMTK configuration protocol. This library only works with SparkFun modules that have been loaded with special firmware that enables the I2C interface.",
      "website": "https://github.com/sparkfun/SparkFun_I2C_GPS_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/sparkfun/SparkFun_I2C_GPS_Reading_and_Control-1.0.0.zip",
      "archiveFileName": "SparkFun_I2C_GPS_Reading_and_Control-1.0.0.zip",
      "size": 22220,
      "checksum": "SHA-256:55c2fb4842c600571d9f247ba563c69c64fc87f4bf0948bc5b255a2e469908a5"
    },
    {
      "name": "CopyThreads",
      "version": "0.0.1",
      "author": "Jens Hauke \u003cjens@4k2.de\u003e",
      "maintainer": "Jens Hauke \u003cjens@4k2.de\u003e",
      "sentence": "A lightweight threading library",
      "paragraph": "A lightweight architecture independent threading library.",
      "website": "https://github.com/jensh/CopyThreads",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jensh/CopyThreads-0.0.1.zip",
      "archiveFileName": "CopyThreads-0.0.1.zip",
      "size": 12242,
      "checksum": "SHA-256:933f08b5f344df7e84cf437aa8d63f078d68d878d702284c86e3f0e99539b9f5"
    },
    {
      "name": "CopyThreads",
      "version": "0.0.2",
      "author": "Jens Hauke \u003cjens@4k2.de\u003e",
      "maintainer": "Jens Hauke \u003cjens@4k2.de\u003e",
      "sentence": "A lightweight threading library",
      "paragraph": "A lightweight architecture independent threading library.",
      "website": "https://github.com/jensh/CopyThreads",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jensh/CopyThreads-0.0.2.zip",
      "archiveFileName": "CopyThreads-0.0.2.zip",
      "size": 15300,
      "checksum": "SHA-256:503647da65f6973915fbefd21c960aa7061bcb7c614f38507b9a468271aa2c8c"
    },
    {
      "name": "CopyThreads",
      "version": "0.0.3",
      "author": "Jens Hauke \u003cjens@4k2.de\u003e",
      "maintainer": "Jens Hauke \u003cjens@4k2.de\u003e",
      "sentence": "A lightweight threading library",
      "paragraph": "Do multiple things at once, the straigt forward way.",
      "website": "https://github.com/jensh/CopyThreads",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jensh/CopyThreads-0.0.3.zip",
      "archiveFileName": "CopyThreads-0.0.3.zip",
      "size": 17578,
      "checksum": "SHA-256:e9d0f954eb47085f082f01f0f140f719fd48542eaaa333b3db150c1fc90d702d"
    },
    {
      "name": "CopyThreads",
      "version": "0.1.0",
      "author": "Jens Hauke \u003cjens@4k2.de\u003e",
      "maintainer": "Jens Hauke \u003cjens@4k2.de\u003e",
      "sentence": "A lightweight threading library",
      "paragraph": "Do multiple things at once, the straigt forward way. This is an alternative to the official Arduino Scheduler https://www.arduino.cc/en/reference/scheduler.",
      "website": "https://github.com/jensh/CopyThreads",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/jensh/CopyThreads-0.1.0.zip",
      "archiveFileName": "CopyThreads-0.1.0.zip",
      "size": 19128,
      "checksum": "SHA-256:6bdfadc24f0c1105b0da85211824cce9d05999885e4636290b8d0fcca2e61291"
    },
    {
      "name": "arduinoFFT",
      "version": "1.0.0",
      "author": "kosme \u003cenrique@shapeoko.com\u003e",
      "maintainer": "Enrique Condes \u003cenrique@shapeoko.com\u003e",
      "sentence": "A library for implementing Fast Fourier Transform on Arduino.",
      "website": "https://github.com/kosme/arduinoFFT",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/kosme/arduinoFFT-1.0.0.zip",
      "archiveFileName": "arduinoFFT-1.0.0.zip",
      "size": 24400,
      "checksum": "SHA-256:7ec7df04d2df03b88f7f70a192ce6199204800604938cb0114e4abfb17a46ab4"
    },
    {
      "name": "arduinoFFT",
      "version": "1.1.0",
      "author": "kosme \u003cenrique@shapeoko.com\u003e",
      "maintainer": "Enrique Condes \u003cenrique@shapeoko.com\u003e",
      "sentence": "A library for implementing Fast Fourier Transform on Arduino.",
      "paragraph": "With this library you can calculate the frequency of a sampled signal.",
      "website": "https://github.com/kosme/arduinoFFT",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/kosme/arduinoFFT-1.1.0.zip",
      "archiveFileName": "arduinoFFT-1.1.0.zip",
      "size": 24445,
      "checksum": "SHA-256:2749218c31fbe0c19bf4c79a1c99bf6d249e7d43a15b8c8143e521632931ee0f"
    },
    {
      "name": "ThingfaceClient",
      "version": "0.0.1",
      "author": "Miro Bozik \u003cinfo@mirobozik.sk\u003e",
      "maintainer": "Miro Bozik \u003cinfo@mirobozik.sk\u003e",
      "sentence": "The thingface client library for Arduino",
      "paragraph": "Simple client library for connecting Arduino to thingface server. Easy control and monitor your Arduino application from everywhere.",
      "website": "https://github.com/thingface/arduino.git",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/github.com/thingface/ThingfaceClient-0.0.1.zip",
      "archiveFileName": "ThingfaceClient-0.0.1.zip",
      "size": 7793,
      "checksum": "SHA-256:bebf99b2db85ebd767cd9b4efa16252657a821dab61a332b548a001522021357"
    }
  ]
}